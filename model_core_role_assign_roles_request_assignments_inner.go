/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreRoleAssignRolesRequestAssignmentsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreRoleAssignRolesRequestAssignmentsInner{}

// CoreRoleAssignRolesRequestAssignmentsInner struct for CoreRoleAssignRolesRequestAssignmentsInner
type CoreRoleAssignRolesRequestAssignmentsInner struct {
	// The context to assign the user role in
	Contextid *int32 `json:"contextid,omitempty"`
	// The context level to assign the user role in                                     (block, course, coursecat, system, user, module)
	Contextlevel *string `json:"contextlevel,omitempty"`
	// The Instance id of item where the role needs to be assigned
	Instanceid *int32 `json:"instanceid,omitempty"`
	// Role to assign to the user
	Roleid *int32 `json:"roleid,omitempty"`
	// The user that is going to be assigned
	Userid *int32 `json:"userid,omitempty"`
}

// NewCoreRoleAssignRolesRequestAssignmentsInner instantiates a new CoreRoleAssignRolesRequestAssignmentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreRoleAssignRolesRequestAssignmentsInner() *CoreRoleAssignRolesRequestAssignmentsInner {
	this := CoreRoleAssignRolesRequestAssignmentsInner{}
	var contextid int32 = null
	this.Contextid = &contextid
	var contextlevel string = "null"
	this.Contextlevel = &contextlevel
	var instanceid int32 = null
	this.Instanceid = &instanceid
	var userid int32 = null
	this.Userid = &userid
	return &this
}

// NewCoreRoleAssignRolesRequestAssignmentsInnerWithDefaults instantiates a new CoreRoleAssignRolesRequestAssignmentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreRoleAssignRolesRequestAssignmentsInnerWithDefaults() *CoreRoleAssignRolesRequestAssignmentsInner {
	this := CoreRoleAssignRolesRequestAssignmentsInner{}
	var contextid int32 = null
	this.Contextid = &contextid
	var contextlevel string = "null"
	this.Contextlevel = &contextlevel
	var instanceid int32 = null
	this.Instanceid = &instanceid
	var userid int32 = null
	this.Userid = &userid
	return &this
}

// GetContextid returns the Contextid field value if set, zero value otherwise.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) GetContextid() int32 {
	if o == nil || IsNil(o.Contextid) {
		var ret int32
		return ret
	}
	return *o.Contextid
}

// GetContextidOk returns a tuple with the Contextid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) GetContextidOk() (*int32, bool) {
	if o == nil || IsNil(o.Contextid) {
		return nil, false
	}
	return o.Contextid, true
}

// HasContextid returns a boolean if a field has been set.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) HasContextid() bool {
	if o != nil && !IsNil(o.Contextid) {
		return true
	}

	return false
}

// SetContextid gets a reference to the given int32 and assigns it to the Contextid field.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) SetContextid(v int32) {
	o.Contextid = &v
}

// GetContextlevel returns the Contextlevel field value if set, zero value otherwise.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) GetContextlevel() string {
	if o == nil || IsNil(o.Contextlevel) {
		var ret string
		return ret
	}
	return *o.Contextlevel
}

// GetContextlevelOk returns a tuple with the Contextlevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) GetContextlevelOk() (*string, bool) {
	if o == nil || IsNil(o.Contextlevel) {
		return nil, false
	}
	return o.Contextlevel, true
}

// HasContextlevel returns a boolean if a field has been set.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) HasContextlevel() bool {
	if o != nil && !IsNil(o.Contextlevel) {
		return true
	}

	return false
}

// SetContextlevel gets a reference to the given string and assigns it to the Contextlevel field.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) SetContextlevel(v string) {
	o.Contextlevel = &v
}

// GetInstanceid returns the Instanceid field value if set, zero value otherwise.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) GetInstanceid() int32 {
	if o == nil || IsNil(o.Instanceid) {
		var ret int32
		return ret
	}
	return *o.Instanceid
}

// GetInstanceidOk returns a tuple with the Instanceid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) GetInstanceidOk() (*int32, bool) {
	if o == nil || IsNil(o.Instanceid) {
		return nil, false
	}
	return o.Instanceid, true
}

// HasInstanceid returns a boolean if a field has been set.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) HasInstanceid() bool {
	if o != nil && !IsNil(o.Instanceid) {
		return true
	}

	return false
}

// SetInstanceid gets a reference to the given int32 and assigns it to the Instanceid field.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) SetInstanceid(v int32) {
	o.Instanceid = &v
}

// GetRoleid returns the Roleid field value if set, zero value otherwise.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) GetRoleid() int32 {
	if o == nil || IsNil(o.Roleid) {
		var ret int32
		return ret
	}
	return *o.Roleid
}

// GetRoleidOk returns a tuple with the Roleid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) GetRoleidOk() (*int32, bool) {
	if o == nil || IsNil(o.Roleid) {
		return nil, false
	}
	return o.Roleid, true
}

// HasRoleid returns a boolean if a field has been set.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) HasRoleid() bool {
	if o != nil && !IsNil(o.Roleid) {
		return true
	}

	return false
}

// SetRoleid gets a reference to the given int32 and assigns it to the Roleid field.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) SetRoleid(v int32) {
	o.Roleid = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *CoreRoleAssignRolesRequestAssignmentsInner) SetUserid(v int32) {
	o.Userid = &v
}

func (o CoreRoleAssignRolesRequestAssignmentsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreRoleAssignRolesRequestAssignmentsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Contextid) {
		toSerialize["contextid"] = o.Contextid
	}
	if !IsNil(o.Contextlevel) {
		toSerialize["contextlevel"] = o.Contextlevel
	}
	if !IsNil(o.Instanceid) {
		toSerialize["instanceid"] = o.Instanceid
	}
	if !IsNil(o.Roleid) {
		toSerialize["roleid"] = o.Roleid
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

type NullableCoreRoleAssignRolesRequestAssignmentsInner struct {
	value *CoreRoleAssignRolesRequestAssignmentsInner
	isSet bool
}

func (v NullableCoreRoleAssignRolesRequestAssignmentsInner) Get() *CoreRoleAssignRolesRequestAssignmentsInner {
	return v.value
}

func (v *NullableCoreRoleAssignRolesRequestAssignmentsInner) Set(val *CoreRoleAssignRolesRequestAssignmentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreRoleAssignRolesRequestAssignmentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreRoleAssignRolesRequestAssignmentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreRoleAssignRolesRequestAssignmentsInner(val *CoreRoleAssignRolesRequestAssignmentsInner) *NullableCoreRoleAssignRolesRequestAssignmentsInner {
	return &NullableCoreRoleAssignRolesRequestAssignmentsInner{value: val, isSet: true}
}

func (v NullableCoreRoleAssignRolesRequestAssignmentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreRoleAssignRolesRequestAssignmentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


