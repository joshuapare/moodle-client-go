/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ToolLpDataForCompetencySummaryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolLpDataForCompetencySummaryRequest{}

// ToolLpDataForCompetencySummaryRequest struct for ToolLpDataForCompetencySummaryRequest
type ToolLpDataForCompetencySummaryRequest struct {
	// The competency id
	Competencyid int32 `json:"competencyid"`
	// Include or not competency courses
	Includecourses *bool `json:"includecourses,omitempty"`
	// Include or not related competencies
	Includerelated *bool `json:"includerelated,omitempty"`
}

type _ToolLpDataForCompetencySummaryRequest ToolLpDataForCompetencySummaryRequest

// NewToolLpDataForCompetencySummaryRequest instantiates a new ToolLpDataForCompetencySummaryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolLpDataForCompetencySummaryRequest(competencyid int32) *ToolLpDataForCompetencySummaryRequest {
	this := ToolLpDataForCompetencySummaryRequest{}
	this.Competencyid = competencyid
	var includecourses bool = false
	this.Includecourses = &includecourses
	var includerelated bool = false
	this.Includerelated = &includerelated
	return &this
}

// NewToolLpDataForCompetencySummaryRequestWithDefaults instantiates a new ToolLpDataForCompetencySummaryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolLpDataForCompetencySummaryRequestWithDefaults() *ToolLpDataForCompetencySummaryRequest {
	this := ToolLpDataForCompetencySummaryRequest{}
	var includecourses bool = false
	this.Includecourses = &includecourses
	var includerelated bool = false
	this.Includerelated = &includerelated
	return &this
}

// GetCompetencyid returns the Competencyid field value
func (o *ToolLpDataForCompetencySummaryRequest) GetCompetencyid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Competencyid
}

// GetCompetencyidOk returns a tuple with the Competencyid field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCompetencySummaryRequest) GetCompetencyidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Competencyid, true
}

// SetCompetencyid sets field value
func (o *ToolLpDataForCompetencySummaryRequest) SetCompetencyid(v int32) {
	o.Competencyid = v
}

// GetIncludecourses returns the Includecourses field value if set, zero value otherwise.
func (o *ToolLpDataForCompetencySummaryRequest) GetIncludecourses() bool {
	if o == nil || IsNil(o.Includecourses) {
		var ret bool
		return ret
	}
	return *o.Includecourses
}

// GetIncludecoursesOk returns a tuple with the Includecourses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCompetencySummaryRequest) GetIncludecoursesOk() (*bool, bool) {
	if o == nil || IsNil(o.Includecourses) {
		return nil, false
	}
	return o.Includecourses, true
}

// HasIncludecourses returns a boolean if a field has been set.
func (o *ToolLpDataForCompetencySummaryRequest) HasIncludecourses() bool {
	if o != nil && !IsNil(o.Includecourses) {
		return true
	}

	return false
}

// SetIncludecourses gets a reference to the given bool and assigns it to the Includecourses field.
func (o *ToolLpDataForCompetencySummaryRequest) SetIncludecourses(v bool) {
	o.Includecourses = &v
}

// GetIncluderelated returns the Includerelated field value if set, zero value otherwise.
func (o *ToolLpDataForCompetencySummaryRequest) GetIncluderelated() bool {
	if o == nil || IsNil(o.Includerelated) {
		var ret bool
		return ret
	}
	return *o.Includerelated
}

// GetIncluderelatedOk returns a tuple with the Includerelated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCompetencySummaryRequest) GetIncluderelatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Includerelated) {
		return nil, false
	}
	return o.Includerelated, true
}

// HasIncluderelated returns a boolean if a field has been set.
func (o *ToolLpDataForCompetencySummaryRequest) HasIncluderelated() bool {
	if o != nil && !IsNil(o.Includerelated) {
		return true
	}

	return false
}

// SetIncluderelated gets a reference to the given bool and assigns it to the Includerelated field.
func (o *ToolLpDataForCompetencySummaryRequest) SetIncluderelated(v bool) {
	o.Includerelated = &v
}

func (o ToolLpDataForCompetencySummaryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolLpDataForCompetencySummaryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["competencyid"] = o.Competencyid
	if !IsNil(o.Includecourses) {
		toSerialize["includecourses"] = o.Includecourses
	}
	if !IsNil(o.Includerelated) {
		toSerialize["includerelated"] = o.Includerelated
	}
	return toSerialize, nil
}

func (o *ToolLpDataForCompetencySummaryRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"competencyid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varToolLpDataForCompetencySummaryRequest := _ToolLpDataForCompetencySummaryRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varToolLpDataForCompetencySummaryRequest)

	if err != nil {
		return err
	}

	*o = ToolLpDataForCompetencySummaryRequest(varToolLpDataForCompetencySummaryRequest)

	return err
}

type NullableToolLpDataForCompetencySummaryRequest struct {
	value *ToolLpDataForCompetencySummaryRequest
	isSet bool
}

func (v NullableToolLpDataForCompetencySummaryRequest) Get() *ToolLpDataForCompetencySummaryRequest {
	return v.value
}

func (v *NullableToolLpDataForCompetencySummaryRequest) Set(val *ToolLpDataForCompetencySummaryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableToolLpDataForCompetencySummaryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableToolLpDataForCompetencySummaryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolLpDataForCompetencySummaryRequest(val *ToolLpDataForCompetencySummaryRequest) *NullableToolLpDataForCompetencySummaryRequest {
	return &NullableToolLpDataForCompetencySummaryRequest{value: val, isSet: true}
}

func (v NullableToolLpDataForCompetencySummaryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolLpDataForCompetencySummaryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


