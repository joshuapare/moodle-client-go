/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCompetencyUserCompetencyPlanViewedRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCompetencyUserCompetencyPlanViewedRequest{}

// CoreCompetencyUserCompetencyPlanViewedRequest struct for CoreCompetencyUserCompetencyPlanViewedRequest
type CoreCompetencyUserCompetencyPlanViewedRequest struct {
	// The competency id
	Competencyid int32 `json:"competencyid"`
	// The plan id
	Planid int32 `json:"planid"`
	// The user id
	Userid int32 `json:"userid"`
}

type _CoreCompetencyUserCompetencyPlanViewedRequest CoreCompetencyUserCompetencyPlanViewedRequest

// NewCoreCompetencyUserCompetencyPlanViewedRequest instantiates a new CoreCompetencyUserCompetencyPlanViewedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCompetencyUserCompetencyPlanViewedRequest(competencyid int32, planid int32, userid int32) *CoreCompetencyUserCompetencyPlanViewedRequest {
	this := CoreCompetencyUserCompetencyPlanViewedRequest{}
	this.Competencyid = competencyid
	this.Planid = planid
	this.Userid = userid
	return &this
}

// NewCoreCompetencyUserCompetencyPlanViewedRequestWithDefaults instantiates a new CoreCompetencyUserCompetencyPlanViewedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCompetencyUserCompetencyPlanViewedRequestWithDefaults() *CoreCompetencyUserCompetencyPlanViewedRequest {
	this := CoreCompetencyUserCompetencyPlanViewedRequest{}
	return &this
}

// GetCompetencyid returns the Competencyid field value
func (o *CoreCompetencyUserCompetencyPlanViewedRequest) GetCompetencyid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Competencyid
}

// GetCompetencyidOk returns a tuple with the Competencyid field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyUserCompetencyPlanViewedRequest) GetCompetencyidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Competencyid, true
}

// SetCompetencyid sets field value
func (o *CoreCompetencyUserCompetencyPlanViewedRequest) SetCompetencyid(v int32) {
	o.Competencyid = v
}

// GetPlanid returns the Planid field value
func (o *CoreCompetencyUserCompetencyPlanViewedRequest) GetPlanid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Planid
}

// GetPlanidOk returns a tuple with the Planid field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyUserCompetencyPlanViewedRequest) GetPlanidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Planid, true
}

// SetPlanid sets field value
func (o *CoreCompetencyUserCompetencyPlanViewedRequest) SetPlanid(v int32) {
	o.Planid = v
}

// GetUserid returns the Userid field value
func (o *CoreCompetencyUserCompetencyPlanViewedRequest) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyUserCompetencyPlanViewedRequest) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *CoreCompetencyUserCompetencyPlanViewedRequest) SetUserid(v int32) {
	o.Userid = v
}

func (o CoreCompetencyUserCompetencyPlanViewedRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCompetencyUserCompetencyPlanViewedRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["competencyid"] = o.Competencyid
	toSerialize["planid"] = o.Planid
	toSerialize["userid"] = o.Userid
	return toSerialize, nil
}

func (o *CoreCompetencyUserCompetencyPlanViewedRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"competencyid",
		"planid",
		"userid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCompetencyUserCompetencyPlanViewedRequest := _CoreCompetencyUserCompetencyPlanViewedRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCompetencyUserCompetencyPlanViewedRequest)

	if err != nil {
		return err
	}

	*o = CoreCompetencyUserCompetencyPlanViewedRequest(varCoreCompetencyUserCompetencyPlanViewedRequest)

	return err
}

type NullableCoreCompetencyUserCompetencyPlanViewedRequest struct {
	value *CoreCompetencyUserCompetencyPlanViewedRequest
	isSet bool
}

func (v NullableCoreCompetencyUserCompetencyPlanViewedRequest) Get() *CoreCompetencyUserCompetencyPlanViewedRequest {
	return v.value
}

func (v *NullableCoreCompetencyUserCompetencyPlanViewedRequest) Set(val *CoreCompetencyUserCompetencyPlanViewedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCompetencyUserCompetencyPlanViewedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCompetencyUserCompetencyPlanViewedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCompetencyUserCompetencyPlanViewedRequest(val *CoreCompetencyUserCompetencyPlanViewedRequest) *NullableCoreCompetencyUserCompetencyPlanViewedRequest {
	return &NullableCoreCompetencyUserCompetencyPlanViewedRequest{value: val, isSet: true}
}

func (v NullableCoreCompetencyUserCompetencyPlanViewedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCompetencyUserCompetencyPlanViewedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


