/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreTableGetDynamicTableContentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreTableGetDynamicTableContentRequest{}

// CoreTableGetDynamicTableContentRequest struct for CoreTableGetDynamicTableContentRequest
type CoreTableGetDynamicTableContentRequest struct {
	// Component
	Component string `json:"component"`
	Filters []CoreTableGetDynamicTableContentRequestFiltersInner `json:"filters,omitempty"`
	// The first initial to sort filter on
	Firstinitial string `json:"firstinitial"`
	// Handler
	Handler string `json:"handler"`
	Hiddencolumns []map[string]interface{} `json:"hiddencolumns"`
	// Type of join to join all filters together
	Jointype int32 `json:"jointype"`
	// The last initial to sort filter on
	Lastinitial string `json:"lastinitial"`
	// The page number
	Pagenumber int32 `json:"pagenumber"`
	// The number of records per page
	Pagesize int32 `json:"pagesize"`
	// Whether the table preferences should be reset
	Resetpreferences bool `json:"resetpreferences"`
	Sortdata []CoreTableGetDynamicTableContentRequestSortdataInner `json:"sortdata,omitempty"`
	// Unique ID for the container
	Uniqueid string `json:"uniqueid"`
}

type _CoreTableGetDynamicTableContentRequest CoreTableGetDynamicTableContentRequest

// NewCoreTableGetDynamicTableContentRequest instantiates a new CoreTableGetDynamicTableContentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreTableGetDynamicTableContentRequest(component string, firstinitial string, handler string, hiddencolumns []map[string]interface{}, jointype int32, lastinitial string, pagenumber int32, pagesize int32, resetpreferences bool, uniqueid string) *CoreTableGetDynamicTableContentRequest {
	this := CoreTableGetDynamicTableContentRequest{}
	this.Component = component
	this.Firstinitial = firstinitial
	this.Handler = handler
	this.Hiddencolumns = hiddencolumns
	this.Jointype = jointype
	this.Lastinitial = lastinitial
	this.Pagenumber = pagenumber
	this.Pagesize = pagesize
	this.Resetpreferences = resetpreferences
	this.Uniqueid = uniqueid
	return &this
}

// NewCoreTableGetDynamicTableContentRequestWithDefaults instantiates a new CoreTableGetDynamicTableContentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreTableGetDynamicTableContentRequestWithDefaults() *CoreTableGetDynamicTableContentRequest {
	this := CoreTableGetDynamicTableContentRequest{}
	var firstinitial string = "null"
	this.Firstinitial = firstinitial
	var handler string = "null"
	this.Handler = handler
	var jointype int32 = null
	this.Jointype = jointype
	var lastinitial string = "null"
	this.Lastinitial = lastinitial
	var pagenumber int32 = null
	this.Pagenumber = pagenumber
	var pagesize int32 = null
	this.Pagesize = pagesize
	var resetpreferences bool = null
	this.Resetpreferences = resetpreferences
	var uniqueid string = "null"
	this.Uniqueid = uniqueid
	return &this
}

// GetComponent returns the Component field value
func (o *CoreTableGetDynamicTableContentRequest) GetComponent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Component
}

// GetComponentOk returns a tuple with the Component field value
// and a boolean to check if the value has been set.
func (o *CoreTableGetDynamicTableContentRequest) GetComponentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Component, true
}

// SetComponent sets field value
func (o *CoreTableGetDynamicTableContentRequest) SetComponent(v string) {
	o.Component = v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *CoreTableGetDynamicTableContentRequest) GetFilters() []CoreTableGetDynamicTableContentRequestFiltersInner {
	if o == nil || IsNil(o.Filters) {
		var ret []CoreTableGetDynamicTableContentRequestFiltersInner
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTableGetDynamicTableContentRequest) GetFiltersOk() ([]CoreTableGetDynamicTableContentRequestFiltersInner, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *CoreTableGetDynamicTableContentRequest) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []CoreTableGetDynamicTableContentRequestFiltersInner and assigns it to the Filters field.
func (o *CoreTableGetDynamicTableContentRequest) SetFilters(v []CoreTableGetDynamicTableContentRequestFiltersInner) {
	o.Filters = v
}

// GetFirstinitial returns the Firstinitial field value
func (o *CoreTableGetDynamicTableContentRequest) GetFirstinitial() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Firstinitial
}

// GetFirstinitialOk returns a tuple with the Firstinitial field value
// and a boolean to check if the value has been set.
func (o *CoreTableGetDynamicTableContentRequest) GetFirstinitialOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Firstinitial, true
}

// SetFirstinitial sets field value
func (o *CoreTableGetDynamicTableContentRequest) SetFirstinitial(v string) {
	o.Firstinitial = v
}

// GetHandler returns the Handler field value
func (o *CoreTableGetDynamicTableContentRequest) GetHandler() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handler
}

// GetHandlerOk returns a tuple with the Handler field value
// and a boolean to check if the value has been set.
func (o *CoreTableGetDynamicTableContentRequest) GetHandlerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handler, true
}

// SetHandler sets field value
func (o *CoreTableGetDynamicTableContentRequest) SetHandler(v string) {
	o.Handler = v
}

// GetHiddencolumns returns the Hiddencolumns field value
func (o *CoreTableGetDynamicTableContentRequest) GetHiddencolumns() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Hiddencolumns
}

// GetHiddencolumnsOk returns a tuple with the Hiddencolumns field value
// and a boolean to check if the value has been set.
func (o *CoreTableGetDynamicTableContentRequest) GetHiddencolumnsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hiddencolumns, true
}

// SetHiddencolumns sets field value
func (o *CoreTableGetDynamicTableContentRequest) SetHiddencolumns(v []map[string]interface{}) {
	o.Hiddencolumns = v
}

// GetJointype returns the Jointype field value
func (o *CoreTableGetDynamicTableContentRequest) GetJointype() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Jointype
}

// GetJointypeOk returns a tuple with the Jointype field value
// and a boolean to check if the value has been set.
func (o *CoreTableGetDynamicTableContentRequest) GetJointypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Jointype, true
}

// SetJointype sets field value
func (o *CoreTableGetDynamicTableContentRequest) SetJointype(v int32) {
	o.Jointype = v
}

// GetLastinitial returns the Lastinitial field value
func (o *CoreTableGetDynamicTableContentRequest) GetLastinitial() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Lastinitial
}

// GetLastinitialOk returns a tuple with the Lastinitial field value
// and a boolean to check if the value has been set.
func (o *CoreTableGetDynamicTableContentRequest) GetLastinitialOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lastinitial, true
}

// SetLastinitial sets field value
func (o *CoreTableGetDynamicTableContentRequest) SetLastinitial(v string) {
	o.Lastinitial = v
}

// GetPagenumber returns the Pagenumber field value
func (o *CoreTableGetDynamicTableContentRequest) GetPagenumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pagenumber
}

// GetPagenumberOk returns a tuple with the Pagenumber field value
// and a boolean to check if the value has been set.
func (o *CoreTableGetDynamicTableContentRequest) GetPagenumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagenumber, true
}

// SetPagenumber sets field value
func (o *CoreTableGetDynamicTableContentRequest) SetPagenumber(v int32) {
	o.Pagenumber = v
}

// GetPagesize returns the Pagesize field value
func (o *CoreTableGetDynamicTableContentRequest) GetPagesize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pagesize
}

// GetPagesizeOk returns a tuple with the Pagesize field value
// and a boolean to check if the value has been set.
func (o *CoreTableGetDynamicTableContentRequest) GetPagesizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagesize, true
}

// SetPagesize sets field value
func (o *CoreTableGetDynamicTableContentRequest) SetPagesize(v int32) {
	o.Pagesize = v
}

// GetResetpreferences returns the Resetpreferences field value
func (o *CoreTableGetDynamicTableContentRequest) GetResetpreferences() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Resetpreferences
}

// GetResetpreferencesOk returns a tuple with the Resetpreferences field value
// and a boolean to check if the value has been set.
func (o *CoreTableGetDynamicTableContentRequest) GetResetpreferencesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resetpreferences, true
}

// SetResetpreferences sets field value
func (o *CoreTableGetDynamicTableContentRequest) SetResetpreferences(v bool) {
	o.Resetpreferences = v
}

// GetSortdata returns the Sortdata field value if set, zero value otherwise.
func (o *CoreTableGetDynamicTableContentRequest) GetSortdata() []CoreTableGetDynamicTableContentRequestSortdataInner {
	if o == nil || IsNil(o.Sortdata) {
		var ret []CoreTableGetDynamicTableContentRequestSortdataInner
		return ret
	}
	return o.Sortdata
}

// GetSortdataOk returns a tuple with the Sortdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTableGetDynamicTableContentRequest) GetSortdataOk() ([]CoreTableGetDynamicTableContentRequestSortdataInner, bool) {
	if o == nil || IsNil(o.Sortdata) {
		return nil, false
	}
	return o.Sortdata, true
}

// HasSortdata returns a boolean if a field has been set.
func (o *CoreTableGetDynamicTableContentRequest) HasSortdata() bool {
	if o != nil && !IsNil(o.Sortdata) {
		return true
	}

	return false
}

// SetSortdata gets a reference to the given []CoreTableGetDynamicTableContentRequestSortdataInner and assigns it to the Sortdata field.
func (o *CoreTableGetDynamicTableContentRequest) SetSortdata(v []CoreTableGetDynamicTableContentRequestSortdataInner) {
	o.Sortdata = v
}

// GetUniqueid returns the Uniqueid field value
func (o *CoreTableGetDynamicTableContentRequest) GetUniqueid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uniqueid
}

// GetUniqueidOk returns a tuple with the Uniqueid field value
// and a boolean to check if the value has been set.
func (o *CoreTableGetDynamicTableContentRequest) GetUniqueidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uniqueid, true
}

// SetUniqueid sets field value
func (o *CoreTableGetDynamicTableContentRequest) SetUniqueid(v string) {
	o.Uniqueid = v
}

func (o CoreTableGetDynamicTableContentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreTableGetDynamicTableContentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["component"] = o.Component
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	toSerialize["firstinitial"] = o.Firstinitial
	toSerialize["handler"] = o.Handler
	toSerialize["hiddencolumns"] = o.Hiddencolumns
	toSerialize["jointype"] = o.Jointype
	toSerialize["lastinitial"] = o.Lastinitial
	toSerialize["pagenumber"] = o.Pagenumber
	toSerialize["pagesize"] = o.Pagesize
	toSerialize["resetpreferences"] = o.Resetpreferences
	if !IsNil(o.Sortdata) {
		toSerialize["sortdata"] = o.Sortdata
	}
	toSerialize["uniqueid"] = o.Uniqueid
	return toSerialize, nil
}

func (o *CoreTableGetDynamicTableContentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"component",
		"firstinitial",
		"handler",
		"hiddencolumns",
		"jointype",
		"lastinitial",
		"pagenumber",
		"pagesize",
		"resetpreferences",
		"uniqueid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreTableGetDynamicTableContentRequest := _CoreTableGetDynamicTableContentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreTableGetDynamicTableContentRequest)

	if err != nil {
		return err
	}

	*o = CoreTableGetDynamicTableContentRequest(varCoreTableGetDynamicTableContentRequest)

	return err
}

type NullableCoreTableGetDynamicTableContentRequest struct {
	value *CoreTableGetDynamicTableContentRequest
	isSet bool
}

func (v NullableCoreTableGetDynamicTableContentRequest) Get() *CoreTableGetDynamicTableContentRequest {
	return v.value
}

func (v *NullableCoreTableGetDynamicTableContentRequest) Set(val *CoreTableGetDynamicTableContentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreTableGetDynamicTableContentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreTableGetDynamicTableContentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreTableGetDynamicTableContentRequest(val *CoreTableGetDynamicTableContentRequest) *NullableCoreTableGetDynamicTableContentRequest {
	return &NullableCoreTableGetDynamicTableContentRequest{value: val, isSet: true}
}

func (v NullableCoreTableGetDynamicTableContentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreTableGetDynamicTableContentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


