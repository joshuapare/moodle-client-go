/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BlockIomadCompanyAdminGetLicenseInfoRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockIomadCompanyAdminGetLicenseInfoRequest{}

// BlockIomadCompanyAdminGetLicenseInfoRequest struct for BlockIomadCompanyAdminGetLicenseInfoRequest
type BlockIomadCompanyAdminGetLicenseInfoRequest struct {
	Criteria []BlockIomadCompanyAdminGetLicenseInfoRequestCriteriaInner `json:"criteria"`
}

type _BlockIomadCompanyAdminGetLicenseInfoRequest BlockIomadCompanyAdminGetLicenseInfoRequest

// NewBlockIomadCompanyAdminGetLicenseInfoRequest instantiates a new BlockIomadCompanyAdminGetLicenseInfoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockIomadCompanyAdminGetLicenseInfoRequest(criteria []BlockIomadCompanyAdminGetLicenseInfoRequestCriteriaInner) *BlockIomadCompanyAdminGetLicenseInfoRequest {
	this := BlockIomadCompanyAdminGetLicenseInfoRequest{}
	this.Criteria = criteria
	return &this
}

// NewBlockIomadCompanyAdminGetLicenseInfoRequestWithDefaults instantiates a new BlockIomadCompanyAdminGetLicenseInfoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockIomadCompanyAdminGetLicenseInfoRequestWithDefaults() *BlockIomadCompanyAdminGetLicenseInfoRequest {
	this := BlockIomadCompanyAdminGetLicenseInfoRequest{}
	return &this
}

// GetCriteria returns the Criteria field value
func (o *BlockIomadCompanyAdminGetLicenseInfoRequest) GetCriteria() []BlockIomadCompanyAdminGetLicenseInfoRequestCriteriaInner {
	if o == nil {
		var ret []BlockIomadCompanyAdminGetLicenseInfoRequestCriteriaInner
		return ret
	}

	return o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseInfoRequest) GetCriteriaOk() ([]BlockIomadCompanyAdminGetLicenseInfoRequestCriteriaInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Criteria, true
}

// SetCriteria sets field value
func (o *BlockIomadCompanyAdminGetLicenseInfoRequest) SetCriteria(v []BlockIomadCompanyAdminGetLicenseInfoRequestCriteriaInner) {
	o.Criteria = v
}

func (o BlockIomadCompanyAdminGetLicenseInfoRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockIomadCompanyAdminGetLicenseInfoRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["criteria"] = o.Criteria
	return toSerialize, nil
}

func (o *BlockIomadCompanyAdminGetLicenseInfoRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"criteria",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlockIomadCompanyAdminGetLicenseInfoRequest := _BlockIomadCompanyAdminGetLicenseInfoRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBlockIomadCompanyAdminGetLicenseInfoRequest)

	if err != nil {
		return err
	}

	*o = BlockIomadCompanyAdminGetLicenseInfoRequest(varBlockIomadCompanyAdminGetLicenseInfoRequest)

	return err
}

type NullableBlockIomadCompanyAdminGetLicenseInfoRequest struct {
	value *BlockIomadCompanyAdminGetLicenseInfoRequest
	isSet bool
}

func (v NullableBlockIomadCompanyAdminGetLicenseInfoRequest) Get() *BlockIomadCompanyAdminGetLicenseInfoRequest {
	return v.value
}

func (v *NullableBlockIomadCompanyAdminGetLicenseInfoRequest) Set(val *BlockIomadCompanyAdminGetLicenseInfoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockIomadCompanyAdminGetLicenseInfoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockIomadCompanyAdminGetLicenseInfoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockIomadCompanyAdminGetLicenseInfoRequest(val *BlockIomadCompanyAdminGetLicenseInfoRequest) *NullableBlockIomadCompanyAdminGetLicenseInfoRequest {
	return &NullableBlockIomadCompanyAdminGetLicenseInfoRequest{value: val, isSet: true}
}

func (v NullableBlockIomadCompanyAdminGetLicenseInfoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockIomadCompanyAdminGetLicenseInfoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


