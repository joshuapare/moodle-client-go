/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCohortSearchCohortsRequestContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCohortSearchCohortsRequestContext{}

// CoreCohortSearchCohortsRequestContext struct for CoreCohortSearchCohortsRequestContext
type CoreCohortSearchCohortsRequestContext struct {
	// Context ID. Either use this value, or level and instanceid.
	Contextid *int32 `json:"contextid,omitempty"`
	// Context level. To be used with instanceid.
	Contextlevel *string `json:"contextlevel,omitempty"`
	// Context instance ID. To be used with level
	Instanceid *int32 `json:"instanceid,omitempty"`
}

// NewCoreCohortSearchCohortsRequestContext instantiates a new CoreCohortSearchCohortsRequestContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCohortSearchCohortsRequestContext() *CoreCohortSearchCohortsRequestContext {
	this := CoreCohortSearchCohortsRequestContext{}
	var contextid int32 = 0
	this.Contextid = &contextid
	var contextlevel string = ""
	this.Contextlevel = &contextlevel
	var instanceid int32 = 0
	this.Instanceid = &instanceid
	return &this
}

// NewCoreCohortSearchCohortsRequestContextWithDefaults instantiates a new CoreCohortSearchCohortsRequestContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCohortSearchCohortsRequestContextWithDefaults() *CoreCohortSearchCohortsRequestContext {
	this := CoreCohortSearchCohortsRequestContext{}
	var contextid int32 = 0
	this.Contextid = &contextid
	var contextlevel string = ""
	this.Contextlevel = &contextlevel
	var instanceid int32 = 0
	this.Instanceid = &instanceid
	return &this
}

// GetContextid returns the Contextid field value if set, zero value otherwise.
func (o *CoreCohortSearchCohortsRequestContext) GetContextid() int32 {
	if o == nil || IsNil(o.Contextid) {
		var ret int32
		return ret
	}
	return *o.Contextid
}

// GetContextidOk returns a tuple with the Contextid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCohortSearchCohortsRequestContext) GetContextidOk() (*int32, bool) {
	if o == nil || IsNil(o.Contextid) {
		return nil, false
	}
	return o.Contextid, true
}

// HasContextid returns a boolean if a field has been set.
func (o *CoreCohortSearchCohortsRequestContext) HasContextid() bool {
	if o != nil && !IsNil(o.Contextid) {
		return true
	}

	return false
}

// SetContextid gets a reference to the given int32 and assigns it to the Contextid field.
func (o *CoreCohortSearchCohortsRequestContext) SetContextid(v int32) {
	o.Contextid = &v
}

// GetContextlevel returns the Contextlevel field value if set, zero value otherwise.
func (o *CoreCohortSearchCohortsRequestContext) GetContextlevel() string {
	if o == nil || IsNil(o.Contextlevel) {
		var ret string
		return ret
	}
	return *o.Contextlevel
}

// GetContextlevelOk returns a tuple with the Contextlevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCohortSearchCohortsRequestContext) GetContextlevelOk() (*string, bool) {
	if o == nil || IsNil(o.Contextlevel) {
		return nil, false
	}
	return o.Contextlevel, true
}

// HasContextlevel returns a boolean if a field has been set.
func (o *CoreCohortSearchCohortsRequestContext) HasContextlevel() bool {
	if o != nil && !IsNil(o.Contextlevel) {
		return true
	}

	return false
}

// SetContextlevel gets a reference to the given string and assigns it to the Contextlevel field.
func (o *CoreCohortSearchCohortsRequestContext) SetContextlevel(v string) {
	o.Contextlevel = &v
}

// GetInstanceid returns the Instanceid field value if set, zero value otherwise.
func (o *CoreCohortSearchCohortsRequestContext) GetInstanceid() int32 {
	if o == nil || IsNil(o.Instanceid) {
		var ret int32
		return ret
	}
	return *o.Instanceid
}

// GetInstanceidOk returns a tuple with the Instanceid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCohortSearchCohortsRequestContext) GetInstanceidOk() (*int32, bool) {
	if o == nil || IsNil(o.Instanceid) {
		return nil, false
	}
	return o.Instanceid, true
}

// HasInstanceid returns a boolean if a field has been set.
func (o *CoreCohortSearchCohortsRequestContext) HasInstanceid() bool {
	if o != nil && !IsNil(o.Instanceid) {
		return true
	}

	return false
}

// SetInstanceid gets a reference to the given int32 and assigns it to the Instanceid field.
func (o *CoreCohortSearchCohortsRequestContext) SetInstanceid(v int32) {
	o.Instanceid = &v
}

func (o CoreCohortSearchCohortsRequestContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCohortSearchCohortsRequestContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Contextid) {
		toSerialize["contextid"] = o.Contextid
	}
	if !IsNil(o.Contextlevel) {
		toSerialize["contextlevel"] = o.Contextlevel
	}
	if !IsNil(o.Instanceid) {
		toSerialize["instanceid"] = o.Instanceid
	}
	return toSerialize, nil
}

type NullableCoreCohortSearchCohortsRequestContext struct {
	value *CoreCohortSearchCohortsRequestContext
	isSet bool
}

func (v NullableCoreCohortSearchCohortsRequestContext) Get() *CoreCohortSearchCohortsRequestContext {
	return v.value
}

func (v *NullableCoreCohortSearchCohortsRequestContext) Set(val *CoreCohortSearchCohortsRequestContext) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCohortSearchCohortsRequestContext) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCohortSearchCohortsRequestContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCohortSearchCohortsRequestContext(val *CoreCohortSearchCohortsRequestContext) *NullableCoreCohortSearchCohortsRequestContext {
	return &NullableCoreCohortSearchCohortsRequestContext{value: val, isSet: true}
}

func (v NullableCoreCohortSearchCohortsRequestContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCohortSearchCohortsRequestContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


