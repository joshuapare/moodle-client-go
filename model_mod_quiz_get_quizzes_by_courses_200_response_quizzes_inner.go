/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModQuizGetQuizzesByCourses200ResponseQuizzesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModQuizGetQuizzesByCourses200ResponseQuizzesInner{}

// ModQuizGetQuizzesByCourses200ResponseQuizzesInner struct for ModQuizGetQuizzesByCourses200ResponseQuizzesInner
type ModQuizGetQuizzesByCourses200ResponseQuizzesInner struct {
	// Whether to allow the quiz to be attempted                                                                             offline in the mobile app
	Allowofflineattempts *int32 `json:"allowofflineattempts,omitempty"`
	// Whether subsequent attempts start from the answer                                                                     to the previous attempt (1) or start blank (0).
	Attemptonlast *int32 `json:"attemptonlast,omitempty"`
	// The maximum number of attempts a student is allowed.
	Attempts *int32 `json:"attempts,omitempty"`
	// Auto-save delay
	Autosaveperiod *int32 `json:"autosaveperiod,omitempty"`
	// Restriciton on the browser the student must                                                                     use. E.g. 'securewindow'.
	Browsersecurity *string `json:"browsersecurity,omitempty"`
	// Allows students to redo any completed question                                                                         within a quiz attempt.
	Canredoquestions *int32 `json:"canredoquestions,omitempty"`
	// Mark quiz complete when the student has                                                                                 exhausted the maximum number of attempts
	Completionattemptsexhausted *int32 `json:"completionattemptsexhausted,omitempty"`
	// Whether to require passing grade
	Completionpass *int32 `json:"completionpass,omitempty"`
	// Course id
	Course *int32 `json:"course,omitempty"`
	// Course module id
	Coursemodule *int32 `json:"coursemodule,omitempty"`
	// Number of decimal points to use when displaying                                                                     grades.
	Decimalpoints *int32 `json:"decimalpoints,omitempty"`
	// Delay that must be left between the first and second attempt,                                                             in seconds.
	Delay1 *int32 `json:"delay1,omitempty"`
	// Delay that must be left between the second and subsequent                                                             attempt, in seconds.
	Delay2 *int32 `json:"delay2,omitempty"`
	// The amount of time (in seconds) after the time limit                                                                 runs out during which attempts can still be submitted,                                                                 if overduehandling is set to allow it.
	Graceperiod *int32 `json:"graceperiod,omitempty"`
	// The total that the quiz overall grade is scaled to be                                                             out of.
	Grade *float32 `json:"grade,omitempty"`
	// One of the values QUIZ_GRADEHIGHEST, QUIZ_GRADEAVERAGE,                                                                     QUIZ_ATTEMPTFIRST or QUIZ_ATTEMPTLAST.
	Grademethod *int32 `json:"grademethod,omitempty"`
	// Group id
	Groupingid *int32 `json:"groupingid,omitempty"`
	// Group mode
	Groupmode *int32 `json:"groupmode,omitempty"`
	// Whether the quiz has any non-blank feedback text
	Hasfeedback *int32 `json:"hasfeedback,omitempty"`
	// Whether the quiz has questions
	Hasquestions *int32 `json:"hasquestions,omitempty"`
	// Activity instance id
	Id *int32 `json:"id,omitempty"`
	// Activity introduction
	Intro *string `json:"intro,omitempty"`
	Introfiles []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner `json:"introfiles,omitempty"`
	// intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Introformat *int32 `json:"introformat,omitempty"`
	// Forced activity language
	Lang *string `json:"lang,omitempty"`
	// Activity name
	Name *string `json:"name,omitempty"`
	// Any constraints on how the user is allowed to navigate                                                                 around the quiz. Currently recognised values are                                                                 'free' and 'seq'.
	Navmethod *string `json:"navmethod,omitempty"`
	// The method used to handle overdue attempts.                                                                     'autosubmit', 'graceperiod' or 'autoabandon'.
	Overduehandling *string `json:"overduehandling,omitempty"`
	// A password that the student must enter before starting or                                                                 continuing a quiz attempt.
	Password *string `json:"password,omitempty"`
	// The behaviour to ask questions to use.
	Preferredbehaviour *string `json:"preferredbehaviour,omitempty"`
	// Number of decimal points to use when                                                                             displaying question grades.                                                                             (-1 means use decimalpoints.)
	Questiondecimalpoints *int32 `json:"questiondecimalpoints,omitempty"`
	// How often to insert a page break when editing                                                                         the quiz, or when shuffling the question order.
	Questionsperpage *int32 `json:"questionsperpage,omitempty"`
	// Whether users are allowed to review their quiz                                                                     attempts at various times. This is a bit field, decoded by the                                                                     \\mod_quiz\\question\\display_options class. It is formed by ORing                                                                     together the constants defined there.
	Reviewattempt *int32 `json:"reviewattempt,omitempty"`
	// Whether users are allowed to review their quiz                                                        attempts at various times.A bit field, like reviewattempt.
	Reviewcorrectness *int32 `json:"reviewcorrectness,omitempty"`
	// Whether users are allowed to review their                                                                             quiz attempts at various times. A bit field, like                                                                             reviewattempt.
	Reviewgeneralfeedback *int32 `json:"reviewgeneralfeedback,omitempty"`
	// Whether users are allowed to review their quiz attempts                                                                 at various times. A bit field, like reviewattempt.
	Reviewmarks *int32 `json:"reviewmarks,omitempty"`
	// Whether users are allowed to review their quiz                                                   attempts at various times. A bit field, like reviewattempt.
	Reviewmaxmarks *int32 `json:"reviewmaxmarks,omitempty"`
	// Whether users are allowed to review their quiz                                                                             attempts at various times. A bit field, like                                                                             reviewattempt.
	Reviewoverallfeedback *int32 `json:"reviewoverallfeedback,omitempty"`
	// Whether users are allowed to review their quiz                                                                         attempts at various times. A bit field, like                                                                         reviewattempt.
	Reviewrightanswer *int32 `json:"reviewrightanswer,omitempty"`
	// Whether users are allowed to review their                                                                             quiz attempts at various times. A bit field, like                                                                             reviewattempt.
	Reviewspecificfeedback *int32 `json:"reviewspecificfeedback,omitempty"`
	// Course section id
	Section *int32 `json:"section,omitempty"`
	// Whether blocks should be shown on the attempt.php and                                                                 review.php pages.
	Showblocks *int32 `json:"showblocks,omitempty"`
	// Option to show the user's picture during the                                                                     attempt and on the review page.
	Showuserpicture *int32 `json:"showuserpicture,omitempty"`
	// Whether the parts of the question should be shuffled,                                                                     in those question types that support it.
	Shuffleanswers *int32 `json:"shuffleanswers,omitempty"`
	// Used to restrict the IP addresses from which this quiz can                                                             be attempted. The format is as requried by the address_in_subnet                                                             function.
	Subnet *string `json:"subnet,omitempty"`
	// The total of all the question instance maxmarks.
	Sumgrades *float32 `json:"sumgrades,omitempty"`
	// The time when this quiz closes. (0 = no restriction.)
	Timeclose *int32 `json:"timeclose,omitempty"`
	// The time when the quiz was added to the course.
	Timecreated *int32 `json:"timecreated,omitempty"`
	// The time limit for quiz attempts, in seconds.
	Timelimit *int32 `json:"timelimit,omitempty"`
	// Last modified time.
	Timemodified *int32 `json:"timemodified,omitempty"`
	// The time when this quiz opens. (0 = no restriction.)
	Timeopen *int32 `json:"timeopen,omitempty"`
	// Visible
	Visible *bool `json:"visible,omitempty"`
}

// NewModQuizGetQuizzesByCourses200ResponseQuizzesInner instantiates a new ModQuizGetQuizzesByCourses200ResponseQuizzesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModQuizGetQuizzesByCourses200ResponseQuizzesInner() *ModQuizGetQuizzesByCourses200ResponseQuizzesInner {
	this := ModQuizGetQuizzesByCourses200ResponseQuizzesInner{}
	var allowofflineattempts int32 = null
	this.Allowofflineattempts = &allowofflineattempts
	var attemptonlast int32 = null
	this.Attemptonlast = &attemptonlast
	var attempts int32 = null
	this.Attempts = &attempts
	var autosaveperiod int32 = null
	this.Autosaveperiod = &autosaveperiod
	var browsersecurity string = "null"
	this.Browsersecurity = &browsersecurity
	var canredoquestions int32 = null
	this.Canredoquestions = &canredoquestions
	var completionattemptsexhausted int32 = null
	this.Completionattemptsexhausted = &completionattemptsexhausted
	var completionpass int32 = null
	this.Completionpass = &completionpass
	var decimalpoints int32 = null
	this.Decimalpoints = &decimalpoints
	var delay1 int32 = null
	this.Delay1 = &delay1
	var delay2 int32 = null
	this.Delay2 = &delay2
	var graceperiod int32 = null
	this.Graceperiod = &graceperiod
	var grade float32 = null
	this.Grade = &grade
	var grademethod int32 = null
	this.Grademethod = &grademethod
	var hasfeedback int32 = null
	this.Hasfeedback = &hasfeedback
	var hasquestions int32 = null
	this.Hasquestions = &hasquestions
	var navmethod string = "null"
	this.Navmethod = &navmethod
	var overduehandling string = "null"
	this.Overduehandling = &overduehandling
	var password string = "null"
	this.Password = &password
	var preferredbehaviour string = "null"
	this.Preferredbehaviour = &preferredbehaviour
	var questiondecimalpoints int32 = null
	this.Questiondecimalpoints = &questiondecimalpoints
	var questionsperpage int32 = null
	this.Questionsperpage = &questionsperpage
	var reviewattempt int32 = null
	this.Reviewattempt = &reviewattempt
	var reviewcorrectness int32 = null
	this.Reviewcorrectness = &reviewcorrectness
	var reviewgeneralfeedback int32 = null
	this.Reviewgeneralfeedback = &reviewgeneralfeedback
	var reviewmarks int32 = null
	this.Reviewmarks = &reviewmarks
	var reviewmaxmarks int32 = null
	this.Reviewmaxmarks = &reviewmaxmarks
	var reviewoverallfeedback int32 = null
	this.Reviewoverallfeedback = &reviewoverallfeedback
	var reviewrightanswer int32 = null
	this.Reviewrightanswer = &reviewrightanswer
	var showblocks int32 = null
	this.Showblocks = &showblocks
	var showuserpicture int32 = null
	this.Showuserpicture = &showuserpicture
	var shuffleanswers int32 = null
	this.Shuffleanswers = &shuffleanswers
	var subnet string = "null"
	this.Subnet = &subnet
	var sumgrades float32 = null
	this.Sumgrades = &sumgrades
	var timeclose int32 = null
	this.Timeclose = &timeclose
	var timecreated int32 = null
	this.Timecreated = &timecreated
	var timelimit int32 = null
	this.Timelimit = &timelimit
	var timeopen int32 = null
	this.Timeopen = &timeopen
	return &this
}

// NewModQuizGetQuizzesByCourses200ResponseQuizzesInnerWithDefaults instantiates a new ModQuizGetQuizzesByCourses200ResponseQuizzesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModQuizGetQuizzesByCourses200ResponseQuizzesInnerWithDefaults() *ModQuizGetQuizzesByCourses200ResponseQuizzesInner {
	this := ModQuizGetQuizzesByCourses200ResponseQuizzesInner{}
	var allowofflineattempts int32 = null
	this.Allowofflineattempts = &allowofflineattempts
	var attemptonlast int32 = null
	this.Attemptonlast = &attemptonlast
	var attempts int32 = null
	this.Attempts = &attempts
	var autosaveperiod int32 = null
	this.Autosaveperiod = &autosaveperiod
	var browsersecurity string = "null"
	this.Browsersecurity = &browsersecurity
	var canredoquestions int32 = null
	this.Canredoquestions = &canredoquestions
	var completionattemptsexhausted int32 = null
	this.Completionattemptsexhausted = &completionattemptsexhausted
	var completionpass int32 = null
	this.Completionpass = &completionpass
	var decimalpoints int32 = null
	this.Decimalpoints = &decimalpoints
	var delay1 int32 = null
	this.Delay1 = &delay1
	var delay2 int32 = null
	this.Delay2 = &delay2
	var graceperiod int32 = null
	this.Graceperiod = &graceperiod
	var grade float32 = null
	this.Grade = &grade
	var grademethod int32 = null
	this.Grademethod = &grademethod
	var hasfeedback int32 = null
	this.Hasfeedback = &hasfeedback
	var hasquestions int32 = null
	this.Hasquestions = &hasquestions
	var navmethod string = "null"
	this.Navmethod = &navmethod
	var overduehandling string = "null"
	this.Overduehandling = &overduehandling
	var password string = "null"
	this.Password = &password
	var preferredbehaviour string = "null"
	this.Preferredbehaviour = &preferredbehaviour
	var questiondecimalpoints int32 = null
	this.Questiondecimalpoints = &questiondecimalpoints
	var questionsperpage int32 = null
	this.Questionsperpage = &questionsperpage
	var reviewattempt int32 = null
	this.Reviewattempt = &reviewattempt
	var reviewcorrectness int32 = null
	this.Reviewcorrectness = &reviewcorrectness
	var reviewgeneralfeedback int32 = null
	this.Reviewgeneralfeedback = &reviewgeneralfeedback
	var reviewmarks int32 = null
	this.Reviewmarks = &reviewmarks
	var reviewmaxmarks int32 = null
	this.Reviewmaxmarks = &reviewmaxmarks
	var reviewoverallfeedback int32 = null
	this.Reviewoverallfeedback = &reviewoverallfeedback
	var reviewrightanswer int32 = null
	this.Reviewrightanswer = &reviewrightanswer
	var showblocks int32 = null
	this.Showblocks = &showblocks
	var showuserpicture int32 = null
	this.Showuserpicture = &showuserpicture
	var shuffleanswers int32 = null
	this.Shuffleanswers = &shuffleanswers
	var subnet string = "null"
	this.Subnet = &subnet
	var sumgrades float32 = null
	this.Sumgrades = &sumgrades
	var timeclose int32 = null
	this.Timeclose = &timeclose
	var timecreated int32 = null
	this.Timecreated = &timecreated
	var timelimit int32 = null
	this.Timelimit = &timelimit
	var timeopen int32 = null
	this.Timeopen = &timeopen
	return &this
}

// GetAllowofflineattempts returns the Allowofflineattempts field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetAllowofflineattempts() int32 {
	if o == nil || IsNil(o.Allowofflineattempts) {
		var ret int32
		return ret
	}
	return *o.Allowofflineattempts
}

// GetAllowofflineattemptsOk returns a tuple with the Allowofflineattempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetAllowofflineattemptsOk() (*int32, bool) {
	if o == nil || IsNil(o.Allowofflineattempts) {
		return nil, false
	}
	return o.Allowofflineattempts, true
}

// HasAllowofflineattempts returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasAllowofflineattempts() bool {
	if o != nil && !IsNil(o.Allowofflineattempts) {
		return true
	}

	return false
}

// SetAllowofflineattempts gets a reference to the given int32 and assigns it to the Allowofflineattempts field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetAllowofflineattempts(v int32) {
	o.Allowofflineattempts = &v
}

// GetAttemptonlast returns the Attemptonlast field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetAttemptonlast() int32 {
	if o == nil || IsNil(o.Attemptonlast) {
		var ret int32
		return ret
	}
	return *o.Attemptonlast
}

// GetAttemptonlastOk returns a tuple with the Attemptonlast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetAttemptonlastOk() (*int32, bool) {
	if o == nil || IsNil(o.Attemptonlast) {
		return nil, false
	}
	return o.Attemptonlast, true
}

// HasAttemptonlast returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasAttemptonlast() bool {
	if o != nil && !IsNil(o.Attemptonlast) {
		return true
	}

	return false
}

// SetAttemptonlast gets a reference to the given int32 and assigns it to the Attemptonlast field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetAttemptonlast(v int32) {
	o.Attemptonlast = &v
}

// GetAttempts returns the Attempts field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetAttempts() int32 {
	if o == nil || IsNil(o.Attempts) {
		var ret int32
		return ret
	}
	return *o.Attempts
}

// GetAttemptsOk returns a tuple with the Attempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetAttemptsOk() (*int32, bool) {
	if o == nil || IsNil(o.Attempts) {
		return nil, false
	}
	return o.Attempts, true
}

// HasAttempts returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasAttempts() bool {
	if o != nil && !IsNil(o.Attempts) {
		return true
	}

	return false
}

// SetAttempts gets a reference to the given int32 and assigns it to the Attempts field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetAttempts(v int32) {
	o.Attempts = &v
}

// GetAutosaveperiod returns the Autosaveperiod field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetAutosaveperiod() int32 {
	if o == nil || IsNil(o.Autosaveperiod) {
		var ret int32
		return ret
	}
	return *o.Autosaveperiod
}

// GetAutosaveperiodOk returns a tuple with the Autosaveperiod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetAutosaveperiodOk() (*int32, bool) {
	if o == nil || IsNil(o.Autosaveperiod) {
		return nil, false
	}
	return o.Autosaveperiod, true
}

// HasAutosaveperiod returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasAutosaveperiod() bool {
	if o != nil && !IsNil(o.Autosaveperiod) {
		return true
	}

	return false
}

// SetAutosaveperiod gets a reference to the given int32 and assigns it to the Autosaveperiod field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetAutosaveperiod(v int32) {
	o.Autosaveperiod = &v
}

// GetBrowsersecurity returns the Browsersecurity field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetBrowsersecurity() string {
	if o == nil || IsNil(o.Browsersecurity) {
		var ret string
		return ret
	}
	return *o.Browsersecurity
}

// GetBrowsersecurityOk returns a tuple with the Browsersecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetBrowsersecurityOk() (*string, bool) {
	if o == nil || IsNil(o.Browsersecurity) {
		return nil, false
	}
	return o.Browsersecurity, true
}

// HasBrowsersecurity returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasBrowsersecurity() bool {
	if o != nil && !IsNil(o.Browsersecurity) {
		return true
	}

	return false
}

// SetBrowsersecurity gets a reference to the given string and assigns it to the Browsersecurity field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetBrowsersecurity(v string) {
	o.Browsersecurity = &v
}

// GetCanredoquestions returns the Canredoquestions field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetCanredoquestions() int32 {
	if o == nil || IsNil(o.Canredoquestions) {
		var ret int32
		return ret
	}
	return *o.Canredoquestions
}

// GetCanredoquestionsOk returns a tuple with the Canredoquestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetCanredoquestionsOk() (*int32, bool) {
	if o == nil || IsNil(o.Canredoquestions) {
		return nil, false
	}
	return o.Canredoquestions, true
}

// HasCanredoquestions returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasCanredoquestions() bool {
	if o != nil && !IsNil(o.Canredoquestions) {
		return true
	}

	return false
}

// SetCanredoquestions gets a reference to the given int32 and assigns it to the Canredoquestions field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetCanredoquestions(v int32) {
	o.Canredoquestions = &v
}

// GetCompletionattemptsexhausted returns the Completionattemptsexhausted field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetCompletionattemptsexhausted() int32 {
	if o == nil || IsNil(o.Completionattemptsexhausted) {
		var ret int32
		return ret
	}
	return *o.Completionattemptsexhausted
}

// GetCompletionattemptsexhaustedOk returns a tuple with the Completionattemptsexhausted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetCompletionattemptsexhaustedOk() (*int32, bool) {
	if o == nil || IsNil(o.Completionattemptsexhausted) {
		return nil, false
	}
	return o.Completionattemptsexhausted, true
}

// HasCompletionattemptsexhausted returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasCompletionattemptsexhausted() bool {
	if o != nil && !IsNil(o.Completionattemptsexhausted) {
		return true
	}

	return false
}

// SetCompletionattemptsexhausted gets a reference to the given int32 and assigns it to the Completionattemptsexhausted field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetCompletionattemptsexhausted(v int32) {
	o.Completionattemptsexhausted = &v
}

// GetCompletionpass returns the Completionpass field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetCompletionpass() int32 {
	if o == nil || IsNil(o.Completionpass) {
		var ret int32
		return ret
	}
	return *o.Completionpass
}

// GetCompletionpassOk returns a tuple with the Completionpass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetCompletionpassOk() (*int32, bool) {
	if o == nil || IsNil(o.Completionpass) {
		return nil, false
	}
	return o.Completionpass, true
}

// HasCompletionpass returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasCompletionpass() bool {
	if o != nil && !IsNil(o.Completionpass) {
		return true
	}

	return false
}

// SetCompletionpass gets a reference to the given int32 and assigns it to the Completionpass field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetCompletionpass(v int32) {
	o.Completionpass = &v
}

// GetCourse returns the Course field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetCourse() int32 {
	if o == nil || IsNil(o.Course) {
		var ret int32
		return ret
	}
	return *o.Course
}

// GetCourseOk returns a tuple with the Course field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetCourseOk() (*int32, bool) {
	if o == nil || IsNil(o.Course) {
		return nil, false
	}
	return o.Course, true
}

// HasCourse returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasCourse() bool {
	if o != nil && !IsNil(o.Course) {
		return true
	}

	return false
}

// SetCourse gets a reference to the given int32 and assigns it to the Course field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetCourse(v int32) {
	o.Course = &v
}

// GetCoursemodule returns the Coursemodule field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetCoursemodule() int32 {
	if o == nil || IsNil(o.Coursemodule) {
		var ret int32
		return ret
	}
	return *o.Coursemodule
}

// GetCoursemoduleOk returns a tuple with the Coursemodule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetCoursemoduleOk() (*int32, bool) {
	if o == nil || IsNil(o.Coursemodule) {
		return nil, false
	}
	return o.Coursemodule, true
}

// HasCoursemodule returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasCoursemodule() bool {
	if o != nil && !IsNil(o.Coursemodule) {
		return true
	}

	return false
}

// SetCoursemodule gets a reference to the given int32 and assigns it to the Coursemodule field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetCoursemodule(v int32) {
	o.Coursemodule = &v
}

// GetDecimalpoints returns the Decimalpoints field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetDecimalpoints() int32 {
	if o == nil || IsNil(o.Decimalpoints) {
		var ret int32
		return ret
	}
	return *o.Decimalpoints
}

// GetDecimalpointsOk returns a tuple with the Decimalpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetDecimalpointsOk() (*int32, bool) {
	if o == nil || IsNil(o.Decimalpoints) {
		return nil, false
	}
	return o.Decimalpoints, true
}

// HasDecimalpoints returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasDecimalpoints() bool {
	if o != nil && !IsNil(o.Decimalpoints) {
		return true
	}

	return false
}

// SetDecimalpoints gets a reference to the given int32 and assigns it to the Decimalpoints field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetDecimalpoints(v int32) {
	o.Decimalpoints = &v
}

// GetDelay1 returns the Delay1 field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetDelay1() int32 {
	if o == nil || IsNil(o.Delay1) {
		var ret int32
		return ret
	}
	return *o.Delay1
}

// GetDelay1Ok returns a tuple with the Delay1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetDelay1Ok() (*int32, bool) {
	if o == nil || IsNil(o.Delay1) {
		return nil, false
	}
	return o.Delay1, true
}

// HasDelay1 returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasDelay1() bool {
	if o != nil && !IsNil(o.Delay1) {
		return true
	}

	return false
}

// SetDelay1 gets a reference to the given int32 and assigns it to the Delay1 field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetDelay1(v int32) {
	o.Delay1 = &v
}

// GetDelay2 returns the Delay2 field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetDelay2() int32 {
	if o == nil || IsNil(o.Delay2) {
		var ret int32
		return ret
	}
	return *o.Delay2
}

// GetDelay2Ok returns a tuple with the Delay2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetDelay2Ok() (*int32, bool) {
	if o == nil || IsNil(o.Delay2) {
		return nil, false
	}
	return o.Delay2, true
}

// HasDelay2 returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasDelay2() bool {
	if o != nil && !IsNil(o.Delay2) {
		return true
	}

	return false
}

// SetDelay2 gets a reference to the given int32 and assigns it to the Delay2 field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetDelay2(v int32) {
	o.Delay2 = &v
}

// GetGraceperiod returns the Graceperiod field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetGraceperiod() int32 {
	if o == nil || IsNil(o.Graceperiod) {
		var ret int32
		return ret
	}
	return *o.Graceperiod
}

// GetGraceperiodOk returns a tuple with the Graceperiod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetGraceperiodOk() (*int32, bool) {
	if o == nil || IsNil(o.Graceperiod) {
		return nil, false
	}
	return o.Graceperiod, true
}

// HasGraceperiod returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasGraceperiod() bool {
	if o != nil && !IsNil(o.Graceperiod) {
		return true
	}

	return false
}

// SetGraceperiod gets a reference to the given int32 and assigns it to the Graceperiod field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetGraceperiod(v int32) {
	o.Graceperiod = &v
}

// GetGrade returns the Grade field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetGrade() float32 {
	if o == nil || IsNil(o.Grade) {
		var ret float32
		return ret
	}
	return *o.Grade
}

// GetGradeOk returns a tuple with the Grade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetGradeOk() (*float32, bool) {
	if o == nil || IsNil(o.Grade) {
		return nil, false
	}
	return o.Grade, true
}

// HasGrade returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasGrade() bool {
	if o != nil && !IsNil(o.Grade) {
		return true
	}

	return false
}

// SetGrade gets a reference to the given float32 and assigns it to the Grade field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetGrade(v float32) {
	o.Grade = &v
}

// GetGrademethod returns the Grademethod field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetGrademethod() int32 {
	if o == nil || IsNil(o.Grademethod) {
		var ret int32
		return ret
	}
	return *o.Grademethod
}

// GetGrademethodOk returns a tuple with the Grademethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetGrademethodOk() (*int32, bool) {
	if o == nil || IsNil(o.Grademethod) {
		return nil, false
	}
	return o.Grademethod, true
}

// HasGrademethod returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasGrademethod() bool {
	if o != nil && !IsNil(o.Grademethod) {
		return true
	}

	return false
}

// SetGrademethod gets a reference to the given int32 and assigns it to the Grademethod field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetGrademethod(v int32) {
	o.Grademethod = &v
}

// GetGroupingid returns the Groupingid field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetGroupingid() int32 {
	if o == nil || IsNil(o.Groupingid) {
		var ret int32
		return ret
	}
	return *o.Groupingid
}

// GetGroupingidOk returns a tuple with the Groupingid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetGroupingidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupingid) {
		return nil, false
	}
	return o.Groupingid, true
}

// HasGroupingid returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasGroupingid() bool {
	if o != nil && !IsNil(o.Groupingid) {
		return true
	}

	return false
}

// SetGroupingid gets a reference to the given int32 and assigns it to the Groupingid field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetGroupingid(v int32) {
	o.Groupingid = &v
}

// GetGroupmode returns the Groupmode field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetGroupmode() int32 {
	if o == nil || IsNil(o.Groupmode) {
		var ret int32
		return ret
	}
	return *o.Groupmode
}

// GetGroupmodeOk returns a tuple with the Groupmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetGroupmodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupmode) {
		return nil, false
	}
	return o.Groupmode, true
}

// HasGroupmode returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasGroupmode() bool {
	if o != nil && !IsNil(o.Groupmode) {
		return true
	}

	return false
}

// SetGroupmode gets a reference to the given int32 and assigns it to the Groupmode field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetGroupmode(v int32) {
	o.Groupmode = &v
}

// GetHasfeedback returns the Hasfeedback field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetHasfeedback() int32 {
	if o == nil || IsNil(o.Hasfeedback) {
		var ret int32
		return ret
	}
	return *o.Hasfeedback
}

// GetHasfeedbackOk returns a tuple with the Hasfeedback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetHasfeedbackOk() (*int32, bool) {
	if o == nil || IsNil(o.Hasfeedback) {
		return nil, false
	}
	return o.Hasfeedback, true
}

// HasHasfeedback returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasHasfeedback() bool {
	if o != nil && !IsNil(o.Hasfeedback) {
		return true
	}

	return false
}

// SetHasfeedback gets a reference to the given int32 and assigns it to the Hasfeedback field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetHasfeedback(v int32) {
	o.Hasfeedback = &v
}

// GetHasquestions returns the Hasquestions field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetHasquestions() int32 {
	if o == nil || IsNil(o.Hasquestions) {
		var ret int32
		return ret
	}
	return *o.Hasquestions
}

// GetHasquestionsOk returns a tuple with the Hasquestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetHasquestionsOk() (*int32, bool) {
	if o == nil || IsNil(o.Hasquestions) {
		return nil, false
	}
	return o.Hasquestions, true
}

// HasHasquestions returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasHasquestions() bool {
	if o != nil && !IsNil(o.Hasquestions) {
		return true
	}

	return false
}

// SetHasquestions gets a reference to the given int32 and assigns it to the Hasquestions field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetHasquestions(v int32) {
	o.Hasquestions = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetId(v int32) {
	o.Id = &v
}

// GetIntro returns the Intro field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetIntro() string {
	if o == nil || IsNil(o.Intro) {
		var ret string
		return ret
	}
	return *o.Intro
}

// GetIntroOk returns a tuple with the Intro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetIntroOk() (*string, bool) {
	if o == nil || IsNil(o.Intro) {
		return nil, false
	}
	return o.Intro, true
}

// HasIntro returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasIntro() bool {
	if o != nil && !IsNil(o.Intro) {
		return true
	}

	return false
}

// SetIntro gets a reference to the given string and assigns it to the Intro field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetIntro(v string) {
	o.Intro = &v
}

// GetIntrofiles returns the Introfiles field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetIntrofiles() []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner {
	if o == nil || IsNil(o.Introfiles) {
		var ret []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner
		return ret
	}
	return o.Introfiles
}

// GetIntrofilesOk returns a tuple with the Introfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetIntrofilesOk() ([]CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner, bool) {
	if o == nil || IsNil(o.Introfiles) {
		return nil, false
	}
	return o.Introfiles, true
}

// HasIntrofiles returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasIntrofiles() bool {
	if o != nil && !IsNil(o.Introfiles) {
		return true
	}

	return false
}

// SetIntrofiles gets a reference to the given []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner and assigns it to the Introfiles field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetIntrofiles(v []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner) {
	o.Introfiles = v
}

// GetIntroformat returns the Introformat field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetIntroformat() int32 {
	if o == nil || IsNil(o.Introformat) {
		var ret int32
		return ret
	}
	return *o.Introformat
}

// GetIntroformatOk returns a tuple with the Introformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetIntroformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Introformat) {
		return nil, false
	}
	return o.Introformat, true
}

// HasIntroformat returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasIntroformat() bool {
	if o != nil && !IsNil(o.Introformat) {
		return true
	}

	return false
}

// SetIntroformat gets a reference to the given int32 and assigns it to the Introformat field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetIntroformat(v int32) {
	o.Introformat = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetLang(v string) {
	o.Lang = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetName(v string) {
	o.Name = &v
}

// GetNavmethod returns the Navmethod field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetNavmethod() string {
	if o == nil || IsNil(o.Navmethod) {
		var ret string
		return ret
	}
	return *o.Navmethod
}

// GetNavmethodOk returns a tuple with the Navmethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetNavmethodOk() (*string, bool) {
	if o == nil || IsNil(o.Navmethod) {
		return nil, false
	}
	return o.Navmethod, true
}

// HasNavmethod returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasNavmethod() bool {
	if o != nil && !IsNil(o.Navmethod) {
		return true
	}

	return false
}

// SetNavmethod gets a reference to the given string and assigns it to the Navmethod field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetNavmethod(v string) {
	o.Navmethod = &v
}

// GetOverduehandling returns the Overduehandling field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetOverduehandling() string {
	if o == nil || IsNil(o.Overduehandling) {
		var ret string
		return ret
	}
	return *o.Overduehandling
}

// GetOverduehandlingOk returns a tuple with the Overduehandling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetOverduehandlingOk() (*string, bool) {
	if o == nil || IsNil(o.Overduehandling) {
		return nil, false
	}
	return o.Overduehandling, true
}

// HasOverduehandling returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasOverduehandling() bool {
	if o != nil && !IsNil(o.Overduehandling) {
		return true
	}

	return false
}

// SetOverduehandling gets a reference to the given string and assigns it to the Overduehandling field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetOverduehandling(v string) {
	o.Overduehandling = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetPassword(v string) {
	o.Password = &v
}

// GetPreferredbehaviour returns the Preferredbehaviour field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetPreferredbehaviour() string {
	if o == nil || IsNil(o.Preferredbehaviour) {
		var ret string
		return ret
	}
	return *o.Preferredbehaviour
}

// GetPreferredbehaviourOk returns a tuple with the Preferredbehaviour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetPreferredbehaviourOk() (*string, bool) {
	if o == nil || IsNil(o.Preferredbehaviour) {
		return nil, false
	}
	return o.Preferredbehaviour, true
}

// HasPreferredbehaviour returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasPreferredbehaviour() bool {
	if o != nil && !IsNil(o.Preferredbehaviour) {
		return true
	}

	return false
}

// SetPreferredbehaviour gets a reference to the given string and assigns it to the Preferredbehaviour field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetPreferredbehaviour(v string) {
	o.Preferredbehaviour = &v
}

// GetQuestiondecimalpoints returns the Questiondecimalpoints field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetQuestiondecimalpoints() int32 {
	if o == nil || IsNil(o.Questiondecimalpoints) {
		var ret int32
		return ret
	}
	return *o.Questiondecimalpoints
}

// GetQuestiondecimalpointsOk returns a tuple with the Questiondecimalpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetQuestiondecimalpointsOk() (*int32, bool) {
	if o == nil || IsNil(o.Questiondecimalpoints) {
		return nil, false
	}
	return o.Questiondecimalpoints, true
}

// HasQuestiondecimalpoints returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasQuestiondecimalpoints() bool {
	if o != nil && !IsNil(o.Questiondecimalpoints) {
		return true
	}

	return false
}

// SetQuestiondecimalpoints gets a reference to the given int32 and assigns it to the Questiondecimalpoints field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetQuestiondecimalpoints(v int32) {
	o.Questiondecimalpoints = &v
}

// GetQuestionsperpage returns the Questionsperpage field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetQuestionsperpage() int32 {
	if o == nil || IsNil(o.Questionsperpage) {
		var ret int32
		return ret
	}
	return *o.Questionsperpage
}

// GetQuestionsperpageOk returns a tuple with the Questionsperpage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetQuestionsperpageOk() (*int32, bool) {
	if o == nil || IsNil(o.Questionsperpage) {
		return nil, false
	}
	return o.Questionsperpage, true
}

// HasQuestionsperpage returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasQuestionsperpage() bool {
	if o != nil && !IsNil(o.Questionsperpage) {
		return true
	}

	return false
}

// SetQuestionsperpage gets a reference to the given int32 and assigns it to the Questionsperpage field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetQuestionsperpage(v int32) {
	o.Questionsperpage = &v
}

// GetReviewattempt returns the Reviewattempt field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewattempt() int32 {
	if o == nil || IsNil(o.Reviewattempt) {
		var ret int32
		return ret
	}
	return *o.Reviewattempt
}

// GetReviewattemptOk returns a tuple with the Reviewattempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewattemptOk() (*int32, bool) {
	if o == nil || IsNil(o.Reviewattempt) {
		return nil, false
	}
	return o.Reviewattempt, true
}

// HasReviewattempt returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasReviewattempt() bool {
	if o != nil && !IsNil(o.Reviewattempt) {
		return true
	}

	return false
}

// SetReviewattempt gets a reference to the given int32 and assigns it to the Reviewattempt field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetReviewattempt(v int32) {
	o.Reviewattempt = &v
}

// GetReviewcorrectness returns the Reviewcorrectness field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewcorrectness() int32 {
	if o == nil || IsNil(o.Reviewcorrectness) {
		var ret int32
		return ret
	}
	return *o.Reviewcorrectness
}

// GetReviewcorrectnessOk returns a tuple with the Reviewcorrectness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewcorrectnessOk() (*int32, bool) {
	if o == nil || IsNil(o.Reviewcorrectness) {
		return nil, false
	}
	return o.Reviewcorrectness, true
}

// HasReviewcorrectness returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasReviewcorrectness() bool {
	if o != nil && !IsNil(o.Reviewcorrectness) {
		return true
	}

	return false
}

// SetReviewcorrectness gets a reference to the given int32 and assigns it to the Reviewcorrectness field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetReviewcorrectness(v int32) {
	o.Reviewcorrectness = &v
}

// GetReviewgeneralfeedback returns the Reviewgeneralfeedback field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewgeneralfeedback() int32 {
	if o == nil || IsNil(o.Reviewgeneralfeedback) {
		var ret int32
		return ret
	}
	return *o.Reviewgeneralfeedback
}

// GetReviewgeneralfeedbackOk returns a tuple with the Reviewgeneralfeedback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewgeneralfeedbackOk() (*int32, bool) {
	if o == nil || IsNil(o.Reviewgeneralfeedback) {
		return nil, false
	}
	return o.Reviewgeneralfeedback, true
}

// HasReviewgeneralfeedback returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasReviewgeneralfeedback() bool {
	if o != nil && !IsNil(o.Reviewgeneralfeedback) {
		return true
	}

	return false
}

// SetReviewgeneralfeedback gets a reference to the given int32 and assigns it to the Reviewgeneralfeedback field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetReviewgeneralfeedback(v int32) {
	o.Reviewgeneralfeedback = &v
}

// GetReviewmarks returns the Reviewmarks field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewmarks() int32 {
	if o == nil || IsNil(o.Reviewmarks) {
		var ret int32
		return ret
	}
	return *o.Reviewmarks
}

// GetReviewmarksOk returns a tuple with the Reviewmarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewmarksOk() (*int32, bool) {
	if o == nil || IsNil(o.Reviewmarks) {
		return nil, false
	}
	return o.Reviewmarks, true
}

// HasReviewmarks returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasReviewmarks() bool {
	if o != nil && !IsNil(o.Reviewmarks) {
		return true
	}

	return false
}

// SetReviewmarks gets a reference to the given int32 and assigns it to the Reviewmarks field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetReviewmarks(v int32) {
	o.Reviewmarks = &v
}

// GetReviewmaxmarks returns the Reviewmaxmarks field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewmaxmarks() int32 {
	if o == nil || IsNil(o.Reviewmaxmarks) {
		var ret int32
		return ret
	}
	return *o.Reviewmaxmarks
}

// GetReviewmaxmarksOk returns a tuple with the Reviewmaxmarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewmaxmarksOk() (*int32, bool) {
	if o == nil || IsNil(o.Reviewmaxmarks) {
		return nil, false
	}
	return o.Reviewmaxmarks, true
}

// HasReviewmaxmarks returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasReviewmaxmarks() bool {
	if o != nil && !IsNil(o.Reviewmaxmarks) {
		return true
	}

	return false
}

// SetReviewmaxmarks gets a reference to the given int32 and assigns it to the Reviewmaxmarks field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetReviewmaxmarks(v int32) {
	o.Reviewmaxmarks = &v
}

// GetReviewoverallfeedback returns the Reviewoverallfeedback field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewoverallfeedback() int32 {
	if o == nil || IsNil(o.Reviewoverallfeedback) {
		var ret int32
		return ret
	}
	return *o.Reviewoverallfeedback
}

// GetReviewoverallfeedbackOk returns a tuple with the Reviewoverallfeedback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewoverallfeedbackOk() (*int32, bool) {
	if o == nil || IsNil(o.Reviewoverallfeedback) {
		return nil, false
	}
	return o.Reviewoverallfeedback, true
}

// HasReviewoverallfeedback returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasReviewoverallfeedback() bool {
	if o != nil && !IsNil(o.Reviewoverallfeedback) {
		return true
	}

	return false
}

// SetReviewoverallfeedback gets a reference to the given int32 and assigns it to the Reviewoverallfeedback field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetReviewoverallfeedback(v int32) {
	o.Reviewoverallfeedback = &v
}

// GetReviewrightanswer returns the Reviewrightanswer field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewrightanswer() int32 {
	if o == nil || IsNil(o.Reviewrightanswer) {
		var ret int32
		return ret
	}
	return *o.Reviewrightanswer
}

// GetReviewrightanswerOk returns a tuple with the Reviewrightanswer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewrightanswerOk() (*int32, bool) {
	if o == nil || IsNil(o.Reviewrightanswer) {
		return nil, false
	}
	return o.Reviewrightanswer, true
}

// HasReviewrightanswer returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasReviewrightanswer() bool {
	if o != nil && !IsNil(o.Reviewrightanswer) {
		return true
	}

	return false
}

// SetReviewrightanswer gets a reference to the given int32 and assigns it to the Reviewrightanswer field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetReviewrightanswer(v int32) {
	o.Reviewrightanswer = &v
}

// GetReviewspecificfeedback returns the Reviewspecificfeedback field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewspecificfeedback() int32 {
	if o == nil || IsNil(o.Reviewspecificfeedback) {
		var ret int32
		return ret
	}
	return *o.Reviewspecificfeedback
}

// GetReviewspecificfeedbackOk returns a tuple with the Reviewspecificfeedback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetReviewspecificfeedbackOk() (*int32, bool) {
	if o == nil || IsNil(o.Reviewspecificfeedback) {
		return nil, false
	}
	return o.Reviewspecificfeedback, true
}

// HasReviewspecificfeedback returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasReviewspecificfeedback() bool {
	if o != nil && !IsNil(o.Reviewspecificfeedback) {
		return true
	}

	return false
}

// SetReviewspecificfeedback gets a reference to the given int32 and assigns it to the Reviewspecificfeedback field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetReviewspecificfeedback(v int32) {
	o.Reviewspecificfeedback = &v
}

// GetSection returns the Section field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetSection() int32 {
	if o == nil || IsNil(o.Section) {
		var ret int32
		return ret
	}
	return *o.Section
}

// GetSectionOk returns a tuple with the Section field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetSectionOk() (*int32, bool) {
	if o == nil || IsNil(o.Section) {
		return nil, false
	}
	return o.Section, true
}

// HasSection returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasSection() bool {
	if o != nil && !IsNil(o.Section) {
		return true
	}

	return false
}

// SetSection gets a reference to the given int32 and assigns it to the Section field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetSection(v int32) {
	o.Section = &v
}

// GetShowblocks returns the Showblocks field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetShowblocks() int32 {
	if o == nil || IsNil(o.Showblocks) {
		var ret int32
		return ret
	}
	return *o.Showblocks
}

// GetShowblocksOk returns a tuple with the Showblocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetShowblocksOk() (*int32, bool) {
	if o == nil || IsNil(o.Showblocks) {
		return nil, false
	}
	return o.Showblocks, true
}

// HasShowblocks returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasShowblocks() bool {
	if o != nil && !IsNil(o.Showblocks) {
		return true
	}

	return false
}

// SetShowblocks gets a reference to the given int32 and assigns it to the Showblocks field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetShowblocks(v int32) {
	o.Showblocks = &v
}

// GetShowuserpicture returns the Showuserpicture field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetShowuserpicture() int32 {
	if o == nil || IsNil(o.Showuserpicture) {
		var ret int32
		return ret
	}
	return *o.Showuserpicture
}

// GetShowuserpictureOk returns a tuple with the Showuserpicture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetShowuserpictureOk() (*int32, bool) {
	if o == nil || IsNil(o.Showuserpicture) {
		return nil, false
	}
	return o.Showuserpicture, true
}

// HasShowuserpicture returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasShowuserpicture() bool {
	if o != nil && !IsNil(o.Showuserpicture) {
		return true
	}

	return false
}

// SetShowuserpicture gets a reference to the given int32 and assigns it to the Showuserpicture field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetShowuserpicture(v int32) {
	o.Showuserpicture = &v
}

// GetShuffleanswers returns the Shuffleanswers field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetShuffleanswers() int32 {
	if o == nil || IsNil(o.Shuffleanswers) {
		var ret int32
		return ret
	}
	return *o.Shuffleanswers
}

// GetShuffleanswersOk returns a tuple with the Shuffleanswers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetShuffleanswersOk() (*int32, bool) {
	if o == nil || IsNil(o.Shuffleanswers) {
		return nil, false
	}
	return o.Shuffleanswers, true
}

// HasShuffleanswers returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasShuffleanswers() bool {
	if o != nil && !IsNil(o.Shuffleanswers) {
		return true
	}

	return false
}

// SetShuffleanswers gets a reference to the given int32 and assigns it to the Shuffleanswers field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetShuffleanswers(v int32) {
	o.Shuffleanswers = &v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetSubnet() string {
	if o == nil || IsNil(o.Subnet) {
		var ret string
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetSubnetOk() (*string, bool) {
	if o == nil || IsNil(o.Subnet) {
		return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasSubnet() bool {
	if o != nil && !IsNil(o.Subnet) {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given string and assigns it to the Subnet field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetSubnet(v string) {
	o.Subnet = &v
}

// GetSumgrades returns the Sumgrades field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetSumgrades() float32 {
	if o == nil || IsNil(o.Sumgrades) {
		var ret float32
		return ret
	}
	return *o.Sumgrades
}

// GetSumgradesOk returns a tuple with the Sumgrades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetSumgradesOk() (*float32, bool) {
	if o == nil || IsNil(o.Sumgrades) {
		return nil, false
	}
	return o.Sumgrades, true
}

// HasSumgrades returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasSumgrades() bool {
	if o != nil && !IsNil(o.Sumgrades) {
		return true
	}

	return false
}

// SetSumgrades gets a reference to the given float32 and assigns it to the Sumgrades field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetSumgrades(v float32) {
	o.Sumgrades = &v
}

// GetTimeclose returns the Timeclose field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetTimeclose() int32 {
	if o == nil || IsNil(o.Timeclose) {
		var ret int32
		return ret
	}
	return *o.Timeclose
}

// GetTimecloseOk returns a tuple with the Timeclose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetTimecloseOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeclose) {
		return nil, false
	}
	return o.Timeclose, true
}

// HasTimeclose returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasTimeclose() bool {
	if o != nil && !IsNil(o.Timeclose) {
		return true
	}

	return false
}

// SetTimeclose gets a reference to the given int32 and assigns it to the Timeclose field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetTimeclose(v int32) {
	o.Timeclose = &v
}

// GetTimecreated returns the Timecreated field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetTimecreated() int32 {
	if o == nil || IsNil(o.Timecreated) {
		var ret int32
		return ret
	}
	return *o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetTimecreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecreated) {
		return nil, false
	}
	return o.Timecreated, true
}

// HasTimecreated returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasTimecreated() bool {
	if o != nil && !IsNil(o.Timecreated) {
		return true
	}

	return false
}

// SetTimecreated gets a reference to the given int32 and assigns it to the Timecreated field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetTimecreated(v int32) {
	o.Timecreated = &v
}

// GetTimelimit returns the Timelimit field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetTimelimit() int32 {
	if o == nil || IsNil(o.Timelimit) {
		var ret int32
		return ret
	}
	return *o.Timelimit
}

// GetTimelimitOk returns a tuple with the Timelimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetTimelimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Timelimit) {
		return nil, false
	}
	return o.Timelimit, true
}

// HasTimelimit returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasTimelimit() bool {
	if o != nil && !IsNil(o.Timelimit) {
		return true
	}

	return false
}

// SetTimelimit gets a reference to the given int32 and assigns it to the Timelimit field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetTimelimit(v int32) {
	o.Timelimit = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetTimeopen returns the Timeopen field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetTimeopen() int32 {
	if o == nil || IsNil(o.Timeopen) {
		var ret int32
		return ret
	}
	return *o.Timeopen
}

// GetTimeopenOk returns a tuple with the Timeopen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetTimeopenOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeopen) {
		return nil, false
	}
	return o.Timeopen, true
}

// HasTimeopen returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasTimeopen() bool {
	if o != nil && !IsNil(o.Timeopen) {
		return true
	}

	return false
}

// SetTimeopen gets a reference to the given int32 and assigns it to the Timeopen field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetTimeopen(v int32) {
	o.Timeopen = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetVisible() bool {
	if o == nil || IsNil(o.Visible) {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) GetVisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) SetVisible(v bool) {
	o.Visible = &v
}

func (o ModQuizGetQuizzesByCourses200ResponseQuizzesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModQuizGetQuizzesByCourses200ResponseQuizzesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Allowofflineattempts) {
		toSerialize["allowofflineattempts"] = o.Allowofflineattempts
	}
	if !IsNil(o.Attemptonlast) {
		toSerialize["attemptonlast"] = o.Attemptonlast
	}
	if !IsNil(o.Attempts) {
		toSerialize["attempts"] = o.Attempts
	}
	if !IsNil(o.Autosaveperiod) {
		toSerialize["autosaveperiod"] = o.Autosaveperiod
	}
	if !IsNil(o.Browsersecurity) {
		toSerialize["browsersecurity"] = o.Browsersecurity
	}
	if !IsNil(o.Canredoquestions) {
		toSerialize["canredoquestions"] = o.Canredoquestions
	}
	if !IsNil(o.Completionattemptsexhausted) {
		toSerialize["completionattemptsexhausted"] = o.Completionattemptsexhausted
	}
	if !IsNil(o.Completionpass) {
		toSerialize["completionpass"] = o.Completionpass
	}
	if !IsNil(o.Course) {
		toSerialize["course"] = o.Course
	}
	if !IsNil(o.Coursemodule) {
		toSerialize["coursemodule"] = o.Coursemodule
	}
	if !IsNil(o.Decimalpoints) {
		toSerialize["decimalpoints"] = o.Decimalpoints
	}
	if !IsNil(o.Delay1) {
		toSerialize["delay1"] = o.Delay1
	}
	if !IsNil(o.Delay2) {
		toSerialize["delay2"] = o.Delay2
	}
	if !IsNil(o.Graceperiod) {
		toSerialize["graceperiod"] = o.Graceperiod
	}
	if !IsNil(o.Grade) {
		toSerialize["grade"] = o.Grade
	}
	if !IsNil(o.Grademethod) {
		toSerialize["grademethod"] = o.Grademethod
	}
	if !IsNil(o.Groupingid) {
		toSerialize["groupingid"] = o.Groupingid
	}
	if !IsNil(o.Groupmode) {
		toSerialize["groupmode"] = o.Groupmode
	}
	if !IsNil(o.Hasfeedback) {
		toSerialize["hasfeedback"] = o.Hasfeedback
	}
	if !IsNil(o.Hasquestions) {
		toSerialize["hasquestions"] = o.Hasquestions
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Intro) {
		toSerialize["intro"] = o.Intro
	}
	if !IsNil(o.Introfiles) {
		toSerialize["introfiles"] = o.Introfiles
	}
	if !IsNil(o.Introformat) {
		toSerialize["introformat"] = o.Introformat
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Navmethod) {
		toSerialize["navmethod"] = o.Navmethod
	}
	if !IsNil(o.Overduehandling) {
		toSerialize["overduehandling"] = o.Overduehandling
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Preferredbehaviour) {
		toSerialize["preferredbehaviour"] = o.Preferredbehaviour
	}
	if !IsNil(o.Questiondecimalpoints) {
		toSerialize["questiondecimalpoints"] = o.Questiondecimalpoints
	}
	if !IsNil(o.Questionsperpage) {
		toSerialize["questionsperpage"] = o.Questionsperpage
	}
	if !IsNil(o.Reviewattempt) {
		toSerialize["reviewattempt"] = o.Reviewattempt
	}
	if !IsNil(o.Reviewcorrectness) {
		toSerialize["reviewcorrectness"] = o.Reviewcorrectness
	}
	if !IsNil(o.Reviewgeneralfeedback) {
		toSerialize["reviewgeneralfeedback"] = o.Reviewgeneralfeedback
	}
	if !IsNil(o.Reviewmarks) {
		toSerialize["reviewmarks"] = o.Reviewmarks
	}
	if !IsNil(o.Reviewmaxmarks) {
		toSerialize["reviewmaxmarks"] = o.Reviewmaxmarks
	}
	if !IsNil(o.Reviewoverallfeedback) {
		toSerialize["reviewoverallfeedback"] = o.Reviewoverallfeedback
	}
	if !IsNil(o.Reviewrightanswer) {
		toSerialize["reviewrightanswer"] = o.Reviewrightanswer
	}
	if !IsNil(o.Reviewspecificfeedback) {
		toSerialize["reviewspecificfeedback"] = o.Reviewspecificfeedback
	}
	if !IsNil(o.Section) {
		toSerialize["section"] = o.Section
	}
	if !IsNil(o.Showblocks) {
		toSerialize["showblocks"] = o.Showblocks
	}
	if !IsNil(o.Showuserpicture) {
		toSerialize["showuserpicture"] = o.Showuserpicture
	}
	if !IsNil(o.Shuffleanswers) {
		toSerialize["shuffleanswers"] = o.Shuffleanswers
	}
	if !IsNil(o.Subnet) {
		toSerialize["subnet"] = o.Subnet
	}
	if !IsNil(o.Sumgrades) {
		toSerialize["sumgrades"] = o.Sumgrades
	}
	if !IsNil(o.Timeclose) {
		toSerialize["timeclose"] = o.Timeclose
	}
	if !IsNil(o.Timecreated) {
		toSerialize["timecreated"] = o.Timecreated
	}
	if !IsNil(o.Timelimit) {
		toSerialize["timelimit"] = o.Timelimit
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Timeopen) {
		toSerialize["timeopen"] = o.Timeopen
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	return toSerialize, nil
}

type NullableModQuizGetQuizzesByCourses200ResponseQuizzesInner struct {
	value *ModQuizGetQuizzesByCourses200ResponseQuizzesInner
	isSet bool
}

func (v NullableModQuizGetQuizzesByCourses200ResponseQuizzesInner) Get() *ModQuizGetQuizzesByCourses200ResponseQuizzesInner {
	return v.value
}

func (v *NullableModQuizGetQuizzesByCourses200ResponseQuizzesInner) Set(val *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModQuizGetQuizzesByCourses200ResponseQuizzesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModQuizGetQuizzesByCourses200ResponseQuizzesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModQuizGetQuizzesByCourses200ResponseQuizzesInner(val *ModQuizGetQuizzesByCourses200ResponseQuizzesInner) *NullableModQuizGetQuizzesByCourses200ResponseQuizzesInner {
	return &NullableModQuizGetQuizzesByCourses200ResponseQuizzesInner{value: val, isSet: true}
}

func (v NullableModQuizGetQuizzesByCourses200ResponseQuizzesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModQuizGetQuizzesByCourses200ResponseQuizzesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


