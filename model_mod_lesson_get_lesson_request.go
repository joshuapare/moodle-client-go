/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModLessonGetLessonRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModLessonGetLessonRequest{}

// ModLessonGetLessonRequest struct for ModLessonGetLessonRequest
type ModLessonGetLessonRequest struct {
	// lesson instance id
	Lessonid int32 `json:"lessonid"`
	// lesson password
	Password *string `json:"password,omitempty"`
}

type _ModLessonGetLessonRequest ModLessonGetLessonRequest

// NewModLessonGetLessonRequest instantiates a new ModLessonGetLessonRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModLessonGetLessonRequest(lessonid int32) *ModLessonGetLessonRequest {
	this := ModLessonGetLessonRequest{}
	this.Lessonid = lessonid
	var password string = ""
	this.Password = &password
	return &this
}

// NewModLessonGetLessonRequestWithDefaults instantiates a new ModLessonGetLessonRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModLessonGetLessonRequestWithDefaults() *ModLessonGetLessonRequest {
	this := ModLessonGetLessonRequest{}
	var password string = ""
	this.Password = &password
	return &this
}

// GetLessonid returns the Lessonid field value
func (o *ModLessonGetLessonRequest) GetLessonid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Lessonid
}

// GetLessonidOk returns a tuple with the Lessonid field value
// and a boolean to check if the value has been set.
func (o *ModLessonGetLessonRequest) GetLessonidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lessonid, true
}

// SetLessonid sets field value
func (o *ModLessonGetLessonRequest) SetLessonid(v int32) {
	o.Lessonid = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ModLessonGetLessonRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLessonGetLessonRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ModLessonGetLessonRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ModLessonGetLessonRequest) SetPassword(v string) {
	o.Password = &v
}

func (o ModLessonGetLessonRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModLessonGetLessonRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lessonid"] = o.Lessonid
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	return toSerialize, nil
}

func (o *ModLessonGetLessonRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lessonid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModLessonGetLessonRequest := _ModLessonGetLessonRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModLessonGetLessonRequest)

	if err != nil {
		return err
	}

	*o = ModLessonGetLessonRequest(varModLessonGetLessonRequest)

	return err
}

type NullableModLessonGetLessonRequest struct {
	value *ModLessonGetLessonRequest
	isSet bool
}

func (v NullableModLessonGetLessonRequest) Get() *ModLessonGetLessonRequest {
	return v.value
}

func (v *NullableModLessonGetLessonRequest) Set(val *ModLessonGetLessonRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModLessonGetLessonRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModLessonGetLessonRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModLessonGetLessonRequest(val *ModLessonGetLessonRequest) *NullableModLessonGetLessonRequest {
	return &NullableModLessonGetLessonRequest{value: val, isSet: true}
}

func (v NullableModLessonGetLessonRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModLessonGetLessonRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


