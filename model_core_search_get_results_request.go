/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreSearchGetResultsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreSearchGetResultsRequest{}

// CoreSearchGetResultsRequest struct for CoreSearchGetResultsRequest
type CoreSearchGetResultsRequest struct {
	Filters *CoreSearchGetResultsRequestFilters `json:"filters,omitempty"`
	// results page number starting from 0, defaults to the first page
	Page *int32 `json:"page,omitempty"`
	// the search query
	Query string `json:"query"`
}

type _CoreSearchGetResultsRequest CoreSearchGetResultsRequest

// NewCoreSearchGetResultsRequest instantiates a new CoreSearchGetResultsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreSearchGetResultsRequest(query string) *CoreSearchGetResultsRequest {
	this := CoreSearchGetResultsRequest{}
	var page int32 = 0
	this.Page = &page
	this.Query = query
	return &this
}

// NewCoreSearchGetResultsRequestWithDefaults instantiates a new CoreSearchGetResultsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreSearchGetResultsRequestWithDefaults() *CoreSearchGetResultsRequest {
	this := CoreSearchGetResultsRequest{}
	var page int32 = 0
	this.Page = &page
	var query string = "null"
	this.Query = query
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *CoreSearchGetResultsRequest) GetFilters() CoreSearchGetResultsRequestFilters {
	if o == nil || IsNil(o.Filters) {
		var ret CoreSearchGetResultsRequestFilters
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreSearchGetResultsRequest) GetFiltersOk() (*CoreSearchGetResultsRequestFilters, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *CoreSearchGetResultsRequest) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given CoreSearchGetResultsRequestFilters and assigns it to the Filters field.
func (o *CoreSearchGetResultsRequest) SetFilters(v CoreSearchGetResultsRequestFilters) {
	o.Filters = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *CoreSearchGetResultsRequest) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreSearchGetResultsRequest) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *CoreSearchGetResultsRequest) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *CoreSearchGetResultsRequest) SetPage(v int32) {
	o.Page = &v
}

// GetQuery returns the Query field value
func (o *CoreSearchGetResultsRequest) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *CoreSearchGetResultsRequest) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *CoreSearchGetResultsRequest) SetQuery(v string) {
	o.Query = v
}

func (o CoreSearchGetResultsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreSearchGetResultsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	toSerialize["query"] = o.Query
	return toSerialize, nil
}

func (o *CoreSearchGetResultsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"query",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreSearchGetResultsRequest := _CoreSearchGetResultsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreSearchGetResultsRequest)

	if err != nil {
		return err
	}

	*o = CoreSearchGetResultsRequest(varCoreSearchGetResultsRequest)

	return err
}

type NullableCoreSearchGetResultsRequest struct {
	value *CoreSearchGetResultsRequest
	isSet bool
}

func (v NullableCoreSearchGetResultsRequest) Get() *CoreSearchGetResultsRequest {
	return v.value
}

func (v *NullableCoreSearchGetResultsRequest) Set(val *CoreSearchGetResultsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreSearchGetResultsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreSearchGetResultsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreSearchGetResultsRequest(val *CoreSearchGetResultsRequest) *NullableCoreSearchGetResultsRequest {
	return &NullableCoreSearchGetResultsRequest{value: val, isSet: true}
}

func (v NullableCoreSearchGetResultsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreSearchGetResultsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


