/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCourseGetCourseContentItems200ResponseContentItemsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCourseGetCourseContentItems200ResponseContentItemsInner{}

// CoreCourseGetCourseContentItems200ResponseContentItemsInner struct for CoreCourseGetCourseContentItems200ResponseContentItemsInner
type CoreCourseGetCourseContentItems200ResponseContentItemsInner struct {
	// The archetype of the module exposing the content item
	Archetype *string `json:"archetype,omitempty"`
	// The name of the component exposing the content item
	Componentname *string `json:"componentname,omitempty"`
	// Has the user favourited the content item
	Favourite *bool `json:"favourite,omitempty"`
	// Html description / help for the content item
	Help *string `json:"help,omitempty"`
	// Html containing the icon for the content item
	Icon *string `json:"icon,omitempty"`
	// The id of the content item
	Id *int32 `json:"id,omitempty"`
	// If this item was pulled from the old callback and has no item id.
	Legacyitem *bool `json:"legacyitem,omitempty"`
	// The link to the content item creation page
	Link *string `json:"link,omitempty"`
	// Name of the content item
	Name *string `json:"name,omitempty"`
	// The purpose of the component exposing the content item
	Purpose *string `json:"purpose,omitempty"`
	// Has this item been recommended
	Recommended *bool `json:"recommended,omitempty"`
	// The string title of the content item, human readable
	Title *string `json:"title,omitempty"`
}

// NewCoreCourseGetCourseContentItems200ResponseContentItemsInner instantiates a new CoreCourseGetCourseContentItems200ResponseContentItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCourseGetCourseContentItems200ResponseContentItemsInner() *CoreCourseGetCourseContentItems200ResponseContentItemsInner {
	this := CoreCourseGetCourseContentItems200ResponseContentItemsInner{}
	return &this
}

// NewCoreCourseGetCourseContentItems200ResponseContentItemsInnerWithDefaults instantiates a new CoreCourseGetCourseContentItems200ResponseContentItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCourseGetCourseContentItems200ResponseContentItemsInnerWithDefaults() *CoreCourseGetCourseContentItems200ResponseContentItemsInner {
	this := CoreCourseGetCourseContentItems200ResponseContentItemsInner{}
	return &this
}

// GetArchetype returns the Archetype field value if set, zero value otherwise.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetArchetype() string {
	if o == nil || IsNil(o.Archetype) {
		var ret string
		return ret
	}
	return *o.Archetype
}

// GetArchetypeOk returns a tuple with the Archetype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetArchetypeOk() (*string, bool) {
	if o == nil || IsNil(o.Archetype) {
		return nil, false
	}
	return o.Archetype, true
}

// HasArchetype returns a boolean if a field has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) HasArchetype() bool {
	if o != nil && !IsNil(o.Archetype) {
		return true
	}

	return false
}

// SetArchetype gets a reference to the given string and assigns it to the Archetype field.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) SetArchetype(v string) {
	o.Archetype = &v
}

// GetComponentname returns the Componentname field value if set, zero value otherwise.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetComponentname() string {
	if o == nil || IsNil(o.Componentname) {
		var ret string
		return ret
	}
	return *o.Componentname
}

// GetComponentnameOk returns a tuple with the Componentname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetComponentnameOk() (*string, bool) {
	if o == nil || IsNil(o.Componentname) {
		return nil, false
	}
	return o.Componentname, true
}

// HasComponentname returns a boolean if a field has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) HasComponentname() bool {
	if o != nil && !IsNil(o.Componentname) {
		return true
	}

	return false
}

// SetComponentname gets a reference to the given string and assigns it to the Componentname field.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) SetComponentname(v string) {
	o.Componentname = &v
}

// GetFavourite returns the Favourite field value if set, zero value otherwise.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetFavourite() bool {
	if o == nil || IsNil(o.Favourite) {
		var ret bool
		return ret
	}
	return *o.Favourite
}

// GetFavouriteOk returns a tuple with the Favourite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetFavouriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favourite) {
		return nil, false
	}
	return o.Favourite, true
}

// HasFavourite returns a boolean if a field has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) HasFavourite() bool {
	if o != nil && !IsNil(o.Favourite) {
		return true
	}

	return false
}

// SetFavourite gets a reference to the given bool and assigns it to the Favourite field.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) SetFavourite(v bool) {
	o.Favourite = &v
}

// GetHelp returns the Help field value if set, zero value otherwise.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetHelp() string {
	if o == nil || IsNil(o.Help) {
		var ret string
		return ret
	}
	return *o.Help
}

// GetHelpOk returns a tuple with the Help field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetHelpOk() (*string, bool) {
	if o == nil || IsNil(o.Help) {
		return nil, false
	}
	return o.Help, true
}

// HasHelp returns a boolean if a field has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) HasHelp() bool {
	if o != nil && !IsNil(o.Help) {
		return true
	}

	return false
}

// SetHelp gets a reference to the given string and assigns it to the Help field.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) SetHelp(v string) {
	o.Help = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) SetIcon(v string) {
	o.Icon = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) SetId(v int32) {
	o.Id = &v
}

// GetLegacyitem returns the Legacyitem field value if set, zero value otherwise.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetLegacyitem() bool {
	if o == nil || IsNil(o.Legacyitem) {
		var ret bool
		return ret
	}
	return *o.Legacyitem
}

// GetLegacyitemOk returns a tuple with the Legacyitem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetLegacyitemOk() (*bool, bool) {
	if o == nil || IsNil(o.Legacyitem) {
		return nil, false
	}
	return o.Legacyitem, true
}

// HasLegacyitem returns a boolean if a field has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) HasLegacyitem() bool {
	if o != nil && !IsNil(o.Legacyitem) {
		return true
	}

	return false
}

// SetLegacyitem gets a reference to the given bool and assigns it to the Legacyitem field.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) SetLegacyitem(v bool) {
	o.Legacyitem = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) SetLink(v string) {
	o.Link = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) SetName(v string) {
	o.Name = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetPurpose() string {
	if o == nil || IsNil(o.Purpose) {
		var ret string
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetPurposeOk() (*string, bool) {
	if o == nil || IsNil(o.Purpose) {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) HasPurpose() bool {
	if o != nil && !IsNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given string and assigns it to the Purpose field.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) SetPurpose(v string) {
	o.Purpose = &v
}

// GetRecommended returns the Recommended field value if set, zero value otherwise.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetRecommended() bool {
	if o == nil || IsNil(o.Recommended) {
		var ret bool
		return ret
	}
	return *o.Recommended
}

// GetRecommendedOk returns a tuple with the Recommended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetRecommendedOk() (*bool, bool) {
	if o == nil || IsNil(o.Recommended) {
		return nil, false
	}
	return o.Recommended, true
}

// HasRecommended returns a boolean if a field has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) HasRecommended() bool {
	if o != nil && !IsNil(o.Recommended) {
		return true
	}

	return false
}

// SetRecommended gets a reference to the given bool and assigns it to the Recommended field.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) SetRecommended(v bool) {
	o.Recommended = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CoreCourseGetCourseContentItems200ResponseContentItemsInner) SetTitle(v string) {
	o.Title = &v
}

func (o CoreCourseGetCourseContentItems200ResponseContentItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCourseGetCourseContentItems200ResponseContentItemsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Archetype) {
		toSerialize["archetype"] = o.Archetype
	}
	if !IsNil(o.Componentname) {
		toSerialize["componentname"] = o.Componentname
	}
	if !IsNil(o.Favourite) {
		toSerialize["favourite"] = o.Favourite
	}
	if !IsNil(o.Help) {
		toSerialize["help"] = o.Help
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Legacyitem) {
		toSerialize["legacyitem"] = o.Legacyitem
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	if !IsNil(o.Recommended) {
		toSerialize["recommended"] = o.Recommended
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableCoreCourseGetCourseContentItems200ResponseContentItemsInner struct {
	value *CoreCourseGetCourseContentItems200ResponseContentItemsInner
	isSet bool
}

func (v NullableCoreCourseGetCourseContentItems200ResponseContentItemsInner) Get() *CoreCourseGetCourseContentItems200ResponseContentItemsInner {
	return v.value
}

func (v *NullableCoreCourseGetCourseContentItems200ResponseContentItemsInner) Set(val *CoreCourseGetCourseContentItems200ResponseContentItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCourseGetCourseContentItems200ResponseContentItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCourseGetCourseContentItems200ResponseContentItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCourseGetCourseContentItems200ResponseContentItemsInner(val *CoreCourseGetCourseContentItems200ResponseContentItemsInner) *NullableCoreCourseGetCourseContentItems200ResponseContentItemsInner {
	return &NullableCoreCourseGetCourseContentItems200ResponseContentItemsInner{value: val, isSet: true}
}

func (v NullableCoreCourseGetCourseContentItems200ResponseContentItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCourseGetCourseContentItems200ResponseContentItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


