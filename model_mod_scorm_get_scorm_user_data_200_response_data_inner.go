/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModScormGetScormUserData200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModScormGetScormUserData200ResponseDataInner{}

// ModScormGetScormUserData200ResponseDataInner SCO data
type ModScormGetScormUserData200ResponseDataInner struct {
	Defaultdata []ModScormGetScormUserData200ResponseDataInnerDefaultdataInner `json:"defaultdata,omitempty"`
	// sco id
	Scoid *int32 `json:"scoid,omitempty"`
	Userdata []ModScormGetScormUserData200ResponseDataInnerDefaultdataInner `json:"userdata,omitempty"`
}

// NewModScormGetScormUserData200ResponseDataInner instantiates a new ModScormGetScormUserData200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModScormGetScormUserData200ResponseDataInner() *ModScormGetScormUserData200ResponseDataInner {
	this := ModScormGetScormUserData200ResponseDataInner{}
	return &this
}

// NewModScormGetScormUserData200ResponseDataInnerWithDefaults instantiates a new ModScormGetScormUserData200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModScormGetScormUserData200ResponseDataInnerWithDefaults() *ModScormGetScormUserData200ResponseDataInner {
	this := ModScormGetScormUserData200ResponseDataInner{}
	return &this
}

// GetDefaultdata returns the Defaultdata field value if set, zero value otherwise.
func (o *ModScormGetScormUserData200ResponseDataInner) GetDefaultdata() []ModScormGetScormUserData200ResponseDataInnerDefaultdataInner {
	if o == nil || IsNil(o.Defaultdata) {
		var ret []ModScormGetScormUserData200ResponseDataInnerDefaultdataInner
		return ret
	}
	return o.Defaultdata
}

// GetDefaultdataOk returns a tuple with the Defaultdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModScormGetScormUserData200ResponseDataInner) GetDefaultdataOk() ([]ModScormGetScormUserData200ResponseDataInnerDefaultdataInner, bool) {
	if o == nil || IsNil(o.Defaultdata) {
		return nil, false
	}
	return o.Defaultdata, true
}

// HasDefaultdata returns a boolean if a field has been set.
func (o *ModScormGetScormUserData200ResponseDataInner) HasDefaultdata() bool {
	if o != nil && !IsNil(o.Defaultdata) {
		return true
	}

	return false
}

// SetDefaultdata gets a reference to the given []ModScormGetScormUserData200ResponseDataInnerDefaultdataInner and assigns it to the Defaultdata field.
func (o *ModScormGetScormUserData200ResponseDataInner) SetDefaultdata(v []ModScormGetScormUserData200ResponseDataInnerDefaultdataInner) {
	o.Defaultdata = v
}

// GetScoid returns the Scoid field value if set, zero value otherwise.
func (o *ModScormGetScormUserData200ResponseDataInner) GetScoid() int32 {
	if o == nil || IsNil(o.Scoid) {
		var ret int32
		return ret
	}
	return *o.Scoid
}

// GetScoidOk returns a tuple with the Scoid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModScormGetScormUserData200ResponseDataInner) GetScoidOk() (*int32, bool) {
	if o == nil || IsNil(o.Scoid) {
		return nil, false
	}
	return o.Scoid, true
}

// HasScoid returns a boolean if a field has been set.
func (o *ModScormGetScormUserData200ResponseDataInner) HasScoid() bool {
	if o != nil && !IsNil(o.Scoid) {
		return true
	}

	return false
}

// SetScoid gets a reference to the given int32 and assigns it to the Scoid field.
func (o *ModScormGetScormUserData200ResponseDataInner) SetScoid(v int32) {
	o.Scoid = &v
}

// GetUserdata returns the Userdata field value if set, zero value otherwise.
func (o *ModScormGetScormUserData200ResponseDataInner) GetUserdata() []ModScormGetScormUserData200ResponseDataInnerDefaultdataInner {
	if o == nil || IsNil(o.Userdata) {
		var ret []ModScormGetScormUserData200ResponseDataInnerDefaultdataInner
		return ret
	}
	return o.Userdata
}

// GetUserdataOk returns a tuple with the Userdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModScormGetScormUserData200ResponseDataInner) GetUserdataOk() ([]ModScormGetScormUserData200ResponseDataInnerDefaultdataInner, bool) {
	if o == nil || IsNil(o.Userdata) {
		return nil, false
	}
	return o.Userdata, true
}

// HasUserdata returns a boolean if a field has been set.
func (o *ModScormGetScormUserData200ResponseDataInner) HasUserdata() bool {
	if o != nil && !IsNil(o.Userdata) {
		return true
	}

	return false
}

// SetUserdata gets a reference to the given []ModScormGetScormUserData200ResponseDataInnerDefaultdataInner and assigns it to the Userdata field.
func (o *ModScormGetScormUserData200ResponseDataInner) SetUserdata(v []ModScormGetScormUserData200ResponseDataInnerDefaultdataInner) {
	o.Userdata = v
}

func (o ModScormGetScormUserData200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModScormGetScormUserData200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Defaultdata) {
		toSerialize["defaultdata"] = o.Defaultdata
	}
	if !IsNil(o.Scoid) {
		toSerialize["scoid"] = o.Scoid
	}
	if !IsNil(o.Userdata) {
		toSerialize["userdata"] = o.Userdata
	}
	return toSerialize, nil
}

type NullableModScormGetScormUserData200ResponseDataInner struct {
	value *ModScormGetScormUserData200ResponseDataInner
	isSet bool
}

func (v NullableModScormGetScormUserData200ResponseDataInner) Get() *ModScormGetScormUserData200ResponseDataInner {
	return v.value
}

func (v *NullableModScormGetScormUserData200ResponseDataInner) Set(val *ModScormGetScormUserData200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModScormGetScormUserData200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModScormGetScormUserData200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModScormGetScormUserData200ResponseDataInner(val *ModScormGetScormUserData200ResponseDataInner) *NullableModScormGetScormUserData200ResponseDataInner {
	return &NullableModScormGetScormUserData200ResponseDataInner{value: val, isSet: true}
}

func (v NullableModScormGetScormUserData200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModScormGetScormUserData200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


