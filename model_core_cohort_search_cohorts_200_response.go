/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCohortSearchCohorts200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCohortSearchCohorts200Response{}

// CoreCohortSearchCohorts200Response struct for CoreCohortSearchCohorts200Response
type CoreCohortSearchCohorts200Response struct {
	Cohorts []CoreCohortSearchCohorts200ResponseCohortsInner `json:"cohorts"`
}

type _CoreCohortSearchCohorts200Response CoreCohortSearchCohorts200Response

// NewCoreCohortSearchCohorts200Response instantiates a new CoreCohortSearchCohorts200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCohortSearchCohorts200Response(cohorts []CoreCohortSearchCohorts200ResponseCohortsInner) *CoreCohortSearchCohorts200Response {
	this := CoreCohortSearchCohorts200Response{}
	this.Cohorts = cohorts
	return &this
}

// NewCoreCohortSearchCohorts200ResponseWithDefaults instantiates a new CoreCohortSearchCohorts200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCohortSearchCohorts200ResponseWithDefaults() *CoreCohortSearchCohorts200Response {
	this := CoreCohortSearchCohorts200Response{}
	return &this
}

// GetCohorts returns the Cohorts field value
func (o *CoreCohortSearchCohorts200Response) GetCohorts() []CoreCohortSearchCohorts200ResponseCohortsInner {
	if o == nil {
		var ret []CoreCohortSearchCohorts200ResponseCohortsInner
		return ret
	}

	return o.Cohorts
}

// GetCohortsOk returns a tuple with the Cohorts field value
// and a boolean to check if the value has been set.
func (o *CoreCohortSearchCohorts200Response) GetCohortsOk() ([]CoreCohortSearchCohorts200ResponseCohortsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cohorts, true
}

// SetCohorts sets field value
func (o *CoreCohortSearchCohorts200Response) SetCohorts(v []CoreCohortSearchCohorts200ResponseCohortsInner) {
	o.Cohorts = v
}

func (o CoreCohortSearchCohorts200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCohortSearchCohorts200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cohorts"] = o.Cohorts
	return toSerialize, nil
}

func (o *CoreCohortSearchCohorts200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cohorts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCohortSearchCohorts200Response := _CoreCohortSearchCohorts200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCohortSearchCohorts200Response)

	if err != nil {
		return err
	}

	*o = CoreCohortSearchCohorts200Response(varCoreCohortSearchCohorts200Response)

	return err
}

type NullableCoreCohortSearchCohorts200Response struct {
	value *CoreCohortSearchCohorts200Response
	isSet bool
}

func (v NullableCoreCohortSearchCohorts200Response) Get() *CoreCohortSearchCohorts200Response {
	return v.value
}

func (v *NullableCoreCohortSearchCohorts200Response) Set(val *CoreCohortSearchCohorts200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCohortSearchCohorts200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCohortSearchCohorts200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCohortSearchCohorts200Response(val *CoreCohortSearchCohorts200Response) *NullableCoreCohortSearchCohorts200Response {
	return &NullableCoreCohortSearchCohorts200Response{value: val, isSet: true}
}

func (v NullableCoreCohortSearchCohorts200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCohortSearchCohorts200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


