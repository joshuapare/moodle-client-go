/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreUserDeleteUsersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreUserDeleteUsersRequest{}

// CoreUserDeleteUsersRequest struct for CoreUserDeleteUsersRequest
type CoreUserDeleteUsersRequest struct {
	Userids []map[string]interface{} `json:"userids"`
}

type _CoreUserDeleteUsersRequest CoreUserDeleteUsersRequest

// NewCoreUserDeleteUsersRequest instantiates a new CoreUserDeleteUsersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreUserDeleteUsersRequest(userids []map[string]interface{}) *CoreUserDeleteUsersRequest {
	this := CoreUserDeleteUsersRequest{}
	this.Userids = userids
	return &this
}

// NewCoreUserDeleteUsersRequestWithDefaults instantiates a new CoreUserDeleteUsersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreUserDeleteUsersRequestWithDefaults() *CoreUserDeleteUsersRequest {
	this := CoreUserDeleteUsersRequest{}
	return &this
}

// GetUserids returns the Userids field value
func (o *CoreUserDeleteUsersRequest) GetUserids() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Userids
}

// GetUseridsOk returns a tuple with the Userids field value
// and a boolean to check if the value has been set.
func (o *CoreUserDeleteUsersRequest) GetUseridsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Userids, true
}

// SetUserids sets field value
func (o *CoreUserDeleteUsersRequest) SetUserids(v []map[string]interface{}) {
	o.Userids = v
}

func (o CoreUserDeleteUsersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreUserDeleteUsersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userids"] = o.Userids
	return toSerialize, nil
}

func (o *CoreUserDeleteUsersRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"userids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreUserDeleteUsersRequest := _CoreUserDeleteUsersRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreUserDeleteUsersRequest)

	if err != nil {
		return err
	}

	*o = CoreUserDeleteUsersRequest(varCoreUserDeleteUsersRequest)

	return err
}

type NullableCoreUserDeleteUsersRequest struct {
	value *CoreUserDeleteUsersRequest
	isSet bool
}

func (v NullableCoreUserDeleteUsersRequest) Get() *CoreUserDeleteUsersRequest {
	return v.value
}

func (v *NullableCoreUserDeleteUsersRequest) Set(val *CoreUserDeleteUsersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreUserDeleteUsersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreUserDeleteUsersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreUserDeleteUsersRequest(val *CoreUserDeleteUsersRequest) *NullableCoreUserDeleteUsersRequest {
	return &NullableCoreUserDeleteUsersRequest{value: val, isSet: true}
}

func (v NullableCoreUserDeleteUsersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreUserDeleteUsersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


