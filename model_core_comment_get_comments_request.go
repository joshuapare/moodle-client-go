/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCommentGetCommentsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCommentGetCommentsRequest{}

// CoreCommentGetCommentsRequest struct for CoreCommentGetCommentsRequest
type CoreCommentGetCommentsRequest struct {
	// string comment area
	Area *string `json:"area,omitempty"`
	// component
	Component string `json:"component"`
	// contextlevel system, course, user...
	Contextlevel string `json:"contextlevel"`
	// the Instance id of item associated with the context level
	Instanceid int32 `json:"instanceid"`
	// associated id
	Itemid int32 `json:"itemid"`
	// page number (0 based)
	Page *int32 `json:"page,omitempty"`
	// Sort direction: ASC or DESC
	Sortdirection *string `json:"sortdirection,omitempty"`
}

type _CoreCommentGetCommentsRequest CoreCommentGetCommentsRequest

// NewCoreCommentGetCommentsRequest instantiates a new CoreCommentGetCommentsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCommentGetCommentsRequest(component string, contextlevel string, instanceid int32, itemid int32) *CoreCommentGetCommentsRequest {
	this := CoreCommentGetCommentsRequest{}
	var area string = ""
	this.Area = &area
	this.Component = component
	this.Contextlevel = contextlevel
	this.Instanceid = instanceid
	this.Itemid = itemid
	var page int32 = 0
	this.Page = &page
	var sortdirection string = "DESC"
	this.Sortdirection = &sortdirection
	return &this
}

// NewCoreCommentGetCommentsRequestWithDefaults instantiates a new CoreCommentGetCommentsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCommentGetCommentsRequestWithDefaults() *CoreCommentGetCommentsRequest {
	this := CoreCommentGetCommentsRequest{}
	var area string = ""
	this.Area = &area
	var instanceid int32 = null
	this.Instanceid = instanceid
	var page int32 = 0
	this.Page = &page
	var sortdirection string = "DESC"
	this.Sortdirection = &sortdirection
	return &this
}

// GetArea returns the Area field value if set, zero value otherwise.
func (o *CoreCommentGetCommentsRequest) GetArea() string {
	if o == nil || IsNil(o.Area) {
		var ret string
		return ret
	}
	return *o.Area
}

// GetAreaOk returns a tuple with the Area field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCommentGetCommentsRequest) GetAreaOk() (*string, bool) {
	if o == nil || IsNil(o.Area) {
		return nil, false
	}
	return o.Area, true
}

// HasArea returns a boolean if a field has been set.
func (o *CoreCommentGetCommentsRequest) HasArea() bool {
	if o != nil && !IsNil(o.Area) {
		return true
	}

	return false
}

// SetArea gets a reference to the given string and assigns it to the Area field.
func (o *CoreCommentGetCommentsRequest) SetArea(v string) {
	o.Area = &v
}

// GetComponent returns the Component field value
func (o *CoreCommentGetCommentsRequest) GetComponent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Component
}

// GetComponentOk returns a tuple with the Component field value
// and a boolean to check if the value has been set.
func (o *CoreCommentGetCommentsRequest) GetComponentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Component, true
}

// SetComponent sets field value
func (o *CoreCommentGetCommentsRequest) SetComponent(v string) {
	o.Component = v
}

// GetContextlevel returns the Contextlevel field value
func (o *CoreCommentGetCommentsRequest) GetContextlevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Contextlevel
}

// GetContextlevelOk returns a tuple with the Contextlevel field value
// and a boolean to check if the value has been set.
func (o *CoreCommentGetCommentsRequest) GetContextlevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contextlevel, true
}

// SetContextlevel sets field value
func (o *CoreCommentGetCommentsRequest) SetContextlevel(v string) {
	o.Contextlevel = v
}

// GetInstanceid returns the Instanceid field value
func (o *CoreCommentGetCommentsRequest) GetInstanceid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Instanceid
}

// GetInstanceidOk returns a tuple with the Instanceid field value
// and a boolean to check if the value has been set.
func (o *CoreCommentGetCommentsRequest) GetInstanceidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instanceid, true
}

// SetInstanceid sets field value
func (o *CoreCommentGetCommentsRequest) SetInstanceid(v int32) {
	o.Instanceid = v
}

// GetItemid returns the Itemid field value
func (o *CoreCommentGetCommentsRequest) GetItemid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Itemid
}

// GetItemidOk returns a tuple with the Itemid field value
// and a boolean to check if the value has been set.
func (o *CoreCommentGetCommentsRequest) GetItemidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Itemid, true
}

// SetItemid sets field value
func (o *CoreCommentGetCommentsRequest) SetItemid(v int32) {
	o.Itemid = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *CoreCommentGetCommentsRequest) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCommentGetCommentsRequest) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *CoreCommentGetCommentsRequest) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *CoreCommentGetCommentsRequest) SetPage(v int32) {
	o.Page = &v
}

// GetSortdirection returns the Sortdirection field value if set, zero value otherwise.
func (o *CoreCommentGetCommentsRequest) GetSortdirection() string {
	if o == nil || IsNil(o.Sortdirection) {
		var ret string
		return ret
	}
	return *o.Sortdirection
}

// GetSortdirectionOk returns a tuple with the Sortdirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCommentGetCommentsRequest) GetSortdirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Sortdirection) {
		return nil, false
	}
	return o.Sortdirection, true
}

// HasSortdirection returns a boolean if a field has been set.
func (o *CoreCommentGetCommentsRequest) HasSortdirection() bool {
	if o != nil && !IsNil(o.Sortdirection) {
		return true
	}

	return false
}

// SetSortdirection gets a reference to the given string and assigns it to the Sortdirection field.
func (o *CoreCommentGetCommentsRequest) SetSortdirection(v string) {
	o.Sortdirection = &v
}

func (o CoreCommentGetCommentsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCommentGetCommentsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Area) {
		toSerialize["area"] = o.Area
	}
	toSerialize["component"] = o.Component
	toSerialize["contextlevel"] = o.Contextlevel
	toSerialize["instanceid"] = o.Instanceid
	toSerialize["itemid"] = o.Itemid
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.Sortdirection) {
		toSerialize["sortdirection"] = o.Sortdirection
	}
	return toSerialize, nil
}

func (o *CoreCommentGetCommentsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"component",
		"contextlevel",
		"instanceid",
		"itemid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCommentGetCommentsRequest := _CoreCommentGetCommentsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCommentGetCommentsRequest)

	if err != nil {
		return err
	}

	*o = CoreCommentGetCommentsRequest(varCoreCommentGetCommentsRequest)

	return err
}

type NullableCoreCommentGetCommentsRequest struct {
	value *CoreCommentGetCommentsRequest
	isSet bool
}

func (v NullableCoreCommentGetCommentsRequest) Get() *CoreCommentGetCommentsRequest {
	return v.value
}

func (v *NullableCoreCommentGetCommentsRequest) Set(val *CoreCommentGetCommentsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCommentGetCommentsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCommentGetCommentsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCommentGetCommentsRequest(val *CoreCommentGetCommentsRequest) *NullableCoreCommentGetCommentsRequest {
	return &NullableCoreCommentGetCommentsRequest{value: val, isSet: true}
}

func (v NullableCoreCommentGetCommentsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCommentGetCommentsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


