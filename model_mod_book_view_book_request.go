/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModBookViewBookRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModBookViewBookRequest{}

// ModBookViewBookRequest struct for ModBookViewBookRequest
type ModBookViewBookRequest struct {
	// book instance id
	Bookid int32 `json:"bookid"`
	// chapter id
	Chapterid *int32 `json:"chapterid,omitempty"`
}

type _ModBookViewBookRequest ModBookViewBookRequest

// NewModBookViewBookRequest instantiates a new ModBookViewBookRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModBookViewBookRequest(bookid int32) *ModBookViewBookRequest {
	this := ModBookViewBookRequest{}
	this.Bookid = bookid
	var chapterid int32 = 0
	this.Chapterid = &chapterid
	return &this
}

// NewModBookViewBookRequestWithDefaults instantiates a new ModBookViewBookRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModBookViewBookRequestWithDefaults() *ModBookViewBookRequest {
	this := ModBookViewBookRequest{}
	var bookid int32 = null
	this.Bookid = bookid
	var chapterid int32 = 0
	this.Chapterid = &chapterid
	return &this
}

// GetBookid returns the Bookid field value
func (o *ModBookViewBookRequest) GetBookid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Bookid
}

// GetBookidOk returns a tuple with the Bookid field value
// and a boolean to check if the value has been set.
func (o *ModBookViewBookRequest) GetBookidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bookid, true
}

// SetBookid sets field value
func (o *ModBookViewBookRequest) SetBookid(v int32) {
	o.Bookid = v
}

// GetChapterid returns the Chapterid field value if set, zero value otherwise.
func (o *ModBookViewBookRequest) GetChapterid() int32 {
	if o == nil || IsNil(o.Chapterid) {
		var ret int32
		return ret
	}
	return *o.Chapterid
}

// GetChapteridOk returns a tuple with the Chapterid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBookViewBookRequest) GetChapteridOk() (*int32, bool) {
	if o == nil || IsNil(o.Chapterid) {
		return nil, false
	}
	return o.Chapterid, true
}

// HasChapterid returns a boolean if a field has been set.
func (o *ModBookViewBookRequest) HasChapterid() bool {
	if o != nil && !IsNil(o.Chapterid) {
		return true
	}

	return false
}

// SetChapterid gets a reference to the given int32 and assigns it to the Chapterid field.
func (o *ModBookViewBookRequest) SetChapterid(v int32) {
	o.Chapterid = &v
}

func (o ModBookViewBookRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModBookViewBookRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bookid"] = o.Bookid
	if !IsNil(o.Chapterid) {
		toSerialize["chapterid"] = o.Chapterid
	}
	return toSerialize, nil
}

func (o *ModBookViewBookRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bookid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModBookViewBookRequest := _ModBookViewBookRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModBookViewBookRequest)

	if err != nil {
		return err
	}

	*o = ModBookViewBookRequest(varModBookViewBookRequest)

	return err
}

type NullableModBookViewBookRequest struct {
	value *ModBookViewBookRequest
	isSet bool
}

func (v NullableModBookViewBookRequest) Get() *ModBookViewBookRequest {
	return v.value
}

func (v *NullableModBookViewBookRequest) Set(val *ModBookViewBookRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModBookViewBookRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModBookViewBookRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModBookViewBookRequest(val *ModBookViewBookRequest) *NullableModBookViewBookRequest {
	return &NullableModBookViewBookRequest{value: val, isSet: true}
}

func (v NullableModBookViewBookRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModBookViewBookRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


