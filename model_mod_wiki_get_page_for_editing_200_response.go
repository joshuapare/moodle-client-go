/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModWikiGetPageForEditing200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModWikiGetPageForEditing200Response{}

// ModWikiGetPageForEditing200Response struct for ModWikiGetPageForEditing200Response
type ModWikiGetPageForEditing200Response struct {
	Pagesection ModWikiGetPageForEditing200ResponsePagesection `json:"pagesection"`
}

type _ModWikiGetPageForEditing200Response ModWikiGetPageForEditing200Response

// NewModWikiGetPageForEditing200Response instantiates a new ModWikiGetPageForEditing200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModWikiGetPageForEditing200Response(pagesection ModWikiGetPageForEditing200ResponsePagesection) *ModWikiGetPageForEditing200Response {
	this := ModWikiGetPageForEditing200Response{}
	this.Pagesection = pagesection
	return &this
}

// NewModWikiGetPageForEditing200ResponseWithDefaults instantiates a new ModWikiGetPageForEditing200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModWikiGetPageForEditing200ResponseWithDefaults() *ModWikiGetPageForEditing200Response {
	this := ModWikiGetPageForEditing200Response{}
	return &this
}

// GetPagesection returns the Pagesection field value
func (o *ModWikiGetPageForEditing200Response) GetPagesection() ModWikiGetPageForEditing200ResponsePagesection {
	if o == nil {
		var ret ModWikiGetPageForEditing200ResponsePagesection
		return ret
	}

	return o.Pagesection
}

// GetPagesectionOk returns a tuple with the Pagesection field value
// and a boolean to check if the value has been set.
func (o *ModWikiGetPageForEditing200Response) GetPagesectionOk() (*ModWikiGetPageForEditing200ResponsePagesection, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagesection, true
}

// SetPagesection sets field value
func (o *ModWikiGetPageForEditing200Response) SetPagesection(v ModWikiGetPageForEditing200ResponsePagesection) {
	o.Pagesection = v
}

func (o ModWikiGetPageForEditing200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModWikiGetPageForEditing200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pagesection"] = o.Pagesection
	return toSerialize, nil
}

func (o *ModWikiGetPageForEditing200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pagesection",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModWikiGetPageForEditing200Response := _ModWikiGetPageForEditing200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModWikiGetPageForEditing200Response)

	if err != nil {
		return err
	}

	*o = ModWikiGetPageForEditing200Response(varModWikiGetPageForEditing200Response)

	return err
}

type NullableModWikiGetPageForEditing200Response struct {
	value *ModWikiGetPageForEditing200Response
	isSet bool
}

func (v NullableModWikiGetPageForEditing200Response) Get() *ModWikiGetPageForEditing200Response {
	return v.value
}

func (v *NullableModWikiGetPageForEditing200Response) Set(val *ModWikiGetPageForEditing200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableModWikiGetPageForEditing200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableModWikiGetPageForEditing200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModWikiGetPageForEditing200Response(val *ModWikiGetPageForEditing200Response) *NullableModWikiGetPageForEditing200Response {
	return &NullableModWikiGetPageForEditing200Response{value: val, isSet: true}
}

func (v NullableModWikiGetPageForEditing200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModWikiGetPageForEditing200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


