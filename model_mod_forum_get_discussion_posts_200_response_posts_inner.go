/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModForumGetDiscussionPosts200ResponsePostsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumGetDiscussionPosts200ResponsePostsInner{}

// ModForumGetDiscussionPosts200ResponsePostsInner struct for ModForumGetDiscussionPosts200ResponsePostsInner
type ModForumGetDiscussionPosts200ResponsePostsInner struct {
	Attachments []ModForumGetDiscussionPost200ResponsePostAttachmentsInner `json:"attachments,omitempty"`
	Author *ModForumGetDiscussionPost200ResponsePostAuthor `json:"author,omitempty"`
	Capabilities *ModForumGetDiscussionPost200ResponsePostCapabilities `json:"capabilities,omitempty"`
	// charcount
	Charcount *int32 `json:"charcount,omitempty"`
	// discussionid
	Discussionid *int32 `json:"discussionid,omitempty"`
	// hasparent
	Hasparent *bool `json:"hasparent,omitempty"`
	// haswordcount
	Haswordcount *bool `json:"haswordcount,omitempty"`
	Html *ModForumGetDiscussionPost200ResponsePostHtml `json:"html,omitempty"`
	// id
	Id *int32 `json:"id,omitempty"`
	// isdeleted
	Isdeleted *bool `json:"isdeleted,omitempty"`
	// isprivatereply
	Isprivatereply *bool `json:"isprivatereply,omitempty"`
	// message
	Message *string `json:"message,omitempty"`
	// message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Messageformat *int32 `json:"messageformat,omitempty"`
	Messageinlinefiles []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner `json:"messageinlinefiles,omitempty"`
	// parentid
	Parentid *int32 `json:"parentid,omitempty"`
	// replysubject
	Replysubject *string `json:"replysubject,omitempty"`
	// subject
	Subject *string `json:"subject,omitempty"`
	Tags []ModForumGetDiscussionPost200ResponsePostTagsInner `json:"tags,omitempty"`
	// timecreated
	Timecreated *int32 `json:"timecreated,omitempty"`
	// timemodified
	Timemodified *int32 `json:"timemodified,omitempty"`
	// unread
	Unread *bool `json:"unread,omitempty"`
	Urls *ModForumGetDiscussionPost200ResponsePostUrls `json:"urls,omitempty"`
	// wordcount
	Wordcount *int32 `json:"wordcount,omitempty"`
}

// NewModForumGetDiscussionPosts200ResponsePostsInner instantiates a new ModForumGetDiscussionPosts200ResponsePostsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumGetDiscussionPosts200ResponsePostsInner() *ModForumGetDiscussionPosts200ResponsePostsInner {
	this := ModForumGetDiscussionPosts200ResponsePostsInner{}
	return &this
}

// NewModForumGetDiscussionPosts200ResponsePostsInnerWithDefaults instantiates a new ModForumGetDiscussionPosts200ResponsePostsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumGetDiscussionPosts200ResponsePostsInnerWithDefaults() *ModForumGetDiscussionPosts200ResponsePostsInner {
	this := ModForumGetDiscussionPosts200ResponsePostsInner{}
	return &this
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetAttachments() []ModForumGetDiscussionPost200ResponsePostAttachmentsInner {
	if o == nil || IsNil(o.Attachments) {
		var ret []ModForumGetDiscussionPost200ResponsePostAttachmentsInner
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetAttachmentsOk() ([]ModForumGetDiscussionPost200ResponsePostAttachmentsInner, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []ModForumGetDiscussionPost200ResponsePostAttachmentsInner and assigns it to the Attachments field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetAttachments(v []ModForumGetDiscussionPost200ResponsePostAttachmentsInner) {
	o.Attachments = v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetAuthor() ModForumGetDiscussionPost200ResponsePostAuthor {
	if o == nil || IsNil(o.Author) {
		var ret ModForumGetDiscussionPost200ResponsePostAuthor
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetAuthorOk() (*ModForumGetDiscussionPost200ResponsePostAuthor, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given ModForumGetDiscussionPost200ResponsePostAuthor and assigns it to the Author field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetAuthor(v ModForumGetDiscussionPost200ResponsePostAuthor) {
	o.Author = &v
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetCapabilities() ModForumGetDiscussionPost200ResponsePostCapabilities {
	if o == nil || IsNil(o.Capabilities) {
		var ret ModForumGetDiscussionPost200ResponsePostCapabilities
		return ret
	}
	return *o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetCapabilitiesOk() (*ModForumGetDiscussionPost200ResponsePostCapabilities, bool) {
	if o == nil || IsNil(o.Capabilities) {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasCapabilities() bool {
	if o != nil && !IsNil(o.Capabilities) {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given ModForumGetDiscussionPost200ResponsePostCapabilities and assigns it to the Capabilities field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetCapabilities(v ModForumGetDiscussionPost200ResponsePostCapabilities) {
	o.Capabilities = &v
}

// GetCharcount returns the Charcount field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetCharcount() int32 {
	if o == nil || IsNil(o.Charcount) {
		var ret int32
		return ret
	}
	return *o.Charcount
}

// GetCharcountOk returns a tuple with the Charcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetCharcountOk() (*int32, bool) {
	if o == nil || IsNil(o.Charcount) {
		return nil, false
	}
	return o.Charcount, true
}

// HasCharcount returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasCharcount() bool {
	if o != nil && !IsNil(o.Charcount) {
		return true
	}

	return false
}

// SetCharcount gets a reference to the given int32 and assigns it to the Charcount field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetCharcount(v int32) {
	o.Charcount = &v
}

// GetDiscussionid returns the Discussionid field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetDiscussionid() int32 {
	if o == nil || IsNil(o.Discussionid) {
		var ret int32
		return ret
	}
	return *o.Discussionid
}

// GetDiscussionidOk returns a tuple with the Discussionid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetDiscussionidOk() (*int32, bool) {
	if o == nil || IsNil(o.Discussionid) {
		return nil, false
	}
	return o.Discussionid, true
}

// HasDiscussionid returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasDiscussionid() bool {
	if o != nil && !IsNil(o.Discussionid) {
		return true
	}

	return false
}

// SetDiscussionid gets a reference to the given int32 and assigns it to the Discussionid field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetDiscussionid(v int32) {
	o.Discussionid = &v
}

// GetHasparent returns the Hasparent field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetHasparent() bool {
	if o == nil || IsNil(o.Hasparent) {
		var ret bool
		return ret
	}
	return *o.Hasparent
}

// GetHasparentOk returns a tuple with the Hasparent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetHasparentOk() (*bool, bool) {
	if o == nil || IsNil(o.Hasparent) {
		return nil, false
	}
	return o.Hasparent, true
}

// HasHasparent returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasHasparent() bool {
	if o != nil && !IsNil(o.Hasparent) {
		return true
	}

	return false
}

// SetHasparent gets a reference to the given bool and assigns it to the Hasparent field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetHasparent(v bool) {
	o.Hasparent = &v
}

// GetHaswordcount returns the Haswordcount field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetHaswordcount() bool {
	if o == nil || IsNil(o.Haswordcount) {
		var ret bool
		return ret
	}
	return *o.Haswordcount
}

// GetHaswordcountOk returns a tuple with the Haswordcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetHaswordcountOk() (*bool, bool) {
	if o == nil || IsNil(o.Haswordcount) {
		return nil, false
	}
	return o.Haswordcount, true
}

// HasHaswordcount returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasHaswordcount() bool {
	if o != nil && !IsNil(o.Haswordcount) {
		return true
	}

	return false
}

// SetHaswordcount gets a reference to the given bool and assigns it to the Haswordcount field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetHaswordcount(v bool) {
	o.Haswordcount = &v
}

// GetHtml returns the Html field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetHtml() ModForumGetDiscussionPost200ResponsePostHtml {
	if o == nil || IsNil(o.Html) {
		var ret ModForumGetDiscussionPost200ResponsePostHtml
		return ret
	}
	return *o.Html
}

// GetHtmlOk returns a tuple with the Html field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetHtmlOk() (*ModForumGetDiscussionPost200ResponsePostHtml, bool) {
	if o == nil || IsNil(o.Html) {
		return nil, false
	}
	return o.Html, true
}

// HasHtml returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasHtml() bool {
	if o != nil && !IsNil(o.Html) {
		return true
	}

	return false
}

// SetHtml gets a reference to the given ModForumGetDiscussionPost200ResponsePostHtml and assigns it to the Html field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetHtml(v ModForumGetDiscussionPost200ResponsePostHtml) {
	o.Html = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetId(v int32) {
	o.Id = &v
}

// GetIsdeleted returns the Isdeleted field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetIsdeleted() bool {
	if o == nil || IsNil(o.Isdeleted) {
		var ret bool
		return ret
	}
	return *o.Isdeleted
}

// GetIsdeletedOk returns a tuple with the Isdeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetIsdeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Isdeleted) {
		return nil, false
	}
	return o.Isdeleted, true
}

// HasIsdeleted returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasIsdeleted() bool {
	if o != nil && !IsNil(o.Isdeleted) {
		return true
	}

	return false
}

// SetIsdeleted gets a reference to the given bool and assigns it to the Isdeleted field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetIsdeleted(v bool) {
	o.Isdeleted = &v
}

// GetIsprivatereply returns the Isprivatereply field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetIsprivatereply() bool {
	if o == nil || IsNil(o.Isprivatereply) {
		var ret bool
		return ret
	}
	return *o.Isprivatereply
}

// GetIsprivatereplyOk returns a tuple with the Isprivatereply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetIsprivatereplyOk() (*bool, bool) {
	if o == nil || IsNil(o.Isprivatereply) {
		return nil, false
	}
	return o.Isprivatereply, true
}

// HasIsprivatereply returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasIsprivatereply() bool {
	if o != nil && !IsNil(o.Isprivatereply) {
		return true
	}

	return false
}

// SetIsprivatereply gets a reference to the given bool and assigns it to the Isprivatereply field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetIsprivatereply(v bool) {
	o.Isprivatereply = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetMessage(v string) {
	o.Message = &v
}

// GetMessageformat returns the Messageformat field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetMessageformat() int32 {
	if o == nil || IsNil(o.Messageformat) {
		var ret int32
		return ret
	}
	return *o.Messageformat
}

// GetMessageformatOk returns a tuple with the Messageformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetMessageformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Messageformat) {
		return nil, false
	}
	return o.Messageformat, true
}

// HasMessageformat returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasMessageformat() bool {
	if o != nil && !IsNil(o.Messageformat) {
		return true
	}

	return false
}

// SetMessageformat gets a reference to the given int32 and assigns it to the Messageformat field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetMessageformat(v int32) {
	o.Messageformat = &v
}

// GetMessageinlinefiles returns the Messageinlinefiles field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetMessageinlinefiles() []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner {
	if o == nil || IsNil(o.Messageinlinefiles) {
		var ret []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner
		return ret
	}
	return o.Messageinlinefiles
}

// GetMessageinlinefilesOk returns a tuple with the Messageinlinefiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetMessageinlinefilesOk() ([]ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner, bool) {
	if o == nil || IsNil(o.Messageinlinefiles) {
		return nil, false
	}
	return o.Messageinlinefiles, true
}

// HasMessageinlinefiles returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasMessageinlinefiles() bool {
	if o != nil && !IsNil(o.Messageinlinefiles) {
		return true
	}

	return false
}

// SetMessageinlinefiles gets a reference to the given []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner and assigns it to the Messageinlinefiles field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetMessageinlinefiles(v []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner) {
	o.Messageinlinefiles = v
}

// GetParentid returns the Parentid field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetParentid() int32 {
	if o == nil || IsNil(o.Parentid) {
		var ret int32
		return ret
	}
	return *o.Parentid
}

// GetParentidOk returns a tuple with the Parentid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetParentidOk() (*int32, bool) {
	if o == nil || IsNil(o.Parentid) {
		return nil, false
	}
	return o.Parentid, true
}

// HasParentid returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasParentid() bool {
	if o != nil && !IsNil(o.Parentid) {
		return true
	}

	return false
}

// SetParentid gets a reference to the given int32 and assigns it to the Parentid field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetParentid(v int32) {
	o.Parentid = &v
}

// GetReplysubject returns the Replysubject field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetReplysubject() string {
	if o == nil || IsNil(o.Replysubject) {
		var ret string
		return ret
	}
	return *o.Replysubject
}

// GetReplysubjectOk returns a tuple with the Replysubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetReplysubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Replysubject) {
		return nil, false
	}
	return o.Replysubject, true
}

// HasReplysubject returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasReplysubject() bool {
	if o != nil && !IsNil(o.Replysubject) {
		return true
	}

	return false
}

// SetReplysubject gets a reference to the given string and assigns it to the Replysubject field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetReplysubject(v string) {
	o.Replysubject = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetSubject(v string) {
	o.Subject = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetTags() []ModForumGetDiscussionPost200ResponsePostTagsInner {
	if o == nil || IsNil(o.Tags) {
		var ret []ModForumGetDiscussionPost200ResponsePostTagsInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetTagsOk() ([]ModForumGetDiscussionPost200ResponsePostTagsInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ModForumGetDiscussionPost200ResponsePostTagsInner and assigns it to the Tags field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetTags(v []ModForumGetDiscussionPost200ResponsePostTagsInner) {
	o.Tags = v
}

// GetTimecreated returns the Timecreated field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetTimecreated() int32 {
	if o == nil || IsNil(o.Timecreated) {
		var ret int32
		return ret
	}
	return *o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetTimecreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecreated) {
		return nil, false
	}
	return o.Timecreated, true
}

// HasTimecreated returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasTimecreated() bool {
	if o != nil && !IsNil(o.Timecreated) {
		return true
	}

	return false
}

// SetTimecreated gets a reference to the given int32 and assigns it to the Timecreated field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetTimecreated(v int32) {
	o.Timecreated = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetUnread returns the Unread field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetUnread() bool {
	if o == nil || IsNil(o.Unread) {
		var ret bool
		return ret
	}
	return *o.Unread
}

// GetUnreadOk returns a tuple with the Unread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetUnreadOk() (*bool, bool) {
	if o == nil || IsNil(o.Unread) {
		return nil, false
	}
	return o.Unread, true
}

// HasUnread returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasUnread() bool {
	if o != nil && !IsNil(o.Unread) {
		return true
	}

	return false
}

// SetUnread gets a reference to the given bool and assigns it to the Unread field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetUnread(v bool) {
	o.Unread = &v
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetUrls() ModForumGetDiscussionPost200ResponsePostUrls {
	if o == nil || IsNil(o.Urls) {
		var ret ModForumGetDiscussionPost200ResponsePostUrls
		return ret
	}
	return *o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetUrlsOk() (*ModForumGetDiscussionPost200ResponsePostUrls, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasUrls() bool {
	if o != nil && !IsNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given ModForumGetDiscussionPost200ResponsePostUrls and assigns it to the Urls field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetUrls(v ModForumGetDiscussionPost200ResponsePostUrls) {
	o.Urls = &v
}

// GetWordcount returns the Wordcount field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetWordcount() int32 {
	if o == nil || IsNil(o.Wordcount) {
		var ret int32
		return ret
	}
	return *o.Wordcount
}

// GetWordcountOk returns a tuple with the Wordcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) GetWordcountOk() (*int32, bool) {
	if o == nil || IsNil(o.Wordcount) {
		return nil, false
	}
	return o.Wordcount, true
}

// HasWordcount returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) HasWordcount() bool {
	if o != nil && !IsNil(o.Wordcount) {
		return true
	}

	return false
}

// SetWordcount gets a reference to the given int32 and assigns it to the Wordcount field.
func (o *ModForumGetDiscussionPosts200ResponsePostsInner) SetWordcount(v int32) {
	o.Wordcount = &v
}

func (o ModForumGetDiscussionPosts200ResponsePostsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumGetDiscussionPosts200ResponsePostsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.Capabilities) {
		toSerialize["capabilities"] = o.Capabilities
	}
	if !IsNil(o.Charcount) {
		toSerialize["charcount"] = o.Charcount
	}
	if !IsNil(o.Discussionid) {
		toSerialize["discussionid"] = o.Discussionid
	}
	if !IsNil(o.Hasparent) {
		toSerialize["hasparent"] = o.Hasparent
	}
	if !IsNil(o.Haswordcount) {
		toSerialize["haswordcount"] = o.Haswordcount
	}
	if !IsNil(o.Html) {
		toSerialize["html"] = o.Html
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Isdeleted) {
		toSerialize["isdeleted"] = o.Isdeleted
	}
	if !IsNil(o.Isprivatereply) {
		toSerialize["isprivatereply"] = o.Isprivatereply
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Messageformat) {
		toSerialize["messageformat"] = o.Messageformat
	}
	if !IsNil(o.Messageinlinefiles) {
		toSerialize["messageinlinefiles"] = o.Messageinlinefiles
	}
	if !IsNil(o.Parentid) {
		toSerialize["parentid"] = o.Parentid
	}
	if !IsNil(o.Replysubject) {
		toSerialize["replysubject"] = o.Replysubject
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Timecreated) {
		toSerialize["timecreated"] = o.Timecreated
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Unread) {
		toSerialize["unread"] = o.Unread
	}
	if !IsNil(o.Urls) {
		toSerialize["urls"] = o.Urls
	}
	if !IsNil(o.Wordcount) {
		toSerialize["wordcount"] = o.Wordcount
	}
	return toSerialize, nil
}

type NullableModForumGetDiscussionPosts200ResponsePostsInner struct {
	value *ModForumGetDiscussionPosts200ResponsePostsInner
	isSet bool
}

func (v NullableModForumGetDiscussionPosts200ResponsePostsInner) Get() *ModForumGetDiscussionPosts200ResponsePostsInner {
	return v.value
}

func (v *NullableModForumGetDiscussionPosts200ResponsePostsInner) Set(val *ModForumGetDiscussionPosts200ResponsePostsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumGetDiscussionPosts200ResponsePostsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumGetDiscussionPosts200ResponsePostsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumGetDiscussionPosts200ResponsePostsInner(val *ModForumGetDiscussionPosts200ResponsePostsInner) *NullableModForumGetDiscussionPosts200ResponsePostsInner {
	return &NullableModForumGetDiscussionPosts200ResponsePostsInner{value: val, isSet: true}
}

func (v NullableModForumGetDiscussionPosts200ResponsePostsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumGetDiscussionPosts200ResponsePostsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


