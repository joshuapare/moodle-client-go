/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner{}

// CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner Activity
type CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner struct {
	// course module ID
	Cmid *int32 `json:"cmid,omitempty"`
	Details []CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner `json:"details,omitempty"`
	// Whether this activity module has completion enabled
	Hascompletion *bool `json:"hascompletion,omitempty"`
	// instance ID
	Instance *int32 `json:"instance,omitempty"`
	// Whether this activity module instance tracks completion automatically.
	Isautomatic *bool `json:"isautomatic,omitempty"`
	// Whether completion is being tracked for this user.
	Istrackeduser *bool `json:"istrackeduser,omitempty"`
	// activity module name
	Modname *string `json:"modname,omitempty"`
	// The user id who has overriden the status, or null
	Overrideby *int32 `json:"overrideby,omitempty"`
	// Completion state value:                                     0 means incomplete,                                     1 complete,                                     2 complete pass,                                     3 complete fail
	State *int32 `json:"state,omitempty"`
	// timestamp for completed activity
	Timecompleted *int32 `json:"timecompleted,omitempty"`
	// type of tracking:                                     0 means none,                                     1 manual,                                     2 automatic
	Tracking *int32 `json:"tracking,omitempty"`
	// Whether this activity is visible to the user.
	Uservisible *bool `json:"uservisible,omitempty"`
	// Whether the completion status affects the availability of another activity.
	Valueused *bool `json:"valueused,omitempty"`
}

// NewCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner instantiates a new CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner() *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner {
	this := CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner{}
	var cmid int32 = null
	this.Cmid = &cmid
	var hascompletion bool = null
	this.Hascompletion = &hascompletion
	var instance int32 = null
	this.Instance = &instance
	var isautomatic bool = null
	this.Isautomatic = &isautomatic
	var istrackeduser bool = null
	this.Istrackeduser = &istrackeduser
	var modname string = "null"
	this.Modname = &modname
	var overrideby int32 = null
	this.Overrideby = &overrideby
	var state int32 = null
	this.State = &state
	var timecompleted int32 = null
	this.Timecompleted = &timecompleted
	var tracking int32 = null
	this.Tracking = &tracking
	var uservisible bool = null
	this.Uservisible = &uservisible
	var valueused bool = null
	this.Valueused = &valueused
	return &this
}

// NewCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerWithDefaults instantiates a new CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerWithDefaults() *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner {
	this := CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner{}
	var cmid int32 = null
	this.Cmid = &cmid
	var hascompletion bool = null
	this.Hascompletion = &hascompletion
	var instance int32 = null
	this.Instance = &instance
	var isautomatic bool = null
	this.Isautomatic = &isautomatic
	var istrackeduser bool = null
	this.Istrackeduser = &istrackeduser
	var modname string = "null"
	this.Modname = &modname
	var overrideby int32 = null
	this.Overrideby = &overrideby
	var state int32 = null
	this.State = &state
	var timecompleted int32 = null
	this.Timecompleted = &timecompleted
	var tracking int32 = null
	this.Tracking = &tracking
	var uservisible bool = null
	this.Uservisible = &uservisible
	var valueused bool = null
	this.Valueused = &valueused
	return &this
}

// GetCmid returns the Cmid field value if set, zero value otherwise.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetCmid() int32 {
	if o == nil || IsNil(o.Cmid) {
		var ret int32
		return ret
	}
	return *o.Cmid
}

// GetCmidOk returns a tuple with the Cmid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetCmidOk() (*int32, bool) {
	if o == nil || IsNil(o.Cmid) {
		return nil, false
	}
	return o.Cmid, true
}

// HasCmid returns a boolean if a field has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) HasCmid() bool {
	if o != nil && !IsNil(o.Cmid) {
		return true
	}

	return false
}

// SetCmid gets a reference to the given int32 and assigns it to the Cmid field.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) SetCmid(v int32) {
	o.Cmid = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetDetails() []CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner {
	if o == nil || IsNil(o.Details) {
		var ret []CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetDetailsOk() ([]CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner and assigns it to the Details field.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) SetDetails(v []CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInnerDetailsInner) {
	o.Details = v
}

// GetHascompletion returns the Hascompletion field value if set, zero value otherwise.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetHascompletion() bool {
	if o == nil || IsNil(o.Hascompletion) {
		var ret bool
		return ret
	}
	return *o.Hascompletion
}

// GetHascompletionOk returns a tuple with the Hascompletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetHascompletionOk() (*bool, bool) {
	if o == nil || IsNil(o.Hascompletion) {
		return nil, false
	}
	return o.Hascompletion, true
}

// HasHascompletion returns a boolean if a field has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) HasHascompletion() bool {
	if o != nil && !IsNil(o.Hascompletion) {
		return true
	}

	return false
}

// SetHascompletion gets a reference to the given bool and assigns it to the Hascompletion field.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) SetHascompletion(v bool) {
	o.Hascompletion = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetInstance() int32 {
	if o == nil || IsNil(o.Instance) {
		var ret int32
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetInstanceOk() (*int32, bool) {
	if o == nil || IsNil(o.Instance) {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) HasInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given int32 and assigns it to the Instance field.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) SetInstance(v int32) {
	o.Instance = &v
}

// GetIsautomatic returns the Isautomatic field value if set, zero value otherwise.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetIsautomatic() bool {
	if o == nil || IsNil(o.Isautomatic) {
		var ret bool
		return ret
	}
	return *o.Isautomatic
}

// GetIsautomaticOk returns a tuple with the Isautomatic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetIsautomaticOk() (*bool, bool) {
	if o == nil || IsNil(o.Isautomatic) {
		return nil, false
	}
	return o.Isautomatic, true
}

// HasIsautomatic returns a boolean if a field has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) HasIsautomatic() bool {
	if o != nil && !IsNil(o.Isautomatic) {
		return true
	}

	return false
}

// SetIsautomatic gets a reference to the given bool and assigns it to the Isautomatic field.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) SetIsautomatic(v bool) {
	o.Isautomatic = &v
}

// GetIstrackeduser returns the Istrackeduser field value if set, zero value otherwise.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetIstrackeduser() bool {
	if o == nil || IsNil(o.Istrackeduser) {
		var ret bool
		return ret
	}
	return *o.Istrackeduser
}

// GetIstrackeduserOk returns a tuple with the Istrackeduser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetIstrackeduserOk() (*bool, bool) {
	if o == nil || IsNil(o.Istrackeduser) {
		return nil, false
	}
	return o.Istrackeduser, true
}

// HasIstrackeduser returns a boolean if a field has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) HasIstrackeduser() bool {
	if o != nil && !IsNil(o.Istrackeduser) {
		return true
	}

	return false
}

// SetIstrackeduser gets a reference to the given bool and assigns it to the Istrackeduser field.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) SetIstrackeduser(v bool) {
	o.Istrackeduser = &v
}

// GetModname returns the Modname field value if set, zero value otherwise.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetModname() string {
	if o == nil || IsNil(o.Modname) {
		var ret string
		return ret
	}
	return *o.Modname
}

// GetModnameOk returns a tuple with the Modname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetModnameOk() (*string, bool) {
	if o == nil || IsNil(o.Modname) {
		return nil, false
	}
	return o.Modname, true
}

// HasModname returns a boolean if a field has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) HasModname() bool {
	if o != nil && !IsNil(o.Modname) {
		return true
	}

	return false
}

// SetModname gets a reference to the given string and assigns it to the Modname field.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) SetModname(v string) {
	o.Modname = &v
}

// GetOverrideby returns the Overrideby field value if set, zero value otherwise.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetOverrideby() int32 {
	if o == nil || IsNil(o.Overrideby) {
		var ret int32
		return ret
	}
	return *o.Overrideby
}

// GetOverridebyOk returns a tuple with the Overrideby field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetOverridebyOk() (*int32, bool) {
	if o == nil || IsNil(o.Overrideby) {
		return nil, false
	}
	return o.Overrideby, true
}

// HasOverrideby returns a boolean if a field has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) HasOverrideby() bool {
	if o != nil && !IsNil(o.Overrideby) {
		return true
	}

	return false
}

// SetOverrideby gets a reference to the given int32 and assigns it to the Overrideby field.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) SetOverrideby(v int32) {
	o.Overrideby = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetState() int32 {
	if o == nil || IsNil(o.State) {
		var ret int32
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetStateOk() (*int32, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given int32 and assigns it to the State field.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) SetState(v int32) {
	o.State = &v
}

// GetTimecompleted returns the Timecompleted field value if set, zero value otherwise.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetTimecompleted() int32 {
	if o == nil || IsNil(o.Timecompleted) {
		var ret int32
		return ret
	}
	return *o.Timecompleted
}

// GetTimecompletedOk returns a tuple with the Timecompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetTimecompletedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecompleted) {
		return nil, false
	}
	return o.Timecompleted, true
}

// HasTimecompleted returns a boolean if a field has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) HasTimecompleted() bool {
	if o != nil && !IsNil(o.Timecompleted) {
		return true
	}

	return false
}

// SetTimecompleted gets a reference to the given int32 and assigns it to the Timecompleted field.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) SetTimecompleted(v int32) {
	o.Timecompleted = &v
}

// GetTracking returns the Tracking field value if set, zero value otherwise.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetTracking() int32 {
	if o == nil || IsNil(o.Tracking) {
		var ret int32
		return ret
	}
	return *o.Tracking
}

// GetTrackingOk returns a tuple with the Tracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetTrackingOk() (*int32, bool) {
	if o == nil || IsNil(o.Tracking) {
		return nil, false
	}
	return o.Tracking, true
}

// HasTracking returns a boolean if a field has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) HasTracking() bool {
	if o != nil && !IsNil(o.Tracking) {
		return true
	}

	return false
}

// SetTracking gets a reference to the given int32 and assigns it to the Tracking field.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) SetTracking(v int32) {
	o.Tracking = &v
}

// GetUservisible returns the Uservisible field value if set, zero value otherwise.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetUservisible() bool {
	if o == nil || IsNil(o.Uservisible) {
		var ret bool
		return ret
	}
	return *o.Uservisible
}

// GetUservisibleOk returns a tuple with the Uservisible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetUservisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Uservisible) {
		return nil, false
	}
	return o.Uservisible, true
}

// HasUservisible returns a boolean if a field has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) HasUservisible() bool {
	if o != nil && !IsNil(o.Uservisible) {
		return true
	}

	return false
}

// SetUservisible gets a reference to the given bool and assigns it to the Uservisible field.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) SetUservisible(v bool) {
	o.Uservisible = &v
}

// GetValueused returns the Valueused field value if set, zero value otherwise.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetValueused() bool {
	if o == nil || IsNil(o.Valueused) {
		var ret bool
		return ret
	}
	return *o.Valueused
}

// GetValueusedOk returns a tuple with the Valueused field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) GetValueusedOk() (*bool, bool) {
	if o == nil || IsNil(o.Valueused) {
		return nil, false
	}
	return o.Valueused, true
}

// HasValueused returns a boolean if a field has been set.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) HasValueused() bool {
	if o != nil && !IsNil(o.Valueused) {
		return true
	}

	return false
}

// SetValueused gets a reference to the given bool and assigns it to the Valueused field.
func (o *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) SetValueused(v bool) {
	o.Valueused = &v
}

func (o CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cmid) {
		toSerialize["cmid"] = o.Cmid
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Hascompletion) {
		toSerialize["hascompletion"] = o.Hascompletion
	}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	if !IsNil(o.Isautomatic) {
		toSerialize["isautomatic"] = o.Isautomatic
	}
	if !IsNil(o.Istrackeduser) {
		toSerialize["istrackeduser"] = o.Istrackeduser
	}
	if !IsNil(o.Modname) {
		toSerialize["modname"] = o.Modname
	}
	if !IsNil(o.Overrideby) {
		toSerialize["overrideby"] = o.Overrideby
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Timecompleted) {
		toSerialize["timecompleted"] = o.Timecompleted
	}
	if !IsNil(o.Tracking) {
		toSerialize["tracking"] = o.Tracking
	}
	if !IsNil(o.Uservisible) {
		toSerialize["uservisible"] = o.Uservisible
	}
	if !IsNil(o.Valueused) {
		toSerialize["valueused"] = o.Valueused
	}
	return toSerialize, nil
}

type NullableCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner struct {
	value *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner
	isSet bool
}

func (v NullableCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) Get() *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner {
	return v.value
}

func (v *NullableCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) Set(val *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner(val *CoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) *NullableCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner {
	return &NullableCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner{value: val, isSet: true}
}

func (v NullableCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCompletionGetActivitiesCompletionStatus200ResponseStatusesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


