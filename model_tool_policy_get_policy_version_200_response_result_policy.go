/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ToolPolicyGetPolicyVersion200ResponseResultPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolPolicyGetPolicyVersion200ResponseResultPolicy{}

// ToolPolicyGetPolicyVersion200ResponseResultPolicy struct for ToolPolicyGetPolicyVersion200ResponseResultPolicy
type ToolPolicyGetPolicyVersion200ResponseResultPolicy struct {
	// The policy version content
	Content *string `json:"content,omitempty"`
	// The policy version name
	Name *string `json:"name,omitempty"`
	// The policy version id
	Versionid *int32 `json:"versionid,omitempty"`
}

// NewToolPolicyGetPolicyVersion200ResponseResultPolicy instantiates a new ToolPolicyGetPolicyVersion200ResponseResultPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolPolicyGetPolicyVersion200ResponseResultPolicy() *ToolPolicyGetPolicyVersion200ResponseResultPolicy {
	this := ToolPolicyGetPolicyVersion200ResponseResultPolicy{}
	var content string = "null"
	this.Content = &content
	var name string = "null"
	this.Name = &name
	var versionid int32 = null
	this.Versionid = &versionid
	return &this
}

// NewToolPolicyGetPolicyVersion200ResponseResultPolicyWithDefaults instantiates a new ToolPolicyGetPolicyVersion200ResponseResultPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolPolicyGetPolicyVersion200ResponseResultPolicyWithDefaults() *ToolPolicyGetPolicyVersion200ResponseResultPolicy {
	this := ToolPolicyGetPolicyVersion200ResponseResultPolicy{}
	var content string = "null"
	this.Content = &content
	var name string = "null"
	this.Name = &name
	var versionid int32 = null
	this.Versionid = &versionid
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ToolPolicyGetPolicyVersion200ResponseResultPolicy) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolPolicyGetPolicyVersion200ResponseResultPolicy) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ToolPolicyGetPolicyVersion200ResponseResultPolicy) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ToolPolicyGetPolicyVersion200ResponseResultPolicy) SetContent(v string) {
	o.Content = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ToolPolicyGetPolicyVersion200ResponseResultPolicy) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolPolicyGetPolicyVersion200ResponseResultPolicy) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ToolPolicyGetPolicyVersion200ResponseResultPolicy) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ToolPolicyGetPolicyVersion200ResponseResultPolicy) SetName(v string) {
	o.Name = &v
}

// GetVersionid returns the Versionid field value if set, zero value otherwise.
func (o *ToolPolicyGetPolicyVersion200ResponseResultPolicy) GetVersionid() int32 {
	if o == nil || IsNil(o.Versionid) {
		var ret int32
		return ret
	}
	return *o.Versionid
}

// GetVersionidOk returns a tuple with the Versionid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolPolicyGetPolicyVersion200ResponseResultPolicy) GetVersionidOk() (*int32, bool) {
	if o == nil || IsNil(o.Versionid) {
		return nil, false
	}
	return o.Versionid, true
}

// HasVersionid returns a boolean if a field has been set.
func (o *ToolPolicyGetPolicyVersion200ResponseResultPolicy) HasVersionid() bool {
	if o != nil && !IsNil(o.Versionid) {
		return true
	}

	return false
}

// SetVersionid gets a reference to the given int32 and assigns it to the Versionid field.
func (o *ToolPolicyGetPolicyVersion200ResponseResultPolicy) SetVersionid(v int32) {
	o.Versionid = &v
}

func (o ToolPolicyGetPolicyVersion200ResponseResultPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolPolicyGetPolicyVersion200ResponseResultPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Versionid) {
		toSerialize["versionid"] = o.Versionid
	}
	return toSerialize, nil
}

type NullableToolPolicyGetPolicyVersion200ResponseResultPolicy struct {
	value *ToolPolicyGetPolicyVersion200ResponseResultPolicy
	isSet bool
}

func (v NullableToolPolicyGetPolicyVersion200ResponseResultPolicy) Get() *ToolPolicyGetPolicyVersion200ResponseResultPolicy {
	return v.value
}

func (v *NullableToolPolicyGetPolicyVersion200ResponseResultPolicy) Set(val *ToolPolicyGetPolicyVersion200ResponseResultPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableToolPolicyGetPolicyVersion200ResponseResultPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableToolPolicyGetPolicyVersion200ResponseResultPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolPolicyGetPolicyVersion200ResponseResultPolicy(val *ToolPolicyGetPolicyVersion200ResponseResultPolicy) *NullableToolPolicyGetPolicyVersion200ResponseResultPolicy {
	return &NullableToolPolicyGetPolicyVersion200ResponseResultPolicy{value: val, isSet: true}
}

func (v NullableToolPolicyGetPolicyVersion200ResponseResultPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolPolicyGetPolicyVersion200ResponseResultPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


