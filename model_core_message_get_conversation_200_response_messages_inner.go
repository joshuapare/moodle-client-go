/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreMessageGetConversation200ResponseMessagesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreMessageGetConversation200ResponseMessagesInner{}

// CoreMessageGetConversation200ResponseMessagesInner struct for CoreMessageGetConversation200ResponseMessagesInner
type CoreMessageGetConversation200ResponseMessagesInner struct {
	// The id of the message
	Id *int32 `json:"id,omitempty"`
	// The text of the message
	Text *string `json:"text,omitempty"`
	// The timecreated timestamp for the message
	Timecreated *int32 `json:"timecreated,omitempty"`
	// The id of the user who sent the message
	Useridfrom *int32 `json:"useridfrom,omitempty"`
}

// NewCoreMessageGetConversation200ResponseMessagesInner instantiates a new CoreMessageGetConversation200ResponseMessagesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreMessageGetConversation200ResponseMessagesInner() *CoreMessageGetConversation200ResponseMessagesInner {
	this := CoreMessageGetConversation200ResponseMessagesInner{}
	var id int32 = null
	this.Id = &id
	var text string = "null"
	this.Text = &text
	var timecreated int32 = null
	this.Timecreated = &timecreated
	var useridfrom int32 = null
	this.Useridfrom = &useridfrom
	return &this
}

// NewCoreMessageGetConversation200ResponseMessagesInnerWithDefaults instantiates a new CoreMessageGetConversation200ResponseMessagesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreMessageGetConversation200ResponseMessagesInnerWithDefaults() *CoreMessageGetConversation200ResponseMessagesInner {
	this := CoreMessageGetConversation200ResponseMessagesInner{}
	var id int32 = null
	this.Id = &id
	var text string = "null"
	this.Text = &text
	var timecreated int32 = null
	this.Timecreated = &timecreated
	var useridfrom int32 = null
	this.Useridfrom = &useridfrom
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreMessageGetConversation200ResponseMessagesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversation200ResponseMessagesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreMessageGetConversation200ResponseMessagesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CoreMessageGetConversation200ResponseMessagesInner) SetId(v int32) {
	o.Id = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *CoreMessageGetConversation200ResponseMessagesInner) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversation200ResponseMessagesInner) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *CoreMessageGetConversation200ResponseMessagesInner) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *CoreMessageGetConversation200ResponseMessagesInner) SetText(v string) {
	o.Text = &v
}

// GetTimecreated returns the Timecreated field value if set, zero value otherwise.
func (o *CoreMessageGetConversation200ResponseMessagesInner) GetTimecreated() int32 {
	if o == nil || IsNil(o.Timecreated) {
		var ret int32
		return ret
	}
	return *o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversation200ResponseMessagesInner) GetTimecreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecreated) {
		return nil, false
	}
	return o.Timecreated, true
}

// HasTimecreated returns a boolean if a field has been set.
func (o *CoreMessageGetConversation200ResponseMessagesInner) HasTimecreated() bool {
	if o != nil && !IsNil(o.Timecreated) {
		return true
	}

	return false
}

// SetTimecreated gets a reference to the given int32 and assigns it to the Timecreated field.
func (o *CoreMessageGetConversation200ResponseMessagesInner) SetTimecreated(v int32) {
	o.Timecreated = &v
}

// GetUseridfrom returns the Useridfrom field value if set, zero value otherwise.
func (o *CoreMessageGetConversation200ResponseMessagesInner) GetUseridfrom() int32 {
	if o == nil || IsNil(o.Useridfrom) {
		var ret int32
		return ret
	}
	return *o.Useridfrom
}

// GetUseridfromOk returns a tuple with the Useridfrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversation200ResponseMessagesInner) GetUseridfromOk() (*int32, bool) {
	if o == nil || IsNil(o.Useridfrom) {
		return nil, false
	}
	return o.Useridfrom, true
}

// HasUseridfrom returns a boolean if a field has been set.
func (o *CoreMessageGetConversation200ResponseMessagesInner) HasUseridfrom() bool {
	if o != nil && !IsNil(o.Useridfrom) {
		return true
	}

	return false
}

// SetUseridfrom gets a reference to the given int32 and assigns it to the Useridfrom field.
func (o *CoreMessageGetConversation200ResponseMessagesInner) SetUseridfrom(v int32) {
	o.Useridfrom = &v
}

func (o CoreMessageGetConversation200ResponseMessagesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreMessageGetConversation200ResponseMessagesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Timecreated) {
		toSerialize["timecreated"] = o.Timecreated
	}
	if !IsNil(o.Useridfrom) {
		toSerialize["useridfrom"] = o.Useridfrom
	}
	return toSerialize, nil
}

type NullableCoreMessageGetConversation200ResponseMessagesInner struct {
	value *CoreMessageGetConversation200ResponseMessagesInner
	isSet bool
}

func (v NullableCoreMessageGetConversation200ResponseMessagesInner) Get() *CoreMessageGetConversation200ResponseMessagesInner {
	return v.value
}

func (v *NullableCoreMessageGetConversation200ResponseMessagesInner) Set(val *CoreMessageGetConversation200ResponseMessagesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreMessageGetConversation200ResponseMessagesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreMessageGetConversation200ResponseMessagesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreMessageGetConversation200ResponseMessagesInner(val *CoreMessageGetConversation200ResponseMessagesInner) *NullableCoreMessageGetConversation200ResponseMessagesInner {
	return &NullableCoreMessageGetConversation200ResponseMessagesInner{value: val, isSet: true}
}

func (v NullableCoreMessageGetConversation200ResponseMessagesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreMessageGetConversation200ResponseMessagesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


