/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCalendarGetTimestampsRequestDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCalendarGetTimestampsRequestDataInner{}

// CoreCalendarGetTimestampsRequestDataInner struct for CoreCalendarGetTimestampsRequestDataInner
type CoreCalendarGetTimestampsRequestDataInner struct {
	// day
	Day *int32 `json:"day,omitempty"`
	// hour
	Hour *int32 `json:"hour,omitempty"`
	// key
	Key *string `json:"key,omitempty"`
	// minute
	Minute *int32 `json:"minute,omitempty"`
	// month
	Month *int32 `json:"month,omitempty"`
	// year
	Year *int32 `json:"year,omitempty"`
}

// NewCoreCalendarGetTimestampsRequestDataInner instantiates a new CoreCalendarGetTimestampsRequestDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCalendarGetTimestampsRequestDataInner() *CoreCalendarGetTimestampsRequestDataInner {
	this := CoreCalendarGetTimestampsRequestDataInner{}
	var day int32 = null
	this.Day = &day
	var hour int32 = null
	this.Hour = &hour
	var key string = "null"
	this.Key = &key
	var minute int32 = null
	this.Minute = &minute
	var month int32 = null
	this.Month = &month
	var year int32 = null
	this.Year = &year
	return &this
}

// NewCoreCalendarGetTimestampsRequestDataInnerWithDefaults instantiates a new CoreCalendarGetTimestampsRequestDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCalendarGetTimestampsRequestDataInnerWithDefaults() *CoreCalendarGetTimestampsRequestDataInner {
	this := CoreCalendarGetTimestampsRequestDataInner{}
	var day int32 = null
	this.Day = &day
	var hour int32 = null
	this.Hour = &hour
	var key string = "null"
	this.Key = &key
	var minute int32 = null
	this.Minute = &minute
	var month int32 = null
	this.Month = &month
	var year int32 = null
	this.Year = &year
	return &this
}

// GetDay returns the Day field value if set, zero value otherwise.
func (o *CoreCalendarGetTimestampsRequestDataInner) GetDay() int32 {
	if o == nil || IsNil(o.Day) {
		var ret int32
		return ret
	}
	return *o.Day
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetTimestampsRequestDataInner) GetDayOk() (*int32, bool) {
	if o == nil || IsNil(o.Day) {
		return nil, false
	}
	return o.Day, true
}

// HasDay returns a boolean if a field has been set.
func (o *CoreCalendarGetTimestampsRequestDataInner) HasDay() bool {
	if o != nil && !IsNil(o.Day) {
		return true
	}

	return false
}

// SetDay gets a reference to the given int32 and assigns it to the Day field.
func (o *CoreCalendarGetTimestampsRequestDataInner) SetDay(v int32) {
	o.Day = &v
}

// GetHour returns the Hour field value if set, zero value otherwise.
func (o *CoreCalendarGetTimestampsRequestDataInner) GetHour() int32 {
	if o == nil || IsNil(o.Hour) {
		var ret int32
		return ret
	}
	return *o.Hour
}

// GetHourOk returns a tuple with the Hour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetTimestampsRequestDataInner) GetHourOk() (*int32, bool) {
	if o == nil || IsNil(o.Hour) {
		return nil, false
	}
	return o.Hour, true
}

// HasHour returns a boolean if a field has been set.
func (o *CoreCalendarGetTimestampsRequestDataInner) HasHour() bool {
	if o != nil && !IsNil(o.Hour) {
		return true
	}

	return false
}

// SetHour gets a reference to the given int32 and assigns it to the Hour field.
func (o *CoreCalendarGetTimestampsRequestDataInner) SetHour(v int32) {
	o.Hour = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *CoreCalendarGetTimestampsRequestDataInner) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetTimestampsRequestDataInner) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *CoreCalendarGetTimestampsRequestDataInner) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *CoreCalendarGetTimestampsRequestDataInner) SetKey(v string) {
	o.Key = &v
}

// GetMinute returns the Minute field value if set, zero value otherwise.
func (o *CoreCalendarGetTimestampsRequestDataInner) GetMinute() int32 {
	if o == nil || IsNil(o.Minute) {
		var ret int32
		return ret
	}
	return *o.Minute
}

// GetMinuteOk returns a tuple with the Minute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetTimestampsRequestDataInner) GetMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.Minute) {
		return nil, false
	}
	return o.Minute, true
}

// HasMinute returns a boolean if a field has been set.
func (o *CoreCalendarGetTimestampsRequestDataInner) HasMinute() bool {
	if o != nil && !IsNil(o.Minute) {
		return true
	}

	return false
}

// SetMinute gets a reference to the given int32 and assigns it to the Minute field.
func (o *CoreCalendarGetTimestampsRequestDataInner) SetMinute(v int32) {
	o.Minute = &v
}

// GetMonth returns the Month field value if set, zero value otherwise.
func (o *CoreCalendarGetTimestampsRequestDataInner) GetMonth() int32 {
	if o == nil || IsNil(o.Month) {
		var ret int32
		return ret
	}
	return *o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetTimestampsRequestDataInner) GetMonthOk() (*int32, bool) {
	if o == nil || IsNil(o.Month) {
		return nil, false
	}
	return o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *CoreCalendarGetTimestampsRequestDataInner) HasMonth() bool {
	if o != nil && !IsNil(o.Month) {
		return true
	}

	return false
}

// SetMonth gets a reference to the given int32 and assigns it to the Month field.
func (o *CoreCalendarGetTimestampsRequestDataInner) SetMonth(v int32) {
	o.Month = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *CoreCalendarGetTimestampsRequestDataInner) GetYear() int32 {
	if o == nil || IsNil(o.Year) {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetTimestampsRequestDataInner) GetYearOk() (*int32, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *CoreCalendarGetTimestampsRequestDataInner) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
func (o *CoreCalendarGetTimestampsRequestDataInner) SetYear(v int32) {
	o.Year = &v
}

func (o CoreCalendarGetTimestampsRequestDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCalendarGetTimestampsRequestDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Day) {
		toSerialize["day"] = o.Day
	}
	if !IsNil(o.Hour) {
		toSerialize["hour"] = o.Hour
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Minute) {
		toSerialize["minute"] = o.Minute
	}
	if !IsNil(o.Month) {
		toSerialize["month"] = o.Month
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	return toSerialize, nil
}

type NullableCoreCalendarGetTimestampsRequestDataInner struct {
	value *CoreCalendarGetTimestampsRequestDataInner
	isSet bool
}

func (v NullableCoreCalendarGetTimestampsRequestDataInner) Get() *CoreCalendarGetTimestampsRequestDataInner {
	return v.value
}

func (v *NullableCoreCalendarGetTimestampsRequestDataInner) Set(val *CoreCalendarGetTimestampsRequestDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCalendarGetTimestampsRequestDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCalendarGetTimestampsRequestDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCalendarGetTimestampsRequestDataInner(val *CoreCalendarGetTimestampsRequestDataInner) *NullableCoreCalendarGetTimestampsRequestDataInner {
	return &NullableCoreCalendarGetTimestampsRequestDataInner{value: val, isSet: true}
}

func (v NullableCoreCalendarGetTimestampsRequestDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCalendarGetTimestampsRequestDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


