/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreGroupAssignGroupingRequestAssignmentsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreGroupAssignGroupingRequestAssignmentsInner{}

// CoreGroupAssignGroupingRequestAssignmentsInner struct for CoreGroupAssignGroupingRequestAssignmentsInner
type CoreGroupAssignGroupingRequestAssignmentsInner struct {
	// group record id
	Groupid *int32 `json:"groupid,omitempty"`
	// grouping record id
	Groupingid *int32 `json:"groupingid,omitempty"`
}

// NewCoreGroupAssignGroupingRequestAssignmentsInner instantiates a new CoreGroupAssignGroupingRequestAssignmentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreGroupAssignGroupingRequestAssignmentsInner() *CoreGroupAssignGroupingRequestAssignmentsInner {
	this := CoreGroupAssignGroupingRequestAssignmentsInner{}
	var groupingid int32 = null
	this.Groupingid = &groupingid
	return &this
}

// NewCoreGroupAssignGroupingRequestAssignmentsInnerWithDefaults instantiates a new CoreGroupAssignGroupingRequestAssignmentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreGroupAssignGroupingRequestAssignmentsInnerWithDefaults() *CoreGroupAssignGroupingRequestAssignmentsInner {
	this := CoreGroupAssignGroupingRequestAssignmentsInner{}
	var groupingid int32 = null
	this.Groupingid = &groupingid
	return &this
}

// GetGroupid returns the Groupid field value if set, zero value otherwise.
func (o *CoreGroupAssignGroupingRequestAssignmentsInner) GetGroupid() int32 {
	if o == nil || IsNil(o.Groupid) {
		var ret int32
		return ret
	}
	return *o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGroupAssignGroupingRequestAssignmentsInner) GetGroupidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupid) {
		return nil, false
	}
	return o.Groupid, true
}

// HasGroupid returns a boolean if a field has been set.
func (o *CoreGroupAssignGroupingRequestAssignmentsInner) HasGroupid() bool {
	if o != nil && !IsNil(o.Groupid) {
		return true
	}

	return false
}

// SetGroupid gets a reference to the given int32 and assigns it to the Groupid field.
func (o *CoreGroupAssignGroupingRequestAssignmentsInner) SetGroupid(v int32) {
	o.Groupid = &v
}

// GetGroupingid returns the Groupingid field value if set, zero value otherwise.
func (o *CoreGroupAssignGroupingRequestAssignmentsInner) GetGroupingid() int32 {
	if o == nil || IsNil(o.Groupingid) {
		var ret int32
		return ret
	}
	return *o.Groupingid
}

// GetGroupingidOk returns a tuple with the Groupingid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGroupAssignGroupingRequestAssignmentsInner) GetGroupingidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupingid) {
		return nil, false
	}
	return o.Groupingid, true
}

// HasGroupingid returns a boolean if a field has been set.
func (o *CoreGroupAssignGroupingRequestAssignmentsInner) HasGroupingid() bool {
	if o != nil && !IsNil(o.Groupingid) {
		return true
	}

	return false
}

// SetGroupingid gets a reference to the given int32 and assigns it to the Groupingid field.
func (o *CoreGroupAssignGroupingRequestAssignmentsInner) SetGroupingid(v int32) {
	o.Groupingid = &v
}

func (o CoreGroupAssignGroupingRequestAssignmentsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreGroupAssignGroupingRequestAssignmentsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Groupid) {
		toSerialize["groupid"] = o.Groupid
	}
	if !IsNil(o.Groupingid) {
		toSerialize["groupingid"] = o.Groupingid
	}
	return toSerialize, nil
}

type NullableCoreGroupAssignGroupingRequestAssignmentsInner struct {
	value *CoreGroupAssignGroupingRequestAssignmentsInner
	isSet bool
}

func (v NullableCoreGroupAssignGroupingRequestAssignmentsInner) Get() *CoreGroupAssignGroupingRequestAssignmentsInner {
	return v.value
}

func (v *NullableCoreGroupAssignGroupingRequestAssignmentsInner) Set(val *CoreGroupAssignGroupingRequestAssignmentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreGroupAssignGroupingRequestAssignmentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreGroupAssignGroupingRequestAssignmentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreGroupAssignGroupingRequestAssignmentsInner(val *CoreGroupAssignGroupingRequestAssignmentsInner) *NullableCoreGroupAssignGroupingRequestAssignmentsInner {
	return &NullableCoreGroupAssignGroupingRequestAssignmentsInner{value: val, isSet: true}
}

func (v NullableCoreGroupAssignGroupingRequestAssignmentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreGroupAssignGroupingRequestAssignmentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


