/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModSurveyGetQuestionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModSurveyGetQuestionsRequest{}

// ModSurveyGetQuestionsRequest struct for ModSurveyGetQuestionsRequest
type ModSurveyGetQuestionsRequest struct {
	// survey instance id
	Surveyid int32 `json:"surveyid"`
}

type _ModSurveyGetQuestionsRequest ModSurveyGetQuestionsRequest

// NewModSurveyGetQuestionsRequest instantiates a new ModSurveyGetQuestionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModSurveyGetQuestionsRequest(surveyid int32) *ModSurveyGetQuestionsRequest {
	this := ModSurveyGetQuestionsRequest{}
	this.Surveyid = surveyid
	return &this
}

// NewModSurveyGetQuestionsRequestWithDefaults instantiates a new ModSurveyGetQuestionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModSurveyGetQuestionsRequestWithDefaults() *ModSurveyGetQuestionsRequest {
	this := ModSurveyGetQuestionsRequest{}
	var surveyid int32 = null
	this.Surveyid = surveyid
	return &this
}

// GetSurveyid returns the Surveyid field value
func (o *ModSurveyGetQuestionsRequest) GetSurveyid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Surveyid
}

// GetSurveyidOk returns a tuple with the Surveyid field value
// and a boolean to check if the value has been set.
func (o *ModSurveyGetQuestionsRequest) GetSurveyidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Surveyid, true
}

// SetSurveyid sets field value
func (o *ModSurveyGetQuestionsRequest) SetSurveyid(v int32) {
	o.Surveyid = v
}

func (o ModSurveyGetQuestionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModSurveyGetQuestionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["surveyid"] = o.Surveyid
	return toSerialize, nil
}

func (o *ModSurveyGetQuestionsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"surveyid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModSurveyGetQuestionsRequest := _ModSurveyGetQuestionsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModSurveyGetQuestionsRequest)

	if err != nil {
		return err
	}

	*o = ModSurveyGetQuestionsRequest(varModSurveyGetQuestionsRequest)

	return err
}

type NullableModSurveyGetQuestionsRequest struct {
	value *ModSurveyGetQuestionsRequest
	isSet bool
}

func (v NullableModSurveyGetQuestionsRequest) Get() *ModSurveyGetQuestionsRequest {
	return v.value
}

func (v *NullableModSurveyGetQuestionsRequest) Set(val *ModSurveyGetQuestionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModSurveyGetQuestionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModSurveyGetQuestionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModSurveyGetQuestionsRequest(val *ModSurveyGetQuestionsRequest) *NullableModSurveyGetQuestionsRequest {
	return &NullableModSurveyGetQuestionsRequest{value: val, isSet: true}
}

func (v NullableModSurveyGetQuestionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModSurveyGetQuestionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


