/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModChatSendChatMessageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModChatSendChatMessageRequest{}

// ModChatSendChatMessageRequest struct for ModChatSendChatMessageRequest
type ModChatSendChatMessageRequest struct {
	// the beep id
	Beepid *string `json:"beepid,omitempty"`
	// chat session id (obtained via mod_chat_login_user)
	Chatsid string `json:"chatsid"`
	// the message text
	Messagetext string `json:"messagetext"`
}

type _ModChatSendChatMessageRequest ModChatSendChatMessageRequest

// NewModChatSendChatMessageRequest instantiates a new ModChatSendChatMessageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModChatSendChatMessageRequest(chatsid string, messagetext string) *ModChatSendChatMessageRequest {
	this := ModChatSendChatMessageRequest{}
	var beepid string = ""
	this.Beepid = &beepid
	this.Chatsid = chatsid
	this.Messagetext = messagetext
	return &this
}

// NewModChatSendChatMessageRequestWithDefaults instantiates a new ModChatSendChatMessageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModChatSendChatMessageRequestWithDefaults() *ModChatSendChatMessageRequest {
	this := ModChatSendChatMessageRequest{}
	var beepid string = ""
	this.Beepid = &beepid
	var messagetext string = "null"
	this.Messagetext = messagetext
	return &this
}

// GetBeepid returns the Beepid field value if set, zero value otherwise.
func (o *ModChatSendChatMessageRequest) GetBeepid() string {
	if o == nil || IsNil(o.Beepid) {
		var ret string
		return ret
	}
	return *o.Beepid
}

// GetBeepidOk returns a tuple with the Beepid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModChatSendChatMessageRequest) GetBeepidOk() (*string, bool) {
	if o == nil || IsNil(o.Beepid) {
		return nil, false
	}
	return o.Beepid, true
}

// HasBeepid returns a boolean if a field has been set.
func (o *ModChatSendChatMessageRequest) HasBeepid() bool {
	if o != nil && !IsNil(o.Beepid) {
		return true
	}

	return false
}

// SetBeepid gets a reference to the given string and assigns it to the Beepid field.
func (o *ModChatSendChatMessageRequest) SetBeepid(v string) {
	o.Beepid = &v
}

// GetChatsid returns the Chatsid field value
func (o *ModChatSendChatMessageRequest) GetChatsid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Chatsid
}

// GetChatsidOk returns a tuple with the Chatsid field value
// and a boolean to check if the value has been set.
func (o *ModChatSendChatMessageRequest) GetChatsidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Chatsid, true
}

// SetChatsid sets field value
func (o *ModChatSendChatMessageRequest) SetChatsid(v string) {
	o.Chatsid = v
}

// GetMessagetext returns the Messagetext field value
func (o *ModChatSendChatMessageRequest) GetMessagetext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Messagetext
}

// GetMessagetextOk returns a tuple with the Messagetext field value
// and a boolean to check if the value has been set.
func (o *ModChatSendChatMessageRequest) GetMessagetextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Messagetext, true
}

// SetMessagetext sets field value
func (o *ModChatSendChatMessageRequest) SetMessagetext(v string) {
	o.Messagetext = v
}

func (o ModChatSendChatMessageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModChatSendChatMessageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Beepid) {
		toSerialize["beepid"] = o.Beepid
	}
	toSerialize["chatsid"] = o.Chatsid
	toSerialize["messagetext"] = o.Messagetext
	return toSerialize, nil
}

func (o *ModChatSendChatMessageRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chatsid",
		"messagetext",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModChatSendChatMessageRequest := _ModChatSendChatMessageRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModChatSendChatMessageRequest)

	if err != nil {
		return err
	}

	*o = ModChatSendChatMessageRequest(varModChatSendChatMessageRequest)

	return err
}

type NullableModChatSendChatMessageRequest struct {
	value *ModChatSendChatMessageRequest
	isSet bool
}

func (v NullableModChatSendChatMessageRequest) Get() *ModChatSendChatMessageRequest {
	return v.value
}

func (v *NullableModChatSendChatMessageRequest) Set(val *ModChatSendChatMessageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModChatSendChatMessageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModChatSendChatMessageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModChatSendChatMessageRequest(val *ModChatSendChatMessageRequest) *NullableModChatSendChatMessageRequest {
	return &NullableModChatSendChatMessageRequest{value: val, isSet: true}
}

func (v NullableModChatSendChatMessageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModChatSendChatMessageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


