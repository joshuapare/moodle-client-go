/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreTagGetTagindexRequestTagindex type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreTagGetTagindexRequestTagindex{}

// CoreTagGetTagindexRequestTagindex struct for CoreTagGetTagindexRequestTagindex
type CoreTagGetTagindexRequestTagindex struct {
	// context id where to search for items
	Ctx *int32 `json:"ctx,omitempty"`
	// exlusive mode for this tag area
	Excl *bool `json:"excl,omitempty"`
	// context id where the link was displayed
	From *int32 `json:"from,omitempty"`
	// page number (0-based)
	Page *int32 `json:"page,omitempty"`
	// search in the context recursive
	Rec *int32 `json:"rec,omitempty"`
	// tag area id
	Ta int32 `json:"ta"`
	// tag name
	Tag string `json:"tag"`
	// tag collection id
	Tc int32 `json:"tc"`
}

type _CoreTagGetTagindexRequestTagindex CoreTagGetTagindexRequestTagindex

// NewCoreTagGetTagindexRequestTagindex instantiates a new CoreTagGetTagindexRequestTagindex object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreTagGetTagindexRequestTagindex(ta int32, tag string, tc int32) *CoreTagGetTagindexRequestTagindex {
	this := CoreTagGetTagindexRequestTagindex{}
	var ctx int32 = 0
	this.Ctx = &ctx
	var excl bool = 0
	this.Excl = &excl
	var from int32 = 0
	this.From = &from
	var page int32 = 0
	this.Page = &page
	var rec int32 = 1
	this.Rec = &rec
	this.Ta = ta
	this.Tag = tag
	this.Tc = tc
	return &this
}

// NewCoreTagGetTagindexRequestTagindexWithDefaults instantiates a new CoreTagGetTagindexRequestTagindex object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreTagGetTagindexRequestTagindexWithDefaults() *CoreTagGetTagindexRequestTagindex {
	this := CoreTagGetTagindexRequestTagindex{}
	var ctx int32 = 0
	this.Ctx = &ctx
	var excl bool = 0
	this.Excl = &excl
	var from int32 = 0
	this.From = &from
	var page int32 = 0
	this.Page = &page
	var rec int32 = 1
	this.Rec = &rec
	var ta int32 = null
	this.Ta = ta
	var tag string = "null"
	this.Tag = tag
	var tc int32 = null
	this.Tc = tc
	return &this
}

// GetCtx returns the Ctx field value if set, zero value otherwise.
func (o *CoreTagGetTagindexRequestTagindex) GetCtx() int32 {
	if o == nil || IsNil(o.Ctx) {
		var ret int32
		return ret
	}
	return *o.Ctx
}

// GetCtxOk returns a tuple with the Ctx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagindexRequestTagindex) GetCtxOk() (*int32, bool) {
	if o == nil || IsNil(o.Ctx) {
		return nil, false
	}
	return o.Ctx, true
}

// HasCtx returns a boolean if a field has been set.
func (o *CoreTagGetTagindexRequestTagindex) HasCtx() bool {
	if o != nil && !IsNil(o.Ctx) {
		return true
	}

	return false
}

// SetCtx gets a reference to the given int32 and assigns it to the Ctx field.
func (o *CoreTagGetTagindexRequestTagindex) SetCtx(v int32) {
	o.Ctx = &v
}

// GetExcl returns the Excl field value if set, zero value otherwise.
func (o *CoreTagGetTagindexRequestTagindex) GetExcl() bool {
	if o == nil || IsNil(o.Excl) {
		var ret bool
		return ret
	}
	return *o.Excl
}

// GetExclOk returns a tuple with the Excl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagindexRequestTagindex) GetExclOk() (*bool, bool) {
	if o == nil || IsNil(o.Excl) {
		return nil, false
	}
	return o.Excl, true
}

// HasExcl returns a boolean if a field has been set.
func (o *CoreTagGetTagindexRequestTagindex) HasExcl() bool {
	if o != nil && !IsNil(o.Excl) {
		return true
	}

	return false
}

// SetExcl gets a reference to the given bool and assigns it to the Excl field.
func (o *CoreTagGetTagindexRequestTagindex) SetExcl(v bool) {
	o.Excl = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *CoreTagGetTagindexRequestTagindex) GetFrom() int32 {
	if o == nil || IsNil(o.From) {
		var ret int32
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagindexRequestTagindex) GetFromOk() (*int32, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *CoreTagGetTagindexRequestTagindex) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given int32 and assigns it to the From field.
func (o *CoreTagGetTagindexRequestTagindex) SetFrom(v int32) {
	o.From = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *CoreTagGetTagindexRequestTagindex) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagindexRequestTagindex) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *CoreTagGetTagindexRequestTagindex) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *CoreTagGetTagindexRequestTagindex) SetPage(v int32) {
	o.Page = &v
}

// GetRec returns the Rec field value if set, zero value otherwise.
func (o *CoreTagGetTagindexRequestTagindex) GetRec() int32 {
	if o == nil || IsNil(o.Rec) {
		var ret int32
		return ret
	}
	return *o.Rec
}

// GetRecOk returns a tuple with the Rec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagindexRequestTagindex) GetRecOk() (*int32, bool) {
	if o == nil || IsNil(o.Rec) {
		return nil, false
	}
	return o.Rec, true
}

// HasRec returns a boolean if a field has been set.
func (o *CoreTagGetTagindexRequestTagindex) HasRec() bool {
	if o != nil && !IsNil(o.Rec) {
		return true
	}

	return false
}

// SetRec gets a reference to the given int32 and assigns it to the Rec field.
func (o *CoreTagGetTagindexRequestTagindex) SetRec(v int32) {
	o.Rec = &v
}

// GetTa returns the Ta field value
func (o *CoreTagGetTagindexRequestTagindex) GetTa() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Ta
}

// GetTaOk returns a tuple with the Ta field value
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagindexRequestTagindex) GetTaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ta, true
}

// SetTa sets field value
func (o *CoreTagGetTagindexRequestTagindex) SetTa(v int32) {
	o.Ta = v
}

// GetTag returns the Tag field value
func (o *CoreTagGetTagindexRequestTagindex) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagindexRequestTagindex) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *CoreTagGetTagindexRequestTagindex) SetTag(v string) {
	o.Tag = v
}

// GetTc returns the Tc field value
func (o *CoreTagGetTagindexRequestTagindex) GetTc() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Tc
}

// GetTcOk returns a tuple with the Tc field value
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagindexRequestTagindex) GetTcOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tc, true
}

// SetTc sets field value
func (o *CoreTagGetTagindexRequestTagindex) SetTc(v int32) {
	o.Tc = v
}

func (o CoreTagGetTagindexRequestTagindex) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreTagGetTagindexRequestTagindex) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ctx) {
		toSerialize["ctx"] = o.Ctx
	}
	if !IsNil(o.Excl) {
		toSerialize["excl"] = o.Excl
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.Rec) {
		toSerialize["rec"] = o.Rec
	}
	toSerialize["ta"] = o.Ta
	toSerialize["tag"] = o.Tag
	toSerialize["tc"] = o.Tc
	return toSerialize, nil
}

func (o *CoreTagGetTagindexRequestTagindex) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ta",
		"tag",
		"tc",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreTagGetTagindexRequestTagindex := _CoreTagGetTagindexRequestTagindex{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreTagGetTagindexRequestTagindex)

	if err != nil {
		return err
	}

	*o = CoreTagGetTagindexRequestTagindex(varCoreTagGetTagindexRequestTagindex)

	return err
}

type NullableCoreTagGetTagindexRequestTagindex struct {
	value *CoreTagGetTagindexRequestTagindex
	isSet bool
}

func (v NullableCoreTagGetTagindexRequestTagindex) Get() *CoreTagGetTagindexRequestTagindex {
	return v.value
}

func (v *NullableCoreTagGetTagindexRequestTagindex) Set(val *CoreTagGetTagindexRequestTagindex) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreTagGetTagindexRequestTagindex) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreTagGetTagindexRequestTagindex) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreTagGetTagindexRequestTagindex(val *CoreTagGetTagindexRequestTagindex) *NullableCoreTagGetTagindexRequestTagindex {
	return &NullableCoreTagGetTagindexRequestTagindex{value: val, isSet: true}
}

func (v NullableCoreTagGetTagindexRequestTagindex) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreTagGetTagindexRequestTagindex) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


