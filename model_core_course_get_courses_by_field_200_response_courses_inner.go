/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCourseGetCoursesByField200ResponseCoursesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCourseGetCoursesByField200ResponseCoursesInner{}

// CoreCourseGetCoursesByField200ResponseCoursesInner struct for CoreCourseGetCoursesByField200ResponseCoursesInner
type CoreCourseGetCoursesByField200ResponseCoursesInner struct {
	// Cache revision number
	Cacherev *int32 `json:"cacherev,omitempty"`
	// Calendar type
	Calendartype *string `json:"calendartype,omitempty"`
	// category id
	Categoryid *int32 `json:"categoryid,omitempty"`
	// category name
	Categoryname *string `json:"categoryname,omitempty"`
	// 1: yes 0: no
	Completionnotify *int32 `json:"completionnotify,omitempty"`
	Contacts []CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner `json:"contacts,omitempty"`
	Courseformatoptions []CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner `json:"courseformatoptions,omitempty"`
	// Course image
	Courseimage *string `json:"courseimage,omitempty"`
	Customfields []CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner `json:"customfields,omitempty"`
	// default grouping id
	Defaultgroupingid *int32 `json:"defaultgroupingid,omitempty"`
	// course display name
	Displayname *string `json:"displayname,omitempty"`
	// Completion enabled? 1: yes 0: no
	Enablecompletion *int32 `json:"enablecompletion,omitempty"`
	// Timestamp when the course end
	Enddate *int32 `json:"enddate,omitempty"`
	Enrollmentmethods []map[string]interface{} `json:"enrollmentmethods,omitempty"`
	Filters []CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner `json:"filters,omitempty"`
	// Course format: weeks, topics, social, site,..
	Format *string `json:"format,omitempty"`
	// course full name
	Fullname *string `json:"fullname,omitempty"`
	// no group, separate, visible
	Groupmode *int32 `json:"groupmode,omitempty"`
	// 1: yes, 0: no
	Groupmodeforce *int32 `json:"groupmodeforce,omitempty"`
	// course id
	Id *int32 `json:"id,omitempty"`
	// Id number
	Idnumber *string `json:"idnumber,omitempty"`
	// Forced course language
	Lang *string `json:"lang,omitempty"`
	// If legacy files are enabled
	Legacyfiles *int32 `json:"legacyfiles,omitempty"`
	// Current course marker
	Marker *int32 `json:"marker,omitempty"`
	// Largest size of file that can be uploaded into
	Maxbytes *int32 `json:"maxbytes,omitempty"`
	// Number of recent items appearing on the course page
	Newsitems *int32 `json:"newsitems,omitempty"`
	Overviewfiles []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner `json:"overviewfiles,omitempty"`
	// If is a requested course
	Requested *int32 `json:"requested,omitempty"`
	// course short name
	Shortname *string `json:"shortname,omitempty"`
	// Whether the activity dates are shown or not
	Showactivitydates *bool `json:"showactivitydates,omitempty"`
	// Whether the activity completion conditions are shown or not
	Showcompletionconditions *bool `json:"showcompletionconditions,omitempty"`
	// 1 if grades are shown, otherwise 0
	Showgrades *int32 `json:"showgrades,omitempty"`
	// Are activity report shown (yes = 1, no =0)
	Showreports *int32 `json:"showreports,omitempty"`
	// Sort order in the category
	Sortorder *int32 `json:"sortorder,omitempty"`
	// Timestamp when the course start
	Startdate *int32 `json:"startdate,omitempty"`
	// summary
	Summary *string `json:"summary,omitempty"`
	Summaryfiles []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner `json:"summaryfiles,omitempty"`
	// summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Summaryformat *int32 `json:"summaryformat,omitempty"`
	// Fame of the forced theme
	Theme *string `json:"theme,omitempty"`
	// Time when the course was created
	Timecreated *int32 `json:"timecreated,omitempty"`
	// Last time  the course was updated
	Timemodified *int32 `json:"timemodified,omitempty"`
	// 1: available to student, 0:not available
	Visible *int32 `json:"visible,omitempty"`
}

// NewCoreCourseGetCoursesByField200ResponseCoursesInner instantiates a new CoreCourseGetCoursesByField200ResponseCoursesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCourseGetCoursesByField200ResponseCoursesInner() *CoreCourseGetCoursesByField200ResponseCoursesInner {
	this := CoreCourseGetCoursesByField200ResponseCoursesInner{}
	var cacherev int32 = null
	this.Cacherev = &cacherev
	var calendartype string = "null"
	this.Calendartype = &calendartype
	var categoryname string = "null"
	this.Categoryname = &categoryname
	var courseimage string = "null"
	this.Courseimage = &courseimage
	var defaultgroupingid int32 = null
	this.Defaultgroupingid = &defaultgroupingid
	var displayname string = "null"
	this.Displayname = &displayname
	var enablecompletion int32 = null
	this.Enablecompletion = &enablecompletion
	var enddate int32 = null
	this.Enddate = &enddate
	var format string = "null"
	this.Format = &format
	var fullname string = "null"
	this.Fullname = &fullname
	var groupmode int32 = null
	this.Groupmode = &groupmode
	var groupmodeforce int32 = null
	this.Groupmodeforce = &groupmodeforce
	var idnumber string = "null"
	this.Idnumber = &idnumber
	var lang string = "null"
	this.Lang = &lang
	var legacyfiles int32 = null
	this.Legacyfiles = &legacyfiles
	var marker int32 = null
	this.Marker = &marker
	var maxbytes int32 = null
	this.Maxbytes = &maxbytes
	var newsitems int32 = null
	this.Newsitems = &newsitems
	var requested int32 = null
	this.Requested = &requested
	var showactivitydates bool = null
	this.Showactivitydates = &showactivitydates
	var showcompletionconditions bool = null
	this.Showcompletionconditions = &showcompletionconditions
	var showgrades int32 = null
	this.Showgrades = &showgrades
	var showreports int32 = null
	this.Showreports = &showreports
	var sortorder int32 = null
	this.Sortorder = &sortorder
	var startdate int32 = null
	this.Startdate = &startdate
	var theme string = "null"
	this.Theme = &theme
	var timecreated int32 = null
	this.Timecreated = &timecreated
	var timemodified int32 = null
	this.Timemodified = &timemodified
	return &this
}

// NewCoreCourseGetCoursesByField200ResponseCoursesInnerWithDefaults instantiates a new CoreCourseGetCoursesByField200ResponseCoursesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCourseGetCoursesByField200ResponseCoursesInnerWithDefaults() *CoreCourseGetCoursesByField200ResponseCoursesInner {
	this := CoreCourseGetCoursesByField200ResponseCoursesInner{}
	var cacherev int32 = null
	this.Cacherev = &cacherev
	var calendartype string = "null"
	this.Calendartype = &calendartype
	var categoryname string = "null"
	this.Categoryname = &categoryname
	var courseimage string = "null"
	this.Courseimage = &courseimage
	var defaultgroupingid int32 = null
	this.Defaultgroupingid = &defaultgroupingid
	var displayname string = "null"
	this.Displayname = &displayname
	var enablecompletion int32 = null
	this.Enablecompletion = &enablecompletion
	var enddate int32 = null
	this.Enddate = &enddate
	var format string = "null"
	this.Format = &format
	var fullname string = "null"
	this.Fullname = &fullname
	var groupmode int32 = null
	this.Groupmode = &groupmode
	var groupmodeforce int32 = null
	this.Groupmodeforce = &groupmodeforce
	var idnumber string = "null"
	this.Idnumber = &idnumber
	var lang string = "null"
	this.Lang = &lang
	var legacyfiles int32 = null
	this.Legacyfiles = &legacyfiles
	var marker int32 = null
	this.Marker = &marker
	var maxbytes int32 = null
	this.Maxbytes = &maxbytes
	var newsitems int32 = null
	this.Newsitems = &newsitems
	var requested int32 = null
	this.Requested = &requested
	var showactivitydates bool = null
	this.Showactivitydates = &showactivitydates
	var showcompletionconditions bool = null
	this.Showcompletionconditions = &showcompletionconditions
	var showgrades int32 = null
	this.Showgrades = &showgrades
	var showreports int32 = null
	this.Showreports = &showreports
	var sortorder int32 = null
	this.Sortorder = &sortorder
	var startdate int32 = null
	this.Startdate = &startdate
	var theme string = "null"
	this.Theme = &theme
	var timecreated int32 = null
	this.Timecreated = &timecreated
	var timemodified int32 = null
	this.Timemodified = &timemodified
	return &this
}

// GetCacherev returns the Cacherev field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCacherev() int32 {
	if o == nil || IsNil(o.Cacherev) {
		var ret int32
		return ret
	}
	return *o.Cacherev
}

// GetCacherevOk returns a tuple with the Cacherev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCacherevOk() (*int32, bool) {
	if o == nil || IsNil(o.Cacherev) {
		return nil, false
	}
	return o.Cacherev, true
}

// HasCacherev returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasCacherev() bool {
	if o != nil && !IsNil(o.Cacherev) {
		return true
	}

	return false
}

// SetCacherev gets a reference to the given int32 and assigns it to the Cacherev field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetCacherev(v int32) {
	o.Cacherev = &v
}

// GetCalendartype returns the Calendartype field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCalendartype() string {
	if o == nil || IsNil(o.Calendartype) {
		var ret string
		return ret
	}
	return *o.Calendartype
}

// GetCalendartypeOk returns a tuple with the Calendartype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCalendartypeOk() (*string, bool) {
	if o == nil || IsNil(o.Calendartype) {
		return nil, false
	}
	return o.Calendartype, true
}

// HasCalendartype returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasCalendartype() bool {
	if o != nil && !IsNil(o.Calendartype) {
		return true
	}

	return false
}

// SetCalendartype gets a reference to the given string and assigns it to the Calendartype field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetCalendartype(v string) {
	o.Calendartype = &v
}

// GetCategoryid returns the Categoryid field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCategoryid() int32 {
	if o == nil || IsNil(o.Categoryid) {
		var ret int32
		return ret
	}
	return *o.Categoryid
}

// GetCategoryidOk returns a tuple with the Categoryid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCategoryidOk() (*int32, bool) {
	if o == nil || IsNil(o.Categoryid) {
		return nil, false
	}
	return o.Categoryid, true
}

// HasCategoryid returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasCategoryid() bool {
	if o != nil && !IsNil(o.Categoryid) {
		return true
	}

	return false
}

// SetCategoryid gets a reference to the given int32 and assigns it to the Categoryid field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetCategoryid(v int32) {
	o.Categoryid = &v
}

// GetCategoryname returns the Categoryname field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCategoryname() string {
	if o == nil || IsNil(o.Categoryname) {
		var ret string
		return ret
	}
	return *o.Categoryname
}

// GetCategorynameOk returns a tuple with the Categoryname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCategorynameOk() (*string, bool) {
	if o == nil || IsNil(o.Categoryname) {
		return nil, false
	}
	return o.Categoryname, true
}

// HasCategoryname returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasCategoryname() bool {
	if o != nil && !IsNil(o.Categoryname) {
		return true
	}

	return false
}

// SetCategoryname gets a reference to the given string and assigns it to the Categoryname field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetCategoryname(v string) {
	o.Categoryname = &v
}

// GetCompletionnotify returns the Completionnotify field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCompletionnotify() int32 {
	if o == nil || IsNil(o.Completionnotify) {
		var ret int32
		return ret
	}
	return *o.Completionnotify
}

// GetCompletionnotifyOk returns a tuple with the Completionnotify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCompletionnotifyOk() (*int32, bool) {
	if o == nil || IsNil(o.Completionnotify) {
		return nil, false
	}
	return o.Completionnotify, true
}

// HasCompletionnotify returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasCompletionnotify() bool {
	if o != nil && !IsNil(o.Completionnotify) {
		return true
	}

	return false
}

// SetCompletionnotify gets a reference to the given int32 and assigns it to the Completionnotify field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetCompletionnotify(v int32) {
	o.Completionnotify = &v
}

// GetContacts returns the Contacts field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetContacts() []CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner {
	if o == nil || IsNil(o.Contacts) {
		var ret []CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner
		return ret
	}
	return o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetContactsOk() ([]CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner, bool) {
	if o == nil || IsNil(o.Contacts) {
		return nil, false
	}
	return o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasContacts() bool {
	if o != nil && !IsNil(o.Contacts) {
		return true
	}

	return false
}

// SetContacts gets a reference to the given []CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner and assigns it to the Contacts field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetContacts(v []CoreCourseGetCoursesByField200ResponseCoursesInnerContactsInner) {
	o.Contacts = v
}

// GetCourseformatoptions returns the Courseformatoptions field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCourseformatoptions() []CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner {
	if o == nil || IsNil(o.Courseformatoptions) {
		var ret []CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner
		return ret
	}
	return o.Courseformatoptions
}

// GetCourseformatoptionsOk returns a tuple with the Courseformatoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCourseformatoptionsOk() ([]CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner, bool) {
	if o == nil || IsNil(o.Courseformatoptions) {
		return nil, false
	}
	return o.Courseformatoptions, true
}

// HasCourseformatoptions returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasCourseformatoptions() bool {
	if o != nil && !IsNil(o.Courseformatoptions) {
		return true
	}

	return false
}

// SetCourseformatoptions gets a reference to the given []CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner and assigns it to the Courseformatoptions field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetCourseformatoptions(v []CoreCourseGetCoursesByField200ResponseCoursesInnerCourseformatoptionsInner) {
	o.Courseformatoptions = v
}

// GetCourseimage returns the Courseimage field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCourseimage() string {
	if o == nil || IsNil(o.Courseimage) {
		var ret string
		return ret
	}
	return *o.Courseimage
}

// GetCourseimageOk returns a tuple with the Courseimage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCourseimageOk() (*string, bool) {
	if o == nil || IsNil(o.Courseimage) {
		return nil, false
	}
	return o.Courseimage, true
}

// HasCourseimage returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasCourseimage() bool {
	if o != nil && !IsNil(o.Courseimage) {
		return true
	}

	return false
}

// SetCourseimage gets a reference to the given string and assigns it to the Courseimage field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetCourseimage(v string) {
	o.Courseimage = &v
}

// GetCustomfields returns the Customfields field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCustomfields() []CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner {
	if o == nil || IsNil(o.Customfields) {
		var ret []CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner
		return ret
	}
	return o.Customfields
}

// GetCustomfieldsOk returns a tuple with the Customfields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetCustomfieldsOk() ([]CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner, bool) {
	if o == nil || IsNil(o.Customfields) {
		return nil, false
	}
	return o.Customfields, true
}

// HasCustomfields returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasCustomfields() bool {
	if o != nil && !IsNil(o.Customfields) {
		return true
	}

	return false
}

// SetCustomfields gets a reference to the given []CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner and assigns it to the Customfields field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetCustomfields(v []CoreCourseGetCoursesByField200ResponseCoursesInnerCustomfieldsInner) {
	o.Customfields = v
}

// GetDefaultgroupingid returns the Defaultgroupingid field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetDefaultgroupingid() int32 {
	if o == nil || IsNil(o.Defaultgroupingid) {
		var ret int32
		return ret
	}
	return *o.Defaultgroupingid
}

// GetDefaultgroupingidOk returns a tuple with the Defaultgroupingid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetDefaultgroupingidOk() (*int32, bool) {
	if o == nil || IsNil(o.Defaultgroupingid) {
		return nil, false
	}
	return o.Defaultgroupingid, true
}

// HasDefaultgroupingid returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasDefaultgroupingid() bool {
	if o != nil && !IsNil(o.Defaultgroupingid) {
		return true
	}

	return false
}

// SetDefaultgroupingid gets a reference to the given int32 and assigns it to the Defaultgroupingid field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetDefaultgroupingid(v int32) {
	o.Defaultgroupingid = &v
}

// GetDisplayname returns the Displayname field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetDisplayname() string {
	if o == nil || IsNil(o.Displayname) {
		var ret string
		return ret
	}
	return *o.Displayname
}

// GetDisplaynameOk returns a tuple with the Displayname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetDisplaynameOk() (*string, bool) {
	if o == nil || IsNil(o.Displayname) {
		return nil, false
	}
	return o.Displayname, true
}

// HasDisplayname returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasDisplayname() bool {
	if o != nil && !IsNil(o.Displayname) {
		return true
	}

	return false
}

// SetDisplayname gets a reference to the given string and assigns it to the Displayname field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetDisplayname(v string) {
	o.Displayname = &v
}

// GetEnablecompletion returns the Enablecompletion field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetEnablecompletion() int32 {
	if o == nil || IsNil(o.Enablecompletion) {
		var ret int32
		return ret
	}
	return *o.Enablecompletion
}

// GetEnablecompletionOk returns a tuple with the Enablecompletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetEnablecompletionOk() (*int32, bool) {
	if o == nil || IsNil(o.Enablecompletion) {
		return nil, false
	}
	return o.Enablecompletion, true
}

// HasEnablecompletion returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasEnablecompletion() bool {
	if o != nil && !IsNil(o.Enablecompletion) {
		return true
	}

	return false
}

// SetEnablecompletion gets a reference to the given int32 and assigns it to the Enablecompletion field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetEnablecompletion(v int32) {
	o.Enablecompletion = &v
}

// GetEnddate returns the Enddate field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetEnddate() int32 {
	if o == nil || IsNil(o.Enddate) {
		var ret int32
		return ret
	}
	return *o.Enddate
}

// GetEnddateOk returns a tuple with the Enddate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetEnddateOk() (*int32, bool) {
	if o == nil || IsNil(o.Enddate) {
		return nil, false
	}
	return o.Enddate, true
}

// HasEnddate returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasEnddate() bool {
	if o != nil && !IsNil(o.Enddate) {
		return true
	}

	return false
}

// SetEnddate gets a reference to the given int32 and assigns it to the Enddate field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetEnddate(v int32) {
	o.Enddate = &v
}

// GetEnrollmentmethods returns the Enrollmentmethods field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetEnrollmentmethods() []map[string]interface{} {
	if o == nil || IsNil(o.Enrollmentmethods) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Enrollmentmethods
}

// GetEnrollmentmethodsOk returns a tuple with the Enrollmentmethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetEnrollmentmethodsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Enrollmentmethods) {
		return nil, false
	}
	return o.Enrollmentmethods, true
}

// HasEnrollmentmethods returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasEnrollmentmethods() bool {
	if o != nil && !IsNil(o.Enrollmentmethods) {
		return true
	}

	return false
}

// SetEnrollmentmethods gets a reference to the given []map[string]interface{} and assigns it to the Enrollmentmethods field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetEnrollmentmethods(v []map[string]interface{}) {
	o.Enrollmentmethods = v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetFilters() []CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner {
	if o == nil || IsNil(o.Filters) {
		var ret []CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetFiltersOk() ([]CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner and assigns it to the Filters field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetFilters(v []CoreCourseGetCoursesByField200ResponseCoursesInnerFiltersInner) {
	o.Filters = v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetFormat(v string) {
	o.Format = &v
}

// GetFullname returns the Fullname field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetFullname() string {
	if o == nil || IsNil(o.Fullname) {
		var ret string
		return ret
	}
	return *o.Fullname
}

// GetFullnameOk returns a tuple with the Fullname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetFullnameOk() (*string, bool) {
	if o == nil || IsNil(o.Fullname) {
		return nil, false
	}
	return o.Fullname, true
}

// HasFullname returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasFullname() bool {
	if o != nil && !IsNil(o.Fullname) {
		return true
	}

	return false
}

// SetFullname gets a reference to the given string and assigns it to the Fullname field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetFullname(v string) {
	o.Fullname = &v
}

// GetGroupmode returns the Groupmode field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetGroupmode() int32 {
	if o == nil || IsNil(o.Groupmode) {
		var ret int32
		return ret
	}
	return *o.Groupmode
}

// GetGroupmodeOk returns a tuple with the Groupmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetGroupmodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupmode) {
		return nil, false
	}
	return o.Groupmode, true
}

// HasGroupmode returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasGroupmode() bool {
	if o != nil && !IsNil(o.Groupmode) {
		return true
	}

	return false
}

// SetGroupmode gets a reference to the given int32 and assigns it to the Groupmode field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetGroupmode(v int32) {
	o.Groupmode = &v
}

// GetGroupmodeforce returns the Groupmodeforce field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetGroupmodeforce() int32 {
	if o == nil || IsNil(o.Groupmodeforce) {
		var ret int32
		return ret
	}
	return *o.Groupmodeforce
}

// GetGroupmodeforceOk returns a tuple with the Groupmodeforce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetGroupmodeforceOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupmodeforce) {
		return nil, false
	}
	return o.Groupmodeforce, true
}

// HasGroupmodeforce returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasGroupmodeforce() bool {
	if o != nil && !IsNil(o.Groupmodeforce) {
		return true
	}

	return false
}

// SetGroupmodeforce gets a reference to the given int32 and assigns it to the Groupmodeforce field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetGroupmodeforce(v int32) {
	o.Groupmodeforce = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetId(v int32) {
	o.Id = &v
}

// GetIdnumber returns the Idnumber field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetIdnumber() string {
	if o == nil || IsNil(o.Idnumber) {
		var ret string
		return ret
	}
	return *o.Idnumber
}

// GetIdnumberOk returns a tuple with the Idnumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetIdnumberOk() (*string, bool) {
	if o == nil || IsNil(o.Idnumber) {
		return nil, false
	}
	return o.Idnumber, true
}

// HasIdnumber returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasIdnumber() bool {
	if o != nil && !IsNil(o.Idnumber) {
		return true
	}

	return false
}

// SetIdnumber gets a reference to the given string and assigns it to the Idnumber field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetIdnumber(v string) {
	o.Idnumber = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetLang(v string) {
	o.Lang = &v
}

// GetLegacyfiles returns the Legacyfiles field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetLegacyfiles() int32 {
	if o == nil || IsNil(o.Legacyfiles) {
		var ret int32
		return ret
	}
	return *o.Legacyfiles
}

// GetLegacyfilesOk returns a tuple with the Legacyfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetLegacyfilesOk() (*int32, bool) {
	if o == nil || IsNil(o.Legacyfiles) {
		return nil, false
	}
	return o.Legacyfiles, true
}

// HasLegacyfiles returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasLegacyfiles() bool {
	if o != nil && !IsNil(o.Legacyfiles) {
		return true
	}

	return false
}

// SetLegacyfiles gets a reference to the given int32 and assigns it to the Legacyfiles field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetLegacyfiles(v int32) {
	o.Legacyfiles = &v
}

// GetMarker returns the Marker field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetMarker() int32 {
	if o == nil || IsNil(o.Marker) {
		var ret int32
		return ret
	}
	return *o.Marker
}

// GetMarkerOk returns a tuple with the Marker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetMarkerOk() (*int32, bool) {
	if o == nil || IsNil(o.Marker) {
		return nil, false
	}
	return o.Marker, true
}

// HasMarker returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasMarker() bool {
	if o != nil && !IsNil(o.Marker) {
		return true
	}

	return false
}

// SetMarker gets a reference to the given int32 and assigns it to the Marker field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetMarker(v int32) {
	o.Marker = &v
}

// GetMaxbytes returns the Maxbytes field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetMaxbytes() int32 {
	if o == nil || IsNil(o.Maxbytes) {
		var ret int32
		return ret
	}
	return *o.Maxbytes
}

// GetMaxbytesOk returns a tuple with the Maxbytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetMaxbytesOk() (*int32, bool) {
	if o == nil || IsNil(o.Maxbytes) {
		return nil, false
	}
	return o.Maxbytes, true
}

// HasMaxbytes returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasMaxbytes() bool {
	if o != nil && !IsNil(o.Maxbytes) {
		return true
	}

	return false
}

// SetMaxbytes gets a reference to the given int32 and assigns it to the Maxbytes field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetMaxbytes(v int32) {
	o.Maxbytes = &v
}

// GetNewsitems returns the Newsitems field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetNewsitems() int32 {
	if o == nil || IsNil(o.Newsitems) {
		var ret int32
		return ret
	}
	return *o.Newsitems
}

// GetNewsitemsOk returns a tuple with the Newsitems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetNewsitemsOk() (*int32, bool) {
	if o == nil || IsNil(o.Newsitems) {
		return nil, false
	}
	return o.Newsitems, true
}

// HasNewsitems returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasNewsitems() bool {
	if o != nil && !IsNil(o.Newsitems) {
		return true
	}

	return false
}

// SetNewsitems gets a reference to the given int32 and assigns it to the Newsitems field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetNewsitems(v int32) {
	o.Newsitems = &v
}

// GetOverviewfiles returns the Overviewfiles field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetOverviewfiles() []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner {
	if o == nil || IsNil(o.Overviewfiles) {
		var ret []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner
		return ret
	}
	return o.Overviewfiles
}

// GetOverviewfilesOk returns a tuple with the Overviewfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetOverviewfilesOk() ([]CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner, bool) {
	if o == nil || IsNil(o.Overviewfiles) {
		return nil, false
	}
	return o.Overviewfiles, true
}

// HasOverviewfiles returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasOverviewfiles() bool {
	if o != nil && !IsNil(o.Overviewfiles) {
		return true
	}

	return false
}

// SetOverviewfiles gets a reference to the given []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner and assigns it to the Overviewfiles field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetOverviewfiles(v []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner) {
	o.Overviewfiles = v
}

// GetRequested returns the Requested field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetRequested() int32 {
	if o == nil || IsNil(o.Requested) {
		var ret int32
		return ret
	}
	return *o.Requested
}

// GetRequestedOk returns a tuple with the Requested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetRequestedOk() (*int32, bool) {
	if o == nil || IsNil(o.Requested) {
		return nil, false
	}
	return o.Requested, true
}

// HasRequested returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasRequested() bool {
	if o != nil && !IsNil(o.Requested) {
		return true
	}

	return false
}

// SetRequested gets a reference to the given int32 and assigns it to the Requested field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetRequested(v int32) {
	o.Requested = &v
}

// GetShortname returns the Shortname field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetShortname() string {
	if o == nil || IsNil(o.Shortname) {
		var ret string
		return ret
	}
	return *o.Shortname
}

// GetShortnameOk returns a tuple with the Shortname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetShortnameOk() (*string, bool) {
	if o == nil || IsNil(o.Shortname) {
		return nil, false
	}
	return o.Shortname, true
}

// HasShortname returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasShortname() bool {
	if o != nil && !IsNil(o.Shortname) {
		return true
	}

	return false
}

// SetShortname gets a reference to the given string and assigns it to the Shortname field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetShortname(v string) {
	o.Shortname = &v
}

// GetShowactivitydates returns the Showactivitydates field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetShowactivitydates() bool {
	if o == nil || IsNil(o.Showactivitydates) {
		var ret bool
		return ret
	}
	return *o.Showactivitydates
}

// GetShowactivitydatesOk returns a tuple with the Showactivitydates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetShowactivitydatesOk() (*bool, bool) {
	if o == nil || IsNil(o.Showactivitydates) {
		return nil, false
	}
	return o.Showactivitydates, true
}

// HasShowactivitydates returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasShowactivitydates() bool {
	if o != nil && !IsNil(o.Showactivitydates) {
		return true
	}

	return false
}

// SetShowactivitydates gets a reference to the given bool and assigns it to the Showactivitydates field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetShowactivitydates(v bool) {
	o.Showactivitydates = &v
}

// GetShowcompletionconditions returns the Showcompletionconditions field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetShowcompletionconditions() bool {
	if o == nil || IsNil(o.Showcompletionconditions) {
		var ret bool
		return ret
	}
	return *o.Showcompletionconditions
}

// GetShowcompletionconditionsOk returns a tuple with the Showcompletionconditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetShowcompletionconditionsOk() (*bool, bool) {
	if o == nil || IsNil(o.Showcompletionconditions) {
		return nil, false
	}
	return o.Showcompletionconditions, true
}

// HasShowcompletionconditions returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasShowcompletionconditions() bool {
	if o != nil && !IsNil(o.Showcompletionconditions) {
		return true
	}

	return false
}

// SetShowcompletionconditions gets a reference to the given bool and assigns it to the Showcompletionconditions field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetShowcompletionconditions(v bool) {
	o.Showcompletionconditions = &v
}

// GetShowgrades returns the Showgrades field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetShowgrades() int32 {
	if o == nil || IsNil(o.Showgrades) {
		var ret int32
		return ret
	}
	return *o.Showgrades
}

// GetShowgradesOk returns a tuple with the Showgrades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetShowgradesOk() (*int32, bool) {
	if o == nil || IsNil(o.Showgrades) {
		return nil, false
	}
	return o.Showgrades, true
}

// HasShowgrades returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasShowgrades() bool {
	if o != nil && !IsNil(o.Showgrades) {
		return true
	}

	return false
}

// SetShowgrades gets a reference to the given int32 and assigns it to the Showgrades field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetShowgrades(v int32) {
	o.Showgrades = &v
}

// GetShowreports returns the Showreports field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetShowreports() int32 {
	if o == nil || IsNil(o.Showreports) {
		var ret int32
		return ret
	}
	return *o.Showreports
}

// GetShowreportsOk returns a tuple with the Showreports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetShowreportsOk() (*int32, bool) {
	if o == nil || IsNil(o.Showreports) {
		return nil, false
	}
	return o.Showreports, true
}

// HasShowreports returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasShowreports() bool {
	if o != nil && !IsNil(o.Showreports) {
		return true
	}

	return false
}

// SetShowreports gets a reference to the given int32 and assigns it to the Showreports field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetShowreports(v int32) {
	o.Showreports = &v
}

// GetSortorder returns the Sortorder field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetSortorder() int32 {
	if o == nil || IsNil(o.Sortorder) {
		var ret int32
		return ret
	}
	return *o.Sortorder
}

// GetSortorderOk returns a tuple with the Sortorder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetSortorderOk() (*int32, bool) {
	if o == nil || IsNil(o.Sortorder) {
		return nil, false
	}
	return o.Sortorder, true
}

// HasSortorder returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasSortorder() bool {
	if o != nil && !IsNil(o.Sortorder) {
		return true
	}

	return false
}

// SetSortorder gets a reference to the given int32 and assigns it to the Sortorder field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetSortorder(v int32) {
	o.Sortorder = &v
}

// GetStartdate returns the Startdate field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetStartdate() int32 {
	if o == nil || IsNil(o.Startdate) {
		var ret int32
		return ret
	}
	return *o.Startdate
}

// GetStartdateOk returns a tuple with the Startdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetStartdateOk() (*int32, bool) {
	if o == nil || IsNil(o.Startdate) {
		return nil, false
	}
	return o.Startdate, true
}

// HasStartdate returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasStartdate() bool {
	if o != nil && !IsNil(o.Startdate) {
		return true
	}

	return false
}

// SetStartdate gets a reference to the given int32 and assigns it to the Startdate field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetStartdate(v int32) {
	o.Startdate = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetSummary(v string) {
	o.Summary = &v
}

// GetSummaryfiles returns the Summaryfiles field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetSummaryfiles() []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner {
	if o == nil || IsNil(o.Summaryfiles) {
		var ret []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner
		return ret
	}
	return o.Summaryfiles
}

// GetSummaryfilesOk returns a tuple with the Summaryfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetSummaryfilesOk() ([]CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner, bool) {
	if o == nil || IsNil(o.Summaryfiles) {
		return nil, false
	}
	return o.Summaryfiles, true
}

// HasSummaryfiles returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasSummaryfiles() bool {
	if o != nil && !IsNil(o.Summaryfiles) {
		return true
	}

	return false
}

// SetSummaryfiles gets a reference to the given []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner and assigns it to the Summaryfiles field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetSummaryfiles(v []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner) {
	o.Summaryfiles = v
}

// GetSummaryformat returns the Summaryformat field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetSummaryformat() int32 {
	if o == nil || IsNil(o.Summaryformat) {
		var ret int32
		return ret
	}
	return *o.Summaryformat
}

// GetSummaryformatOk returns a tuple with the Summaryformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetSummaryformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Summaryformat) {
		return nil, false
	}
	return o.Summaryformat, true
}

// HasSummaryformat returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasSummaryformat() bool {
	if o != nil && !IsNil(o.Summaryformat) {
		return true
	}

	return false
}

// SetSummaryformat gets a reference to the given int32 and assigns it to the Summaryformat field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetSummaryformat(v int32) {
	o.Summaryformat = &v
}

// GetTheme returns the Theme field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetTheme() string {
	if o == nil || IsNil(o.Theme) {
		var ret string
		return ret
	}
	return *o.Theme
}

// GetThemeOk returns a tuple with the Theme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetThemeOk() (*string, bool) {
	if o == nil || IsNil(o.Theme) {
		return nil, false
	}
	return o.Theme, true
}

// HasTheme returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasTheme() bool {
	if o != nil && !IsNil(o.Theme) {
		return true
	}

	return false
}

// SetTheme gets a reference to the given string and assigns it to the Theme field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetTheme(v string) {
	o.Theme = &v
}

// GetTimecreated returns the Timecreated field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetTimecreated() int32 {
	if o == nil || IsNil(o.Timecreated) {
		var ret int32
		return ret
	}
	return *o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetTimecreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecreated) {
		return nil, false
	}
	return o.Timecreated, true
}

// HasTimecreated returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasTimecreated() bool {
	if o != nil && !IsNil(o.Timecreated) {
		return true
	}

	return false
}

// SetTimecreated gets a reference to the given int32 and assigns it to the Timecreated field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetTimecreated(v int32) {
	o.Timecreated = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetVisible() int32 {
	if o == nil || IsNil(o.Visible) {
		var ret int32
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) GetVisibleOk() (*int32, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given int32 and assigns it to the Visible field.
func (o *CoreCourseGetCoursesByField200ResponseCoursesInner) SetVisible(v int32) {
	o.Visible = &v
}

func (o CoreCourseGetCoursesByField200ResponseCoursesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCourseGetCoursesByField200ResponseCoursesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cacherev) {
		toSerialize["cacherev"] = o.Cacherev
	}
	if !IsNil(o.Calendartype) {
		toSerialize["calendartype"] = o.Calendartype
	}
	if !IsNil(o.Categoryid) {
		toSerialize["categoryid"] = o.Categoryid
	}
	if !IsNil(o.Categoryname) {
		toSerialize["categoryname"] = o.Categoryname
	}
	if !IsNil(o.Completionnotify) {
		toSerialize["completionnotify"] = o.Completionnotify
	}
	if !IsNil(o.Contacts) {
		toSerialize["contacts"] = o.Contacts
	}
	if !IsNil(o.Courseformatoptions) {
		toSerialize["courseformatoptions"] = o.Courseformatoptions
	}
	if !IsNil(o.Courseimage) {
		toSerialize["courseimage"] = o.Courseimage
	}
	if !IsNil(o.Customfields) {
		toSerialize["customfields"] = o.Customfields
	}
	if !IsNil(o.Defaultgroupingid) {
		toSerialize["defaultgroupingid"] = o.Defaultgroupingid
	}
	if !IsNil(o.Displayname) {
		toSerialize["displayname"] = o.Displayname
	}
	if !IsNil(o.Enablecompletion) {
		toSerialize["enablecompletion"] = o.Enablecompletion
	}
	if !IsNil(o.Enddate) {
		toSerialize["enddate"] = o.Enddate
	}
	if !IsNil(o.Enrollmentmethods) {
		toSerialize["enrollmentmethods"] = o.Enrollmentmethods
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Fullname) {
		toSerialize["fullname"] = o.Fullname
	}
	if !IsNil(o.Groupmode) {
		toSerialize["groupmode"] = o.Groupmode
	}
	if !IsNil(o.Groupmodeforce) {
		toSerialize["groupmodeforce"] = o.Groupmodeforce
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Idnumber) {
		toSerialize["idnumber"] = o.Idnumber
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !IsNil(o.Legacyfiles) {
		toSerialize["legacyfiles"] = o.Legacyfiles
	}
	if !IsNil(o.Marker) {
		toSerialize["marker"] = o.Marker
	}
	if !IsNil(o.Maxbytes) {
		toSerialize["maxbytes"] = o.Maxbytes
	}
	if !IsNil(o.Newsitems) {
		toSerialize["newsitems"] = o.Newsitems
	}
	if !IsNil(o.Overviewfiles) {
		toSerialize["overviewfiles"] = o.Overviewfiles
	}
	if !IsNil(o.Requested) {
		toSerialize["requested"] = o.Requested
	}
	if !IsNil(o.Shortname) {
		toSerialize["shortname"] = o.Shortname
	}
	if !IsNil(o.Showactivitydates) {
		toSerialize["showactivitydates"] = o.Showactivitydates
	}
	if !IsNil(o.Showcompletionconditions) {
		toSerialize["showcompletionconditions"] = o.Showcompletionconditions
	}
	if !IsNil(o.Showgrades) {
		toSerialize["showgrades"] = o.Showgrades
	}
	if !IsNil(o.Showreports) {
		toSerialize["showreports"] = o.Showreports
	}
	if !IsNil(o.Sortorder) {
		toSerialize["sortorder"] = o.Sortorder
	}
	if !IsNil(o.Startdate) {
		toSerialize["startdate"] = o.Startdate
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.Summaryfiles) {
		toSerialize["summaryfiles"] = o.Summaryfiles
	}
	if !IsNil(o.Summaryformat) {
		toSerialize["summaryformat"] = o.Summaryformat
	}
	if !IsNil(o.Theme) {
		toSerialize["theme"] = o.Theme
	}
	if !IsNil(o.Timecreated) {
		toSerialize["timecreated"] = o.Timecreated
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	return toSerialize, nil
}

type NullableCoreCourseGetCoursesByField200ResponseCoursesInner struct {
	value *CoreCourseGetCoursesByField200ResponseCoursesInner
	isSet bool
}

func (v NullableCoreCourseGetCoursesByField200ResponseCoursesInner) Get() *CoreCourseGetCoursesByField200ResponseCoursesInner {
	return v.value
}

func (v *NullableCoreCourseGetCoursesByField200ResponseCoursesInner) Set(val *CoreCourseGetCoursesByField200ResponseCoursesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCourseGetCoursesByField200ResponseCoursesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCourseGetCoursesByField200ResponseCoursesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCourseGetCoursesByField200ResponseCoursesInner(val *CoreCourseGetCoursesByField200ResponseCoursesInner) *NullableCoreCourseGetCoursesByField200ResponseCoursesInner {
	return &NullableCoreCourseGetCoursesByField200ResponseCoursesInner{value: val, isSet: true}
}

func (v NullableCoreCourseGetCoursesByField200ResponseCoursesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCourseGetCoursesByField200ResponseCoursesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


