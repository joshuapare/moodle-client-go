/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreQuestionSubmitTagsFormRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreQuestionSubmitTagsFormRequest{}

// CoreQuestionSubmitTagsFormRequest struct for CoreQuestionSubmitTagsFormRequest
type CoreQuestionSubmitTagsFormRequest struct {
	// The editing context id
	Contextid int32 `json:"contextid"`
	// The data from the tag form
	Formdata string `json:"formdata"`
	// The question id
	Questionid int32 `json:"questionid"`
}

type _CoreQuestionSubmitTagsFormRequest CoreQuestionSubmitTagsFormRequest

// NewCoreQuestionSubmitTagsFormRequest instantiates a new CoreQuestionSubmitTagsFormRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreQuestionSubmitTagsFormRequest(contextid int32, formdata string, questionid int32) *CoreQuestionSubmitTagsFormRequest {
	this := CoreQuestionSubmitTagsFormRequest{}
	this.Contextid = contextid
	this.Formdata = formdata
	this.Questionid = questionid
	return &this
}

// NewCoreQuestionSubmitTagsFormRequestWithDefaults instantiates a new CoreQuestionSubmitTagsFormRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreQuestionSubmitTagsFormRequestWithDefaults() *CoreQuestionSubmitTagsFormRequest {
	this := CoreQuestionSubmitTagsFormRequest{}
	var contextid int32 = null
	this.Contextid = contextid
	var formdata string = "null"
	this.Formdata = formdata
	var questionid int32 = null
	this.Questionid = questionid
	return &this
}

// GetContextid returns the Contextid field value
func (o *CoreQuestionSubmitTagsFormRequest) GetContextid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Contextid
}

// GetContextidOk returns a tuple with the Contextid field value
// and a boolean to check if the value has been set.
func (o *CoreQuestionSubmitTagsFormRequest) GetContextidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contextid, true
}

// SetContextid sets field value
func (o *CoreQuestionSubmitTagsFormRequest) SetContextid(v int32) {
	o.Contextid = v
}

// GetFormdata returns the Formdata field value
func (o *CoreQuestionSubmitTagsFormRequest) GetFormdata() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Formdata
}

// GetFormdataOk returns a tuple with the Formdata field value
// and a boolean to check if the value has been set.
func (o *CoreQuestionSubmitTagsFormRequest) GetFormdataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Formdata, true
}

// SetFormdata sets field value
func (o *CoreQuestionSubmitTagsFormRequest) SetFormdata(v string) {
	o.Formdata = v
}

// GetQuestionid returns the Questionid field value
func (o *CoreQuestionSubmitTagsFormRequest) GetQuestionid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Questionid
}

// GetQuestionidOk returns a tuple with the Questionid field value
// and a boolean to check if the value has been set.
func (o *CoreQuestionSubmitTagsFormRequest) GetQuestionidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Questionid, true
}

// SetQuestionid sets field value
func (o *CoreQuestionSubmitTagsFormRequest) SetQuestionid(v int32) {
	o.Questionid = v
}

func (o CoreQuestionSubmitTagsFormRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreQuestionSubmitTagsFormRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contextid"] = o.Contextid
	toSerialize["formdata"] = o.Formdata
	toSerialize["questionid"] = o.Questionid
	return toSerialize, nil
}

func (o *CoreQuestionSubmitTagsFormRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contextid",
		"formdata",
		"questionid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreQuestionSubmitTagsFormRequest := _CoreQuestionSubmitTagsFormRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreQuestionSubmitTagsFormRequest)

	if err != nil {
		return err
	}

	*o = CoreQuestionSubmitTagsFormRequest(varCoreQuestionSubmitTagsFormRequest)

	return err
}

type NullableCoreQuestionSubmitTagsFormRequest struct {
	value *CoreQuestionSubmitTagsFormRequest
	isSet bool
}

func (v NullableCoreQuestionSubmitTagsFormRequest) Get() *CoreQuestionSubmitTagsFormRequest {
	return v.value
}

func (v *NullableCoreQuestionSubmitTagsFormRequest) Set(val *CoreQuestionSubmitTagsFormRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreQuestionSubmitTagsFormRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreQuestionSubmitTagsFormRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreQuestionSubmitTagsFormRequest(val *CoreQuestionSubmitTagsFormRequest) *NullableCoreQuestionSubmitTagsFormRequest {
	return &NullableCoreQuestionSubmitTagsFormRequest{value: val, isSet: true}
}

func (v NullableCoreQuestionSubmitTagsFormRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreQuestionSubmitTagsFormRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


