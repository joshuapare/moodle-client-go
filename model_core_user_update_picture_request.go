/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreUserUpdatePictureRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreUserUpdatePictureRequest{}

// CoreUserUpdatePictureRequest struct for CoreUserUpdatePictureRequest
type CoreUserUpdatePictureRequest struct {
	// If we should delete the user picture
	Delete *bool `json:"delete,omitempty"`
	// Id of the user draft file to use as image
	Draftitemid int32 `json:"draftitemid"`
	// Id of the user, 0 for current user
	Userid *int32 `json:"userid,omitempty"`
}

type _CoreUserUpdatePictureRequest CoreUserUpdatePictureRequest

// NewCoreUserUpdatePictureRequest instantiates a new CoreUserUpdatePictureRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreUserUpdatePictureRequest(draftitemid int32) *CoreUserUpdatePictureRequest {
	this := CoreUserUpdatePictureRequest{}
	var delete bool = false
	this.Delete = &delete
	this.Draftitemid = draftitemid
	var userid int32 = 0
	this.Userid = &userid
	return &this
}

// NewCoreUserUpdatePictureRequestWithDefaults instantiates a new CoreUserUpdatePictureRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreUserUpdatePictureRequestWithDefaults() *CoreUserUpdatePictureRequest {
	this := CoreUserUpdatePictureRequest{}
	var delete bool = false
	this.Delete = &delete
	var draftitemid int32 = null
	this.Draftitemid = draftitemid
	var userid int32 = 0
	this.Userid = &userid
	return &this
}

// GetDelete returns the Delete field value if set, zero value otherwise.
func (o *CoreUserUpdatePictureRequest) GetDelete() bool {
	if o == nil || IsNil(o.Delete) {
		var ret bool
		return ret
	}
	return *o.Delete
}

// GetDeleteOk returns a tuple with the Delete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUserUpdatePictureRequest) GetDeleteOk() (*bool, bool) {
	if o == nil || IsNil(o.Delete) {
		return nil, false
	}
	return o.Delete, true
}

// HasDelete returns a boolean if a field has been set.
func (o *CoreUserUpdatePictureRequest) HasDelete() bool {
	if o != nil && !IsNil(o.Delete) {
		return true
	}

	return false
}

// SetDelete gets a reference to the given bool and assigns it to the Delete field.
func (o *CoreUserUpdatePictureRequest) SetDelete(v bool) {
	o.Delete = &v
}

// GetDraftitemid returns the Draftitemid field value
func (o *CoreUserUpdatePictureRequest) GetDraftitemid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Draftitemid
}

// GetDraftitemidOk returns a tuple with the Draftitemid field value
// and a boolean to check if the value has been set.
func (o *CoreUserUpdatePictureRequest) GetDraftitemidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Draftitemid, true
}

// SetDraftitemid sets field value
func (o *CoreUserUpdatePictureRequest) SetDraftitemid(v int32) {
	o.Draftitemid = v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *CoreUserUpdatePictureRequest) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUserUpdatePictureRequest) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *CoreUserUpdatePictureRequest) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *CoreUserUpdatePictureRequest) SetUserid(v int32) {
	o.Userid = &v
}

func (o CoreUserUpdatePictureRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreUserUpdatePictureRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Delete) {
		toSerialize["delete"] = o.Delete
	}
	toSerialize["draftitemid"] = o.Draftitemid
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

func (o *CoreUserUpdatePictureRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"draftitemid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreUserUpdatePictureRequest := _CoreUserUpdatePictureRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreUserUpdatePictureRequest)

	if err != nil {
		return err
	}

	*o = CoreUserUpdatePictureRequest(varCoreUserUpdatePictureRequest)

	return err
}

type NullableCoreUserUpdatePictureRequest struct {
	value *CoreUserUpdatePictureRequest
	isSet bool
}

func (v NullableCoreUserUpdatePictureRequest) Get() *CoreUserUpdatePictureRequest {
	return v.value
}

func (v *NullableCoreUserUpdatePictureRequest) Set(val *CoreUserUpdatePictureRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreUserUpdatePictureRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreUserUpdatePictureRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreUserUpdatePictureRequest(val *CoreUserUpdatePictureRequest) *NullableCoreUserUpdatePictureRequest {
	return &NullableCoreUserUpdatePictureRequest{value: val, isSet: true}
}

func (v NullableCoreUserUpdatePictureRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreUserUpdatePictureRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


