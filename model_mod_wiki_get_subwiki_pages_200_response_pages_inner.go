/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModWikiGetSubwikiPages200ResponsePagesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModWikiGetSubwikiPages200ResponsePagesInner{}

// ModWikiGetSubwikiPages200ResponsePagesInner Pages
type ModWikiGetSubwikiPages200ResponsePagesInner struct {
	// Page contents.
	Cachedcontent *string `json:"cachedcontent,omitempty"`
	// True if user can edit the page.
	Caneditpage *bool `json:"caneditpage,omitempty"`
	// cachedcontent format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Contentformat *int32 `json:"contentformat,omitempty"`
	// Size of page contents in bytes (doesn't include size of attached files).
	Contentsize *int32 `json:"contentsize,omitempty"`
	// True if it's the first page.
	Firstpage *bool `json:"firstpage,omitempty"`
	// Page ID.
	Id *int32 `json:"id,omitempty"`
	// Number of times the page has been viewed.
	Pageviews *int32 `json:"pageviews,omitempty"`
	// 1 if readonly, 0 otherwise.
	Readonly *int32 `json:"readonly,omitempty"`
	// Page's subwiki ID.
	Subwikiid *int32 `json:"subwikiid,omitempty"`
	Tags []ModDataGetEntries200ResponseEntriesInnerTagsInner `json:"tags,omitempty"`
	// Time of creation.
	Timecreated *int32 `json:"timecreated,omitempty"`
	// Time of last modification.
	Timemodified *int32 `json:"timemodified,omitempty"`
	// Time of last renderization.
	Timerendered *int32 `json:"timerendered,omitempty"`
	// Page title.
	Title *string `json:"title,omitempty"`
	// ID of the user that last modified the page.
	Userid *int32 `json:"userid,omitempty"`
}

// NewModWikiGetSubwikiPages200ResponsePagesInner instantiates a new ModWikiGetSubwikiPages200ResponsePagesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModWikiGetSubwikiPages200ResponsePagesInner() *ModWikiGetSubwikiPages200ResponsePagesInner {
	this := ModWikiGetSubwikiPages200ResponsePagesInner{}
	var contentsize int32 = null
	this.Contentsize = &contentsize
	var firstpage bool = null
	this.Firstpage = &firstpage
	var pageviews int32 = null
	this.Pageviews = &pageviews
	var readonly int32 = null
	this.Readonly = &readonly
	var timecreated int32 = null
	this.Timecreated = &timecreated
	var timemodified int32 = null
	this.Timemodified = &timemodified
	var timerendered int32 = null
	this.Timerendered = &timerendered
	var userid int32 = null
	this.Userid = &userid
	return &this
}

// NewModWikiGetSubwikiPages200ResponsePagesInnerWithDefaults instantiates a new ModWikiGetSubwikiPages200ResponsePagesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModWikiGetSubwikiPages200ResponsePagesInnerWithDefaults() *ModWikiGetSubwikiPages200ResponsePagesInner {
	this := ModWikiGetSubwikiPages200ResponsePagesInner{}
	var contentsize int32 = null
	this.Contentsize = &contentsize
	var firstpage bool = null
	this.Firstpage = &firstpage
	var pageviews int32 = null
	this.Pageviews = &pageviews
	var readonly int32 = null
	this.Readonly = &readonly
	var timecreated int32 = null
	this.Timecreated = &timecreated
	var timemodified int32 = null
	this.Timemodified = &timemodified
	var timerendered int32 = null
	this.Timerendered = &timerendered
	var userid int32 = null
	this.Userid = &userid
	return &this
}

// GetCachedcontent returns the Cachedcontent field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetCachedcontent() string {
	if o == nil || IsNil(o.Cachedcontent) {
		var ret string
		return ret
	}
	return *o.Cachedcontent
}

// GetCachedcontentOk returns a tuple with the Cachedcontent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetCachedcontentOk() (*string, bool) {
	if o == nil || IsNil(o.Cachedcontent) {
		return nil, false
	}
	return o.Cachedcontent, true
}

// HasCachedcontent returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasCachedcontent() bool {
	if o != nil && !IsNil(o.Cachedcontent) {
		return true
	}

	return false
}

// SetCachedcontent gets a reference to the given string and assigns it to the Cachedcontent field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetCachedcontent(v string) {
	o.Cachedcontent = &v
}

// GetCaneditpage returns the Caneditpage field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetCaneditpage() bool {
	if o == nil || IsNil(o.Caneditpage) {
		var ret bool
		return ret
	}
	return *o.Caneditpage
}

// GetCaneditpageOk returns a tuple with the Caneditpage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetCaneditpageOk() (*bool, bool) {
	if o == nil || IsNil(o.Caneditpage) {
		return nil, false
	}
	return o.Caneditpage, true
}

// HasCaneditpage returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasCaneditpage() bool {
	if o != nil && !IsNil(o.Caneditpage) {
		return true
	}

	return false
}

// SetCaneditpage gets a reference to the given bool and assigns it to the Caneditpage field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetCaneditpage(v bool) {
	o.Caneditpage = &v
}

// GetContentformat returns the Contentformat field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetContentformat() int32 {
	if o == nil || IsNil(o.Contentformat) {
		var ret int32
		return ret
	}
	return *o.Contentformat
}

// GetContentformatOk returns a tuple with the Contentformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetContentformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Contentformat) {
		return nil, false
	}
	return o.Contentformat, true
}

// HasContentformat returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasContentformat() bool {
	if o != nil && !IsNil(o.Contentformat) {
		return true
	}

	return false
}

// SetContentformat gets a reference to the given int32 and assigns it to the Contentformat field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetContentformat(v int32) {
	o.Contentformat = &v
}

// GetContentsize returns the Contentsize field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetContentsize() int32 {
	if o == nil || IsNil(o.Contentsize) {
		var ret int32
		return ret
	}
	return *o.Contentsize
}

// GetContentsizeOk returns a tuple with the Contentsize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetContentsizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Contentsize) {
		return nil, false
	}
	return o.Contentsize, true
}

// HasContentsize returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasContentsize() bool {
	if o != nil && !IsNil(o.Contentsize) {
		return true
	}

	return false
}

// SetContentsize gets a reference to the given int32 and assigns it to the Contentsize field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetContentsize(v int32) {
	o.Contentsize = &v
}

// GetFirstpage returns the Firstpage field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetFirstpage() bool {
	if o == nil || IsNil(o.Firstpage) {
		var ret bool
		return ret
	}
	return *o.Firstpage
}

// GetFirstpageOk returns a tuple with the Firstpage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetFirstpageOk() (*bool, bool) {
	if o == nil || IsNil(o.Firstpage) {
		return nil, false
	}
	return o.Firstpage, true
}

// HasFirstpage returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasFirstpage() bool {
	if o != nil && !IsNil(o.Firstpage) {
		return true
	}

	return false
}

// SetFirstpage gets a reference to the given bool and assigns it to the Firstpage field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetFirstpage(v bool) {
	o.Firstpage = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetId(v int32) {
	o.Id = &v
}

// GetPageviews returns the Pageviews field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetPageviews() int32 {
	if o == nil || IsNil(o.Pageviews) {
		var ret int32
		return ret
	}
	return *o.Pageviews
}

// GetPageviewsOk returns a tuple with the Pageviews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetPageviewsOk() (*int32, bool) {
	if o == nil || IsNil(o.Pageviews) {
		return nil, false
	}
	return o.Pageviews, true
}

// HasPageviews returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasPageviews() bool {
	if o != nil && !IsNil(o.Pageviews) {
		return true
	}

	return false
}

// SetPageviews gets a reference to the given int32 and assigns it to the Pageviews field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetPageviews(v int32) {
	o.Pageviews = &v
}

// GetReadonly returns the Readonly field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetReadonly() int32 {
	if o == nil || IsNil(o.Readonly) {
		var ret int32
		return ret
	}
	return *o.Readonly
}

// GetReadonlyOk returns a tuple with the Readonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetReadonlyOk() (*int32, bool) {
	if o == nil || IsNil(o.Readonly) {
		return nil, false
	}
	return o.Readonly, true
}

// HasReadonly returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasReadonly() bool {
	if o != nil && !IsNil(o.Readonly) {
		return true
	}

	return false
}

// SetReadonly gets a reference to the given int32 and assigns it to the Readonly field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetReadonly(v int32) {
	o.Readonly = &v
}

// GetSubwikiid returns the Subwikiid field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetSubwikiid() int32 {
	if o == nil || IsNil(o.Subwikiid) {
		var ret int32
		return ret
	}
	return *o.Subwikiid
}

// GetSubwikiidOk returns a tuple with the Subwikiid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetSubwikiidOk() (*int32, bool) {
	if o == nil || IsNil(o.Subwikiid) {
		return nil, false
	}
	return o.Subwikiid, true
}

// HasSubwikiid returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasSubwikiid() bool {
	if o != nil && !IsNil(o.Subwikiid) {
		return true
	}

	return false
}

// SetSubwikiid gets a reference to the given int32 and assigns it to the Subwikiid field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetSubwikiid(v int32) {
	o.Subwikiid = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetTags() []ModDataGetEntries200ResponseEntriesInnerTagsInner {
	if o == nil || IsNil(o.Tags) {
		var ret []ModDataGetEntries200ResponseEntriesInnerTagsInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetTagsOk() ([]ModDataGetEntries200ResponseEntriesInnerTagsInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ModDataGetEntries200ResponseEntriesInnerTagsInner and assigns it to the Tags field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetTags(v []ModDataGetEntries200ResponseEntriesInnerTagsInner) {
	o.Tags = v
}

// GetTimecreated returns the Timecreated field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetTimecreated() int32 {
	if o == nil || IsNil(o.Timecreated) {
		var ret int32
		return ret
	}
	return *o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetTimecreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecreated) {
		return nil, false
	}
	return o.Timecreated, true
}

// HasTimecreated returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasTimecreated() bool {
	if o != nil && !IsNil(o.Timecreated) {
		return true
	}

	return false
}

// SetTimecreated gets a reference to the given int32 and assigns it to the Timecreated field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetTimecreated(v int32) {
	o.Timecreated = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetTimerendered returns the Timerendered field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetTimerendered() int32 {
	if o == nil || IsNil(o.Timerendered) {
		var ret int32
		return ret
	}
	return *o.Timerendered
}

// GetTimerenderedOk returns a tuple with the Timerendered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetTimerenderedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timerendered) {
		return nil, false
	}
	return o.Timerendered, true
}

// HasTimerendered returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasTimerendered() bool {
	if o != nil && !IsNil(o.Timerendered) {
		return true
	}

	return false
}

// SetTimerendered gets a reference to the given int32 and assigns it to the Timerendered field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetTimerendered(v int32) {
	o.Timerendered = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetTitle(v string) {
	o.Title = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *ModWikiGetSubwikiPages200ResponsePagesInner) SetUserid(v int32) {
	o.Userid = &v
}

func (o ModWikiGetSubwikiPages200ResponsePagesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModWikiGetSubwikiPages200ResponsePagesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cachedcontent) {
		toSerialize["cachedcontent"] = o.Cachedcontent
	}
	if !IsNil(o.Caneditpage) {
		toSerialize["caneditpage"] = o.Caneditpage
	}
	if !IsNil(o.Contentformat) {
		toSerialize["contentformat"] = o.Contentformat
	}
	if !IsNil(o.Contentsize) {
		toSerialize["contentsize"] = o.Contentsize
	}
	if !IsNil(o.Firstpage) {
		toSerialize["firstpage"] = o.Firstpage
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Pageviews) {
		toSerialize["pageviews"] = o.Pageviews
	}
	if !IsNil(o.Readonly) {
		toSerialize["readonly"] = o.Readonly
	}
	if !IsNil(o.Subwikiid) {
		toSerialize["subwikiid"] = o.Subwikiid
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Timecreated) {
		toSerialize["timecreated"] = o.Timecreated
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Timerendered) {
		toSerialize["timerendered"] = o.Timerendered
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

type NullableModWikiGetSubwikiPages200ResponsePagesInner struct {
	value *ModWikiGetSubwikiPages200ResponsePagesInner
	isSet bool
}

func (v NullableModWikiGetSubwikiPages200ResponsePagesInner) Get() *ModWikiGetSubwikiPages200ResponsePagesInner {
	return v.value
}

func (v *NullableModWikiGetSubwikiPages200ResponsePagesInner) Set(val *ModWikiGetSubwikiPages200ResponsePagesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModWikiGetSubwikiPages200ResponsePagesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModWikiGetSubwikiPages200ResponsePagesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModWikiGetSubwikiPages200ResponsePagesInner(val *ModWikiGetSubwikiPages200ResponsePagesInner) *NullableModWikiGetSubwikiPages200ResponsePagesInner {
	return &NullableModWikiGetSubwikiPages200ResponsePagesInner{value: val, isSet: true}
}

func (v NullableModWikiGetSubwikiPages200ResponsePagesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModWikiGetSubwikiPages200ResponsePagesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


