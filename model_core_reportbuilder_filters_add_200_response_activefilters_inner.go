/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreReportbuilderFiltersAdd200ResponseActivefiltersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreReportbuilderFiltersAdd200ResponseActivefiltersInner{}

// CoreReportbuilderFiltersAdd200ResponseActivefiltersInner struct for CoreReportbuilderFiltersAdd200ResponseActivefiltersInner
type CoreReportbuilderFiltersAdd200ResponseActivefiltersInner struct {
	// entityname
	Entityname *string `json:"entityname,omitempty"`
	// heading
	Heading *string `json:"heading,omitempty"`
	// headingeditable
	Headingeditable *string `json:"headingeditable,omitempty"`
	// id
	Id *int32 `json:"id,omitempty"`
	// movetitle
	Movetitle *string `json:"movetitle,omitempty"`
	// sortorder
	Sortorder *int32 `json:"sortorder,omitempty"`
}

// NewCoreReportbuilderFiltersAdd200ResponseActivefiltersInner instantiates a new CoreReportbuilderFiltersAdd200ResponseActivefiltersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreReportbuilderFiltersAdd200ResponseActivefiltersInner() *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner {
	this := CoreReportbuilderFiltersAdd200ResponseActivefiltersInner{}
	var entityname string = "null"
	this.Entityname = &entityname
	var headingeditable string = "null"
	this.Headingeditable = &headingeditable
	return &this
}

// NewCoreReportbuilderFiltersAdd200ResponseActivefiltersInnerWithDefaults instantiates a new CoreReportbuilderFiltersAdd200ResponseActivefiltersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreReportbuilderFiltersAdd200ResponseActivefiltersInnerWithDefaults() *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner {
	this := CoreReportbuilderFiltersAdd200ResponseActivefiltersInner{}
	var entityname string = "null"
	this.Entityname = &entityname
	var headingeditable string = "null"
	this.Headingeditable = &headingeditable
	return &this
}

// GetEntityname returns the Entityname field value if set, zero value otherwise.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) GetEntityname() string {
	if o == nil || IsNil(o.Entityname) {
		var ret string
		return ret
	}
	return *o.Entityname
}

// GetEntitynameOk returns a tuple with the Entityname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) GetEntitynameOk() (*string, bool) {
	if o == nil || IsNil(o.Entityname) {
		return nil, false
	}
	return o.Entityname, true
}

// HasEntityname returns a boolean if a field has been set.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) HasEntityname() bool {
	if o != nil && !IsNil(o.Entityname) {
		return true
	}

	return false
}

// SetEntityname gets a reference to the given string and assigns it to the Entityname field.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) SetEntityname(v string) {
	o.Entityname = &v
}

// GetHeading returns the Heading field value if set, zero value otherwise.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) GetHeading() string {
	if o == nil || IsNil(o.Heading) {
		var ret string
		return ret
	}
	return *o.Heading
}

// GetHeadingOk returns a tuple with the Heading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) GetHeadingOk() (*string, bool) {
	if o == nil || IsNil(o.Heading) {
		return nil, false
	}
	return o.Heading, true
}

// HasHeading returns a boolean if a field has been set.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) HasHeading() bool {
	if o != nil && !IsNil(o.Heading) {
		return true
	}

	return false
}

// SetHeading gets a reference to the given string and assigns it to the Heading field.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) SetHeading(v string) {
	o.Heading = &v
}

// GetHeadingeditable returns the Headingeditable field value if set, zero value otherwise.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) GetHeadingeditable() string {
	if o == nil || IsNil(o.Headingeditable) {
		var ret string
		return ret
	}
	return *o.Headingeditable
}

// GetHeadingeditableOk returns a tuple with the Headingeditable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) GetHeadingeditableOk() (*string, bool) {
	if o == nil || IsNil(o.Headingeditable) {
		return nil, false
	}
	return o.Headingeditable, true
}

// HasHeadingeditable returns a boolean if a field has been set.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) HasHeadingeditable() bool {
	if o != nil && !IsNil(o.Headingeditable) {
		return true
	}

	return false
}

// SetHeadingeditable gets a reference to the given string and assigns it to the Headingeditable field.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) SetHeadingeditable(v string) {
	o.Headingeditable = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) SetId(v int32) {
	o.Id = &v
}

// GetMovetitle returns the Movetitle field value if set, zero value otherwise.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) GetMovetitle() string {
	if o == nil || IsNil(o.Movetitle) {
		var ret string
		return ret
	}
	return *o.Movetitle
}

// GetMovetitleOk returns a tuple with the Movetitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) GetMovetitleOk() (*string, bool) {
	if o == nil || IsNil(o.Movetitle) {
		return nil, false
	}
	return o.Movetitle, true
}

// HasMovetitle returns a boolean if a field has been set.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) HasMovetitle() bool {
	if o != nil && !IsNil(o.Movetitle) {
		return true
	}

	return false
}

// SetMovetitle gets a reference to the given string and assigns it to the Movetitle field.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) SetMovetitle(v string) {
	o.Movetitle = &v
}

// GetSortorder returns the Sortorder field value if set, zero value otherwise.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) GetSortorder() int32 {
	if o == nil || IsNil(o.Sortorder) {
		var ret int32
		return ret
	}
	return *o.Sortorder
}

// GetSortorderOk returns a tuple with the Sortorder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) GetSortorderOk() (*int32, bool) {
	if o == nil || IsNil(o.Sortorder) {
		return nil, false
	}
	return o.Sortorder, true
}

// HasSortorder returns a boolean if a field has been set.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) HasSortorder() bool {
	if o != nil && !IsNil(o.Sortorder) {
		return true
	}

	return false
}

// SetSortorder gets a reference to the given int32 and assigns it to the Sortorder field.
func (o *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) SetSortorder(v int32) {
	o.Sortorder = &v
}

func (o CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entityname) {
		toSerialize["entityname"] = o.Entityname
	}
	if !IsNil(o.Heading) {
		toSerialize["heading"] = o.Heading
	}
	if !IsNil(o.Headingeditable) {
		toSerialize["headingeditable"] = o.Headingeditable
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Movetitle) {
		toSerialize["movetitle"] = o.Movetitle
	}
	if !IsNil(o.Sortorder) {
		toSerialize["sortorder"] = o.Sortorder
	}
	return toSerialize, nil
}

type NullableCoreReportbuilderFiltersAdd200ResponseActivefiltersInner struct {
	value *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner
	isSet bool
}

func (v NullableCoreReportbuilderFiltersAdd200ResponseActivefiltersInner) Get() *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner {
	return v.value
}

func (v *NullableCoreReportbuilderFiltersAdd200ResponseActivefiltersInner) Set(val *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreReportbuilderFiltersAdd200ResponseActivefiltersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreReportbuilderFiltersAdd200ResponseActivefiltersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreReportbuilderFiltersAdd200ResponseActivefiltersInner(val *CoreReportbuilderFiltersAdd200ResponseActivefiltersInner) *NullableCoreReportbuilderFiltersAdd200ResponseActivefiltersInner {
	return &NullableCoreReportbuilderFiltersAdd200ResponseActivefiltersInner{value: val, isSet: true}
}

func (v NullableCoreReportbuilderFiltersAdd200ResponseActivefiltersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreReportbuilderFiltersAdd200ResponseActivefiltersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


