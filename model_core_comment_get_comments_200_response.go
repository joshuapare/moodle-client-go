/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCommentGetComments200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCommentGetComments200Response{}

// CoreCommentGetComments200Response struct for CoreCommentGetComments200Response
type CoreCommentGetComments200Response struct {
	// Whether the user can post in this comment area.
	Canpost *bool `json:"canpost,omitempty"`
	Comments []CoreCommentGetComments200ResponseCommentsInner `json:"comments"`
	// Total number of comments.
	Count *int32 `json:"count,omitempty"`
	// Number of comments per page.
	Perpage *int32 `json:"perpage,omitempty"`
	Warnings []AuthEmailSignupUser200ResponseWarningsInner `json:"warnings,omitempty"`
}

type _CoreCommentGetComments200Response CoreCommentGetComments200Response

// NewCoreCommentGetComments200Response instantiates a new CoreCommentGetComments200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCommentGetComments200Response(comments []CoreCommentGetComments200ResponseCommentsInner) *CoreCommentGetComments200Response {
	this := CoreCommentGetComments200Response{}
	var canpost bool = null
	this.Canpost = &canpost
	this.Comments = comments
	var count int32 = null
	this.Count = &count
	var perpage int32 = null
	this.Perpage = &perpage
	return &this
}

// NewCoreCommentGetComments200ResponseWithDefaults instantiates a new CoreCommentGetComments200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCommentGetComments200ResponseWithDefaults() *CoreCommentGetComments200Response {
	this := CoreCommentGetComments200Response{}
	var canpost bool = null
	this.Canpost = &canpost
	var count int32 = null
	this.Count = &count
	var perpage int32 = null
	this.Perpage = &perpage
	return &this
}

// GetCanpost returns the Canpost field value if set, zero value otherwise.
func (o *CoreCommentGetComments200Response) GetCanpost() bool {
	if o == nil || IsNil(o.Canpost) {
		var ret bool
		return ret
	}
	return *o.Canpost
}

// GetCanpostOk returns a tuple with the Canpost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCommentGetComments200Response) GetCanpostOk() (*bool, bool) {
	if o == nil || IsNil(o.Canpost) {
		return nil, false
	}
	return o.Canpost, true
}

// HasCanpost returns a boolean if a field has been set.
func (o *CoreCommentGetComments200Response) HasCanpost() bool {
	if o != nil && !IsNil(o.Canpost) {
		return true
	}

	return false
}

// SetCanpost gets a reference to the given bool and assigns it to the Canpost field.
func (o *CoreCommentGetComments200Response) SetCanpost(v bool) {
	o.Canpost = &v
}

// GetComments returns the Comments field value
func (o *CoreCommentGetComments200Response) GetComments() []CoreCommentGetComments200ResponseCommentsInner {
	if o == nil {
		var ret []CoreCommentGetComments200ResponseCommentsInner
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *CoreCommentGetComments200Response) GetCommentsOk() ([]CoreCommentGetComments200ResponseCommentsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comments, true
}

// SetComments sets field value
func (o *CoreCommentGetComments200Response) SetComments(v []CoreCommentGetComments200ResponseCommentsInner) {
	o.Comments = v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *CoreCommentGetComments200Response) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCommentGetComments200Response) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *CoreCommentGetComments200Response) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *CoreCommentGetComments200Response) SetCount(v int32) {
	o.Count = &v
}

// GetPerpage returns the Perpage field value if set, zero value otherwise.
func (o *CoreCommentGetComments200Response) GetPerpage() int32 {
	if o == nil || IsNil(o.Perpage) {
		var ret int32
		return ret
	}
	return *o.Perpage
}

// GetPerpageOk returns a tuple with the Perpage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCommentGetComments200Response) GetPerpageOk() (*int32, bool) {
	if o == nil || IsNil(o.Perpage) {
		return nil, false
	}
	return o.Perpage, true
}

// HasPerpage returns a boolean if a field has been set.
func (o *CoreCommentGetComments200Response) HasPerpage() bool {
	if o != nil && !IsNil(o.Perpage) {
		return true
	}

	return false
}

// SetPerpage gets a reference to the given int32 and assigns it to the Perpage field.
func (o *CoreCommentGetComments200Response) SetPerpage(v int32) {
	o.Perpage = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CoreCommentGetComments200Response) GetWarnings() []AuthEmailSignupUser200ResponseWarningsInner {
	if o == nil || IsNil(o.Warnings) {
		var ret []AuthEmailSignupUser200ResponseWarningsInner
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCommentGetComments200Response) GetWarningsOk() ([]AuthEmailSignupUser200ResponseWarningsInner, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CoreCommentGetComments200Response) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []AuthEmailSignupUser200ResponseWarningsInner and assigns it to the Warnings field.
func (o *CoreCommentGetComments200Response) SetWarnings(v []AuthEmailSignupUser200ResponseWarningsInner) {
	o.Warnings = v
}

func (o CoreCommentGetComments200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCommentGetComments200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Canpost) {
		toSerialize["canpost"] = o.Canpost
	}
	toSerialize["comments"] = o.Comments
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Perpage) {
		toSerialize["perpage"] = o.Perpage
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

func (o *CoreCommentGetComments200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"comments",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCommentGetComments200Response := _CoreCommentGetComments200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCommentGetComments200Response)

	if err != nil {
		return err
	}

	*o = CoreCommentGetComments200Response(varCoreCommentGetComments200Response)

	return err
}

type NullableCoreCommentGetComments200Response struct {
	value *CoreCommentGetComments200Response
	isSet bool
}

func (v NullableCoreCommentGetComments200Response) Get() *CoreCommentGetComments200Response {
	return v.value
}

func (v *NullableCoreCommentGetComments200Response) Set(val *CoreCommentGetComments200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCommentGetComments200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCommentGetComments200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCommentGetComments200Response(val *CoreCommentGetComments200Response) *NullableCoreCommentGetComments200Response {
	return &NullableCoreCommentGetComments200Response{value: val, isSet: true}
}

func (v NullableCoreCommentGetComments200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCommentGetComments200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


