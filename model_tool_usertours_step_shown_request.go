/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ToolUsertoursStepShownRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolUsertoursStepShownRequest{}

// ToolUsertoursStepShownRequest struct for ToolUsertoursStepShownRequest
type ToolUsertoursStepShownRequest struct {
	// Context ID
	Context int32 `json:"context"`
	// Page URL
	Pageurl string `json:"pageurl"`
	// Step ID
	Stepid int32 `json:"stepid"`
	// Step Number
	Stepindex int32 `json:"stepindex"`
	// Tour ID
	Tourid int32 `json:"tourid"`
}

type _ToolUsertoursStepShownRequest ToolUsertoursStepShownRequest

// NewToolUsertoursStepShownRequest instantiates a new ToolUsertoursStepShownRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolUsertoursStepShownRequest(context int32, pageurl string, stepid int32, stepindex int32, tourid int32) *ToolUsertoursStepShownRequest {
	this := ToolUsertoursStepShownRequest{}
	this.Context = context
	this.Pageurl = pageurl
	this.Stepid = stepid
	this.Stepindex = stepindex
	this.Tourid = tourid
	return &this
}

// NewToolUsertoursStepShownRequestWithDefaults instantiates a new ToolUsertoursStepShownRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolUsertoursStepShownRequestWithDefaults() *ToolUsertoursStepShownRequest {
	this := ToolUsertoursStepShownRequest{}
	return &this
}

// GetContext returns the Context field value
func (o *ToolUsertoursStepShownRequest) GetContext() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *ToolUsertoursStepShownRequest) GetContextOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *ToolUsertoursStepShownRequest) SetContext(v int32) {
	o.Context = v
}

// GetPageurl returns the Pageurl field value
func (o *ToolUsertoursStepShownRequest) GetPageurl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pageurl
}

// GetPageurlOk returns a tuple with the Pageurl field value
// and a boolean to check if the value has been set.
func (o *ToolUsertoursStepShownRequest) GetPageurlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pageurl, true
}

// SetPageurl sets field value
func (o *ToolUsertoursStepShownRequest) SetPageurl(v string) {
	o.Pageurl = v
}

// GetStepid returns the Stepid field value
func (o *ToolUsertoursStepShownRequest) GetStepid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Stepid
}

// GetStepidOk returns a tuple with the Stepid field value
// and a boolean to check if the value has been set.
func (o *ToolUsertoursStepShownRequest) GetStepidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stepid, true
}

// SetStepid sets field value
func (o *ToolUsertoursStepShownRequest) SetStepid(v int32) {
	o.Stepid = v
}

// GetStepindex returns the Stepindex field value
func (o *ToolUsertoursStepShownRequest) GetStepindex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Stepindex
}

// GetStepindexOk returns a tuple with the Stepindex field value
// and a boolean to check if the value has been set.
func (o *ToolUsertoursStepShownRequest) GetStepindexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stepindex, true
}

// SetStepindex sets field value
func (o *ToolUsertoursStepShownRequest) SetStepindex(v int32) {
	o.Stepindex = v
}

// GetTourid returns the Tourid field value
func (o *ToolUsertoursStepShownRequest) GetTourid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Tourid
}

// GetTouridOk returns a tuple with the Tourid field value
// and a boolean to check if the value has been set.
func (o *ToolUsertoursStepShownRequest) GetTouridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tourid, true
}

// SetTourid sets field value
func (o *ToolUsertoursStepShownRequest) SetTourid(v int32) {
	o.Tourid = v
}

func (o ToolUsertoursStepShownRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolUsertoursStepShownRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["context"] = o.Context
	toSerialize["pageurl"] = o.Pageurl
	toSerialize["stepid"] = o.Stepid
	toSerialize["stepindex"] = o.Stepindex
	toSerialize["tourid"] = o.Tourid
	return toSerialize, nil
}

func (o *ToolUsertoursStepShownRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"context",
		"pageurl",
		"stepid",
		"stepindex",
		"tourid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varToolUsertoursStepShownRequest := _ToolUsertoursStepShownRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varToolUsertoursStepShownRequest)

	if err != nil {
		return err
	}

	*o = ToolUsertoursStepShownRequest(varToolUsertoursStepShownRequest)

	return err
}

type NullableToolUsertoursStepShownRequest struct {
	value *ToolUsertoursStepShownRequest
	isSet bool
}

func (v NullableToolUsertoursStepShownRequest) Get() *ToolUsertoursStepShownRequest {
	return v.value
}

func (v *NullableToolUsertoursStepShownRequest) Set(val *ToolUsertoursStepShownRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableToolUsertoursStepShownRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableToolUsertoursStepShownRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolUsertoursStepShownRequest(val *ToolUsertoursStepShownRequest) *NullableToolUsertoursStepShownRequest {
	return &NullableToolUsertoursStepShownRequest{value: val, isSet: true}
}

func (v NullableToolUsertoursStepShownRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolUsertoursStepShownRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


