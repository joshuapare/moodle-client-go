/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModLtiUpdateToolTypeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModLtiUpdateToolTypeRequest{}

// ModLtiUpdateToolTypeRequest struct for ModLtiUpdateToolTypeRequest
type ModLtiUpdateToolTypeRequest struct {
	// Tool type description
	Description *string `json:"description,omitempty"`
	// Tool type id
	Id int32 `json:"id"`
	// Tool type name
	Name *string `json:"name,omitempty"`
	// Tool type state
	State *int32 `json:"state,omitempty"`
}

type _ModLtiUpdateToolTypeRequest ModLtiUpdateToolTypeRequest

// NewModLtiUpdateToolTypeRequest instantiates a new ModLtiUpdateToolTypeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModLtiUpdateToolTypeRequest(id int32) *ModLtiUpdateToolTypeRequest {
	this := ModLtiUpdateToolTypeRequest{}
	this.Id = id
	var state int32 = null
	this.State = &state
	return &this
}

// NewModLtiUpdateToolTypeRequestWithDefaults instantiates a new ModLtiUpdateToolTypeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModLtiUpdateToolTypeRequestWithDefaults() *ModLtiUpdateToolTypeRequest {
	this := ModLtiUpdateToolTypeRequest{}
	var state int32 = null
	this.State = &state
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModLtiUpdateToolTypeRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolTypeRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModLtiUpdateToolTypeRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModLtiUpdateToolTypeRequest) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value
func (o *ModLtiUpdateToolTypeRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolTypeRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModLtiUpdateToolTypeRequest) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModLtiUpdateToolTypeRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolTypeRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModLtiUpdateToolTypeRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModLtiUpdateToolTypeRequest) SetName(v string) {
	o.Name = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ModLtiUpdateToolTypeRequest) GetState() int32 {
	if o == nil || IsNil(o.State) {
		var ret int32
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolTypeRequest) GetStateOk() (*int32, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ModLtiUpdateToolTypeRequest) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given int32 and assigns it to the State field.
func (o *ModLtiUpdateToolTypeRequest) SetState(v int32) {
	o.State = &v
}

func (o ModLtiUpdateToolTypeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModLtiUpdateToolTypeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

func (o *ModLtiUpdateToolTypeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModLtiUpdateToolTypeRequest := _ModLtiUpdateToolTypeRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModLtiUpdateToolTypeRequest)

	if err != nil {
		return err
	}

	*o = ModLtiUpdateToolTypeRequest(varModLtiUpdateToolTypeRequest)

	return err
}

type NullableModLtiUpdateToolTypeRequest struct {
	value *ModLtiUpdateToolTypeRequest
	isSet bool
}

func (v NullableModLtiUpdateToolTypeRequest) Get() *ModLtiUpdateToolTypeRequest {
	return v.value
}

func (v *NullableModLtiUpdateToolTypeRequest) Set(val *ModLtiUpdateToolTypeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModLtiUpdateToolTypeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModLtiUpdateToolTypeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModLtiUpdateToolTypeRequest(val *ModLtiUpdateToolTypeRequest) *NullableModLtiUpdateToolTypeRequest {
	return &NullableModLtiUpdateToolTypeRequest{value: val, isSet: true}
}

func (v NullableModLtiUpdateToolTypeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModLtiUpdateToolTypeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


