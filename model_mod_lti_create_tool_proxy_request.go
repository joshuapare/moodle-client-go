/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModLtiCreateToolProxyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModLtiCreateToolProxyRequest{}

// ModLtiCreateToolProxyRequest struct for ModLtiCreateToolProxyRequest
type ModLtiCreateToolProxyRequest struct {
	Capabilityoffered []map[string]interface{} `json:"capabilityoffered,omitempty"`
	// Tool proxy name
	Name *string `json:"name,omitempty"`
	// Tool proxy registration URL
	Regurl string `json:"regurl"`
	Serviceoffered []map[string]interface{} `json:"serviceoffered,omitempty"`
}

type _ModLtiCreateToolProxyRequest ModLtiCreateToolProxyRequest

// NewModLtiCreateToolProxyRequest instantiates a new ModLtiCreateToolProxyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModLtiCreateToolProxyRequest(regurl string) *ModLtiCreateToolProxyRequest {
	this := ModLtiCreateToolProxyRequest{}
	var name string = ""
	this.Name = &name
	this.Regurl = regurl
	return &this
}

// NewModLtiCreateToolProxyRequestWithDefaults instantiates a new ModLtiCreateToolProxyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModLtiCreateToolProxyRequestWithDefaults() *ModLtiCreateToolProxyRequest {
	this := ModLtiCreateToolProxyRequest{}
	var name string = ""
	this.Name = &name
	var regurl string = "null"
	this.Regurl = regurl
	return &this
}

// GetCapabilityoffered returns the Capabilityoffered field value if set, zero value otherwise.
func (o *ModLtiCreateToolProxyRequest) GetCapabilityoffered() []map[string]interface{} {
	if o == nil || IsNil(o.Capabilityoffered) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Capabilityoffered
}

// GetCapabilityofferedOk returns a tuple with the Capabilityoffered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolProxyRequest) GetCapabilityofferedOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Capabilityoffered) {
		return nil, false
	}
	return o.Capabilityoffered, true
}

// HasCapabilityoffered returns a boolean if a field has been set.
func (o *ModLtiCreateToolProxyRequest) HasCapabilityoffered() bool {
	if o != nil && !IsNil(o.Capabilityoffered) {
		return true
	}

	return false
}

// SetCapabilityoffered gets a reference to the given []map[string]interface{} and assigns it to the Capabilityoffered field.
func (o *ModLtiCreateToolProxyRequest) SetCapabilityoffered(v []map[string]interface{}) {
	o.Capabilityoffered = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModLtiCreateToolProxyRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolProxyRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModLtiCreateToolProxyRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModLtiCreateToolProxyRequest) SetName(v string) {
	o.Name = &v
}

// GetRegurl returns the Regurl field value
func (o *ModLtiCreateToolProxyRequest) GetRegurl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Regurl
}

// GetRegurlOk returns a tuple with the Regurl field value
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolProxyRequest) GetRegurlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Regurl, true
}

// SetRegurl sets field value
func (o *ModLtiCreateToolProxyRequest) SetRegurl(v string) {
	o.Regurl = v
}

// GetServiceoffered returns the Serviceoffered field value if set, zero value otherwise.
func (o *ModLtiCreateToolProxyRequest) GetServiceoffered() []map[string]interface{} {
	if o == nil || IsNil(o.Serviceoffered) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Serviceoffered
}

// GetServiceofferedOk returns a tuple with the Serviceoffered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolProxyRequest) GetServiceofferedOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Serviceoffered) {
		return nil, false
	}
	return o.Serviceoffered, true
}

// HasServiceoffered returns a boolean if a field has been set.
func (o *ModLtiCreateToolProxyRequest) HasServiceoffered() bool {
	if o != nil && !IsNil(o.Serviceoffered) {
		return true
	}

	return false
}

// SetServiceoffered gets a reference to the given []map[string]interface{} and assigns it to the Serviceoffered field.
func (o *ModLtiCreateToolProxyRequest) SetServiceoffered(v []map[string]interface{}) {
	o.Serviceoffered = v
}

func (o ModLtiCreateToolProxyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModLtiCreateToolProxyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Capabilityoffered) {
		toSerialize["capabilityoffered"] = o.Capabilityoffered
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["regurl"] = o.Regurl
	if !IsNil(o.Serviceoffered) {
		toSerialize["serviceoffered"] = o.Serviceoffered
	}
	return toSerialize, nil
}

func (o *ModLtiCreateToolProxyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"regurl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModLtiCreateToolProxyRequest := _ModLtiCreateToolProxyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModLtiCreateToolProxyRequest)

	if err != nil {
		return err
	}

	*o = ModLtiCreateToolProxyRequest(varModLtiCreateToolProxyRequest)

	return err
}

type NullableModLtiCreateToolProxyRequest struct {
	value *ModLtiCreateToolProxyRequest
	isSet bool
}

func (v NullableModLtiCreateToolProxyRequest) Get() *ModLtiCreateToolProxyRequest {
	return v.value
}

func (v *NullableModLtiCreateToolProxyRequest) Set(val *ModLtiCreateToolProxyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModLtiCreateToolProxyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModLtiCreateToolProxyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModLtiCreateToolProxyRequest(val *ModLtiCreateToolProxyRequest) *NullableModLtiCreateToolProxyRequest {
	return &NullableModLtiCreateToolProxyRequest{value: val, isSet: true}
}

func (v NullableModLtiCreateToolProxyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModLtiCreateToolProxyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


