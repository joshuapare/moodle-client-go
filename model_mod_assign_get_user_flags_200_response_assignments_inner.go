/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModAssignGetUserFlags200ResponseAssignmentsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModAssignGetUserFlags200ResponseAssignmentsInner{}

// ModAssignGetUserFlags200ResponseAssignmentsInner struct for ModAssignGetUserFlags200ResponseAssignmentsInner
type ModAssignGetUserFlags200ResponseAssignmentsInner struct {
	// assignment id
	Assignmentid *int32 `json:"assignmentid,omitempty"`
	Userflags []ModAssignGetUserFlags200ResponseAssignmentsInnerUserflagsInner `json:"userflags,omitempty"`
}

// NewModAssignGetUserFlags200ResponseAssignmentsInner instantiates a new ModAssignGetUserFlags200ResponseAssignmentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModAssignGetUserFlags200ResponseAssignmentsInner() *ModAssignGetUserFlags200ResponseAssignmentsInner {
	this := ModAssignGetUserFlags200ResponseAssignmentsInner{}
	return &this
}

// NewModAssignGetUserFlags200ResponseAssignmentsInnerWithDefaults instantiates a new ModAssignGetUserFlags200ResponseAssignmentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModAssignGetUserFlags200ResponseAssignmentsInnerWithDefaults() *ModAssignGetUserFlags200ResponseAssignmentsInner {
	this := ModAssignGetUserFlags200ResponseAssignmentsInner{}
	return &this
}

// GetAssignmentid returns the Assignmentid field value if set, zero value otherwise.
func (o *ModAssignGetUserFlags200ResponseAssignmentsInner) GetAssignmentid() int32 {
	if o == nil || IsNil(o.Assignmentid) {
		var ret int32
		return ret
	}
	return *o.Assignmentid
}

// GetAssignmentidOk returns a tuple with the Assignmentid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetUserFlags200ResponseAssignmentsInner) GetAssignmentidOk() (*int32, bool) {
	if o == nil || IsNil(o.Assignmentid) {
		return nil, false
	}
	return o.Assignmentid, true
}

// HasAssignmentid returns a boolean if a field has been set.
func (o *ModAssignGetUserFlags200ResponseAssignmentsInner) HasAssignmentid() bool {
	if o != nil && !IsNil(o.Assignmentid) {
		return true
	}

	return false
}

// SetAssignmentid gets a reference to the given int32 and assigns it to the Assignmentid field.
func (o *ModAssignGetUserFlags200ResponseAssignmentsInner) SetAssignmentid(v int32) {
	o.Assignmentid = &v
}

// GetUserflags returns the Userflags field value if set, zero value otherwise.
func (o *ModAssignGetUserFlags200ResponseAssignmentsInner) GetUserflags() []ModAssignGetUserFlags200ResponseAssignmentsInnerUserflagsInner {
	if o == nil || IsNil(o.Userflags) {
		var ret []ModAssignGetUserFlags200ResponseAssignmentsInnerUserflagsInner
		return ret
	}
	return o.Userflags
}

// GetUserflagsOk returns a tuple with the Userflags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetUserFlags200ResponseAssignmentsInner) GetUserflagsOk() ([]ModAssignGetUserFlags200ResponseAssignmentsInnerUserflagsInner, bool) {
	if o == nil || IsNil(o.Userflags) {
		return nil, false
	}
	return o.Userflags, true
}

// HasUserflags returns a boolean if a field has been set.
func (o *ModAssignGetUserFlags200ResponseAssignmentsInner) HasUserflags() bool {
	if o != nil && !IsNil(o.Userflags) {
		return true
	}

	return false
}

// SetUserflags gets a reference to the given []ModAssignGetUserFlags200ResponseAssignmentsInnerUserflagsInner and assigns it to the Userflags field.
func (o *ModAssignGetUserFlags200ResponseAssignmentsInner) SetUserflags(v []ModAssignGetUserFlags200ResponseAssignmentsInnerUserflagsInner) {
	o.Userflags = v
}

func (o ModAssignGetUserFlags200ResponseAssignmentsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModAssignGetUserFlags200ResponseAssignmentsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Assignmentid) {
		toSerialize["assignmentid"] = o.Assignmentid
	}
	if !IsNil(o.Userflags) {
		toSerialize["userflags"] = o.Userflags
	}
	return toSerialize, nil
}

type NullableModAssignGetUserFlags200ResponseAssignmentsInner struct {
	value *ModAssignGetUserFlags200ResponseAssignmentsInner
	isSet bool
}

func (v NullableModAssignGetUserFlags200ResponseAssignmentsInner) Get() *ModAssignGetUserFlags200ResponseAssignmentsInner {
	return v.value
}

func (v *NullableModAssignGetUserFlags200ResponseAssignmentsInner) Set(val *ModAssignGetUserFlags200ResponseAssignmentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModAssignGetUserFlags200ResponseAssignmentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModAssignGetUserFlags200ResponseAssignmentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModAssignGetUserFlags200ResponseAssignmentsInner(val *ModAssignGetUserFlags200ResponseAssignmentsInner) *NullableModAssignGetUserFlags200ResponseAssignmentsInner {
	return &NullableModAssignGetUserFlags200ResponseAssignmentsInner{value: val, isSet: true}
}

func (v NullableModAssignGetUserFlags200ResponseAssignmentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModAssignGetUserFlags200ResponseAssignmentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


