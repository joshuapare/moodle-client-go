/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModForumSetPinState200ResponseUrls type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumSetPinState200ResponseUrls{}

// ModForumSetPinState200ResponseUrls struct for ModForumSetPinState200ResponseUrls
type ModForumSetPinState200ResponseUrls struct {
	// markasread
	Markasread string `json:"markasread"`
	// pin
	Pin *string `json:"pin,omitempty"`
	// subscribe
	Subscribe string `json:"subscribe"`
	// view
	View string `json:"view"`
	// viewfirstunread
	Viewfirstunread *string `json:"viewfirstunread,omitempty"`
	// viewlatest
	Viewlatest *string `json:"viewlatest,omitempty"`
}

type _ModForumSetPinState200ResponseUrls ModForumSetPinState200ResponseUrls

// NewModForumSetPinState200ResponseUrls instantiates a new ModForumSetPinState200ResponseUrls object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumSetPinState200ResponseUrls(markasread string, subscribe string, view string) *ModForumSetPinState200ResponseUrls {
	this := ModForumSetPinState200ResponseUrls{}
	this.Markasread = markasread
	var pin string = "null"
	this.Pin = &pin
	this.Subscribe = subscribe
	this.View = view
	var viewfirstunread string = "null"
	this.Viewfirstunread = &viewfirstunread
	var viewlatest string = "null"
	this.Viewlatest = &viewlatest
	return &this
}

// NewModForumSetPinState200ResponseUrlsWithDefaults instantiates a new ModForumSetPinState200ResponseUrls object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumSetPinState200ResponseUrlsWithDefaults() *ModForumSetPinState200ResponseUrls {
	this := ModForumSetPinState200ResponseUrls{}
	var markasread string = "null"
	this.Markasread = markasread
	var pin string = "null"
	this.Pin = &pin
	var subscribe string = "null"
	this.Subscribe = subscribe
	var viewfirstunread string = "null"
	this.Viewfirstunread = &viewfirstunread
	var viewlatest string = "null"
	this.Viewlatest = &viewlatest
	return &this
}

// GetMarkasread returns the Markasread field value
func (o *ModForumSetPinState200ResponseUrls) GetMarkasread() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Markasread
}

// GetMarkasreadOk returns a tuple with the Markasread field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200ResponseUrls) GetMarkasreadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Markasread, true
}

// SetMarkasread sets field value
func (o *ModForumSetPinState200ResponseUrls) SetMarkasread(v string) {
	o.Markasread = v
}

// GetPin returns the Pin field value if set, zero value otherwise.
func (o *ModForumSetPinState200ResponseUrls) GetPin() string {
	if o == nil || IsNil(o.Pin) {
		var ret string
		return ret
	}
	return *o.Pin
}

// GetPinOk returns a tuple with the Pin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200ResponseUrls) GetPinOk() (*string, bool) {
	if o == nil || IsNil(o.Pin) {
		return nil, false
	}
	return o.Pin, true
}

// HasPin returns a boolean if a field has been set.
func (o *ModForumSetPinState200ResponseUrls) HasPin() bool {
	if o != nil && !IsNil(o.Pin) {
		return true
	}

	return false
}

// SetPin gets a reference to the given string and assigns it to the Pin field.
func (o *ModForumSetPinState200ResponseUrls) SetPin(v string) {
	o.Pin = &v
}

// GetSubscribe returns the Subscribe field value
func (o *ModForumSetPinState200ResponseUrls) GetSubscribe() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subscribe
}

// GetSubscribeOk returns a tuple with the Subscribe field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200ResponseUrls) GetSubscribeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subscribe, true
}

// SetSubscribe sets field value
func (o *ModForumSetPinState200ResponseUrls) SetSubscribe(v string) {
	o.Subscribe = v
}

// GetView returns the View field value
func (o *ModForumSetPinState200ResponseUrls) GetView() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.View
}

// GetViewOk returns a tuple with the View field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200ResponseUrls) GetViewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.View, true
}

// SetView sets field value
func (o *ModForumSetPinState200ResponseUrls) SetView(v string) {
	o.View = v
}

// GetViewfirstunread returns the Viewfirstunread field value if set, zero value otherwise.
func (o *ModForumSetPinState200ResponseUrls) GetViewfirstunread() string {
	if o == nil || IsNil(o.Viewfirstunread) {
		var ret string
		return ret
	}
	return *o.Viewfirstunread
}

// GetViewfirstunreadOk returns a tuple with the Viewfirstunread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200ResponseUrls) GetViewfirstunreadOk() (*string, bool) {
	if o == nil || IsNil(o.Viewfirstunread) {
		return nil, false
	}
	return o.Viewfirstunread, true
}

// HasViewfirstunread returns a boolean if a field has been set.
func (o *ModForumSetPinState200ResponseUrls) HasViewfirstunread() bool {
	if o != nil && !IsNil(o.Viewfirstunread) {
		return true
	}

	return false
}

// SetViewfirstunread gets a reference to the given string and assigns it to the Viewfirstunread field.
func (o *ModForumSetPinState200ResponseUrls) SetViewfirstunread(v string) {
	o.Viewfirstunread = &v
}

// GetViewlatest returns the Viewlatest field value if set, zero value otherwise.
func (o *ModForumSetPinState200ResponseUrls) GetViewlatest() string {
	if o == nil || IsNil(o.Viewlatest) {
		var ret string
		return ret
	}
	return *o.Viewlatest
}

// GetViewlatestOk returns a tuple with the Viewlatest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200ResponseUrls) GetViewlatestOk() (*string, bool) {
	if o == nil || IsNil(o.Viewlatest) {
		return nil, false
	}
	return o.Viewlatest, true
}

// HasViewlatest returns a boolean if a field has been set.
func (o *ModForumSetPinState200ResponseUrls) HasViewlatest() bool {
	if o != nil && !IsNil(o.Viewlatest) {
		return true
	}

	return false
}

// SetViewlatest gets a reference to the given string and assigns it to the Viewlatest field.
func (o *ModForumSetPinState200ResponseUrls) SetViewlatest(v string) {
	o.Viewlatest = &v
}

func (o ModForumSetPinState200ResponseUrls) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumSetPinState200ResponseUrls) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["markasread"] = o.Markasread
	if !IsNil(o.Pin) {
		toSerialize["pin"] = o.Pin
	}
	toSerialize["subscribe"] = o.Subscribe
	toSerialize["view"] = o.View
	if !IsNil(o.Viewfirstunread) {
		toSerialize["viewfirstunread"] = o.Viewfirstunread
	}
	if !IsNil(o.Viewlatest) {
		toSerialize["viewlatest"] = o.Viewlatest
	}
	return toSerialize, nil
}

func (o *ModForumSetPinState200ResponseUrls) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"markasread",
		"subscribe",
		"view",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModForumSetPinState200ResponseUrls := _ModForumSetPinState200ResponseUrls{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModForumSetPinState200ResponseUrls)

	if err != nil {
		return err
	}

	*o = ModForumSetPinState200ResponseUrls(varModForumSetPinState200ResponseUrls)

	return err
}

type NullableModForumSetPinState200ResponseUrls struct {
	value *ModForumSetPinState200ResponseUrls
	isSet bool
}

func (v NullableModForumSetPinState200ResponseUrls) Get() *ModForumSetPinState200ResponseUrls {
	return v.value
}

func (v *NullableModForumSetPinState200ResponseUrls) Set(val *ModForumSetPinState200ResponseUrls) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumSetPinState200ResponseUrls) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumSetPinState200ResponseUrls) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumSetPinState200ResponseUrls(val *ModForumSetPinState200ResponseUrls) *NullableModForumSetPinState200ResponseUrls {
	return &NullableModForumSetPinState200ResponseUrls{value: val, isSet: true}
}

func (v NullableModForumSetPinState200ResponseUrls) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumSetPinState200ResponseUrls) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


