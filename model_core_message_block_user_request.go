/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreMessageBlockUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreMessageBlockUserRequest{}

// CoreMessageBlockUserRequest struct for CoreMessageBlockUserRequest
type CoreMessageBlockUserRequest struct {
	// The id of the user being blocked
	Blockeduserid int32 `json:"blockeduserid"`
	// The id of the user who is blocking
	Userid int32 `json:"userid"`
}

type _CoreMessageBlockUserRequest CoreMessageBlockUserRequest

// NewCoreMessageBlockUserRequest instantiates a new CoreMessageBlockUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreMessageBlockUserRequest(blockeduserid int32, userid int32) *CoreMessageBlockUserRequest {
	this := CoreMessageBlockUserRequest{}
	this.Blockeduserid = blockeduserid
	this.Userid = userid
	return &this
}

// NewCoreMessageBlockUserRequestWithDefaults instantiates a new CoreMessageBlockUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreMessageBlockUserRequestWithDefaults() *CoreMessageBlockUserRequest {
	this := CoreMessageBlockUserRequest{}
	var blockeduserid int32 = null
	this.Blockeduserid = blockeduserid
	var userid int32 = null
	this.Userid = userid
	return &this
}

// GetBlockeduserid returns the Blockeduserid field value
func (o *CoreMessageBlockUserRequest) GetBlockeduserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Blockeduserid
}

// GetBlockeduseridOk returns a tuple with the Blockeduserid field value
// and a boolean to check if the value has been set.
func (o *CoreMessageBlockUserRequest) GetBlockeduseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Blockeduserid, true
}

// SetBlockeduserid sets field value
func (o *CoreMessageBlockUserRequest) SetBlockeduserid(v int32) {
	o.Blockeduserid = v
}

// GetUserid returns the Userid field value
func (o *CoreMessageBlockUserRequest) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *CoreMessageBlockUserRequest) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *CoreMessageBlockUserRequest) SetUserid(v int32) {
	o.Userid = v
}

func (o CoreMessageBlockUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreMessageBlockUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["blockeduserid"] = o.Blockeduserid
	toSerialize["userid"] = o.Userid
	return toSerialize, nil
}

func (o *CoreMessageBlockUserRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"blockeduserid",
		"userid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreMessageBlockUserRequest := _CoreMessageBlockUserRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreMessageBlockUserRequest)

	if err != nil {
		return err
	}

	*o = CoreMessageBlockUserRequest(varCoreMessageBlockUserRequest)

	return err
}

type NullableCoreMessageBlockUserRequest struct {
	value *CoreMessageBlockUserRequest
	isSet bool
}

func (v NullableCoreMessageBlockUserRequest) Get() *CoreMessageBlockUserRequest {
	return v.value
}

func (v *NullableCoreMessageBlockUserRequest) Set(val *CoreMessageBlockUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreMessageBlockUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreMessageBlockUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreMessageBlockUserRequest(val *CoreMessageBlockUserRequest) *NullableCoreMessageBlockUserRequest {
	return &NullableCoreMessageBlockUserRequest{value: val, isSet: true}
}

func (v NullableCoreMessageBlockUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreMessageBlockUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


