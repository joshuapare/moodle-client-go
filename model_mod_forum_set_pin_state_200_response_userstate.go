/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModForumSetPinState200ResponseUserstate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumSetPinState200ResponseUserstate{}

// ModForumSetPinState200ResponseUserstate struct for ModForumSetPinState200ResponseUserstate
type ModForumSetPinState200ResponseUserstate struct {
	// favourited
	Favourited bool `json:"favourited"`
	// subscribed
	Subscribed bool `json:"subscribed"`
}

type _ModForumSetPinState200ResponseUserstate ModForumSetPinState200ResponseUserstate

// NewModForumSetPinState200ResponseUserstate instantiates a new ModForumSetPinState200ResponseUserstate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumSetPinState200ResponseUserstate(favourited bool, subscribed bool) *ModForumSetPinState200ResponseUserstate {
	this := ModForumSetPinState200ResponseUserstate{}
	this.Favourited = favourited
	this.Subscribed = subscribed
	return &this
}

// NewModForumSetPinState200ResponseUserstateWithDefaults instantiates a new ModForumSetPinState200ResponseUserstate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumSetPinState200ResponseUserstateWithDefaults() *ModForumSetPinState200ResponseUserstate {
	this := ModForumSetPinState200ResponseUserstate{}
	var favourited bool = null
	this.Favourited = favourited
	var subscribed bool = null
	this.Subscribed = subscribed
	return &this
}

// GetFavourited returns the Favourited field value
func (o *ModForumSetPinState200ResponseUserstate) GetFavourited() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Favourited
}

// GetFavouritedOk returns a tuple with the Favourited field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200ResponseUserstate) GetFavouritedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Favourited, true
}

// SetFavourited sets field value
func (o *ModForumSetPinState200ResponseUserstate) SetFavourited(v bool) {
	o.Favourited = v
}

// GetSubscribed returns the Subscribed field value
func (o *ModForumSetPinState200ResponseUserstate) GetSubscribed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Subscribed
}

// GetSubscribedOk returns a tuple with the Subscribed field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200ResponseUserstate) GetSubscribedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subscribed, true
}

// SetSubscribed sets field value
func (o *ModForumSetPinState200ResponseUserstate) SetSubscribed(v bool) {
	o.Subscribed = v
}

func (o ModForumSetPinState200ResponseUserstate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumSetPinState200ResponseUserstate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["favourited"] = o.Favourited
	toSerialize["subscribed"] = o.Subscribed
	return toSerialize, nil
}

func (o *ModForumSetPinState200ResponseUserstate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"favourited",
		"subscribed",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModForumSetPinState200ResponseUserstate := _ModForumSetPinState200ResponseUserstate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModForumSetPinState200ResponseUserstate)

	if err != nil {
		return err
	}

	*o = ModForumSetPinState200ResponseUserstate(varModForumSetPinState200ResponseUserstate)

	return err
}

type NullableModForumSetPinState200ResponseUserstate struct {
	value *ModForumSetPinState200ResponseUserstate
	isSet bool
}

func (v NullableModForumSetPinState200ResponseUserstate) Get() *ModForumSetPinState200ResponseUserstate {
	return v.value
}

func (v *NullableModForumSetPinState200ResponseUserstate) Set(val *ModForumSetPinState200ResponseUserstate) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumSetPinState200ResponseUserstate) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumSetPinState200ResponseUserstate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumSetPinState200ResponseUserstate(val *ModForumSetPinState200ResponseUserstate) *NullableModForumSetPinState200ResponseUserstate {
	return &NullableModForumSetPinState200ResponseUserstate{value: val, isSet: true}
}

func (v NullableModForumSetPinState200ResponseUserstate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumSetPinState200ResponseUserstate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


