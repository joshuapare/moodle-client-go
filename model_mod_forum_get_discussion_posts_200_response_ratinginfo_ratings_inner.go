/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner{}

// ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner struct for ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner
type ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner struct {
	// Aggregated ratings grade.
	Aggregate *float32 `json:"aggregate,omitempty"`
	// The aggregation label.
	Aggregatelabel *string `json:"aggregatelabel,omitempty"`
	// Aggregated ratings as string.
	Aggregatestr *string `json:"aggregatestr,omitempty"`
	// Whether the user can rate the item.
	Canrate *bool `json:"canrate,omitempty"`
	// Whether the user can view the aggregated grade.
	Canviewaggregate *bool `json:"canviewaggregate,omitempty"`
	// Ratings count (used when aggregating).
	Count *int32 `json:"count,omitempty"`
	// Item id.
	Itemid *int32 `json:"itemid,omitempty"`
	// The rating the user gave.
	Rating *int32 `json:"rating,omitempty"`
	// Scale id.
	Scaleid *int32 `json:"scaleid,omitempty"`
	// User who rated id.
	Userid *int32 `json:"userid,omitempty"`
}

// NewModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner instantiates a new ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner() *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner {
	this := ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner{}
	return &this
}

// NewModForumGetDiscussionPosts200ResponseRatinginfoRatingsInnerWithDefaults instantiates a new ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumGetDiscussionPosts200ResponseRatinginfoRatingsInnerWithDefaults() *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner {
	this := ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner{}
	return &this
}

// GetAggregate returns the Aggregate field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetAggregate() float32 {
	if o == nil || IsNil(o.Aggregate) {
		var ret float32
		return ret
	}
	return *o.Aggregate
}

// GetAggregateOk returns a tuple with the Aggregate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetAggregateOk() (*float32, bool) {
	if o == nil || IsNil(o.Aggregate) {
		return nil, false
	}
	return o.Aggregate, true
}

// HasAggregate returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) HasAggregate() bool {
	if o != nil && !IsNil(o.Aggregate) {
		return true
	}

	return false
}

// SetAggregate gets a reference to the given float32 and assigns it to the Aggregate field.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) SetAggregate(v float32) {
	o.Aggregate = &v
}

// GetAggregatelabel returns the Aggregatelabel field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetAggregatelabel() string {
	if o == nil || IsNil(o.Aggregatelabel) {
		var ret string
		return ret
	}
	return *o.Aggregatelabel
}

// GetAggregatelabelOk returns a tuple with the Aggregatelabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetAggregatelabelOk() (*string, bool) {
	if o == nil || IsNil(o.Aggregatelabel) {
		return nil, false
	}
	return o.Aggregatelabel, true
}

// HasAggregatelabel returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) HasAggregatelabel() bool {
	if o != nil && !IsNil(o.Aggregatelabel) {
		return true
	}

	return false
}

// SetAggregatelabel gets a reference to the given string and assigns it to the Aggregatelabel field.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) SetAggregatelabel(v string) {
	o.Aggregatelabel = &v
}

// GetAggregatestr returns the Aggregatestr field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetAggregatestr() string {
	if o == nil || IsNil(o.Aggregatestr) {
		var ret string
		return ret
	}
	return *o.Aggregatestr
}

// GetAggregatestrOk returns a tuple with the Aggregatestr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetAggregatestrOk() (*string, bool) {
	if o == nil || IsNil(o.Aggregatestr) {
		return nil, false
	}
	return o.Aggregatestr, true
}

// HasAggregatestr returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) HasAggregatestr() bool {
	if o != nil && !IsNil(o.Aggregatestr) {
		return true
	}

	return false
}

// SetAggregatestr gets a reference to the given string and assigns it to the Aggregatestr field.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) SetAggregatestr(v string) {
	o.Aggregatestr = &v
}

// GetCanrate returns the Canrate field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetCanrate() bool {
	if o == nil || IsNil(o.Canrate) {
		var ret bool
		return ret
	}
	return *o.Canrate
}

// GetCanrateOk returns a tuple with the Canrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetCanrateOk() (*bool, bool) {
	if o == nil || IsNil(o.Canrate) {
		return nil, false
	}
	return o.Canrate, true
}

// HasCanrate returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) HasCanrate() bool {
	if o != nil && !IsNil(o.Canrate) {
		return true
	}

	return false
}

// SetCanrate gets a reference to the given bool and assigns it to the Canrate field.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) SetCanrate(v bool) {
	o.Canrate = &v
}

// GetCanviewaggregate returns the Canviewaggregate field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetCanviewaggregate() bool {
	if o == nil || IsNil(o.Canviewaggregate) {
		var ret bool
		return ret
	}
	return *o.Canviewaggregate
}

// GetCanviewaggregateOk returns a tuple with the Canviewaggregate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetCanviewaggregateOk() (*bool, bool) {
	if o == nil || IsNil(o.Canviewaggregate) {
		return nil, false
	}
	return o.Canviewaggregate, true
}

// HasCanviewaggregate returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) HasCanviewaggregate() bool {
	if o != nil && !IsNil(o.Canviewaggregate) {
		return true
	}

	return false
}

// SetCanviewaggregate gets a reference to the given bool and assigns it to the Canviewaggregate field.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) SetCanviewaggregate(v bool) {
	o.Canviewaggregate = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) SetCount(v int32) {
	o.Count = &v
}

// GetItemid returns the Itemid field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetItemid() int32 {
	if o == nil || IsNil(o.Itemid) {
		var ret int32
		return ret
	}
	return *o.Itemid
}

// GetItemidOk returns a tuple with the Itemid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetItemidOk() (*int32, bool) {
	if o == nil || IsNil(o.Itemid) {
		return nil, false
	}
	return o.Itemid, true
}

// HasItemid returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) HasItemid() bool {
	if o != nil && !IsNil(o.Itemid) {
		return true
	}

	return false
}

// SetItemid gets a reference to the given int32 and assigns it to the Itemid field.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) SetItemid(v int32) {
	o.Itemid = &v
}

// GetRating returns the Rating field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetRating() int32 {
	if o == nil || IsNil(o.Rating) {
		var ret int32
		return ret
	}
	return *o.Rating
}

// GetRatingOk returns a tuple with the Rating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetRatingOk() (*int32, bool) {
	if o == nil || IsNil(o.Rating) {
		return nil, false
	}
	return o.Rating, true
}

// HasRating returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) HasRating() bool {
	if o != nil && !IsNil(o.Rating) {
		return true
	}

	return false
}

// SetRating gets a reference to the given int32 and assigns it to the Rating field.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) SetRating(v int32) {
	o.Rating = &v
}

// GetScaleid returns the Scaleid field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetScaleid() int32 {
	if o == nil || IsNil(o.Scaleid) {
		var ret int32
		return ret
	}
	return *o.Scaleid
}

// GetScaleidOk returns a tuple with the Scaleid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetScaleidOk() (*int32, bool) {
	if o == nil || IsNil(o.Scaleid) {
		return nil, false
	}
	return o.Scaleid, true
}

// HasScaleid returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) HasScaleid() bool {
	if o != nil && !IsNil(o.Scaleid) {
		return true
	}

	return false
}

// SetScaleid gets a reference to the given int32 and assigns it to the Scaleid field.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) SetScaleid(v int32) {
	o.Scaleid = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) SetUserid(v int32) {
	o.Userid = &v
}

func (o ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aggregate) {
		toSerialize["aggregate"] = o.Aggregate
	}
	if !IsNil(o.Aggregatelabel) {
		toSerialize["aggregatelabel"] = o.Aggregatelabel
	}
	if !IsNil(o.Aggregatestr) {
		toSerialize["aggregatestr"] = o.Aggregatestr
	}
	if !IsNil(o.Canrate) {
		toSerialize["canrate"] = o.Canrate
	}
	if !IsNil(o.Canviewaggregate) {
		toSerialize["canviewaggregate"] = o.Canviewaggregate
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Itemid) {
		toSerialize["itemid"] = o.Itemid
	}
	if !IsNil(o.Rating) {
		toSerialize["rating"] = o.Rating
	}
	if !IsNil(o.Scaleid) {
		toSerialize["scaleid"] = o.Scaleid
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

type NullableModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner struct {
	value *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner
	isSet bool
}

func (v NullableModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) Get() *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner {
	return v.value
}

func (v *NullableModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) Set(val *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner(val *ModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) *NullableModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner {
	return &NullableModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner{value: val, isSet: true}
}

func (v NullableModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumGetDiscussionPosts200ResponseRatinginfoRatingsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


