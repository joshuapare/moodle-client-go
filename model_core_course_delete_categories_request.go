/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCourseDeleteCategoriesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCourseDeleteCategoriesRequest{}

// CoreCourseDeleteCategoriesRequest struct for CoreCourseDeleteCategoriesRequest
type CoreCourseDeleteCategoriesRequest struct {
	Categories []CoreCourseDeleteCategoriesRequestCategoriesInner `json:"categories"`
}

type _CoreCourseDeleteCategoriesRequest CoreCourseDeleteCategoriesRequest

// NewCoreCourseDeleteCategoriesRequest instantiates a new CoreCourseDeleteCategoriesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCourseDeleteCategoriesRequest(categories []CoreCourseDeleteCategoriesRequestCategoriesInner) *CoreCourseDeleteCategoriesRequest {
	this := CoreCourseDeleteCategoriesRequest{}
	this.Categories = categories
	return &this
}

// NewCoreCourseDeleteCategoriesRequestWithDefaults instantiates a new CoreCourseDeleteCategoriesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCourseDeleteCategoriesRequestWithDefaults() *CoreCourseDeleteCategoriesRequest {
	this := CoreCourseDeleteCategoriesRequest{}
	return &this
}

// GetCategories returns the Categories field value
func (o *CoreCourseDeleteCategoriesRequest) GetCategories() []CoreCourseDeleteCategoriesRequestCategoriesInner {
	if o == nil {
		var ret []CoreCourseDeleteCategoriesRequestCategoriesInner
		return ret
	}

	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value
// and a boolean to check if the value has been set.
func (o *CoreCourseDeleteCategoriesRequest) GetCategoriesOk() ([]CoreCourseDeleteCategoriesRequestCategoriesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Categories, true
}

// SetCategories sets field value
func (o *CoreCourseDeleteCategoriesRequest) SetCategories(v []CoreCourseDeleteCategoriesRequestCategoriesInner) {
	o.Categories = v
}

func (o CoreCourseDeleteCategoriesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCourseDeleteCategoriesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["categories"] = o.Categories
	return toSerialize, nil
}

func (o *CoreCourseDeleteCategoriesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"categories",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCourseDeleteCategoriesRequest := _CoreCourseDeleteCategoriesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCourseDeleteCategoriesRequest)

	if err != nil {
		return err
	}

	*o = CoreCourseDeleteCategoriesRequest(varCoreCourseDeleteCategoriesRequest)

	return err
}

type NullableCoreCourseDeleteCategoriesRequest struct {
	value *CoreCourseDeleteCategoriesRequest
	isSet bool
}

func (v NullableCoreCourseDeleteCategoriesRequest) Get() *CoreCourseDeleteCategoriesRequest {
	return v.value
}

func (v *NullableCoreCourseDeleteCategoriesRequest) Set(val *CoreCourseDeleteCategoriesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCourseDeleteCategoriesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCourseDeleteCategoriesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCourseDeleteCategoriesRequest(val *CoreCourseDeleteCategoriesRequest) *NullableCoreCourseDeleteCategoriesRequest {
	return &NullableCoreCourseDeleteCategoriesRequest{value: val, isSet: true}
}

func (v NullableCoreCourseDeleteCategoriesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCourseDeleteCategoriesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


