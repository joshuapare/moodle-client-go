/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModAssignGetParticipantRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModAssignGetParticipantRequest{}

// ModAssignGetParticipantRequest struct for ModAssignGetParticipantRequest
type ModAssignGetParticipantRequest struct {
	// assign instance id
	Assignid int32 `json:"assignid"`
	// user id
	Embeduser *bool `json:"embeduser,omitempty"`
	// user id
	Userid int32 `json:"userid"`
}

type _ModAssignGetParticipantRequest ModAssignGetParticipantRequest

// NewModAssignGetParticipantRequest instantiates a new ModAssignGetParticipantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModAssignGetParticipantRequest(assignid int32, userid int32) *ModAssignGetParticipantRequest {
	this := ModAssignGetParticipantRequest{}
	this.Assignid = assignid
	var embeduser bool = false
	this.Embeduser = &embeduser
	this.Userid = userid
	return &this
}

// NewModAssignGetParticipantRequestWithDefaults instantiates a new ModAssignGetParticipantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModAssignGetParticipantRequestWithDefaults() *ModAssignGetParticipantRequest {
	this := ModAssignGetParticipantRequest{}
	var assignid int32 = null
	this.Assignid = assignid
	var embeduser bool = false
	this.Embeduser = &embeduser
	return &this
}

// GetAssignid returns the Assignid field value
func (o *ModAssignGetParticipantRequest) GetAssignid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Assignid
}

// GetAssignidOk returns a tuple with the Assignid field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetParticipantRequest) GetAssignidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assignid, true
}

// SetAssignid sets field value
func (o *ModAssignGetParticipantRequest) SetAssignid(v int32) {
	o.Assignid = v
}

// GetEmbeduser returns the Embeduser field value if set, zero value otherwise.
func (o *ModAssignGetParticipantRequest) GetEmbeduser() bool {
	if o == nil || IsNil(o.Embeduser) {
		var ret bool
		return ret
	}
	return *o.Embeduser
}

// GetEmbeduserOk returns a tuple with the Embeduser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetParticipantRequest) GetEmbeduserOk() (*bool, bool) {
	if o == nil || IsNil(o.Embeduser) {
		return nil, false
	}
	return o.Embeduser, true
}

// HasEmbeduser returns a boolean if a field has been set.
func (o *ModAssignGetParticipantRequest) HasEmbeduser() bool {
	if o != nil && !IsNil(o.Embeduser) {
		return true
	}

	return false
}

// SetEmbeduser gets a reference to the given bool and assigns it to the Embeduser field.
func (o *ModAssignGetParticipantRequest) SetEmbeduser(v bool) {
	o.Embeduser = &v
}

// GetUserid returns the Userid field value
func (o *ModAssignGetParticipantRequest) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetParticipantRequest) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *ModAssignGetParticipantRequest) SetUserid(v int32) {
	o.Userid = v
}

func (o ModAssignGetParticipantRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModAssignGetParticipantRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["assignid"] = o.Assignid
	if !IsNil(o.Embeduser) {
		toSerialize["embeduser"] = o.Embeduser
	}
	toSerialize["userid"] = o.Userid
	return toSerialize, nil
}

func (o *ModAssignGetParticipantRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"assignid",
		"userid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModAssignGetParticipantRequest := _ModAssignGetParticipantRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModAssignGetParticipantRequest)

	if err != nil {
		return err
	}

	*o = ModAssignGetParticipantRequest(varModAssignGetParticipantRequest)

	return err
}

type NullableModAssignGetParticipantRequest struct {
	value *ModAssignGetParticipantRequest
	isSet bool
}

func (v NullableModAssignGetParticipantRequest) Get() *ModAssignGetParticipantRequest {
	return v.value
}

func (v *NullableModAssignGetParticipantRequest) Set(val *ModAssignGetParticipantRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModAssignGetParticipantRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModAssignGetParticipantRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModAssignGetParticipantRequest(val *ModAssignGetParticipantRequest) *NullableModAssignGetParticipantRequest {
	return &NullableModAssignGetParticipantRequest{value: val, isSet: true}
}

func (v NullableModAssignGetParticipantRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModAssignGetParticipantRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


