/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModGlossaryPrepareEntryForEdition200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModGlossaryPrepareEntryForEdition200Response{}

// ModGlossaryPrepareEntryForEdition200Response struct for ModGlossaryPrepareEntryForEdition200Response
type ModGlossaryPrepareEntryForEdition200Response struct {
	Aliases []map[string]interface{} `json:"aliases"`
	Areas []ModGlossaryPrepareEntryForEdition200ResponseAreasInner `json:"areas"`
	// Draft item id for the file manager.
	Attachmentsid int32 `json:"attachmentsid"`
	Categories []map[string]interface{} `json:"categories"`
	// Draft item id for the text editor.
	Inlineattachmentsid int32 `json:"inlineattachmentsid"`
	Warnings []AuthEmailSignupUser200ResponseWarningsInner `json:"warnings,omitempty"`
}

type _ModGlossaryPrepareEntryForEdition200Response ModGlossaryPrepareEntryForEdition200Response

// NewModGlossaryPrepareEntryForEdition200Response instantiates a new ModGlossaryPrepareEntryForEdition200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModGlossaryPrepareEntryForEdition200Response(aliases []map[string]interface{}, areas []ModGlossaryPrepareEntryForEdition200ResponseAreasInner, attachmentsid int32, categories []map[string]interface{}, inlineattachmentsid int32) *ModGlossaryPrepareEntryForEdition200Response {
	this := ModGlossaryPrepareEntryForEdition200Response{}
	this.Aliases = aliases
	this.Areas = areas
	this.Attachmentsid = attachmentsid
	this.Categories = categories
	this.Inlineattachmentsid = inlineattachmentsid
	return &this
}

// NewModGlossaryPrepareEntryForEdition200ResponseWithDefaults instantiates a new ModGlossaryPrepareEntryForEdition200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModGlossaryPrepareEntryForEdition200ResponseWithDefaults() *ModGlossaryPrepareEntryForEdition200Response {
	this := ModGlossaryPrepareEntryForEdition200Response{}
	var attachmentsid int32 = null
	this.Attachmentsid = attachmentsid
	var inlineattachmentsid int32 = null
	this.Inlineattachmentsid = inlineattachmentsid
	return &this
}

// GetAliases returns the Aliases field value
func (o *ModGlossaryPrepareEntryForEdition200Response) GetAliases() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryPrepareEntryForEdition200Response) GetAliasesOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Aliases, true
}

// SetAliases sets field value
func (o *ModGlossaryPrepareEntryForEdition200Response) SetAliases(v []map[string]interface{}) {
	o.Aliases = v
}

// GetAreas returns the Areas field value
func (o *ModGlossaryPrepareEntryForEdition200Response) GetAreas() []ModGlossaryPrepareEntryForEdition200ResponseAreasInner {
	if o == nil {
		var ret []ModGlossaryPrepareEntryForEdition200ResponseAreasInner
		return ret
	}

	return o.Areas
}

// GetAreasOk returns a tuple with the Areas field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryPrepareEntryForEdition200Response) GetAreasOk() ([]ModGlossaryPrepareEntryForEdition200ResponseAreasInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Areas, true
}

// SetAreas sets field value
func (o *ModGlossaryPrepareEntryForEdition200Response) SetAreas(v []ModGlossaryPrepareEntryForEdition200ResponseAreasInner) {
	o.Areas = v
}

// GetAttachmentsid returns the Attachmentsid field value
func (o *ModGlossaryPrepareEntryForEdition200Response) GetAttachmentsid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Attachmentsid
}

// GetAttachmentsidOk returns a tuple with the Attachmentsid field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryPrepareEntryForEdition200Response) GetAttachmentsidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attachmentsid, true
}

// SetAttachmentsid sets field value
func (o *ModGlossaryPrepareEntryForEdition200Response) SetAttachmentsid(v int32) {
	o.Attachmentsid = v
}

// GetCategories returns the Categories field value
func (o *ModGlossaryPrepareEntryForEdition200Response) GetCategories() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryPrepareEntryForEdition200Response) GetCategoriesOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Categories, true
}

// SetCategories sets field value
func (o *ModGlossaryPrepareEntryForEdition200Response) SetCategories(v []map[string]interface{}) {
	o.Categories = v
}

// GetInlineattachmentsid returns the Inlineattachmentsid field value
func (o *ModGlossaryPrepareEntryForEdition200Response) GetInlineattachmentsid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Inlineattachmentsid
}

// GetInlineattachmentsidOk returns a tuple with the Inlineattachmentsid field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryPrepareEntryForEdition200Response) GetInlineattachmentsidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Inlineattachmentsid, true
}

// SetInlineattachmentsid sets field value
func (o *ModGlossaryPrepareEntryForEdition200Response) SetInlineattachmentsid(v int32) {
	o.Inlineattachmentsid = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ModGlossaryPrepareEntryForEdition200Response) GetWarnings() []AuthEmailSignupUser200ResponseWarningsInner {
	if o == nil || IsNil(o.Warnings) {
		var ret []AuthEmailSignupUser200ResponseWarningsInner
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryPrepareEntryForEdition200Response) GetWarningsOk() ([]AuthEmailSignupUser200ResponseWarningsInner, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ModGlossaryPrepareEntryForEdition200Response) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []AuthEmailSignupUser200ResponseWarningsInner and assigns it to the Warnings field.
func (o *ModGlossaryPrepareEntryForEdition200Response) SetWarnings(v []AuthEmailSignupUser200ResponseWarningsInner) {
	o.Warnings = v
}

func (o ModGlossaryPrepareEntryForEdition200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModGlossaryPrepareEntryForEdition200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["aliases"] = o.Aliases
	toSerialize["areas"] = o.Areas
	toSerialize["attachmentsid"] = o.Attachmentsid
	toSerialize["categories"] = o.Categories
	toSerialize["inlineattachmentsid"] = o.Inlineattachmentsid
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

func (o *ModGlossaryPrepareEntryForEdition200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"aliases",
		"areas",
		"attachmentsid",
		"categories",
		"inlineattachmentsid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModGlossaryPrepareEntryForEdition200Response := _ModGlossaryPrepareEntryForEdition200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModGlossaryPrepareEntryForEdition200Response)

	if err != nil {
		return err
	}

	*o = ModGlossaryPrepareEntryForEdition200Response(varModGlossaryPrepareEntryForEdition200Response)

	return err
}

type NullableModGlossaryPrepareEntryForEdition200Response struct {
	value *ModGlossaryPrepareEntryForEdition200Response
	isSet bool
}

func (v NullableModGlossaryPrepareEntryForEdition200Response) Get() *ModGlossaryPrepareEntryForEdition200Response {
	return v.value
}

func (v *NullableModGlossaryPrepareEntryForEdition200Response) Set(val *ModGlossaryPrepareEntryForEdition200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableModGlossaryPrepareEntryForEdition200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableModGlossaryPrepareEntryForEdition200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModGlossaryPrepareEntryForEdition200Response(val *ModGlossaryPrepareEntryForEdition200Response) *NullableModGlossaryPrepareEntryForEdition200Response {
	return &NullableModGlossaryPrepareEntryForEdition200Response{value: val, isSet: true}
}

func (v NullableModGlossaryPrepareEntryForEdition200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModGlossaryPrepareEntryForEdition200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


