/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCompetencyListCompetenciesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCompetencyListCompetenciesRequest{}

// CoreCompetencyListCompetenciesRequest struct for CoreCompetencyListCompetenciesRequest
type CoreCompetencyListCompetenciesRequest struct {
	Filters []CoreCompetencyListCompetenciesRequestFiltersInner `json:"filters"`
	// Return this number of records at most.
	Limit *int32 `json:"limit,omitempty"`
	// Sort direction. Should be either ASC or DESC
	Order *string `json:"order,omitempty"`
	// Skip this number of records before returning results
	Skip *int32 `json:"skip,omitempty"`
	// Column to sort by.
	Sort *string `json:"sort,omitempty"`
}

type _CoreCompetencyListCompetenciesRequest CoreCompetencyListCompetenciesRequest

// NewCoreCompetencyListCompetenciesRequest instantiates a new CoreCompetencyListCompetenciesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCompetencyListCompetenciesRequest(filters []CoreCompetencyListCompetenciesRequestFiltersInner) *CoreCompetencyListCompetenciesRequest {
	this := CoreCompetencyListCompetenciesRequest{}
	this.Filters = filters
	var limit int32 = 0
	this.Limit = &limit
	var order string = ""
	this.Order = &order
	var skip int32 = 0
	this.Skip = &skip
	var sort string = ""
	this.Sort = &sort
	return &this
}

// NewCoreCompetencyListCompetenciesRequestWithDefaults instantiates a new CoreCompetencyListCompetenciesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCompetencyListCompetenciesRequestWithDefaults() *CoreCompetencyListCompetenciesRequest {
	this := CoreCompetencyListCompetenciesRequest{}
	var limit int32 = 0
	this.Limit = &limit
	var order string = ""
	this.Order = &order
	var skip int32 = 0
	this.Skip = &skip
	var sort string = ""
	this.Sort = &sort
	return &this
}

// GetFilters returns the Filters field value
func (o *CoreCompetencyListCompetenciesRequest) GetFilters() []CoreCompetencyListCompetenciesRequestFiltersInner {
	if o == nil {
		var ret []CoreCompetencyListCompetenciesRequestFiltersInner
		return ret
	}

	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyListCompetenciesRequest) GetFiltersOk() ([]CoreCompetencyListCompetenciesRequestFiltersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Filters, true
}

// SetFilters sets field value
func (o *CoreCompetencyListCompetenciesRequest) SetFilters(v []CoreCompetencyListCompetenciesRequestFiltersInner) {
	o.Filters = v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *CoreCompetencyListCompetenciesRequest) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyListCompetenciesRequest) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *CoreCompetencyListCompetenciesRequest) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *CoreCompetencyListCompetenciesRequest) SetLimit(v int32) {
	o.Limit = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *CoreCompetencyListCompetenciesRequest) GetOrder() string {
	if o == nil || IsNil(o.Order) {
		var ret string
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyListCompetenciesRequest) GetOrderOk() (*string, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *CoreCompetencyListCompetenciesRequest) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given string and assigns it to the Order field.
func (o *CoreCompetencyListCompetenciesRequest) SetOrder(v string) {
	o.Order = &v
}

// GetSkip returns the Skip field value if set, zero value otherwise.
func (o *CoreCompetencyListCompetenciesRequest) GetSkip() int32 {
	if o == nil || IsNil(o.Skip) {
		var ret int32
		return ret
	}
	return *o.Skip
}

// GetSkipOk returns a tuple with the Skip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyListCompetenciesRequest) GetSkipOk() (*int32, bool) {
	if o == nil || IsNil(o.Skip) {
		return nil, false
	}
	return o.Skip, true
}

// HasSkip returns a boolean if a field has been set.
func (o *CoreCompetencyListCompetenciesRequest) HasSkip() bool {
	if o != nil && !IsNil(o.Skip) {
		return true
	}

	return false
}

// SetSkip gets a reference to the given int32 and assigns it to the Skip field.
func (o *CoreCompetencyListCompetenciesRequest) SetSkip(v int32) {
	o.Skip = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *CoreCompetencyListCompetenciesRequest) GetSort() string {
	if o == nil || IsNil(o.Sort) {
		var ret string
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyListCompetenciesRequest) GetSortOk() (*string, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *CoreCompetencyListCompetenciesRequest) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given string and assigns it to the Sort field.
func (o *CoreCompetencyListCompetenciesRequest) SetSort(v string) {
	o.Sort = &v
}

func (o CoreCompetencyListCompetenciesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCompetencyListCompetenciesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["filters"] = o.Filters
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Skip) {
		toSerialize["skip"] = o.Skip
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	return toSerialize, nil
}

func (o *CoreCompetencyListCompetenciesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"filters",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCompetencyListCompetenciesRequest := _CoreCompetencyListCompetenciesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCompetencyListCompetenciesRequest)

	if err != nil {
		return err
	}

	*o = CoreCompetencyListCompetenciesRequest(varCoreCompetencyListCompetenciesRequest)

	return err
}

type NullableCoreCompetencyListCompetenciesRequest struct {
	value *CoreCompetencyListCompetenciesRequest
	isSet bool
}

func (v NullableCoreCompetencyListCompetenciesRequest) Get() *CoreCompetencyListCompetenciesRequest {
	return v.value
}

func (v *NullableCoreCompetencyListCompetenciesRequest) Set(val *CoreCompetencyListCompetenciesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCompetencyListCompetenciesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCompetencyListCompetenciesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCompetencyListCompetenciesRequest(val *CoreCompetencyListCompetenciesRequest) *NullableCoreCompetencyListCompetenciesRequest {
	return &NullableCoreCompetencyListCompetenciesRequest{value: val, isSet: true}
}

func (v NullableCoreCompetencyListCompetenciesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCompetencyListCompetenciesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


