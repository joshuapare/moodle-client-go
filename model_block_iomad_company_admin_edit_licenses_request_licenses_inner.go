/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the BlockIomadCompanyAdminEditLicensesRequestLicensesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockIomadCompanyAdminEditLicensesRequestLicensesInner{}

// BlockIomadCompanyAdminEditLicensesRequestLicensesInner one or many licenses
type BlockIomadCompanyAdminEditLicensesRequestLicensesInner struct {
	// Number of license slots
	Allocation *int32 `json:"allocation,omitempty"`
	// Company id
	Companyid *int32 `json:"companyid,omitempty"`
	Courses []BlockIomadCompanyAdminCreateLicensesRequestLicensesInnerCoursesInner `json:"courses,omitempty"`
	// License expiry date
	Expirydate *int32 `json:"expirydate,omitempty"`
	// license ID
	Id *int32 `json:"id,omitempty"`
	// Instant access - 0 = no, 1 = yes
	Instant *int32 `json:"instant,omitempty"`
	// License name
	Name *string `json:"name,omitempty"`
	// Parent license id
	Parentid *int32 `json:"parentid,omitempty"`
	// Program pf courses 0 = no, 1 = yes
	Program *int32 `json:"program,omitempty"`
	// License reference
	Reference *string `json:"reference,omitempty"`
	// License type - 0 = standard, 1 = reusable, 2 = standard educator, 3 = reusable educator
	Type *int32 `json:"type,omitempty"`
	// Number allocated
	Used *int32 `json:"used,omitempty"`
	// Course access length (days)
	Validlength *int32 `json:"validlength,omitempty"`
}

// NewBlockIomadCompanyAdminEditLicensesRequestLicensesInner instantiates a new BlockIomadCompanyAdminEditLicensesRequestLicensesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockIomadCompanyAdminEditLicensesRequestLicensesInner() *BlockIomadCompanyAdminEditLicensesRequestLicensesInner {
	this := BlockIomadCompanyAdminEditLicensesRequestLicensesInner{}
	var expirydate int32 = null
	this.Expirydate = &expirydate
	var used int32 = null
	this.Used = &used
	return &this
}

// NewBlockIomadCompanyAdminEditLicensesRequestLicensesInnerWithDefaults instantiates a new BlockIomadCompanyAdminEditLicensesRequestLicensesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockIomadCompanyAdminEditLicensesRequestLicensesInnerWithDefaults() *BlockIomadCompanyAdminEditLicensesRequestLicensesInner {
	this := BlockIomadCompanyAdminEditLicensesRequestLicensesInner{}
	var expirydate int32 = null
	this.Expirydate = &expirydate
	var used int32 = null
	this.Used = &used
	return &this
}

// GetAllocation returns the Allocation field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetAllocation() int32 {
	if o == nil || IsNil(o.Allocation) {
		var ret int32
		return ret
	}
	return *o.Allocation
}

// GetAllocationOk returns a tuple with the Allocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetAllocationOk() (*int32, bool) {
	if o == nil || IsNil(o.Allocation) {
		return nil, false
	}
	return o.Allocation, true
}

// HasAllocation returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) HasAllocation() bool {
	if o != nil && !IsNil(o.Allocation) {
		return true
	}

	return false
}

// SetAllocation gets a reference to the given int32 and assigns it to the Allocation field.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) SetAllocation(v int32) {
	o.Allocation = &v
}

// GetCompanyid returns the Companyid field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetCompanyid() int32 {
	if o == nil || IsNil(o.Companyid) {
		var ret int32
		return ret
	}
	return *o.Companyid
}

// GetCompanyidOk returns a tuple with the Companyid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetCompanyidOk() (*int32, bool) {
	if o == nil || IsNil(o.Companyid) {
		return nil, false
	}
	return o.Companyid, true
}

// HasCompanyid returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) HasCompanyid() bool {
	if o != nil && !IsNil(o.Companyid) {
		return true
	}

	return false
}

// SetCompanyid gets a reference to the given int32 and assigns it to the Companyid field.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) SetCompanyid(v int32) {
	o.Companyid = &v
}

// GetCourses returns the Courses field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetCourses() []BlockIomadCompanyAdminCreateLicensesRequestLicensesInnerCoursesInner {
	if o == nil || IsNil(o.Courses) {
		var ret []BlockIomadCompanyAdminCreateLicensesRequestLicensesInnerCoursesInner
		return ret
	}
	return o.Courses
}

// GetCoursesOk returns a tuple with the Courses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetCoursesOk() ([]BlockIomadCompanyAdminCreateLicensesRequestLicensesInnerCoursesInner, bool) {
	if o == nil || IsNil(o.Courses) {
		return nil, false
	}
	return o.Courses, true
}

// HasCourses returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) HasCourses() bool {
	if o != nil && !IsNil(o.Courses) {
		return true
	}

	return false
}

// SetCourses gets a reference to the given []BlockIomadCompanyAdminCreateLicensesRequestLicensesInnerCoursesInner and assigns it to the Courses field.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) SetCourses(v []BlockIomadCompanyAdminCreateLicensesRequestLicensesInnerCoursesInner) {
	o.Courses = v
}

// GetExpirydate returns the Expirydate field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetExpirydate() int32 {
	if o == nil || IsNil(o.Expirydate) {
		var ret int32
		return ret
	}
	return *o.Expirydate
}

// GetExpirydateOk returns a tuple with the Expirydate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetExpirydateOk() (*int32, bool) {
	if o == nil || IsNil(o.Expirydate) {
		return nil, false
	}
	return o.Expirydate, true
}

// HasExpirydate returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) HasExpirydate() bool {
	if o != nil && !IsNil(o.Expirydate) {
		return true
	}

	return false
}

// SetExpirydate gets a reference to the given int32 and assigns it to the Expirydate field.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) SetExpirydate(v int32) {
	o.Expirydate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) SetId(v int32) {
	o.Id = &v
}

// GetInstant returns the Instant field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetInstant() int32 {
	if o == nil || IsNil(o.Instant) {
		var ret int32
		return ret
	}
	return *o.Instant
}

// GetInstantOk returns a tuple with the Instant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetInstantOk() (*int32, bool) {
	if o == nil || IsNil(o.Instant) {
		return nil, false
	}
	return o.Instant, true
}

// HasInstant returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) HasInstant() bool {
	if o != nil && !IsNil(o.Instant) {
		return true
	}

	return false
}

// SetInstant gets a reference to the given int32 and assigns it to the Instant field.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) SetInstant(v int32) {
	o.Instant = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) SetName(v string) {
	o.Name = &v
}

// GetParentid returns the Parentid field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetParentid() int32 {
	if o == nil || IsNil(o.Parentid) {
		var ret int32
		return ret
	}
	return *o.Parentid
}

// GetParentidOk returns a tuple with the Parentid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetParentidOk() (*int32, bool) {
	if o == nil || IsNil(o.Parentid) {
		return nil, false
	}
	return o.Parentid, true
}

// HasParentid returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) HasParentid() bool {
	if o != nil && !IsNil(o.Parentid) {
		return true
	}

	return false
}

// SetParentid gets a reference to the given int32 and assigns it to the Parentid field.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) SetParentid(v int32) {
	o.Parentid = &v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetProgram() int32 {
	if o == nil || IsNil(o.Program) {
		var ret int32
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetProgramOk() (*int32, bool) {
	if o == nil || IsNil(o.Program) {
		return nil, false
	}
	return o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) HasProgram() bool {
	if o != nil && !IsNil(o.Program) {
		return true
	}

	return false
}

// SetProgram gets a reference to the given int32 and assigns it to the Program field.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) SetProgram(v int32) {
	o.Program = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) SetReference(v string) {
	o.Reference = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) SetType(v int32) {
	o.Type = &v
}

// GetUsed returns the Used field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetUsed() int32 {
	if o == nil || IsNil(o.Used) {
		var ret int32
		return ret
	}
	return *o.Used
}

// GetUsedOk returns a tuple with the Used field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetUsedOk() (*int32, bool) {
	if o == nil || IsNil(o.Used) {
		return nil, false
	}
	return o.Used, true
}

// HasUsed returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) HasUsed() bool {
	if o != nil && !IsNil(o.Used) {
		return true
	}

	return false
}

// SetUsed gets a reference to the given int32 and assigns it to the Used field.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) SetUsed(v int32) {
	o.Used = &v
}

// GetValidlength returns the Validlength field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetValidlength() int32 {
	if o == nil || IsNil(o.Validlength) {
		var ret int32
		return ret
	}
	return *o.Validlength
}

// GetValidlengthOk returns a tuple with the Validlength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) GetValidlengthOk() (*int32, bool) {
	if o == nil || IsNil(o.Validlength) {
		return nil, false
	}
	return o.Validlength, true
}

// HasValidlength returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) HasValidlength() bool {
	if o != nil && !IsNil(o.Validlength) {
		return true
	}

	return false
}

// SetValidlength gets a reference to the given int32 and assigns it to the Validlength field.
func (o *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) SetValidlength(v int32) {
	o.Validlength = &v
}

func (o BlockIomadCompanyAdminEditLicensesRequestLicensesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockIomadCompanyAdminEditLicensesRequestLicensesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Allocation) {
		toSerialize["allocation"] = o.Allocation
	}
	if !IsNil(o.Companyid) {
		toSerialize["companyid"] = o.Companyid
	}
	if !IsNil(o.Courses) {
		toSerialize["courses"] = o.Courses
	}
	if !IsNil(o.Expirydate) {
		toSerialize["expirydate"] = o.Expirydate
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Instant) {
		toSerialize["instant"] = o.Instant
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Parentid) {
		toSerialize["parentid"] = o.Parentid
	}
	if !IsNil(o.Program) {
		toSerialize["program"] = o.Program
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Used) {
		toSerialize["used"] = o.Used
	}
	if !IsNil(o.Validlength) {
		toSerialize["validlength"] = o.Validlength
	}
	return toSerialize, nil
}

type NullableBlockIomadCompanyAdminEditLicensesRequestLicensesInner struct {
	value *BlockIomadCompanyAdminEditLicensesRequestLicensesInner
	isSet bool
}

func (v NullableBlockIomadCompanyAdminEditLicensesRequestLicensesInner) Get() *BlockIomadCompanyAdminEditLicensesRequestLicensesInner {
	return v.value
}

func (v *NullableBlockIomadCompanyAdminEditLicensesRequestLicensesInner) Set(val *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockIomadCompanyAdminEditLicensesRequestLicensesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockIomadCompanyAdminEditLicensesRequestLicensesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockIomadCompanyAdminEditLicensesRequestLicensesInner(val *BlockIomadCompanyAdminEditLicensesRequestLicensesInner) *NullableBlockIomadCompanyAdminEditLicensesRequestLicensesInner {
	return &NullableBlockIomadCompanyAdminEditLicensesRequestLicensesInner{value: val, isSet: true}
}

func (v NullableBlockIomadCompanyAdminEditLicensesRequestLicensesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockIomadCompanyAdminEditLicensesRequestLicensesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


