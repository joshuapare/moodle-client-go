/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreAdminSetPluginOrderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreAdminSetPluginOrderRequest{}

// CoreAdminSetPluginOrderRequest struct for CoreAdminSetPluginOrderRequest
type CoreAdminSetPluginOrderRequest struct {
	// The direction to move
	Direction int32 `json:"direction"`
	// The name of the plugin
	Plugin string `json:"plugin"`
}

type _CoreAdminSetPluginOrderRequest CoreAdminSetPluginOrderRequest

// NewCoreAdminSetPluginOrderRequest instantiates a new CoreAdminSetPluginOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreAdminSetPluginOrderRequest(direction int32, plugin string) *CoreAdminSetPluginOrderRequest {
	this := CoreAdminSetPluginOrderRequest{}
	this.Direction = direction
	this.Plugin = plugin
	return &this
}

// NewCoreAdminSetPluginOrderRequestWithDefaults instantiates a new CoreAdminSetPluginOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreAdminSetPluginOrderRequestWithDefaults() *CoreAdminSetPluginOrderRequest {
	this := CoreAdminSetPluginOrderRequest{}
	var direction int32 = null
	this.Direction = direction
	return &this
}

// GetDirection returns the Direction field value
func (o *CoreAdminSetPluginOrderRequest) GetDirection() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *CoreAdminSetPluginOrderRequest) GetDirectionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *CoreAdminSetPluginOrderRequest) SetDirection(v int32) {
	o.Direction = v
}

// GetPlugin returns the Plugin field value
func (o *CoreAdminSetPluginOrderRequest) GetPlugin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Plugin
}

// GetPluginOk returns a tuple with the Plugin field value
// and a boolean to check if the value has been set.
func (o *CoreAdminSetPluginOrderRequest) GetPluginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plugin, true
}

// SetPlugin sets field value
func (o *CoreAdminSetPluginOrderRequest) SetPlugin(v string) {
	o.Plugin = v
}

func (o CoreAdminSetPluginOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreAdminSetPluginOrderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["direction"] = o.Direction
	toSerialize["plugin"] = o.Plugin
	return toSerialize, nil
}

func (o *CoreAdminSetPluginOrderRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"direction",
		"plugin",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreAdminSetPluginOrderRequest := _CoreAdminSetPluginOrderRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreAdminSetPluginOrderRequest)

	if err != nil {
		return err
	}

	*o = CoreAdminSetPluginOrderRequest(varCoreAdminSetPluginOrderRequest)

	return err
}

type NullableCoreAdminSetPluginOrderRequest struct {
	value *CoreAdminSetPluginOrderRequest
	isSet bool
}

func (v NullableCoreAdminSetPluginOrderRequest) Get() *CoreAdminSetPluginOrderRequest {
	return v.value
}

func (v *NullableCoreAdminSetPluginOrderRequest) Set(val *CoreAdminSetPluginOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreAdminSetPluginOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreAdminSetPluginOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreAdminSetPluginOrderRequest(val *CoreAdminSetPluginOrderRequest) *NullableCoreAdminSetPluginOrderRequest {
	return &NullableCoreAdminSetPluginOrderRequest{value: val, isSet: true}
}

func (v NullableCoreAdminSetPluginOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreAdminSetPluginOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


