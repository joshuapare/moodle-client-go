/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModAssignSaveGradeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModAssignSaveGradeRequest{}

// ModAssignSaveGradeRequest struct for ModAssignSaveGradeRequest
type ModAssignSaveGradeRequest struct {
	// Allow another attempt if the attempt reopen method is manual
	Addattempt bool `json:"addattempt"`
	Advancedgradingdata *ModAssignSaveGradeRequestAdvancedgradingdata `json:"advancedgradingdata,omitempty"`
	// If true, this grade will be applied to all members of the group (for group assignments).
	Applytoall bool `json:"applytoall"`
	// The assignment id to operate on
	Assignmentid int32 `json:"assignmentid"`
	// The attempt number (-1 means latest attempt)
	Attemptnumber int32 `json:"attemptnumber"`
	// The new grade for this user. Ignored if advanced grading used
	Grade float32 `json:"grade"`
	Plugindata *ModAssignSaveGradeRequestPlugindata `json:"plugindata,omitempty"`
	// The student id to operate on
	Userid int32 `json:"userid"`
	// The next marking workflow state
	Workflowstate string `json:"workflowstate"`
}

type _ModAssignSaveGradeRequest ModAssignSaveGradeRequest

// NewModAssignSaveGradeRequest instantiates a new ModAssignSaveGradeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModAssignSaveGradeRequest(addattempt bool, applytoall bool, assignmentid int32, attemptnumber int32, grade float32, userid int32, workflowstate string) *ModAssignSaveGradeRequest {
	this := ModAssignSaveGradeRequest{}
	this.Addattempt = addattempt
	this.Applytoall = applytoall
	this.Assignmentid = assignmentid
	this.Attemptnumber = attemptnumber
	this.Grade = grade
	this.Userid = userid
	this.Workflowstate = workflowstate
	return &this
}

// NewModAssignSaveGradeRequestWithDefaults instantiates a new ModAssignSaveGradeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModAssignSaveGradeRequestWithDefaults() *ModAssignSaveGradeRequest {
	this := ModAssignSaveGradeRequest{}
	var addattempt bool = null
	this.Addattempt = addattempt
	var applytoall bool = null
	this.Applytoall = applytoall
	var attemptnumber int32 = null
	this.Attemptnumber = attemptnumber
	var grade float32 = null
	this.Grade = grade
	var userid int32 = null
	this.Userid = userid
	var workflowstate string = "null"
	this.Workflowstate = workflowstate
	return &this
}

// GetAddattempt returns the Addattempt field value
func (o *ModAssignSaveGradeRequest) GetAddattempt() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Addattempt
}

// GetAddattemptOk returns a tuple with the Addattempt field value
// and a boolean to check if the value has been set.
func (o *ModAssignSaveGradeRequest) GetAddattemptOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Addattempt, true
}

// SetAddattempt sets field value
func (o *ModAssignSaveGradeRequest) SetAddattempt(v bool) {
	o.Addattempt = v
}

// GetAdvancedgradingdata returns the Advancedgradingdata field value if set, zero value otherwise.
func (o *ModAssignSaveGradeRequest) GetAdvancedgradingdata() ModAssignSaveGradeRequestAdvancedgradingdata {
	if o == nil || IsNil(o.Advancedgradingdata) {
		var ret ModAssignSaveGradeRequestAdvancedgradingdata
		return ret
	}
	return *o.Advancedgradingdata
}

// GetAdvancedgradingdataOk returns a tuple with the Advancedgradingdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignSaveGradeRequest) GetAdvancedgradingdataOk() (*ModAssignSaveGradeRequestAdvancedgradingdata, bool) {
	if o == nil || IsNil(o.Advancedgradingdata) {
		return nil, false
	}
	return o.Advancedgradingdata, true
}

// HasAdvancedgradingdata returns a boolean if a field has been set.
func (o *ModAssignSaveGradeRequest) HasAdvancedgradingdata() bool {
	if o != nil && !IsNil(o.Advancedgradingdata) {
		return true
	}

	return false
}

// SetAdvancedgradingdata gets a reference to the given ModAssignSaveGradeRequestAdvancedgradingdata and assigns it to the Advancedgradingdata field.
func (o *ModAssignSaveGradeRequest) SetAdvancedgradingdata(v ModAssignSaveGradeRequestAdvancedgradingdata) {
	o.Advancedgradingdata = &v
}

// GetApplytoall returns the Applytoall field value
func (o *ModAssignSaveGradeRequest) GetApplytoall() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Applytoall
}

// GetApplytoallOk returns a tuple with the Applytoall field value
// and a boolean to check if the value has been set.
func (o *ModAssignSaveGradeRequest) GetApplytoallOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Applytoall, true
}

// SetApplytoall sets field value
func (o *ModAssignSaveGradeRequest) SetApplytoall(v bool) {
	o.Applytoall = v
}

// GetAssignmentid returns the Assignmentid field value
func (o *ModAssignSaveGradeRequest) GetAssignmentid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Assignmentid
}

// GetAssignmentidOk returns a tuple with the Assignmentid field value
// and a boolean to check if the value has been set.
func (o *ModAssignSaveGradeRequest) GetAssignmentidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assignmentid, true
}

// SetAssignmentid sets field value
func (o *ModAssignSaveGradeRequest) SetAssignmentid(v int32) {
	o.Assignmentid = v
}

// GetAttemptnumber returns the Attemptnumber field value
func (o *ModAssignSaveGradeRequest) GetAttemptnumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Attemptnumber
}

// GetAttemptnumberOk returns a tuple with the Attemptnumber field value
// and a boolean to check if the value has been set.
func (o *ModAssignSaveGradeRequest) GetAttemptnumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attemptnumber, true
}

// SetAttemptnumber sets field value
func (o *ModAssignSaveGradeRequest) SetAttemptnumber(v int32) {
	o.Attemptnumber = v
}

// GetGrade returns the Grade field value
func (o *ModAssignSaveGradeRequest) GetGrade() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Grade
}

// GetGradeOk returns a tuple with the Grade field value
// and a boolean to check if the value has been set.
func (o *ModAssignSaveGradeRequest) GetGradeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Grade, true
}

// SetGrade sets field value
func (o *ModAssignSaveGradeRequest) SetGrade(v float32) {
	o.Grade = v
}

// GetPlugindata returns the Plugindata field value if set, zero value otherwise.
func (o *ModAssignSaveGradeRequest) GetPlugindata() ModAssignSaveGradeRequestPlugindata {
	if o == nil || IsNil(o.Plugindata) {
		var ret ModAssignSaveGradeRequestPlugindata
		return ret
	}
	return *o.Plugindata
}

// GetPlugindataOk returns a tuple with the Plugindata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignSaveGradeRequest) GetPlugindataOk() (*ModAssignSaveGradeRequestPlugindata, bool) {
	if o == nil || IsNil(o.Plugindata) {
		return nil, false
	}
	return o.Plugindata, true
}

// HasPlugindata returns a boolean if a field has been set.
func (o *ModAssignSaveGradeRequest) HasPlugindata() bool {
	if o != nil && !IsNil(o.Plugindata) {
		return true
	}

	return false
}

// SetPlugindata gets a reference to the given ModAssignSaveGradeRequestPlugindata and assigns it to the Plugindata field.
func (o *ModAssignSaveGradeRequest) SetPlugindata(v ModAssignSaveGradeRequestPlugindata) {
	o.Plugindata = &v
}

// GetUserid returns the Userid field value
func (o *ModAssignSaveGradeRequest) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *ModAssignSaveGradeRequest) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *ModAssignSaveGradeRequest) SetUserid(v int32) {
	o.Userid = v
}

// GetWorkflowstate returns the Workflowstate field value
func (o *ModAssignSaveGradeRequest) GetWorkflowstate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Workflowstate
}

// GetWorkflowstateOk returns a tuple with the Workflowstate field value
// and a boolean to check if the value has been set.
func (o *ModAssignSaveGradeRequest) GetWorkflowstateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Workflowstate, true
}

// SetWorkflowstate sets field value
func (o *ModAssignSaveGradeRequest) SetWorkflowstate(v string) {
	o.Workflowstate = v
}

func (o ModAssignSaveGradeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModAssignSaveGradeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["addattempt"] = o.Addattempt
	if !IsNil(o.Advancedgradingdata) {
		toSerialize["advancedgradingdata"] = o.Advancedgradingdata
	}
	toSerialize["applytoall"] = o.Applytoall
	toSerialize["assignmentid"] = o.Assignmentid
	toSerialize["attemptnumber"] = o.Attemptnumber
	toSerialize["grade"] = o.Grade
	if !IsNil(o.Plugindata) {
		toSerialize["plugindata"] = o.Plugindata
	}
	toSerialize["userid"] = o.Userid
	toSerialize["workflowstate"] = o.Workflowstate
	return toSerialize, nil
}

func (o *ModAssignSaveGradeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"addattempt",
		"applytoall",
		"assignmentid",
		"attemptnumber",
		"grade",
		"userid",
		"workflowstate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModAssignSaveGradeRequest := _ModAssignSaveGradeRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModAssignSaveGradeRequest)

	if err != nil {
		return err
	}

	*o = ModAssignSaveGradeRequest(varModAssignSaveGradeRequest)

	return err
}

type NullableModAssignSaveGradeRequest struct {
	value *ModAssignSaveGradeRequest
	isSet bool
}

func (v NullableModAssignSaveGradeRequest) Get() *ModAssignSaveGradeRequest {
	return v.value
}

func (v *NullableModAssignSaveGradeRequest) Set(val *ModAssignSaveGradeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModAssignSaveGradeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModAssignSaveGradeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModAssignSaveGradeRequest(val *ModAssignSaveGradeRequest) *NullableModAssignSaveGradeRequest {
	return &NullableModAssignSaveGradeRequest{value: val, isSet: true}
}

func (v NullableModAssignSaveGradeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModAssignSaveGradeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


