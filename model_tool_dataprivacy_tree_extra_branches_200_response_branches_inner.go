/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ToolDataprivacyTreeExtraBranches200ResponseBranchesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolDataprivacyTreeExtraBranches200ResponseBranchesInner{}

// ToolDataprivacyTreeExtraBranches200ResponseBranchesInner Node structure
type ToolDataprivacyTreeExtraBranches200ResponseBranchesInner struct {
	Branches []ToolDataprivacyTreeExtraBranches200ResponseBranchesInnerBranchesInner `json:"branches,omitempty"`
	// The node contextid
	Contextid *int32 `json:"contextid,omitempty"`
	// The node contextlevel
	Contextlevel *int32 `json:"contextlevel,omitempty"`
	// The contextid this node expands
	Expandcontextid *int32 `json:"expandcontextid,omitempty"`
	// Is it expanded
	Expanded *int32 `json:"expanded,omitempty"`
	// What element is this node expanded to
	Expandelement *string `json:"expandelement,omitempty"`
	// The node text
	Text *string `json:"text,omitempty"`
}

// NewToolDataprivacyTreeExtraBranches200ResponseBranchesInner instantiates a new ToolDataprivacyTreeExtraBranches200ResponseBranchesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolDataprivacyTreeExtraBranches200ResponseBranchesInner() *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner {
	this := ToolDataprivacyTreeExtraBranches200ResponseBranchesInner{}
	return &this
}

// NewToolDataprivacyTreeExtraBranches200ResponseBranchesInnerWithDefaults instantiates a new ToolDataprivacyTreeExtraBranches200ResponseBranchesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolDataprivacyTreeExtraBranches200ResponseBranchesInnerWithDefaults() *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner {
	this := ToolDataprivacyTreeExtraBranches200ResponseBranchesInner{}
	return &this
}

// GetBranches returns the Branches field value if set, zero value otherwise.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetBranches() []ToolDataprivacyTreeExtraBranches200ResponseBranchesInnerBranchesInner {
	if o == nil || IsNil(o.Branches) {
		var ret []ToolDataprivacyTreeExtraBranches200ResponseBranchesInnerBranchesInner
		return ret
	}
	return o.Branches
}

// GetBranchesOk returns a tuple with the Branches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetBranchesOk() ([]ToolDataprivacyTreeExtraBranches200ResponseBranchesInnerBranchesInner, bool) {
	if o == nil || IsNil(o.Branches) {
		return nil, false
	}
	return o.Branches, true
}

// HasBranches returns a boolean if a field has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) HasBranches() bool {
	if o != nil && !IsNil(o.Branches) {
		return true
	}

	return false
}

// SetBranches gets a reference to the given []ToolDataprivacyTreeExtraBranches200ResponseBranchesInnerBranchesInner and assigns it to the Branches field.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) SetBranches(v []ToolDataprivacyTreeExtraBranches200ResponseBranchesInnerBranchesInner) {
	o.Branches = v
}

// GetContextid returns the Contextid field value if set, zero value otherwise.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetContextid() int32 {
	if o == nil || IsNil(o.Contextid) {
		var ret int32
		return ret
	}
	return *o.Contextid
}

// GetContextidOk returns a tuple with the Contextid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetContextidOk() (*int32, bool) {
	if o == nil || IsNil(o.Contextid) {
		return nil, false
	}
	return o.Contextid, true
}

// HasContextid returns a boolean if a field has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) HasContextid() bool {
	if o != nil && !IsNil(o.Contextid) {
		return true
	}

	return false
}

// SetContextid gets a reference to the given int32 and assigns it to the Contextid field.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) SetContextid(v int32) {
	o.Contextid = &v
}

// GetContextlevel returns the Contextlevel field value if set, zero value otherwise.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetContextlevel() int32 {
	if o == nil || IsNil(o.Contextlevel) {
		var ret int32
		return ret
	}
	return *o.Contextlevel
}

// GetContextlevelOk returns a tuple with the Contextlevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetContextlevelOk() (*int32, bool) {
	if o == nil || IsNil(o.Contextlevel) {
		return nil, false
	}
	return o.Contextlevel, true
}

// HasContextlevel returns a boolean if a field has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) HasContextlevel() bool {
	if o != nil && !IsNil(o.Contextlevel) {
		return true
	}

	return false
}

// SetContextlevel gets a reference to the given int32 and assigns it to the Contextlevel field.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) SetContextlevel(v int32) {
	o.Contextlevel = &v
}

// GetExpandcontextid returns the Expandcontextid field value if set, zero value otherwise.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetExpandcontextid() int32 {
	if o == nil || IsNil(o.Expandcontextid) {
		var ret int32
		return ret
	}
	return *o.Expandcontextid
}

// GetExpandcontextidOk returns a tuple with the Expandcontextid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetExpandcontextidOk() (*int32, bool) {
	if o == nil || IsNil(o.Expandcontextid) {
		return nil, false
	}
	return o.Expandcontextid, true
}

// HasExpandcontextid returns a boolean if a field has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) HasExpandcontextid() bool {
	if o != nil && !IsNil(o.Expandcontextid) {
		return true
	}

	return false
}

// SetExpandcontextid gets a reference to the given int32 and assigns it to the Expandcontextid field.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) SetExpandcontextid(v int32) {
	o.Expandcontextid = &v
}

// GetExpanded returns the Expanded field value if set, zero value otherwise.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetExpanded() int32 {
	if o == nil || IsNil(o.Expanded) {
		var ret int32
		return ret
	}
	return *o.Expanded
}

// GetExpandedOk returns a tuple with the Expanded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetExpandedOk() (*int32, bool) {
	if o == nil || IsNil(o.Expanded) {
		return nil, false
	}
	return o.Expanded, true
}

// HasExpanded returns a boolean if a field has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) HasExpanded() bool {
	if o != nil && !IsNil(o.Expanded) {
		return true
	}

	return false
}

// SetExpanded gets a reference to the given int32 and assigns it to the Expanded field.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) SetExpanded(v int32) {
	o.Expanded = &v
}

// GetExpandelement returns the Expandelement field value if set, zero value otherwise.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetExpandelement() string {
	if o == nil || IsNil(o.Expandelement) {
		var ret string
		return ret
	}
	return *o.Expandelement
}

// GetExpandelementOk returns a tuple with the Expandelement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetExpandelementOk() (*string, bool) {
	if o == nil || IsNil(o.Expandelement) {
		return nil, false
	}
	return o.Expandelement, true
}

// HasExpandelement returns a boolean if a field has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) HasExpandelement() bool {
	if o != nil && !IsNil(o.Expandelement) {
		return true
	}

	return false
}

// SetExpandelement gets a reference to the given string and assigns it to the Expandelement field.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) SetExpandelement(v string) {
	o.Expandelement = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) SetText(v string) {
	o.Text = &v
}

func (o ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Branches) {
		toSerialize["branches"] = o.Branches
	}
	if !IsNil(o.Contextid) {
		toSerialize["contextid"] = o.Contextid
	}
	if !IsNil(o.Contextlevel) {
		toSerialize["contextlevel"] = o.Contextlevel
	}
	if !IsNil(o.Expandcontextid) {
		toSerialize["expandcontextid"] = o.Expandcontextid
	}
	if !IsNil(o.Expanded) {
		toSerialize["expanded"] = o.Expanded
	}
	if !IsNil(o.Expandelement) {
		toSerialize["expandelement"] = o.Expandelement
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	return toSerialize, nil
}

type NullableToolDataprivacyTreeExtraBranches200ResponseBranchesInner struct {
	value *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner
	isSet bool
}

func (v NullableToolDataprivacyTreeExtraBranches200ResponseBranchesInner) Get() *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner {
	return v.value
}

func (v *NullableToolDataprivacyTreeExtraBranches200ResponseBranchesInner) Set(val *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableToolDataprivacyTreeExtraBranches200ResponseBranchesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableToolDataprivacyTreeExtraBranches200ResponseBranchesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolDataprivacyTreeExtraBranches200ResponseBranchesInner(val *ToolDataprivacyTreeExtraBranches200ResponseBranchesInner) *NullableToolDataprivacyTreeExtraBranches200ResponseBranchesInner {
	return &NullableToolDataprivacyTreeExtraBranches200ResponseBranchesInner{value: val, isSet: true}
}

func (v NullableToolDataprivacyTreeExtraBranches200ResponseBranchesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolDataprivacyTreeExtraBranches200ResponseBranchesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


