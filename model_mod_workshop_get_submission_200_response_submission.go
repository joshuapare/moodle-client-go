/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModWorkshopGetSubmission200ResponseSubmission type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModWorkshopGetSubmission200ResponseSubmission{}

// ModWorkshopGetSubmission200ResponseSubmission struct for ModWorkshopGetSubmission200ResponseSubmission
type ModWorkshopGetSubmission200ResponseSubmission struct {
	// Used by File API file_postupdate_standard_filemanager.
	Attachment int32 `json:"attachment"`
	Attachmentfiles []CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner `json:"attachmentfiles,omitempty"`
	// The author of the submission.
	Authorid int32 `json:"authorid"`
	// Submission text.
	Content string `json:"content"`
	Contentfiles []CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner `json:"contentfiles,omitempty"`
	// content format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Contentformat *int32 `json:"contentformat,omitempty"`
	// The trust mode of the data.
	Contenttrust int32 `json:"contenttrust"`
	// Is this submission an example from teacher.
	Example bool `json:"example"`
	// Teacher comment/feedback for the author of the submission, for example describing the reasons                     for the grade overriding.
	Feedbackauthor *string `json:"feedbackauthor,omitempty"`
	// feedbackauthor format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Feedbackauthorformat *int32 `json:"feedbackauthorformat,omitempty"`
	// Aggregated grade for the submission. The grade is a decimal number from interval 0..100.                     If NULL then the grade for submission has not been aggregated yet.
	Grade *float32 `json:"grade,omitempty"`
	// Grade for the submission manually overridden by a teacher. Grade is always from interval 0..100.                     If NULL then the grade is not overriden.
	Gradeover *float32 `json:"gradeover,omitempty"`
	// The id of the user who has overridden the grade for submission.
	Gradeoverby *int32 `json:"gradeoverby,omitempty"`
	// The primary key of the record.
	Id int32 `json:"id"`
	// Has this submission been submitted after the deadline or during the assessment phase?
	Late int32 `json:"late"`
	// Shall the submission be available to other when the workshop is closed.
	Published bool `json:"published"`
	// Timestamp when the work was submitted for the first time.
	Timecreated int32 `json:"timecreated"`
	// The timestamp when grade or gradeover was recently modified.
	Timegraded *int32 `json:"timegraded,omitempty"`
	// Timestamp when the submission has been updated.
	Timemodified int32 `json:"timemodified"`
	// The submission title.
	Title string `json:"title"`
	// The id of the workshop instance.
	Workshopid int32 `json:"workshopid"`
}

type _ModWorkshopGetSubmission200ResponseSubmission ModWorkshopGetSubmission200ResponseSubmission

// NewModWorkshopGetSubmission200ResponseSubmission instantiates a new ModWorkshopGetSubmission200ResponseSubmission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModWorkshopGetSubmission200ResponseSubmission(attachment int32, authorid int32, content string, contenttrust int32, example bool, id int32, late int32, published bool, timecreated int32, timemodified int32, title string, workshopid int32) *ModWorkshopGetSubmission200ResponseSubmission {
	this := ModWorkshopGetSubmission200ResponseSubmission{}
	this.Attachment = attachment
	this.Authorid = authorid
	this.Content = content
	var contentformat int32 = 0
	this.Contentformat = &contentformat
	this.Contenttrust = contenttrust
	this.Example = example
	var feedbackauthor string = "null"
	this.Feedbackauthor = &feedbackauthor
	var feedbackauthorformat int32 = 0
	this.Feedbackauthorformat = &feedbackauthorformat
	var grade float32 = null
	this.Grade = &grade
	var gradeover float32 = null
	this.Gradeover = &gradeover
	this.Id = id
	this.Late = late
	this.Published = published
	this.Timecreated = timecreated
	var timegraded int32 = null
	this.Timegraded = &timegraded
	this.Timemodified = timemodified
	this.Title = title
	this.Workshopid = workshopid
	return &this
}

// NewModWorkshopGetSubmission200ResponseSubmissionWithDefaults instantiates a new ModWorkshopGetSubmission200ResponseSubmission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModWorkshopGetSubmission200ResponseSubmissionWithDefaults() *ModWorkshopGetSubmission200ResponseSubmission {
	this := ModWorkshopGetSubmission200ResponseSubmission{}
	var attachment int32 = 0
	this.Attachment = attachment
	var authorid int32 = null
	this.Authorid = authorid
	var content string = "null"
	this.Content = content
	var contentformat int32 = 0
	this.Contentformat = &contentformat
	var contenttrust int32 = 0
	this.Contenttrust = contenttrust
	var example bool = false
	this.Example = example
	var feedbackauthor string = "null"
	this.Feedbackauthor = &feedbackauthor
	var feedbackauthorformat int32 = 0
	this.Feedbackauthorformat = &feedbackauthorformat
	var grade float32 = null
	this.Grade = &grade
	var gradeover float32 = null
	this.Gradeover = &gradeover
	var late int32 = 0
	this.Late = late
	var published bool = false
	this.Published = published
	var timecreated int32 = null
	this.Timecreated = timecreated
	var timegraded int32 = null
	this.Timegraded = &timegraded
	var timemodified int32 = null
	this.Timemodified = timemodified
	var title string = "null"
	this.Title = title
	var workshopid int32 = null
	this.Workshopid = workshopid
	return &this
}

// GetAttachment returns the Attachment field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetAttachment() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Attachment
}

// GetAttachmentOk returns a tuple with the Attachment field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetAttachmentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attachment, true
}

// SetAttachment sets field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetAttachment(v int32) {
	o.Attachment = v
}

// GetAttachmentfiles returns the Attachmentfiles field value if set, zero value otherwise.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetAttachmentfiles() []CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner {
	if o == nil || IsNil(o.Attachmentfiles) {
		var ret []CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner
		return ret
	}
	return o.Attachmentfiles
}

// GetAttachmentfilesOk returns a tuple with the Attachmentfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetAttachmentfilesOk() ([]CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner, bool) {
	if o == nil || IsNil(o.Attachmentfiles) {
		return nil, false
	}
	return o.Attachmentfiles, true
}

// HasAttachmentfiles returns a boolean if a field has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) HasAttachmentfiles() bool {
	if o != nil && !IsNil(o.Attachmentfiles) {
		return true
	}

	return false
}

// SetAttachmentfiles gets a reference to the given []CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner and assigns it to the Attachmentfiles field.
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetAttachmentfiles(v []CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner) {
	o.Attachmentfiles = v
}

// GetAuthorid returns the Authorid field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetAuthorid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Authorid
}

// GetAuthoridOk returns a tuple with the Authorid field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetAuthoridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Authorid, true
}

// SetAuthorid sets field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetAuthorid(v int32) {
	o.Authorid = v
}

// GetContent returns the Content field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetContent(v string) {
	o.Content = v
}

// GetContentfiles returns the Contentfiles field value if set, zero value otherwise.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetContentfiles() []CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner {
	if o == nil || IsNil(o.Contentfiles) {
		var ret []CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner
		return ret
	}
	return o.Contentfiles
}

// GetContentfilesOk returns a tuple with the Contentfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetContentfilesOk() ([]CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner, bool) {
	if o == nil || IsNil(o.Contentfiles) {
		return nil, false
	}
	return o.Contentfiles, true
}

// HasContentfiles returns a boolean if a field has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) HasContentfiles() bool {
	if o != nil && !IsNil(o.Contentfiles) {
		return true
	}

	return false
}

// SetContentfiles gets a reference to the given []CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner and assigns it to the Contentfiles field.
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetContentfiles(v []CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner) {
	o.Contentfiles = v
}

// GetContentformat returns the Contentformat field value if set, zero value otherwise.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetContentformat() int32 {
	if o == nil || IsNil(o.Contentformat) {
		var ret int32
		return ret
	}
	return *o.Contentformat
}

// GetContentformatOk returns a tuple with the Contentformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetContentformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Contentformat) {
		return nil, false
	}
	return o.Contentformat, true
}

// HasContentformat returns a boolean if a field has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) HasContentformat() bool {
	if o != nil && !IsNil(o.Contentformat) {
		return true
	}

	return false
}

// SetContentformat gets a reference to the given int32 and assigns it to the Contentformat field.
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetContentformat(v int32) {
	o.Contentformat = &v
}

// GetContenttrust returns the Contenttrust field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetContenttrust() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Contenttrust
}

// GetContenttrustOk returns a tuple with the Contenttrust field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetContenttrustOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contenttrust, true
}

// SetContenttrust sets field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetContenttrust(v int32) {
	o.Contenttrust = v
}

// GetExample returns the Example field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetExample() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Example
}

// GetExampleOk returns a tuple with the Example field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetExampleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Example, true
}

// SetExample sets field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetExample(v bool) {
	o.Example = v
}

// GetFeedbackauthor returns the Feedbackauthor field value if set, zero value otherwise.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetFeedbackauthor() string {
	if o == nil || IsNil(o.Feedbackauthor) {
		var ret string
		return ret
	}
	return *o.Feedbackauthor
}

// GetFeedbackauthorOk returns a tuple with the Feedbackauthor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetFeedbackauthorOk() (*string, bool) {
	if o == nil || IsNil(o.Feedbackauthor) {
		return nil, false
	}
	return o.Feedbackauthor, true
}

// HasFeedbackauthor returns a boolean if a field has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) HasFeedbackauthor() bool {
	if o != nil && !IsNil(o.Feedbackauthor) {
		return true
	}

	return false
}

// SetFeedbackauthor gets a reference to the given string and assigns it to the Feedbackauthor field.
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetFeedbackauthor(v string) {
	o.Feedbackauthor = &v
}

// GetFeedbackauthorformat returns the Feedbackauthorformat field value if set, zero value otherwise.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetFeedbackauthorformat() int32 {
	if o == nil || IsNil(o.Feedbackauthorformat) {
		var ret int32
		return ret
	}
	return *o.Feedbackauthorformat
}

// GetFeedbackauthorformatOk returns a tuple with the Feedbackauthorformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetFeedbackauthorformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Feedbackauthorformat) {
		return nil, false
	}
	return o.Feedbackauthorformat, true
}

// HasFeedbackauthorformat returns a boolean if a field has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) HasFeedbackauthorformat() bool {
	if o != nil && !IsNil(o.Feedbackauthorformat) {
		return true
	}

	return false
}

// SetFeedbackauthorformat gets a reference to the given int32 and assigns it to the Feedbackauthorformat field.
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetFeedbackauthorformat(v int32) {
	o.Feedbackauthorformat = &v
}

// GetGrade returns the Grade field value if set, zero value otherwise.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetGrade() float32 {
	if o == nil || IsNil(o.Grade) {
		var ret float32
		return ret
	}
	return *o.Grade
}

// GetGradeOk returns a tuple with the Grade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetGradeOk() (*float32, bool) {
	if o == nil || IsNil(o.Grade) {
		return nil, false
	}
	return o.Grade, true
}

// HasGrade returns a boolean if a field has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) HasGrade() bool {
	if o != nil && !IsNil(o.Grade) {
		return true
	}

	return false
}

// SetGrade gets a reference to the given float32 and assigns it to the Grade field.
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetGrade(v float32) {
	o.Grade = &v
}

// GetGradeover returns the Gradeover field value if set, zero value otherwise.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetGradeover() float32 {
	if o == nil || IsNil(o.Gradeover) {
		var ret float32
		return ret
	}
	return *o.Gradeover
}

// GetGradeoverOk returns a tuple with the Gradeover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetGradeoverOk() (*float32, bool) {
	if o == nil || IsNil(o.Gradeover) {
		return nil, false
	}
	return o.Gradeover, true
}

// HasGradeover returns a boolean if a field has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) HasGradeover() bool {
	if o != nil && !IsNil(o.Gradeover) {
		return true
	}

	return false
}

// SetGradeover gets a reference to the given float32 and assigns it to the Gradeover field.
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetGradeover(v float32) {
	o.Gradeover = &v
}

// GetGradeoverby returns the Gradeoverby field value if set, zero value otherwise.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetGradeoverby() int32 {
	if o == nil || IsNil(o.Gradeoverby) {
		var ret int32
		return ret
	}
	return *o.Gradeoverby
}

// GetGradeoverbyOk returns a tuple with the Gradeoverby field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetGradeoverbyOk() (*int32, bool) {
	if o == nil || IsNil(o.Gradeoverby) {
		return nil, false
	}
	return o.Gradeoverby, true
}

// HasGradeoverby returns a boolean if a field has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) HasGradeoverby() bool {
	if o != nil && !IsNil(o.Gradeoverby) {
		return true
	}

	return false
}

// SetGradeoverby gets a reference to the given int32 and assigns it to the Gradeoverby field.
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetGradeoverby(v int32) {
	o.Gradeoverby = &v
}

// GetId returns the Id field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetId(v int32) {
	o.Id = v
}

// GetLate returns the Late field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetLate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Late
}

// GetLateOk returns a tuple with the Late field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetLateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Late, true
}

// SetLate sets field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetLate(v int32) {
	o.Late = v
}

// GetPublished returns the Published field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetPublished() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Published
}

// GetPublishedOk returns a tuple with the Published field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetPublishedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Published, true
}

// SetPublished sets field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetPublished(v bool) {
	o.Published = v
}

// GetTimecreated returns the Timecreated field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetTimecreated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetTimecreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timecreated, true
}

// SetTimecreated sets field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetTimecreated(v int32) {
	o.Timecreated = v
}

// GetTimegraded returns the Timegraded field value if set, zero value otherwise.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetTimegraded() int32 {
	if o == nil || IsNil(o.Timegraded) {
		var ret int32
		return ret
	}
	return *o.Timegraded
}

// GetTimegradedOk returns a tuple with the Timegraded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetTimegradedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timegraded) {
		return nil, false
	}
	return o.Timegraded, true
}

// HasTimegraded returns a boolean if a field has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) HasTimegraded() bool {
	if o != nil && !IsNil(o.Timegraded) {
		return true
	}

	return false
}

// SetTimegraded gets a reference to the given int32 and assigns it to the Timegraded field.
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetTimegraded(v int32) {
	o.Timegraded = &v
}

// GetTimemodified returns the Timemodified field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetTimemodified() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetTimemodifiedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timemodified, true
}

// SetTimemodified sets field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetTimemodified(v int32) {
	o.Timemodified = v
}

// GetTitle returns the Title field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetTitle(v string) {
	o.Title = v
}

// GetWorkshopid returns the Workshopid field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetWorkshopid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Workshopid
}

// GetWorkshopidOk returns a tuple with the Workshopid field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetSubmission200ResponseSubmission) GetWorkshopidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Workshopid, true
}

// SetWorkshopid sets field value
func (o *ModWorkshopGetSubmission200ResponseSubmission) SetWorkshopid(v int32) {
	o.Workshopid = v
}

func (o ModWorkshopGetSubmission200ResponseSubmission) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModWorkshopGetSubmission200ResponseSubmission) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attachment"] = o.Attachment
	if !IsNil(o.Attachmentfiles) {
		toSerialize["attachmentfiles"] = o.Attachmentfiles
	}
	toSerialize["authorid"] = o.Authorid
	toSerialize["content"] = o.Content
	if !IsNil(o.Contentfiles) {
		toSerialize["contentfiles"] = o.Contentfiles
	}
	if !IsNil(o.Contentformat) {
		toSerialize["contentformat"] = o.Contentformat
	}
	toSerialize["contenttrust"] = o.Contenttrust
	toSerialize["example"] = o.Example
	if !IsNil(o.Feedbackauthor) {
		toSerialize["feedbackauthor"] = o.Feedbackauthor
	}
	if !IsNil(o.Feedbackauthorformat) {
		toSerialize["feedbackauthorformat"] = o.Feedbackauthorformat
	}
	if !IsNil(o.Grade) {
		toSerialize["grade"] = o.Grade
	}
	if !IsNil(o.Gradeover) {
		toSerialize["gradeover"] = o.Gradeover
	}
	if !IsNil(o.Gradeoverby) {
		toSerialize["gradeoverby"] = o.Gradeoverby
	}
	toSerialize["id"] = o.Id
	toSerialize["late"] = o.Late
	toSerialize["published"] = o.Published
	toSerialize["timecreated"] = o.Timecreated
	if !IsNil(o.Timegraded) {
		toSerialize["timegraded"] = o.Timegraded
	}
	toSerialize["timemodified"] = o.Timemodified
	toSerialize["title"] = o.Title
	toSerialize["workshopid"] = o.Workshopid
	return toSerialize, nil
}

func (o *ModWorkshopGetSubmission200ResponseSubmission) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attachment",
		"authorid",
		"content",
		"contenttrust",
		"example",
		"id",
		"late",
		"published",
		"timecreated",
		"timemodified",
		"title",
		"workshopid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModWorkshopGetSubmission200ResponseSubmission := _ModWorkshopGetSubmission200ResponseSubmission{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModWorkshopGetSubmission200ResponseSubmission)

	if err != nil {
		return err
	}

	*o = ModWorkshopGetSubmission200ResponseSubmission(varModWorkshopGetSubmission200ResponseSubmission)

	return err
}

type NullableModWorkshopGetSubmission200ResponseSubmission struct {
	value *ModWorkshopGetSubmission200ResponseSubmission
	isSet bool
}

func (v NullableModWorkshopGetSubmission200ResponseSubmission) Get() *ModWorkshopGetSubmission200ResponseSubmission {
	return v.value
}

func (v *NullableModWorkshopGetSubmission200ResponseSubmission) Set(val *ModWorkshopGetSubmission200ResponseSubmission) {
	v.value = val
	v.isSet = true
}

func (v NullableModWorkshopGetSubmission200ResponseSubmission) IsSet() bool {
	return v.isSet
}

func (v *NullableModWorkshopGetSubmission200ResponseSubmission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModWorkshopGetSubmission200ResponseSubmission(val *ModWorkshopGetSubmission200ResponseSubmission) *NullableModWorkshopGetSubmission200ResponseSubmission {
	return &NullableModWorkshopGetSubmission200ResponseSubmission{value: val, isSet: true}
}

func (v NullableModWorkshopGetSubmission200ResponseSubmission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModWorkshopGetSubmission200ResponseSubmission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


