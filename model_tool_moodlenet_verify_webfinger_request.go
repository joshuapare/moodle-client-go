/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ToolMoodlenetVerifyWebfingerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolMoodlenetVerifyWebfingerRequest{}

// ToolMoodlenetVerifyWebfingerRequest struct for ToolMoodlenetVerifyWebfingerRequest
type ToolMoodlenetVerifyWebfingerRequest struct {
	// The course we are adding to
	Course int32 `json:"course"`
	// The profile url that the user has given us
	Profileurl string `json:"profileurl"`
	// The section within the course we are adding to
	Section int32 `json:"section"`
}

type _ToolMoodlenetVerifyWebfingerRequest ToolMoodlenetVerifyWebfingerRequest

// NewToolMoodlenetVerifyWebfingerRequest instantiates a new ToolMoodlenetVerifyWebfingerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolMoodlenetVerifyWebfingerRequest(course int32, profileurl string, section int32) *ToolMoodlenetVerifyWebfingerRequest {
	this := ToolMoodlenetVerifyWebfingerRequest{}
	this.Course = course
	this.Profileurl = profileurl
	this.Section = section
	return &this
}

// NewToolMoodlenetVerifyWebfingerRequestWithDefaults instantiates a new ToolMoodlenetVerifyWebfingerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolMoodlenetVerifyWebfingerRequestWithDefaults() *ToolMoodlenetVerifyWebfingerRequest {
	this := ToolMoodlenetVerifyWebfingerRequest{}
	var course int32 = null
	this.Course = course
	var profileurl string = "null"
	this.Profileurl = profileurl
	var section int32 = null
	this.Section = section
	return &this
}

// GetCourse returns the Course field value
func (o *ToolMoodlenetVerifyWebfingerRequest) GetCourse() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Course
}

// GetCourseOk returns a tuple with the Course field value
// and a boolean to check if the value has been set.
func (o *ToolMoodlenetVerifyWebfingerRequest) GetCourseOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Course, true
}

// SetCourse sets field value
func (o *ToolMoodlenetVerifyWebfingerRequest) SetCourse(v int32) {
	o.Course = v
}

// GetProfileurl returns the Profileurl field value
func (o *ToolMoodlenetVerifyWebfingerRequest) GetProfileurl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Profileurl
}

// GetProfileurlOk returns a tuple with the Profileurl field value
// and a boolean to check if the value has been set.
func (o *ToolMoodlenetVerifyWebfingerRequest) GetProfileurlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Profileurl, true
}

// SetProfileurl sets field value
func (o *ToolMoodlenetVerifyWebfingerRequest) SetProfileurl(v string) {
	o.Profileurl = v
}

// GetSection returns the Section field value
func (o *ToolMoodlenetVerifyWebfingerRequest) GetSection() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Section
}

// GetSectionOk returns a tuple with the Section field value
// and a boolean to check if the value has been set.
func (o *ToolMoodlenetVerifyWebfingerRequest) GetSectionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Section, true
}

// SetSection sets field value
func (o *ToolMoodlenetVerifyWebfingerRequest) SetSection(v int32) {
	o.Section = v
}

func (o ToolMoodlenetVerifyWebfingerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolMoodlenetVerifyWebfingerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["course"] = o.Course
	toSerialize["profileurl"] = o.Profileurl
	toSerialize["section"] = o.Section
	return toSerialize, nil
}

func (o *ToolMoodlenetVerifyWebfingerRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"course",
		"profileurl",
		"section",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varToolMoodlenetVerifyWebfingerRequest := _ToolMoodlenetVerifyWebfingerRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varToolMoodlenetVerifyWebfingerRequest)

	if err != nil {
		return err
	}

	*o = ToolMoodlenetVerifyWebfingerRequest(varToolMoodlenetVerifyWebfingerRequest)

	return err
}

type NullableToolMoodlenetVerifyWebfingerRequest struct {
	value *ToolMoodlenetVerifyWebfingerRequest
	isSet bool
}

func (v NullableToolMoodlenetVerifyWebfingerRequest) Get() *ToolMoodlenetVerifyWebfingerRequest {
	return v.value
}

func (v *NullableToolMoodlenetVerifyWebfingerRequest) Set(val *ToolMoodlenetVerifyWebfingerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableToolMoodlenetVerifyWebfingerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableToolMoodlenetVerifyWebfingerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolMoodlenetVerifyWebfingerRequest(val *ToolMoodlenetVerifyWebfingerRequest) *NullableToolMoodlenetVerifyWebfingerRequest {
	return &NullableToolMoodlenetVerifyWebfingerRequest{value: val, isSet: true}
}

func (v NullableToolMoodlenetVerifyWebfingerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolMoodlenetVerifyWebfingerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


