/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreUserUpdateUserPreferencesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreUserUpdateUserPreferencesRequest{}

// CoreUserUpdateUserPreferencesRequest struct for CoreUserUpdateUserPreferencesRequest
type CoreUserUpdateUserPreferencesRequest struct {
	// Enable or disable notifications for this user
	Emailstop *int32 `json:"emailstop,omitempty"`
	Preferences []CoreUserUpdateUserPreferencesRequestPreferencesInner `json:"preferences,omitempty"`
	// id of the user, default to current user
	Userid *int32 `json:"userid,omitempty"`
}

// NewCoreUserUpdateUserPreferencesRequest instantiates a new CoreUserUpdateUserPreferencesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreUserUpdateUserPreferencesRequest() *CoreUserUpdateUserPreferencesRequest {
	this := CoreUserUpdateUserPreferencesRequest{}
	var emailstop int32 = null
	this.Emailstop = &emailstop
	var userid int32 = 0
	this.Userid = &userid
	return &this
}

// NewCoreUserUpdateUserPreferencesRequestWithDefaults instantiates a new CoreUserUpdateUserPreferencesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreUserUpdateUserPreferencesRequestWithDefaults() *CoreUserUpdateUserPreferencesRequest {
	this := CoreUserUpdateUserPreferencesRequest{}
	var emailstop int32 = null
	this.Emailstop = &emailstop
	var userid int32 = 0
	this.Userid = &userid
	return &this
}

// GetEmailstop returns the Emailstop field value if set, zero value otherwise.
func (o *CoreUserUpdateUserPreferencesRequest) GetEmailstop() int32 {
	if o == nil || IsNil(o.Emailstop) {
		var ret int32
		return ret
	}
	return *o.Emailstop
}

// GetEmailstopOk returns a tuple with the Emailstop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUserUpdateUserPreferencesRequest) GetEmailstopOk() (*int32, bool) {
	if o == nil || IsNil(o.Emailstop) {
		return nil, false
	}
	return o.Emailstop, true
}

// HasEmailstop returns a boolean if a field has been set.
func (o *CoreUserUpdateUserPreferencesRequest) HasEmailstop() bool {
	if o != nil && !IsNil(o.Emailstop) {
		return true
	}

	return false
}

// SetEmailstop gets a reference to the given int32 and assigns it to the Emailstop field.
func (o *CoreUserUpdateUserPreferencesRequest) SetEmailstop(v int32) {
	o.Emailstop = &v
}

// GetPreferences returns the Preferences field value if set, zero value otherwise.
func (o *CoreUserUpdateUserPreferencesRequest) GetPreferences() []CoreUserUpdateUserPreferencesRequestPreferencesInner {
	if o == nil || IsNil(o.Preferences) {
		var ret []CoreUserUpdateUserPreferencesRequestPreferencesInner
		return ret
	}
	return o.Preferences
}

// GetPreferencesOk returns a tuple with the Preferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUserUpdateUserPreferencesRequest) GetPreferencesOk() ([]CoreUserUpdateUserPreferencesRequestPreferencesInner, bool) {
	if o == nil || IsNil(o.Preferences) {
		return nil, false
	}
	return o.Preferences, true
}

// HasPreferences returns a boolean if a field has been set.
func (o *CoreUserUpdateUserPreferencesRequest) HasPreferences() bool {
	if o != nil && !IsNil(o.Preferences) {
		return true
	}

	return false
}

// SetPreferences gets a reference to the given []CoreUserUpdateUserPreferencesRequestPreferencesInner and assigns it to the Preferences field.
func (o *CoreUserUpdateUserPreferencesRequest) SetPreferences(v []CoreUserUpdateUserPreferencesRequestPreferencesInner) {
	o.Preferences = v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *CoreUserUpdateUserPreferencesRequest) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUserUpdateUserPreferencesRequest) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *CoreUserUpdateUserPreferencesRequest) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *CoreUserUpdateUserPreferencesRequest) SetUserid(v int32) {
	o.Userid = &v
}

func (o CoreUserUpdateUserPreferencesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreUserUpdateUserPreferencesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Emailstop) {
		toSerialize["emailstop"] = o.Emailstop
	}
	if !IsNil(o.Preferences) {
		toSerialize["preferences"] = o.Preferences
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

type NullableCoreUserUpdateUserPreferencesRequest struct {
	value *CoreUserUpdateUserPreferencesRequest
	isSet bool
}

func (v NullableCoreUserUpdateUserPreferencesRequest) Get() *CoreUserUpdateUserPreferencesRequest {
	return v.value
}

func (v *NullableCoreUserUpdateUserPreferencesRequest) Set(val *CoreUserUpdateUserPreferencesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreUserUpdateUserPreferencesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreUserUpdateUserPreferencesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreUserUpdateUserPreferencesRequest(val *CoreUserUpdateUserPreferencesRequest) *NullableCoreUserUpdateUserPreferencesRequest {
	return &NullableCoreUserUpdateUserPreferencesRequest{value: val, isSet: true}
}

func (v NullableCoreUserUpdateUserPreferencesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreUserUpdateUserPreferencesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


