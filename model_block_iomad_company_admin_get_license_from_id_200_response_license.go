/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense{}

// BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense struct for BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense
type BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense struct {
	// All licenses allocated
	Allallocated bool `json:"allallocated"`
	// Allocation
	Allocation int32 `json:"allocation"`
	// Company ID
	Companyid int32 `json:"companyid"`
	// Expiry date
	Expirydate int32 `json:"expirydate"`
	// License ID
	Id int32 `json:"id"`
	// Instant
	Instant bool `json:"instant"`
	// License name
	Name string `json:"name"`
	// Parent ID
	Parentid int32 `json:"parentid"`
	// Program
	Program bool `json:"program"`
	// Reference
	Reference string `json:"reference"`
	// Start date
	Startdate int32 `json:"startdate"`
	// License type - 0 = standard, 1 = reusable, 2 = standard educator, 3 = reusable educator
	Type int32 `json:"type"`
	// Used
	Used int32 `json:"used"`
	// Valid length
	Validlength int32 `json:"validlength"`
}

type _BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense

// NewBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense instantiates a new BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense(allallocated bool, allocation int32, companyid int32, expirydate int32, id int32, instant bool, name string, parentid int32, program bool, reference string, startdate int32, type_ int32, used int32, validlength int32) *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense {
	this := BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense{}
	this.Allallocated = allallocated
	this.Allocation = allocation
	this.Companyid = companyid
	this.Expirydate = expirydate
	this.Id = id
	this.Instant = instant
	this.Name = name
	this.Parentid = parentid
	this.Program = program
	this.Reference = reference
	this.Startdate = startdate
	this.Type = type_
	this.Used = used
	this.Validlength = validlength
	return &this
}

// NewBlockIomadCompanyAdminGetLicenseFromId200ResponseLicenseWithDefaults instantiates a new BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockIomadCompanyAdminGetLicenseFromId200ResponseLicenseWithDefaults() *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense {
	this := BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense{}
	var allallocated bool = null
	this.Allallocated = allallocated
	var allocation int32 = null
	this.Allocation = allocation
	var expirydate int32 = null
	this.Expirydate = expirydate
	var instant bool = null
	this.Instant = instant
	var parentid int32 = null
	this.Parentid = parentid
	var program bool = null
	this.Program = program
	var reference string = "null"
	this.Reference = reference
	var startdate int32 = null
	this.Startdate = startdate
	var used int32 = null
	this.Used = used
	var validlength int32 = null
	this.Validlength = validlength
	return &this
}

// GetAllallocated returns the Allallocated field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetAllallocated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Allallocated
}

// GetAllallocatedOk returns a tuple with the Allallocated field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetAllallocatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Allallocated, true
}

// SetAllallocated sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetAllallocated(v bool) {
	o.Allallocated = v
}

// GetAllocation returns the Allocation field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetAllocation() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Allocation
}

// GetAllocationOk returns a tuple with the Allocation field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetAllocationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Allocation, true
}

// SetAllocation sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetAllocation(v int32) {
	o.Allocation = v
}

// GetCompanyid returns the Companyid field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetCompanyid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Companyid
}

// GetCompanyidOk returns a tuple with the Companyid field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetCompanyidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Companyid, true
}

// SetCompanyid sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetCompanyid(v int32) {
	o.Companyid = v
}

// GetExpirydate returns the Expirydate field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetExpirydate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Expirydate
}

// GetExpirydateOk returns a tuple with the Expirydate field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetExpirydateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expirydate, true
}

// SetExpirydate sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetExpirydate(v int32) {
	o.Expirydate = v
}

// GetId returns the Id field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetId(v int32) {
	o.Id = v
}

// GetInstant returns the Instant field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetInstant() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Instant
}

// GetInstantOk returns a tuple with the Instant field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetInstantOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instant, true
}

// SetInstant sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetInstant(v bool) {
	o.Instant = v
}

// GetName returns the Name field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetName(v string) {
	o.Name = v
}

// GetParentid returns the Parentid field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetParentid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Parentid
}

// GetParentidOk returns a tuple with the Parentid field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetParentidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parentid, true
}

// SetParentid sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetParentid(v int32) {
	o.Parentid = v
}

// GetProgram returns the Program field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetProgram() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Program
}

// GetProgramOk returns a tuple with the Program field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetProgramOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Program, true
}

// SetProgram sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetProgram(v bool) {
	o.Program = v
}

// GetReference returns the Reference field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetReferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reference, true
}

// SetReference sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetReference(v string) {
	o.Reference = v
}

// GetStartdate returns the Startdate field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetStartdate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Startdate
}

// GetStartdateOk returns a tuple with the Startdate field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetStartdateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Startdate, true
}

// SetStartdate sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetStartdate(v int32) {
	o.Startdate = v
}

// GetType returns the Type field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetType(v int32) {
	o.Type = v
}

// GetUsed returns the Used field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetUsed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Used
}

// GetUsedOk returns a tuple with the Used field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetUsedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Used, true
}

// SetUsed sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetUsed(v int32) {
	o.Used = v
}

// GetValidlength returns the Validlength field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetValidlength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Validlength
}

// GetValidlengthOk returns a tuple with the Validlength field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) GetValidlengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Validlength, true
}

// SetValidlength sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) SetValidlength(v int32) {
	o.Validlength = v
}

func (o BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allallocated"] = o.Allallocated
	toSerialize["allocation"] = o.Allocation
	toSerialize["companyid"] = o.Companyid
	toSerialize["expirydate"] = o.Expirydate
	toSerialize["id"] = o.Id
	toSerialize["instant"] = o.Instant
	toSerialize["name"] = o.Name
	toSerialize["parentid"] = o.Parentid
	toSerialize["program"] = o.Program
	toSerialize["reference"] = o.Reference
	toSerialize["startdate"] = o.Startdate
	toSerialize["type"] = o.Type
	toSerialize["used"] = o.Used
	toSerialize["validlength"] = o.Validlength
	return toSerialize, nil
}

func (o *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"allallocated",
		"allocation",
		"companyid",
		"expirydate",
		"id",
		"instant",
		"name",
		"parentid",
		"program",
		"reference",
		"startdate",
		"type",
		"used",
		"validlength",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense := _BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense)

	if err != nil {
		return err
	}

	*o = BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense(varBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense)

	return err
}

type NullableBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense struct {
	value *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense
	isSet bool
}

func (v NullableBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) Get() *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense {
	return v.value
}

func (v *NullableBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) Set(val *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense(val *BlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) *NullableBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense {
	return &NullableBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense{value: val, isSet: true}
}

func (v NullableBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockIomadCompanyAdminGetLicenseFromId200ResponseLicense) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


