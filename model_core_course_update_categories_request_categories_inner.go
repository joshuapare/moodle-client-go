/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCourseUpdateCategoriesRequestCategoriesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCourseUpdateCategoriesRequestCategoriesInner{}

// CoreCourseUpdateCategoriesRequestCategoriesInner struct for CoreCourseUpdateCategoriesRequestCategoriesInner
type CoreCourseUpdateCategoriesRequestCategoriesInner struct {
	// category description
	Description *string `json:"description,omitempty"`
	// description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Descriptionformat *int32 `json:"descriptionformat,omitempty"`
	// course id
	Id *int32 `json:"id,omitempty"`
	// category id number
	Idnumber *string `json:"idnumber,omitempty"`
	// category name
	Name *string `json:"name,omitempty"`
	// parent category id
	Parent *int32 `json:"parent,omitempty"`
	// the category theme. This option must be enabled on moodle
	Theme *string `json:"theme,omitempty"`
}

// NewCoreCourseUpdateCategoriesRequestCategoriesInner instantiates a new CoreCourseUpdateCategoriesRequestCategoriesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCourseUpdateCategoriesRequestCategoriesInner() *CoreCourseUpdateCategoriesRequestCategoriesInner {
	this := CoreCourseUpdateCategoriesRequestCategoriesInner{}
	var description string = "null"
	this.Description = &description
	var descriptionformat int32 = 1
	this.Descriptionformat = &descriptionformat
	var idnumber string = "null"
	this.Idnumber = &idnumber
	var parent int32 = null
	this.Parent = &parent
	var theme string = "null"
	this.Theme = &theme
	return &this
}

// NewCoreCourseUpdateCategoriesRequestCategoriesInnerWithDefaults instantiates a new CoreCourseUpdateCategoriesRequestCategoriesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCourseUpdateCategoriesRequestCategoriesInnerWithDefaults() *CoreCourseUpdateCategoriesRequestCategoriesInner {
	this := CoreCourseUpdateCategoriesRequestCategoriesInner{}
	var description string = "null"
	this.Description = &description
	var descriptionformat int32 = 1
	this.Descriptionformat = &descriptionformat
	var idnumber string = "null"
	this.Idnumber = &idnumber
	var parent int32 = null
	this.Parent = &parent
	var theme string = "null"
	this.Theme = &theme
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) SetDescription(v string) {
	o.Description = &v
}

// GetDescriptionformat returns the Descriptionformat field value if set, zero value otherwise.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetDescriptionformat() int32 {
	if o == nil || IsNil(o.Descriptionformat) {
		var ret int32
		return ret
	}
	return *o.Descriptionformat
}

// GetDescriptionformatOk returns a tuple with the Descriptionformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetDescriptionformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Descriptionformat) {
		return nil, false
	}
	return o.Descriptionformat, true
}

// HasDescriptionformat returns a boolean if a field has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) HasDescriptionformat() bool {
	if o != nil && !IsNil(o.Descriptionformat) {
		return true
	}

	return false
}

// SetDescriptionformat gets a reference to the given int32 and assigns it to the Descriptionformat field.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) SetDescriptionformat(v int32) {
	o.Descriptionformat = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) SetId(v int32) {
	o.Id = &v
}

// GetIdnumber returns the Idnumber field value if set, zero value otherwise.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetIdnumber() string {
	if o == nil || IsNil(o.Idnumber) {
		var ret string
		return ret
	}
	return *o.Idnumber
}

// GetIdnumberOk returns a tuple with the Idnumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetIdnumberOk() (*string, bool) {
	if o == nil || IsNil(o.Idnumber) {
		return nil, false
	}
	return o.Idnumber, true
}

// HasIdnumber returns a boolean if a field has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) HasIdnumber() bool {
	if o != nil && !IsNil(o.Idnumber) {
		return true
	}

	return false
}

// SetIdnumber gets a reference to the given string and assigns it to the Idnumber field.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) SetIdnumber(v string) {
	o.Idnumber = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) SetName(v string) {
	o.Name = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetParent() int32 {
	if o == nil || IsNil(o.Parent) {
		var ret int32
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetParentOk() (*int32, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given int32 and assigns it to the Parent field.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) SetParent(v int32) {
	o.Parent = &v
}

// GetTheme returns the Theme field value if set, zero value otherwise.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetTheme() string {
	if o == nil || IsNil(o.Theme) {
		var ret string
		return ret
	}
	return *o.Theme
}

// GetThemeOk returns a tuple with the Theme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) GetThemeOk() (*string, bool) {
	if o == nil || IsNil(o.Theme) {
		return nil, false
	}
	return o.Theme, true
}

// HasTheme returns a boolean if a field has been set.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) HasTheme() bool {
	if o != nil && !IsNil(o.Theme) {
		return true
	}

	return false
}

// SetTheme gets a reference to the given string and assigns it to the Theme field.
func (o *CoreCourseUpdateCategoriesRequestCategoriesInner) SetTheme(v string) {
	o.Theme = &v
}

func (o CoreCourseUpdateCategoriesRequestCategoriesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCourseUpdateCategoriesRequestCategoriesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Descriptionformat) {
		toSerialize["descriptionformat"] = o.Descriptionformat
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Idnumber) {
		toSerialize["idnumber"] = o.Idnumber
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Theme) {
		toSerialize["theme"] = o.Theme
	}
	return toSerialize, nil
}

type NullableCoreCourseUpdateCategoriesRequestCategoriesInner struct {
	value *CoreCourseUpdateCategoriesRequestCategoriesInner
	isSet bool
}

func (v NullableCoreCourseUpdateCategoriesRequestCategoriesInner) Get() *CoreCourseUpdateCategoriesRequestCategoriesInner {
	return v.value
}

func (v *NullableCoreCourseUpdateCategoriesRequestCategoriesInner) Set(val *CoreCourseUpdateCategoriesRequestCategoriesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCourseUpdateCategoriesRequestCategoriesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCourseUpdateCategoriesRequestCategoriesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCourseUpdateCategoriesRequestCategoriesInner(val *CoreCourseUpdateCategoriesRequestCategoriesInner) *NullableCoreCourseUpdateCategoriesRequestCategoriesInner {
	return &NullableCoreCourseUpdateCategoriesRequestCategoriesInner{value: val, isSet: true}
}

func (v NullableCoreCourseUpdateCategoriesRequestCategoriesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCourseUpdateCategoriesRequestCategoriesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


