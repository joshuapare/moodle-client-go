/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModForumGetForumDiscussionsPaginatedRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumGetForumDiscussionsPaginatedRequest{}

// ModForumGetForumDiscussionsPaginatedRequest struct for ModForumGetForumDiscussionsPaginatedRequest
type ModForumGetForumDiscussionsPaginatedRequest struct {
	// forum instance id
	Forumid int32 `json:"forumid"`
	// current page
	Page *int32 `json:"page,omitempty"`
	// items per page
	Perpage *int32 `json:"perpage,omitempty"`
	// sort by this element: id, timemodified, timestart or timeend
	Sortby *string `json:"sortby,omitempty"`
	// sort direction: ASC or DESC
	Sortdirection *string `json:"sortdirection,omitempty"`
}

type _ModForumGetForumDiscussionsPaginatedRequest ModForumGetForumDiscussionsPaginatedRequest

// NewModForumGetForumDiscussionsPaginatedRequest instantiates a new ModForumGetForumDiscussionsPaginatedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumGetForumDiscussionsPaginatedRequest(forumid int32) *ModForumGetForumDiscussionsPaginatedRequest {
	this := ModForumGetForumDiscussionsPaginatedRequest{}
	this.Forumid = forumid
	var page int32 = -1
	this.Page = &page
	var perpage int32 = 0
	this.Perpage = &perpage
	var sortby string = "timemodified"
	this.Sortby = &sortby
	var sortdirection string = "DESC"
	this.Sortdirection = &sortdirection
	return &this
}

// NewModForumGetForumDiscussionsPaginatedRequestWithDefaults instantiates a new ModForumGetForumDiscussionsPaginatedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumGetForumDiscussionsPaginatedRequestWithDefaults() *ModForumGetForumDiscussionsPaginatedRequest {
	this := ModForumGetForumDiscussionsPaginatedRequest{}
	var page int32 = -1
	this.Page = &page
	var perpage int32 = 0
	this.Perpage = &perpage
	var sortby string = "timemodified"
	this.Sortby = &sortby
	var sortdirection string = "DESC"
	this.Sortdirection = &sortdirection
	return &this
}

// GetForumid returns the Forumid field value
func (o *ModForumGetForumDiscussionsPaginatedRequest) GetForumid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Forumid
}

// GetForumidOk returns a tuple with the Forumid field value
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussionsPaginatedRequest) GetForumidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Forumid, true
}

// SetForumid sets field value
func (o *ModForumGetForumDiscussionsPaginatedRequest) SetForumid(v int32) {
	o.Forumid = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussionsPaginatedRequest) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussionsPaginatedRequest) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussionsPaginatedRequest) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *ModForumGetForumDiscussionsPaginatedRequest) SetPage(v int32) {
	o.Page = &v
}

// GetPerpage returns the Perpage field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussionsPaginatedRequest) GetPerpage() int32 {
	if o == nil || IsNil(o.Perpage) {
		var ret int32
		return ret
	}
	return *o.Perpage
}

// GetPerpageOk returns a tuple with the Perpage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussionsPaginatedRequest) GetPerpageOk() (*int32, bool) {
	if o == nil || IsNil(o.Perpage) {
		return nil, false
	}
	return o.Perpage, true
}

// HasPerpage returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussionsPaginatedRequest) HasPerpage() bool {
	if o != nil && !IsNil(o.Perpage) {
		return true
	}

	return false
}

// SetPerpage gets a reference to the given int32 and assigns it to the Perpage field.
func (o *ModForumGetForumDiscussionsPaginatedRequest) SetPerpage(v int32) {
	o.Perpage = &v
}

// GetSortby returns the Sortby field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussionsPaginatedRequest) GetSortby() string {
	if o == nil || IsNil(o.Sortby) {
		var ret string
		return ret
	}
	return *o.Sortby
}

// GetSortbyOk returns a tuple with the Sortby field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussionsPaginatedRequest) GetSortbyOk() (*string, bool) {
	if o == nil || IsNil(o.Sortby) {
		return nil, false
	}
	return o.Sortby, true
}

// HasSortby returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussionsPaginatedRequest) HasSortby() bool {
	if o != nil && !IsNil(o.Sortby) {
		return true
	}

	return false
}

// SetSortby gets a reference to the given string and assigns it to the Sortby field.
func (o *ModForumGetForumDiscussionsPaginatedRequest) SetSortby(v string) {
	o.Sortby = &v
}

// GetSortdirection returns the Sortdirection field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussionsPaginatedRequest) GetSortdirection() string {
	if o == nil || IsNil(o.Sortdirection) {
		var ret string
		return ret
	}
	return *o.Sortdirection
}

// GetSortdirectionOk returns a tuple with the Sortdirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussionsPaginatedRequest) GetSortdirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Sortdirection) {
		return nil, false
	}
	return o.Sortdirection, true
}

// HasSortdirection returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussionsPaginatedRequest) HasSortdirection() bool {
	if o != nil && !IsNil(o.Sortdirection) {
		return true
	}

	return false
}

// SetSortdirection gets a reference to the given string and assigns it to the Sortdirection field.
func (o *ModForumGetForumDiscussionsPaginatedRequest) SetSortdirection(v string) {
	o.Sortdirection = &v
}

func (o ModForumGetForumDiscussionsPaginatedRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumGetForumDiscussionsPaginatedRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["forumid"] = o.Forumid
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.Perpage) {
		toSerialize["perpage"] = o.Perpage
	}
	if !IsNil(o.Sortby) {
		toSerialize["sortby"] = o.Sortby
	}
	if !IsNil(o.Sortdirection) {
		toSerialize["sortdirection"] = o.Sortdirection
	}
	return toSerialize, nil
}

func (o *ModForumGetForumDiscussionsPaginatedRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"forumid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModForumGetForumDiscussionsPaginatedRequest := _ModForumGetForumDiscussionsPaginatedRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModForumGetForumDiscussionsPaginatedRequest)

	if err != nil {
		return err
	}

	*o = ModForumGetForumDiscussionsPaginatedRequest(varModForumGetForumDiscussionsPaginatedRequest)

	return err
}

type NullableModForumGetForumDiscussionsPaginatedRequest struct {
	value *ModForumGetForumDiscussionsPaginatedRequest
	isSet bool
}

func (v NullableModForumGetForumDiscussionsPaginatedRequest) Get() *ModForumGetForumDiscussionsPaginatedRequest {
	return v.value
}

func (v *NullableModForumGetForumDiscussionsPaginatedRequest) Set(val *ModForumGetForumDiscussionsPaginatedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumGetForumDiscussionsPaginatedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumGetForumDiscussionsPaginatedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumGetForumDiscussionsPaginatedRequest(val *ModForumGetForumDiscussionsPaginatedRequest) *NullableModForumGetForumDiscussionsPaginatedRequest {
	return &NullableModForumGetForumDiscussionsPaginatedRequest{value: val, isSet: true}
}

func (v NullableModForumGetForumDiscussionsPaginatedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumGetForumDiscussionsPaginatedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


