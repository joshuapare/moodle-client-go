/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModWikiGetWikisByCourses200ResponseWikisInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModWikiGetWikisByCourses200ResponseWikisInner{}

// ModWikiGetWikisByCourses200ResponseWikisInner Wikis
type ModWikiGetWikisByCourses200ResponseWikisInner struct {
	// True if user can create pages.
	Cancreatepages *bool `json:"cancreatepages,omitempty"`
	// Course id
	Course *int32 `json:"course,omitempty"`
	// Course module id
	Coursemodule *int32 `json:"coursemodule,omitempty"`
	// Wiki's default format (html, creole, nwiki).
	Defaultformat *string `json:"defaultformat,omitempty"`
	// Edit begin.
	Editbegin *int32 `json:"editbegin,omitempty"`
	// Edit end.
	Editend *int32 `json:"editend,omitempty"`
	// First page title.
	Firstpagetitle *string `json:"firstpagetitle,omitempty"`
	// 1 if format is forced, 0 otherwise.
	Forceformat *int32 `json:"forceformat,omitempty"`
	// Group id
	Groupingid *int32 `json:"groupingid,omitempty"`
	// Group mode
	Groupmode *int32 `json:"groupmode,omitempty"`
	// Activity instance id
	Id *int32 `json:"id,omitempty"`
	// Activity introduction
	Intro *string `json:"intro,omitempty"`
	Introfiles []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner `json:"introfiles,omitempty"`
	// intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Introformat *int32 `json:"introformat,omitempty"`
	// Forced activity language
	Lang *string `json:"lang,omitempty"`
	// Activity name
	Name *string `json:"name,omitempty"`
	// Course section id
	Section *int32 `json:"section,omitempty"`
	// Time of creation.
	Timecreated *int32 `json:"timecreated,omitempty"`
	// Time of last modification.
	Timemodified *int32 `json:"timemodified,omitempty"`
	// Visible
	Visible *bool `json:"visible,omitempty"`
	// Wiki mode (individual, collaborative).
	Wikimode *string `json:"wikimode,omitempty"`
}

// NewModWikiGetWikisByCourses200ResponseWikisInner instantiates a new ModWikiGetWikisByCourses200ResponseWikisInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModWikiGetWikisByCourses200ResponseWikisInner() *ModWikiGetWikisByCourses200ResponseWikisInner {
	this := ModWikiGetWikisByCourses200ResponseWikisInner{}
	var cancreatepages bool = null
	this.Cancreatepages = &cancreatepages
	var defaultformat string = "null"
	this.Defaultformat = &defaultformat
	var editbegin int32 = null
	this.Editbegin = &editbegin
	var editend int32 = null
	this.Editend = &editend
	var firstpagetitle string = "null"
	this.Firstpagetitle = &firstpagetitle
	var forceformat int32 = null
	this.Forceformat = &forceformat
	var wikimode string = "null"
	this.Wikimode = &wikimode
	return &this
}

// NewModWikiGetWikisByCourses200ResponseWikisInnerWithDefaults instantiates a new ModWikiGetWikisByCourses200ResponseWikisInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModWikiGetWikisByCourses200ResponseWikisInnerWithDefaults() *ModWikiGetWikisByCourses200ResponseWikisInner {
	this := ModWikiGetWikisByCourses200ResponseWikisInner{}
	var cancreatepages bool = null
	this.Cancreatepages = &cancreatepages
	var defaultformat string = "null"
	this.Defaultformat = &defaultformat
	var editbegin int32 = null
	this.Editbegin = &editbegin
	var editend int32 = null
	this.Editend = &editend
	var firstpagetitle string = "null"
	this.Firstpagetitle = &firstpagetitle
	var forceformat int32 = null
	this.Forceformat = &forceformat
	var wikimode string = "null"
	this.Wikimode = &wikimode
	return &this
}

// GetCancreatepages returns the Cancreatepages field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetCancreatepages() bool {
	if o == nil || IsNil(o.Cancreatepages) {
		var ret bool
		return ret
	}
	return *o.Cancreatepages
}

// GetCancreatepagesOk returns a tuple with the Cancreatepages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetCancreatepagesOk() (*bool, bool) {
	if o == nil || IsNil(o.Cancreatepages) {
		return nil, false
	}
	return o.Cancreatepages, true
}

// HasCancreatepages returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasCancreatepages() bool {
	if o != nil && !IsNil(o.Cancreatepages) {
		return true
	}

	return false
}

// SetCancreatepages gets a reference to the given bool and assigns it to the Cancreatepages field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetCancreatepages(v bool) {
	o.Cancreatepages = &v
}

// GetCourse returns the Course field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetCourse() int32 {
	if o == nil || IsNil(o.Course) {
		var ret int32
		return ret
	}
	return *o.Course
}

// GetCourseOk returns a tuple with the Course field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetCourseOk() (*int32, bool) {
	if o == nil || IsNil(o.Course) {
		return nil, false
	}
	return o.Course, true
}

// HasCourse returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasCourse() bool {
	if o != nil && !IsNil(o.Course) {
		return true
	}

	return false
}

// SetCourse gets a reference to the given int32 and assigns it to the Course field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetCourse(v int32) {
	o.Course = &v
}

// GetCoursemodule returns the Coursemodule field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetCoursemodule() int32 {
	if o == nil || IsNil(o.Coursemodule) {
		var ret int32
		return ret
	}
	return *o.Coursemodule
}

// GetCoursemoduleOk returns a tuple with the Coursemodule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetCoursemoduleOk() (*int32, bool) {
	if o == nil || IsNil(o.Coursemodule) {
		return nil, false
	}
	return o.Coursemodule, true
}

// HasCoursemodule returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasCoursemodule() bool {
	if o != nil && !IsNil(o.Coursemodule) {
		return true
	}

	return false
}

// SetCoursemodule gets a reference to the given int32 and assigns it to the Coursemodule field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetCoursemodule(v int32) {
	o.Coursemodule = &v
}

// GetDefaultformat returns the Defaultformat field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetDefaultformat() string {
	if o == nil || IsNil(o.Defaultformat) {
		var ret string
		return ret
	}
	return *o.Defaultformat
}

// GetDefaultformatOk returns a tuple with the Defaultformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetDefaultformatOk() (*string, bool) {
	if o == nil || IsNil(o.Defaultformat) {
		return nil, false
	}
	return o.Defaultformat, true
}

// HasDefaultformat returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasDefaultformat() bool {
	if o != nil && !IsNil(o.Defaultformat) {
		return true
	}

	return false
}

// SetDefaultformat gets a reference to the given string and assigns it to the Defaultformat field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetDefaultformat(v string) {
	o.Defaultformat = &v
}

// GetEditbegin returns the Editbegin field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetEditbegin() int32 {
	if o == nil || IsNil(o.Editbegin) {
		var ret int32
		return ret
	}
	return *o.Editbegin
}

// GetEditbeginOk returns a tuple with the Editbegin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetEditbeginOk() (*int32, bool) {
	if o == nil || IsNil(o.Editbegin) {
		return nil, false
	}
	return o.Editbegin, true
}

// HasEditbegin returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasEditbegin() bool {
	if o != nil && !IsNil(o.Editbegin) {
		return true
	}

	return false
}

// SetEditbegin gets a reference to the given int32 and assigns it to the Editbegin field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetEditbegin(v int32) {
	o.Editbegin = &v
}

// GetEditend returns the Editend field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetEditend() int32 {
	if o == nil || IsNil(o.Editend) {
		var ret int32
		return ret
	}
	return *o.Editend
}

// GetEditendOk returns a tuple with the Editend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetEditendOk() (*int32, bool) {
	if o == nil || IsNil(o.Editend) {
		return nil, false
	}
	return o.Editend, true
}

// HasEditend returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasEditend() bool {
	if o != nil && !IsNil(o.Editend) {
		return true
	}

	return false
}

// SetEditend gets a reference to the given int32 and assigns it to the Editend field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetEditend(v int32) {
	o.Editend = &v
}

// GetFirstpagetitle returns the Firstpagetitle field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetFirstpagetitle() string {
	if o == nil || IsNil(o.Firstpagetitle) {
		var ret string
		return ret
	}
	return *o.Firstpagetitle
}

// GetFirstpagetitleOk returns a tuple with the Firstpagetitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetFirstpagetitleOk() (*string, bool) {
	if o == nil || IsNil(o.Firstpagetitle) {
		return nil, false
	}
	return o.Firstpagetitle, true
}

// HasFirstpagetitle returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasFirstpagetitle() bool {
	if o != nil && !IsNil(o.Firstpagetitle) {
		return true
	}

	return false
}

// SetFirstpagetitle gets a reference to the given string and assigns it to the Firstpagetitle field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetFirstpagetitle(v string) {
	o.Firstpagetitle = &v
}

// GetForceformat returns the Forceformat field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetForceformat() int32 {
	if o == nil || IsNil(o.Forceformat) {
		var ret int32
		return ret
	}
	return *o.Forceformat
}

// GetForceformatOk returns a tuple with the Forceformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetForceformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Forceformat) {
		return nil, false
	}
	return o.Forceformat, true
}

// HasForceformat returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasForceformat() bool {
	if o != nil && !IsNil(o.Forceformat) {
		return true
	}

	return false
}

// SetForceformat gets a reference to the given int32 and assigns it to the Forceformat field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetForceformat(v int32) {
	o.Forceformat = &v
}

// GetGroupingid returns the Groupingid field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetGroupingid() int32 {
	if o == nil || IsNil(o.Groupingid) {
		var ret int32
		return ret
	}
	return *o.Groupingid
}

// GetGroupingidOk returns a tuple with the Groupingid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetGroupingidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupingid) {
		return nil, false
	}
	return o.Groupingid, true
}

// HasGroupingid returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasGroupingid() bool {
	if o != nil && !IsNil(o.Groupingid) {
		return true
	}

	return false
}

// SetGroupingid gets a reference to the given int32 and assigns it to the Groupingid field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetGroupingid(v int32) {
	o.Groupingid = &v
}

// GetGroupmode returns the Groupmode field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetGroupmode() int32 {
	if o == nil || IsNil(o.Groupmode) {
		var ret int32
		return ret
	}
	return *o.Groupmode
}

// GetGroupmodeOk returns a tuple with the Groupmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetGroupmodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupmode) {
		return nil, false
	}
	return o.Groupmode, true
}

// HasGroupmode returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasGroupmode() bool {
	if o != nil && !IsNil(o.Groupmode) {
		return true
	}

	return false
}

// SetGroupmode gets a reference to the given int32 and assigns it to the Groupmode field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetGroupmode(v int32) {
	o.Groupmode = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetId(v int32) {
	o.Id = &v
}

// GetIntro returns the Intro field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetIntro() string {
	if o == nil || IsNil(o.Intro) {
		var ret string
		return ret
	}
	return *o.Intro
}

// GetIntroOk returns a tuple with the Intro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetIntroOk() (*string, bool) {
	if o == nil || IsNil(o.Intro) {
		return nil, false
	}
	return o.Intro, true
}

// HasIntro returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasIntro() bool {
	if o != nil && !IsNil(o.Intro) {
		return true
	}

	return false
}

// SetIntro gets a reference to the given string and assigns it to the Intro field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetIntro(v string) {
	o.Intro = &v
}

// GetIntrofiles returns the Introfiles field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetIntrofiles() []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner {
	if o == nil || IsNil(o.Introfiles) {
		var ret []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner
		return ret
	}
	return o.Introfiles
}

// GetIntrofilesOk returns a tuple with the Introfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetIntrofilesOk() ([]CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner, bool) {
	if o == nil || IsNil(o.Introfiles) {
		return nil, false
	}
	return o.Introfiles, true
}

// HasIntrofiles returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasIntrofiles() bool {
	if o != nil && !IsNil(o.Introfiles) {
		return true
	}

	return false
}

// SetIntrofiles gets a reference to the given []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner and assigns it to the Introfiles field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetIntrofiles(v []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner) {
	o.Introfiles = v
}

// GetIntroformat returns the Introformat field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetIntroformat() int32 {
	if o == nil || IsNil(o.Introformat) {
		var ret int32
		return ret
	}
	return *o.Introformat
}

// GetIntroformatOk returns a tuple with the Introformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetIntroformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Introformat) {
		return nil, false
	}
	return o.Introformat, true
}

// HasIntroformat returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasIntroformat() bool {
	if o != nil && !IsNil(o.Introformat) {
		return true
	}

	return false
}

// SetIntroformat gets a reference to the given int32 and assigns it to the Introformat field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetIntroformat(v int32) {
	o.Introformat = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetLang(v string) {
	o.Lang = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetName(v string) {
	o.Name = &v
}

// GetSection returns the Section field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetSection() int32 {
	if o == nil || IsNil(o.Section) {
		var ret int32
		return ret
	}
	return *o.Section
}

// GetSectionOk returns a tuple with the Section field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetSectionOk() (*int32, bool) {
	if o == nil || IsNil(o.Section) {
		return nil, false
	}
	return o.Section, true
}

// HasSection returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasSection() bool {
	if o != nil && !IsNil(o.Section) {
		return true
	}

	return false
}

// SetSection gets a reference to the given int32 and assigns it to the Section field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetSection(v int32) {
	o.Section = &v
}

// GetTimecreated returns the Timecreated field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetTimecreated() int32 {
	if o == nil || IsNil(o.Timecreated) {
		var ret int32
		return ret
	}
	return *o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetTimecreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecreated) {
		return nil, false
	}
	return o.Timecreated, true
}

// HasTimecreated returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasTimecreated() bool {
	if o != nil && !IsNil(o.Timecreated) {
		return true
	}

	return false
}

// SetTimecreated gets a reference to the given int32 and assigns it to the Timecreated field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetTimecreated(v int32) {
	o.Timecreated = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetVisible() bool {
	if o == nil || IsNil(o.Visible) {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetVisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetVisible(v bool) {
	o.Visible = &v
}

// GetWikimode returns the Wikimode field value if set, zero value otherwise.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetWikimode() string {
	if o == nil || IsNil(o.Wikimode) {
		var ret string
		return ret
	}
	return *o.Wikimode
}

// GetWikimodeOk returns a tuple with the Wikimode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) GetWikimodeOk() (*string, bool) {
	if o == nil || IsNil(o.Wikimode) {
		return nil, false
	}
	return o.Wikimode, true
}

// HasWikimode returns a boolean if a field has been set.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) HasWikimode() bool {
	if o != nil && !IsNil(o.Wikimode) {
		return true
	}

	return false
}

// SetWikimode gets a reference to the given string and assigns it to the Wikimode field.
func (o *ModWikiGetWikisByCourses200ResponseWikisInner) SetWikimode(v string) {
	o.Wikimode = &v
}

func (o ModWikiGetWikisByCourses200ResponseWikisInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModWikiGetWikisByCourses200ResponseWikisInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cancreatepages) {
		toSerialize["cancreatepages"] = o.Cancreatepages
	}
	if !IsNil(o.Course) {
		toSerialize["course"] = o.Course
	}
	if !IsNil(o.Coursemodule) {
		toSerialize["coursemodule"] = o.Coursemodule
	}
	if !IsNil(o.Defaultformat) {
		toSerialize["defaultformat"] = o.Defaultformat
	}
	if !IsNil(o.Editbegin) {
		toSerialize["editbegin"] = o.Editbegin
	}
	if !IsNil(o.Editend) {
		toSerialize["editend"] = o.Editend
	}
	if !IsNil(o.Firstpagetitle) {
		toSerialize["firstpagetitle"] = o.Firstpagetitle
	}
	if !IsNil(o.Forceformat) {
		toSerialize["forceformat"] = o.Forceformat
	}
	if !IsNil(o.Groupingid) {
		toSerialize["groupingid"] = o.Groupingid
	}
	if !IsNil(o.Groupmode) {
		toSerialize["groupmode"] = o.Groupmode
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Intro) {
		toSerialize["intro"] = o.Intro
	}
	if !IsNil(o.Introfiles) {
		toSerialize["introfiles"] = o.Introfiles
	}
	if !IsNil(o.Introformat) {
		toSerialize["introformat"] = o.Introformat
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Section) {
		toSerialize["section"] = o.Section
	}
	if !IsNil(o.Timecreated) {
		toSerialize["timecreated"] = o.Timecreated
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	if !IsNil(o.Wikimode) {
		toSerialize["wikimode"] = o.Wikimode
	}
	return toSerialize, nil
}

type NullableModWikiGetWikisByCourses200ResponseWikisInner struct {
	value *ModWikiGetWikisByCourses200ResponseWikisInner
	isSet bool
}

func (v NullableModWikiGetWikisByCourses200ResponseWikisInner) Get() *ModWikiGetWikisByCourses200ResponseWikisInner {
	return v.value
}

func (v *NullableModWikiGetWikisByCourses200ResponseWikisInner) Set(val *ModWikiGetWikisByCourses200ResponseWikisInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModWikiGetWikisByCourses200ResponseWikisInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModWikiGetWikisByCourses200ResponseWikisInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModWikiGetWikisByCourses200ResponseWikisInner(val *ModWikiGetWikisByCourses200ResponseWikisInner) *NullableModWikiGetWikisByCourses200ResponseWikisInner {
	return &NullableModWikiGetWikisByCourses200ResponseWikisInner{value: val, isSet: true}
}

func (v NullableModWikiGetWikisByCourses200ResponseWikisInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModWikiGetWikisByCourses200ResponseWikisInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


