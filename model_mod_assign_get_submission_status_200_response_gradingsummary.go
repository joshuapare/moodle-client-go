/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModAssignGetSubmissionStatus200ResponseGradingsummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModAssignGetSubmissionStatus200ResponseGradingsummary{}

// ModAssignGetSubmissionStatus200ResponseGradingsummary struct for ModAssignGetSubmissionStatus200ResponseGradingsummary
type ModAssignGetSubmissionStatus200ResponseGradingsummary struct {
	// Number of users who can submit.
	Participantcount int32 `json:"participantcount"`
	// Number of submissions in draft status.
	Submissiondraftscount int32 `json:"submissiondraftscount"`
	// Whether submissions are enabled or not.
	Submissionsenabled bool `json:"submissionsenabled"`
	// Number of submissions that need grading.
	Submissionsneedgradingcount int32 `json:"submissionsneedgradingcount"`
	// Number of submissions in submitted status.
	Submissionssubmittedcount int32 `json:"submissionssubmittedcount"`
	// Whether we need to warn people that there                                                                         are users without groups ('warningrequired'), warn                                                                         people there are users who will submit in the default                                                                         group ('warningoptional') or no warning ('').
	Warnofungroupedusers string `json:"warnofungroupedusers"`
}

type _ModAssignGetSubmissionStatus200ResponseGradingsummary ModAssignGetSubmissionStatus200ResponseGradingsummary

// NewModAssignGetSubmissionStatus200ResponseGradingsummary instantiates a new ModAssignGetSubmissionStatus200ResponseGradingsummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModAssignGetSubmissionStatus200ResponseGradingsummary(participantcount int32, submissiondraftscount int32, submissionsenabled bool, submissionsneedgradingcount int32, submissionssubmittedcount int32, warnofungroupedusers string) *ModAssignGetSubmissionStatus200ResponseGradingsummary {
	this := ModAssignGetSubmissionStatus200ResponseGradingsummary{}
	this.Participantcount = participantcount
	this.Submissiondraftscount = submissiondraftscount
	this.Submissionsenabled = submissionsenabled
	this.Submissionsneedgradingcount = submissionsneedgradingcount
	this.Submissionssubmittedcount = submissionssubmittedcount
	this.Warnofungroupedusers = warnofungroupedusers
	return &this
}

// NewModAssignGetSubmissionStatus200ResponseGradingsummaryWithDefaults instantiates a new ModAssignGetSubmissionStatus200ResponseGradingsummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModAssignGetSubmissionStatus200ResponseGradingsummaryWithDefaults() *ModAssignGetSubmissionStatus200ResponseGradingsummary {
	this := ModAssignGetSubmissionStatus200ResponseGradingsummary{}
	var participantcount int32 = null
	this.Participantcount = participantcount
	var submissiondraftscount int32 = null
	this.Submissiondraftscount = submissiondraftscount
	var submissionsenabled bool = null
	this.Submissionsenabled = submissionsenabled
	var submissionsneedgradingcount int32 = null
	this.Submissionsneedgradingcount = submissionsneedgradingcount
	var submissionssubmittedcount int32 = null
	this.Submissionssubmittedcount = submissionssubmittedcount
	var warnofungroupedusers string = "null"
	this.Warnofungroupedusers = warnofungroupedusers
	return &this
}

// GetParticipantcount returns the Participantcount field value
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) GetParticipantcount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Participantcount
}

// GetParticipantcountOk returns a tuple with the Participantcount field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) GetParticipantcountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Participantcount, true
}

// SetParticipantcount sets field value
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) SetParticipantcount(v int32) {
	o.Participantcount = v
}

// GetSubmissiondraftscount returns the Submissiondraftscount field value
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) GetSubmissiondraftscount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Submissiondraftscount
}

// GetSubmissiondraftscountOk returns a tuple with the Submissiondraftscount field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) GetSubmissiondraftscountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Submissiondraftscount, true
}

// SetSubmissiondraftscount sets field value
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) SetSubmissiondraftscount(v int32) {
	o.Submissiondraftscount = v
}

// GetSubmissionsenabled returns the Submissionsenabled field value
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) GetSubmissionsenabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Submissionsenabled
}

// GetSubmissionsenabledOk returns a tuple with the Submissionsenabled field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) GetSubmissionsenabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Submissionsenabled, true
}

// SetSubmissionsenabled sets field value
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) SetSubmissionsenabled(v bool) {
	o.Submissionsenabled = v
}

// GetSubmissionsneedgradingcount returns the Submissionsneedgradingcount field value
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) GetSubmissionsneedgradingcount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Submissionsneedgradingcount
}

// GetSubmissionsneedgradingcountOk returns a tuple with the Submissionsneedgradingcount field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) GetSubmissionsneedgradingcountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Submissionsneedgradingcount, true
}

// SetSubmissionsneedgradingcount sets field value
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) SetSubmissionsneedgradingcount(v int32) {
	o.Submissionsneedgradingcount = v
}

// GetSubmissionssubmittedcount returns the Submissionssubmittedcount field value
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) GetSubmissionssubmittedcount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Submissionssubmittedcount
}

// GetSubmissionssubmittedcountOk returns a tuple with the Submissionssubmittedcount field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) GetSubmissionssubmittedcountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Submissionssubmittedcount, true
}

// SetSubmissionssubmittedcount sets field value
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) SetSubmissionssubmittedcount(v int32) {
	o.Submissionssubmittedcount = v
}

// GetWarnofungroupedusers returns the Warnofungroupedusers field value
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) GetWarnofungroupedusers() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Warnofungroupedusers
}

// GetWarnofungroupedusersOk returns a tuple with the Warnofungroupedusers field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) GetWarnofungroupedusersOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Warnofungroupedusers, true
}

// SetWarnofungroupedusers sets field value
func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) SetWarnofungroupedusers(v string) {
	o.Warnofungroupedusers = v
}

func (o ModAssignGetSubmissionStatus200ResponseGradingsummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModAssignGetSubmissionStatus200ResponseGradingsummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["participantcount"] = o.Participantcount
	toSerialize["submissiondraftscount"] = o.Submissiondraftscount
	toSerialize["submissionsenabled"] = o.Submissionsenabled
	toSerialize["submissionsneedgradingcount"] = o.Submissionsneedgradingcount
	toSerialize["submissionssubmittedcount"] = o.Submissionssubmittedcount
	toSerialize["warnofungroupedusers"] = o.Warnofungroupedusers
	return toSerialize, nil
}

func (o *ModAssignGetSubmissionStatus200ResponseGradingsummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"participantcount",
		"submissiondraftscount",
		"submissionsenabled",
		"submissionsneedgradingcount",
		"submissionssubmittedcount",
		"warnofungroupedusers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModAssignGetSubmissionStatus200ResponseGradingsummary := _ModAssignGetSubmissionStatus200ResponseGradingsummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModAssignGetSubmissionStatus200ResponseGradingsummary)

	if err != nil {
		return err
	}

	*o = ModAssignGetSubmissionStatus200ResponseGradingsummary(varModAssignGetSubmissionStatus200ResponseGradingsummary)

	return err
}

type NullableModAssignGetSubmissionStatus200ResponseGradingsummary struct {
	value *ModAssignGetSubmissionStatus200ResponseGradingsummary
	isSet bool
}

func (v NullableModAssignGetSubmissionStatus200ResponseGradingsummary) Get() *ModAssignGetSubmissionStatus200ResponseGradingsummary {
	return v.value
}

func (v *NullableModAssignGetSubmissionStatus200ResponseGradingsummary) Set(val *ModAssignGetSubmissionStatus200ResponseGradingsummary) {
	v.value = val
	v.isSet = true
}

func (v NullableModAssignGetSubmissionStatus200ResponseGradingsummary) IsSet() bool {
	return v.isSet
}

func (v *NullableModAssignGetSubmissionStatus200ResponseGradingsummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModAssignGetSubmissionStatus200ResponseGradingsummary(val *ModAssignGetSubmissionStatus200ResponseGradingsummary) *NullableModAssignGetSubmissionStatus200ResponseGradingsummary {
	return &NullableModAssignGetSubmissionStatus200ResponseGradingsummary{value: val, isSet: true}
}

func (v NullableModAssignGetSubmissionStatus200ResponseGradingsummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModAssignGetSubmissionStatus200ResponseGradingsummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


