/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreMessageGetConversationMessagesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreMessageGetConversationMessagesRequest{}

// CoreMessageGetConversationMessagesRequest struct for CoreMessageGetConversationMessagesRequest
type CoreMessageGetConversationMessagesRequest struct {
	// The conversation id
	Convid int32 `json:"convid"`
	// The current user's id
	Currentuserid int32 `json:"currentuserid"`
	// Limit from
	Limitfrom *int32 `json:"limitfrom,omitempty"`
	// Limit number
	Limitnum *int32 `json:"limitnum,omitempty"`
	// Newest first?
	Newest *bool `json:"newest,omitempty"`
	// The timestamp from which the messages were created
	Timefrom *int32 `json:"timefrom,omitempty"`
}

type _CoreMessageGetConversationMessagesRequest CoreMessageGetConversationMessagesRequest

// NewCoreMessageGetConversationMessagesRequest instantiates a new CoreMessageGetConversationMessagesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreMessageGetConversationMessagesRequest(convid int32, currentuserid int32) *CoreMessageGetConversationMessagesRequest {
	this := CoreMessageGetConversationMessagesRequest{}
	this.Convid = convid
	this.Currentuserid = currentuserid
	var limitfrom int32 = 0
	this.Limitfrom = &limitfrom
	var limitnum int32 = 0
	this.Limitnum = &limitnum
	var newest bool = false
	this.Newest = &newest
	var timefrom int32 = 0
	this.Timefrom = &timefrom
	return &this
}

// NewCoreMessageGetConversationMessagesRequestWithDefaults instantiates a new CoreMessageGetConversationMessagesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreMessageGetConversationMessagesRequestWithDefaults() *CoreMessageGetConversationMessagesRequest {
	this := CoreMessageGetConversationMessagesRequest{}
	var currentuserid int32 = null
	this.Currentuserid = currentuserid
	var limitfrom int32 = 0
	this.Limitfrom = &limitfrom
	var limitnum int32 = 0
	this.Limitnum = &limitnum
	var newest bool = false
	this.Newest = &newest
	var timefrom int32 = 0
	this.Timefrom = &timefrom
	return &this
}

// GetConvid returns the Convid field value
func (o *CoreMessageGetConversationMessagesRequest) GetConvid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Convid
}

// GetConvidOk returns a tuple with the Convid field value
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversationMessagesRequest) GetConvidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Convid, true
}

// SetConvid sets field value
func (o *CoreMessageGetConversationMessagesRequest) SetConvid(v int32) {
	o.Convid = v
}

// GetCurrentuserid returns the Currentuserid field value
func (o *CoreMessageGetConversationMessagesRequest) GetCurrentuserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Currentuserid
}

// GetCurrentuseridOk returns a tuple with the Currentuserid field value
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversationMessagesRequest) GetCurrentuseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currentuserid, true
}

// SetCurrentuserid sets field value
func (o *CoreMessageGetConversationMessagesRequest) SetCurrentuserid(v int32) {
	o.Currentuserid = v
}

// GetLimitfrom returns the Limitfrom field value if set, zero value otherwise.
func (o *CoreMessageGetConversationMessagesRequest) GetLimitfrom() int32 {
	if o == nil || IsNil(o.Limitfrom) {
		var ret int32
		return ret
	}
	return *o.Limitfrom
}

// GetLimitfromOk returns a tuple with the Limitfrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversationMessagesRequest) GetLimitfromOk() (*int32, bool) {
	if o == nil || IsNil(o.Limitfrom) {
		return nil, false
	}
	return o.Limitfrom, true
}

// HasLimitfrom returns a boolean if a field has been set.
func (o *CoreMessageGetConversationMessagesRequest) HasLimitfrom() bool {
	if o != nil && !IsNil(o.Limitfrom) {
		return true
	}

	return false
}

// SetLimitfrom gets a reference to the given int32 and assigns it to the Limitfrom field.
func (o *CoreMessageGetConversationMessagesRequest) SetLimitfrom(v int32) {
	o.Limitfrom = &v
}

// GetLimitnum returns the Limitnum field value if set, zero value otherwise.
func (o *CoreMessageGetConversationMessagesRequest) GetLimitnum() int32 {
	if o == nil || IsNil(o.Limitnum) {
		var ret int32
		return ret
	}
	return *o.Limitnum
}

// GetLimitnumOk returns a tuple with the Limitnum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversationMessagesRequest) GetLimitnumOk() (*int32, bool) {
	if o == nil || IsNil(o.Limitnum) {
		return nil, false
	}
	return o.Limitnum, true
}

// HasLimitnum returns a boolean if a field has been set.
func (o *CoreMessageGetConversationMessagesRequest) HasLimitnum() bool {
	if o != nil && !IsNil(o.Limitnum) {
		return true
	}

	return false
}

// SetLimitnum gets a reference to the given int32 and assigns it to the Limitnum field.
func (o *CoreMessageGetConversationMessagesRequest) SetLimitnum(v int32) {
	o.Limitnum = &v
}

// GetNewest returns the Newest field value if set, zero value otherwise.
func (o *CoreMessageGetConversationMessagesRequest) GetNewest() bool {
	if o == nil || IsNil(o.Newest) {
		var ret bool
		return ret
	}
	return *o.Newest
}

// GetNewestOk returns a tuple with the Newest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversationMessagesRequest) GetNewestOk() (*bool, bool) {
	if o == nil || IsNil(o.Newest) {
		return nil, false
	}
	return o.Newest, true
}

// HasNewest returns a boolean if a field has been set.
func (o *CoreMessageGetConversationMessagesRequest) HasNewest() bool {
	if o != nil && !IsNil(o.Newest) {
		return true
	}

	return false
}

// SetNewest gets a reference to the given bool and assigns it to the Newest field.
func (o *CoreMessageGetConversationMessagesRequest) SetNewest(v bool) {
	o.Newest = &v
}

// GetTimefrom returns the Timefrom field value if set, zero value otherwise.
func (o *CoreMessageGetConversationMessagesRequest) GetTimefrom() int32 {
	if o == nil || IsNil(o.Timefrom) {
		var ret int32
		return ret
	}
	return *o.Timefrom
}

// GetTimefromOk returns a tuple with the Timefrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversationMessagesRequest) GetTimefromOk() (*int32, bool) {
	if o == nil || IsNil(o.Timefrom) {
		return nil, false
	}
	return o.Timefrom, true
}

// HasTimefrom returns a boolean if a field has been set.
func (o *CoreMessageGetConversationMessagesRequest) HasTimefrom() bool {
	if o != nil && !IsNil(o.Timefrom) {
		return true
	}

	return false
}

// SetTimefrom gets a reference to the given int32 and assigns it to the Timefrom field.
func (o *CoreMessageGetConversationMessagesRequest) SetTimefrom(v int32) {
	o.Timefrom = &v
}

func (o CoreMessageGetConversationMessagesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreMessageGetConversationMessagesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["convid"] = o.Convid
	toSerialize["currentuserid"] = o.Currentuserid
	if !IsNil(o.Limitfrom) {
		toSerialize["limitfrom"] = o.Limitfrom
	}
	if !IsNil(o.Limitnum) {
		toSerialize["limitnum"] = o.Limitnum
	}
	if !IsNil(o.Newest) {
		toSerialize["newest"] = o.Newest
	}
	if !IsNil(o.Timefrom) {
		toSerialize["timefrom"] = o.Timefrom
	}
	return toSerialize, nil
}

func (o *CoreMessageGetConversationMessagesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"convid",
		"currentuserid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreMessageGetConversationMessagesRequest := _CoreMessageGetConversationMessagesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreMessageGetConversationMessagesRequest)

	if err != nil {
		return err
	}

	*o = CoreMessageGetConversationMessagesRequest(varCoreMessageGetConversationMessagesRequest)

	return err
}

type NullableCoreMessageGetConversationMessagesRequest struct {
	value *CoreMessageGetConversationMessagesRequest
	isSet bool
}

func (v NullableCoreMessageGetConversationMessagesRequest) Get() *CoreMessageGetConversationMessagesRequest {
	return v.value
}

func (v *NullableCoreMessageGetConversationMessagesRequest) Set(val *CoreMessageGetConversationMessagesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreMessageGetConversationMessagesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreMessageGetConversationMessagesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreMessageGetConversationMessagesRequest(val *CoreMessageGetConversationMessagesRequest) *NullableCoreMessageGetConversationMessagesRequest {
	return &NullableCoreMessageGetConversationMessagesRequest{value: val, isSet: true}
}

func (v NullableCoreMessageGetConversationMessagesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreMessageGetConversationMessagesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


