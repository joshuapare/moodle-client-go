/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModH5pactivityGetAttemptsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModH5pactivityGetAttemptsRequest{}

// ModH5pactivityGetAttemptsRequest struct for ModH5pactivityGetAttemptsRequest
type ModH5pactivityGetAttemptsRequest struct {
	// h5p activity instance id
	H5pactivityid int32 `json:"h5pactivityid"`
	Userids []map[string]interface{} `json:"userids,omitempty"`
}

type _ModH5pactivityGetAttemptsRequest ModH5pactivityGetAttemptsRequest

// NewModH5pactivityGetAttemptsRequest instantiates a new ModH5pactivityGetAttemptsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModH5pactivityGetAttemptsRequest(h5pactivityid int32) *ModH5pactivityGetAttemptsRequest {
	this := ModH5pactivityGetAttemptsRequest{}
	this.H5pactivityid = h5pactivityid
	return &this
}

// NewModH5pactivityGetAttemptsRequestWithDefaults instantiates a new ModH5pactivityGetAttemptsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModH5pactivityGetAttemptsRequestWithDefaults() *ModH5pactivityGetAttemptsRequest {
	this := ModH5pactivityGetAttemptsRequest{}
	var h5pactivityid int32 = null
	this.H5pactivityid = h5pactivityid
	return &this
}

// GetH5pactivityid returns the H5pactivityid field value
func (o *ModH5pactivityGetAttemptsRequest) GetH5pactivityid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.H5pactivityid
}

// GetH5pactivityidOk returns a tuple with the H5pactivityid field value
// and a boolean to check if the value has been set.
func (o *ModH5pactivityGetAttemptsRequest) GetH5pactivityidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.H5pactivityid, true
}

// SetH5pactivityid sets field value
func (o *ModH5pactivityGetAttemptsRequest) SetH5pactivityid(v int32) {
	o.H5pactivityid = v
}

// GetUserids returns the Userids field value if set, zero value otherwise.
func (o *ModH5pactivityGetAttemptsRequest) GetUserids() []map[string]interface{} {
	if o == nil || IsNil(o.Userids) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Userids
}

// GetUseridsOk returns a tuple with the Userids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModH5pactivityGetAttemptsRequest) GetUseridsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Userids) {
		return nil, false
	}
	return o.Userids, true
}

// HasUserids returns a boolean if a field has been set.
func (o *ModH5pactivityGetAttemptsRequest) HasUserids() bool {
	if o != nil && !IsNil(o.Userids) {
		return true
	}

	return false
}

// SetUserids gets a reference to the given []map[string]interface{} and assigns it to the Userids field.
func (o *ModH5pactivityGetAttemptsRequest) SetUserids(v []map[string]interface{}) {
	o.Userids = v
}

func (o ModH5pactivityGetAttemptsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModH5pactivityGetAttemptsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["h5pactivityid"] = o.H5pactivityid
	if !IsNil(o.Userids) {
		toSerialize["userids"] = o.Userids
	}
	return toSerialize, nil
}

func (o *ModH5pactivityGetAttemptsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"h5pactivityid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModH5pactivityGetAttemptsRequest := _ModH5pactivityGetAttemptsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModH5pactivityGetAttemptsRequest)

	if err != nil {
		return err
	}

	*o = ModH5pactivityGetAttemptsRequest(varModH5pactivityGetAttemptsRequest)

	return err
}

type NullableModH5pactivityGetAttemptsRequest struct {
	value *ModH5pactivityGetAttemptsRequest
	isSet bool
}

func (v NullableModH5pactivityGetAttemptsRequest) Get() *ModH5pactivityGetAttemptsRequest {
	return v.value
}

func (v *NullableModH5pactivityGetAttemptsRequest) Set(val *ModH5pactivityGetAttemptsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModH5pactivityGetAttemptsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModH5pactivityGetAttemptsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModH5pactivityGetAttemptsRequest(val *ModH5pactivityGetAttemptsRequest) *NullableModH5pactivityGetAttemptsRequest {
	return &NullableModH5pactivityGetAttemptsRequest{value: val, isSet: true}
}

func (v NullableModH5pactivityGetAttemptsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModH5pactivityGetAttemptsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


