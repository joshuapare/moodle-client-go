/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCourseToggleActivityRecommendation200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCourseToggleActivityRecommendation200Response{}

// CoreCourseToggleActivityRecommendation200Response struct for CoreCourseToggleActivityRecommendation200Response
type CoreCourseToggleActivityRecommendation200Response struct {
	// The favourite area (itemtype)
	Area string `json:"area"`
	// id of the activity or whatever
	Id int32 `json:"id"`
	// If created or deleted
	Status bool `json:"status"`
}

type _CoreCourseToggleActivityRecommendation200Response CoreCourseToggleActivityRecommendation200Response

// NewCoreCourseToggleActivityRecommendation200Response instantiates a new CoreCourseToggleActivityRecommendation200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCourseToggleActivityRecommendation200Response(area string, id int32, status bool) *CoreCourseToggleActivityRecommendation200Response {
	this := CoreCourseToggleActivityRecommendation200Response{}
	this.Area = area
	this.Id = id
	this.Status = status
	return &this
}

// NewCoreCourseToggleActivityRecommendation200ResponseWithDefaults instantiates a new CoreCourseToggleActivityRecommendation200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCourseToggleActivityRecommendation200ResponseWithDefaults() *CoreCourseToggleActivityRecommendation200Response {
	this := CoreCourseToggleActivityRecommendation200Response{}
	var status bool = null
	this.Status = status
	return &this
}

// GetArea returns the Area field value
func (o *CoreCourseToggleActivityRecommendation200Response) GetArea() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Area
}

// GetAreaOk returns a tuple with the Area field value
// and a boolean to check if the value has been set.
func (o *CoreCourseToggleActivityRecommendation200Response) GetAreaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Area, true
}

// SetArea sets field value
func (o *CoreCourseToggleActivityRecommendation200Response) SetArea(v string) {
	o.Area = v
}

// GetId returns the Id field value
func (o *CoreCourseToggleActivityRecommendation200Response) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CoreCourseToggleActivityRecommendation200Response) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CoreCourseToggleActivityRecommendation200Response) SetId(v int32) {
	o.Id = v
}

// GetStatus returns the Status field value
func (o *CoreCourseToggleActivityRecommendation200Response) GetStatus() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CoreCourseToggleActivityRecommendation200Response) GetStatusOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CoreCourseToggleActivityRecommendation200Response) SetStatus(v bool) {
	o.Status = v
}

func (o CoreCourseToggleActivityRecommendation200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCourseToggleActivityRecommendation200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["area"] = o.Area
	toSerialize["id"] = o.Id
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *CoreCourseToggleActivityRecommendation200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"area",
		"id",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCourseToggleActivityRecommendation200Response := _CoreCourseToggleActivityRecommendation200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCourseToggleActivityRecommendation200Response)

	if err != nil {
		return err
	}

	*o = CoreCourseToggleActivityRecommendation200Response(varCoreCourseToggleActivityRecommendation200Response)

	return err
}

type NullableCoreCourseToggleActivityRecommendation200Response struct {
	value *CoreCourseToggleActivityRecommendation200Response
	isSet bool
}

func (v NullableCoreCourseToggleActivityRecommendation200Response) Get() *CoreCourseToggleActivityRecommendation200Response {
	return v.value
}

func (v *NullableCoreCourseToggleActivityRecommendation200Response) Set(val *CoreCourseToggleActivityRecommendation200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCourseToggleActivityRecommendation200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCourseToggleActivityRecommendation200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCourseToggleActivityRecommendation200Response(val *CoreCourseToggleActivityRecommendation200Response) *NullableCoreCourseToggleActivityRecommendation200Response {
	return &NullableCoreCourseToggleActivityRecommendation200Response{value: val, isSet: true}
}

func (v NullableCoreCourseToggleActivityRecommendation200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCourseToggleActivityRecommendation200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


