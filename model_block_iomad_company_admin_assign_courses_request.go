/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BlockIomadCompanyAdminAssignCoursesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockIomadCompanyAdminAssignCoursesRequest{}

// BlockIomadCompanyAdminAssignCoursesRequest struct for BlockIomadCompanyAdminAssignCoursesRequest
type BlockIomadCompanyAdminAssignCoursesRequest struct {
	Courses []BlockIomadCompanyAdminAssignCoursesRequestCoursesInner `json:"courses"`
}

type _BlockIomadCompanyAdminAssignCoursesRequest BlockIomadCompanyAdminAssignCoursesRequest

// NewBlockIomadCompanyAdminAssignCoursesRequest instantiates a new BlockIomadCompanyAdminAssignCoursesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockIomadCompanyAdminAssignCoursesRequest(courses []BlockIomadCompanyAdminAssignCoursesRequestCoursesInner) *BlockIomadCompanyAdminAssignCoursesRequest {
	this := BlockIomadCompanyAdminAssignCoursesRequest{}
	this.Courses = courses
	return &this
}

// NewBlockIomadCompanyAdminAssignCoursesRequestWithDefaults instantiates a new BlockIomadCompanyAdminAssignCoursesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockIomadCompanyAdminAssignCoursesRequestWithDefaults() *BlockIomadCompanyAdminAssignCoursesRequest {
	this := BlockIomadCompanyAdminAssignCoursesRequest{}
	return &this
}

// GetCourses returns the Courses field value
func (o *BlockIomadCompanyAdminAssignCoursesRequest) GetCourses() []BlockIomadCompanyAdminAssignCoursesRequestCoursesInner {
	if o == nil {
		var ret []BlockIomadCompanyAdminAssignCoursesRequestCoursesInner
		return ret
	}

	return o.Courses
}

// GetCoursesOk returns a tuple with the Courses field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminAssignCoursesRequest) GetCoursesOk() ([]BlockIomadCompanyAdminAssignCoursesRequestCoursesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Courses, true
}

// SetCourses sets field value
func (o *BlockIomadCompanyAdminAssignCoursesRequest) SetCourses(v []BlockIomadCompanyAdminAssignCoursesRequestCoursesInner) {
	o.Courses = v
}

func (o BlockIomadCompanyAdminAssignCoursesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockIomadCompanyAdminAssignCoursesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["courses"] = o.Courses
	return toSerialize, nil
}

func (o *BlockIomadCompanyAdminAssignCoursesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"courses",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlockIomadCompanyAdminAssignCoursesRequest := _BlockIomadCompanyAdminAssignCoursesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBlockIomadCompanyAdminAssignCoursesRequest)

	if err != nil {
		return err
	}

	*o = BlockIomadCompanyAdminAssignCoursesRequest(varBlockIomadCompanyAdminAssignCoursesRequest)

	return err
}

type NullableBlockIomadCompanyAdminAssignCoursesRequest struct {
	value *BlockIomadCompanyAdminAssignCoursesRequest
	isSet bool
}

func (v NullableBlockIomadCompanyAdminAssignCoursesRequest) Get() *BlockIomadCompanyAdminAssignCoursesRequest {
	return v.value
}

func (v *NullableBlockIomadCompanyAdminAssignCoursesRequest) Set(val *BlockIomadCompanyAdminAssignCoursesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockIomadCompanyAdminAssignCoursesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockIomadCompanyAdminAssignCoursesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockIomadCompanyAdminAssignCoursesRequest(val *BlockIomadCompanyAdminAssignCoursesRequest) *NullableBlockIomadCompanyAdminAssignCoursesRequest {
	return &NullableBlockIomadCompanyAdminAssignCoursesRequest{value: val, isSet: true}
}

func (v NullableBlockIomadCompanyAdminAssignCoursesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockIomadCompanyAdminAssignCoursesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


