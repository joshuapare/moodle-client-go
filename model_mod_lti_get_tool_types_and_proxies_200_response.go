/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModLtiGetToolTypesAndProxies200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModLtiGetToolTypesAndProxies200Response{}

// ModLtiGetToolTypesAndProxies200Response struct for ModLtiGetToolTypesAndProxies200Response
type ModLtiGetToolTypesAndProxies200Response struct {
	// Limit of how many tool types to show
	Limit *int32 `json:"limit,omitempty"`
	// Offset of tool types
	Offset *int32 `json:"offset,omitempty"`
	Proxies []ModLtiGetToolTypesAndProxies200ResponseProxiesInner `json:"proxies"`
	Types []ModLtiGetToolTypesAndProxies200ResponseTypesInner `json:"types"`
}

type _ModLtiGetToolTypesAndProxies200Response ModLtiGetToolTypesAndProxies200Response

// NewModLtiGetToolTypesAndProxies200Response instantiates a new ModLtiGetToolTypesAndProxies200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModLtiGetToolTypesAndProxies200Response(proxies []ModLtiGetToolTypesAndProxies200ResponseProxiesInner, types []ModLtiGetToolTypesAndProxies200ResponseTypesInner) *ModLtiGetToolTypesAndProxies200Response {
	this := ModLtiGetToolTypesAndProxies200Response{}
	var limit int32 = null
	this.Limit = &limit
	var offset int32 = null
	this.Offset = &offset
	this.Proxies = proxies
	this.Types = types
	return &this
}

// NewModLtiGetToolTypesAndProxies200ResponseWithDefaults instantiates a new ModLtiGetToolTypesAndProxies200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModLtiGetToolTypesAndProxies200ResponseWithDefaults() *ModLtiGetToolTypesAndProxies200Response {
	this := ModLtiGetToolTypesAndProxies200Response{}
	var limit int32 = null
	this.Limit = &limit
	var offset int32 = null
	this.Offset = &offset
	return &this
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *ModLtiGetToolTypesAndProxies200Response) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiGetToolTypesAndProxies200Response) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *ModLtiGetToolTypesAndProxies200Response) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *ModLtiGetToolTypesAndProxies200Response) SetLimit(v int32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *ModLtiGetToolTypesAndProxies200Response) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiGetToolTypesAndProxies200Response) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *ModLtiGetToolTypesAndProxies200Response) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *ModLtiGetToolTypesAndProxies200Response) SetOffset(v int32) {
	o.Offset = &v
}

// GetProxies returns the Proxies field value
func (o *ModLtiGetToolTypesAndProxies200Response) GetProxies() []ModLtiGetToolTypesAndProxies200ResponseProxiesInner {
	if o == nil {
		var ret []ModLtiGetToolTypesAndProxies200ResponseProxiesInner
		return ret
	}

	return o.Proxies
}

// GetProxiesOk returns a tuple with the Proxies field value
// and a boolean to check if the value has been set.
func (o *ModLtiGetToolTypesAndProxies200Response) GetProxiesOk() ([]ModLtiGetToolTypesAndProxies200ResponseProxiesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Proxies, true
}

// SetProxies sets field value
func (o *ModLtiGetToolTypesAndProxies200Response) SetProxies(v []ModLtiGetToolTypesAndProxies200ResponseProxiesInner) {
	o.Proxies = v
}

// GetTypes returns the Types field value
func (o *ModLtiGetToolTypesAndProxies200Response) GetTypes() []ModLtiGetToolTypesAndProxies200ResponseTypesInner {
	if o == nil {
		var ret []ModLtiGetToolTypesAndProxies200ResponseTypesInner
		return ret
	}

	return o.Types
}

// GetTypesOk returns a tuple with the Types field value
// and a boolean to check if the value has been set.
func (o *ModLtiGetToolTypesAndProxies200Response) GetTypesOk() ([]ModLtiGetToolTypesAndProxies200ResponseTypesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Types, true
}

// SetTypes sets field value
func (o *ModLtiGetToolTypesAndProxies200Response) SetTypes(v []ModLtiGetToolTypesAndProxies200ResponseTypesInner) {
	o.Types = v
}

func (o ModLtiGetToolTypesAndProxies200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModLtiGetToolTypesAndProxies200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	toSerialize["proxies"] = o.Proxies
	toSerialize["types"] = o.Types
	return toSerialize, nil
}

func (o *ModLtiGetToolTypesAndProxies200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"proxies",
		"types",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModLtiGetToolTypesAndProxies200Response := _ModLtiGetToolTypesAndProxies200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModLtiGetToolTypesAndProxies200Response)

	if err != nil {
		return err
	}

	*o = ModLtiGetToolTypesAndProxies200Response(varModLtiGetToolTypesAndProxies200Response)

	return err
}

type NullableModLtiGetToolTypesAndProxies200Response struct {
	value *ModLtiGetToolTypesAndProxies200Response
	isSet bool
}

func (v NullableModLtiGetToolTypesAndProxies200Response) Get() *ModLtiGetToolTypesAndProxies200Response {
	return v.value
}

func (v *NullableModLtiGetToolTypesAndProxies200Response) Set(val *ModLtiGetToolTypesAndProxies200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableModLtiGetToolTypesAndProxies200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableModLtiGetToolTypesAndProxies200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModLtiGetToolTypesAndProxies200Response(val *ModLtiGetToolTypesAndProxies200Response) *NullableModLtiGetToolTypesAndProxies200Response {
	return &NullableModLtiGetToolTypesAndProxies200Response{value: val, isSet: true}
}

func (v NullableModLtiGetToolTypesAndProxies200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModLtiGetToolTypesAndProxies200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


