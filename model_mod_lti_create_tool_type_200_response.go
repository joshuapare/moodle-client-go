/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModLtiCreateToolType200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModLtiCreateToolType200Response{}

// ModLtiCreateToolType200Response struct for ModLtiCreateToolType200Response
type ModLtiCreateToolType200Response struct {
	Capabilitygroups []map[string]interface{} `json:"capabilitygroups,omitempty"`
	// Client ID
	Clientid string `json:"clientid"`
	// Tool type course
	Courseid *int32 `json:"courseid,omitempty"`
	// Deployment ID
	Deploymentid int32 `json:"deploymentid"`
	// Tool type description
	Description string `json:"description"`
	// Indicate if capabilitygroups is populated
	Hascapabilitygroups bool `json:"hascapabilitygroups"`
	// Tool type id
	Id int32 `json:"id"`
	// The number of times this tool is being used
	Instancecount int32 `json:"instancecount"`
	Instanceids []map[string]interface{} `json:"instanceids,omitempty"`
	// Tool type name
	Name string `json:"name"`
	// Platform ID
	Platformid string `json:"platformid"`
	State ModLtiCreateToolType200ResponseState `json:"state"`
	Urls ModLtiCreateToolType200ResponseUrls `json:"urls"`
}

type _ModLtiCreateToolType200Response ModLtiCreateToolType200Response

// NewModLtiCreateToolType200Response instantiates a new ModLtiCreateToolType200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModLtiCreateToolType200Response(clientid string, deploymentid int32, description string, hascapabilitygroups bool, id int32, instancecount int32, name string, platformid string, state ModLtiCreateToolType200ResponseState, urls ModLtiCreateToolType200ResponseUrls) *ModLtiCreateToolType200Response {
	this := ModLtiCreateToolType200Response{}
	this.Clientid = clientid
	var courseid int32 = 0
	this.Courseid = &courseid
	this.Deploymentid = deploymentid
	this.Description = description
	this.Hascapabilitygroups = hascapabilitygroups
	this.Id = id
	this.Instancecount = instancecount
	this.Name = name
	this.Platformid = platformid
	this.State = state
	this.Urls = urls
	return &this
}

// NewModLtiCreateToolType200ResponseWithDefaults instantiates a new ModLtiCreateToolType200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModLtiCreateToolType200ResponseWithDefaults() *ModLtiCreateToolType200Response {
	this := ModLtiCreateToolType200Response{}
	var clientid string = "null"
	this.Clientid = clientid
	var courseid int32 = 0
	this.Courseid = &courseid
	var deploymentid int32 = null
	this.Deploymentid = deploymentid
	var description string = "null"
	this.Description = description
	var hascapabilitygroups bool = null
	this.Hascapabilitygroups = hascapabilitygroups
	var id int32 = null
	this.Id = id
	var instancecount int32 = null
	this.Instancecount = instancecount
	var name string = "null"
	this.Name = name
	var platformid string = "null"
	this.Platformid = platformid
	return &this
}

// GetCapabilitygroups returns the Capabilitygroups field value if set, zero value otherwise.
func (o *ModLtiCreateToolType200Response) GetCapabilitygroups() []map[string]interface{} {
	if o == nil || IsNil(o.Capabilitygroups) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Capabilitygroups
}

// GetCapabilitygroupsOk returns a tuple with the Capabilitygroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolType200Response) GetCapabilitygroupsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Capabilitygroups) {
		return nil, false
	}
	return o.Capabilitygroups, true
}

// HasCapabilitygroups returns a boolean if a field has been set.
func (o *ModLtiCreateToolType200Response) HasCapabilitygroups() bool {
	if o != nil && !IsNil(o.Capabilitygroups) {
		return true
	}

	return false
}

// SetCapabilitygroups gets a reference to the given []map[string]interface{} and assigns it to the Capabilitygroups field.
func (o *ModLtiCreateToolType200Response) SetCapabilitygroups(v []map[string]interface{}) {
	o.Capabilitygroups = v
}

// GetClientid returns the Clientid field value
func (o *ModLtiCreateToolType200Response) GetClientid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Clientid
}

// GetClientidOk returns a tuple with the Clientid field value
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolType200Response) GetClientidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Clientid, true
}

// SetClientid sets field value
func (o *ModLtiCreateToolType200Response) SetClientid(v string) {
	o.Clientid = v
}

// GetCourseid returns the Courseid field value if set, zero value otherwise.
func (o *ModLtiCreateToolType200Response) GetCourseid() int32 {
	if o == nil || IsNil(o.Courseid) {
		var ret int32
		return ret
	}
	return *o.Courseid
}

// GetCourseidOk returns a tuple with the Courseid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolType200Response) GetCourseidOk() (*int32, bool) {
	if o == nil || IsNil(o.Courseid) {
		return nil, false
	}
	return o.Courseid, true
}

// HasCourseid returns a boolean if a field has been set.
func (o *ModLtiCreateToolType200Response) HasCourseid() bool {
	if o != nil && !IsNil(o.Courseid) {
		return true
	}

	return false
}

// SetCourseid gets a reference to the given int32 and assigns it to the Courseid field.
func (o *ModLtiCreateToolType200Response) SetCourseid(v int32) {
	o.Courseid = &v
}

// GetDeploymentid returns the Deploymentid field value
func (o *ModLtiCreateToolType200Response) GetDeploymentid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Deploymentid
}

// GetDeploymentidOk returns a tuple with the Deploymentid field value
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolType200Response) GetDeploymentidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deploymentid, true
}

// SetDeploymentid sets field value
func (o *ModLtiCreateToolType200Response) SetDeploymentid(v int32) {
	o.Deploymentid = v
}

// GetDescription returns the Description field value
func (o *ModLtiCreateToolType200Response) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolType200Response) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ModLtiCreateToolType200Response) SetDescription(v string) {
	o.Description = v
}

// GetHascapabilitygroups returns the Hascapabilitygroups field value
func (o *ModLtiCreateToolType200Response) GetHascapabilitygroups() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hascapabilitygroups
}

// GetHascapabilitygroupsOk returns a tuple with the Hascapabilitygroups field value
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolType200Response) GetHascapabilitygroupsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hascapabilitygroups, true
}

// SetHascapabilitygroups sets field value
func (o *ModLtiCreateToolType200Response) SetHascapabilitygroups(v bool) {
	o.Hascapabilitygroups = v
}

// GetId returns the Id field value
func (o *ModLtiCreateToolType200Response) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolType200Response) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModLtiCreateToolType200Response) SetId(v int32) {
	o.Id = v
}

// GetInstancecount returns the Instancecount field value
func (o *ModLtiCreateToolType200Response) GetInstancecount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Instancecount
}

// GetInstancecountOk returns a tuple with the Instancecount field value
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolType200Response) GetInstancecountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instancecount, true
}

// SetInstancecount sets field value
func (o *ModLtiCreateToolType200Response) SetInstancecount(v int32) {
	o.Instancecount = v
}

// GetInstanceids returns the Instanceids field value if set, zero value otherwise.
func (o *ModLtiCreateToolType200Response) GetInstanceids() []map[string]interface{} {
	if o == nil || IsNil(o.Instanceids) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Instanceids
}

// GetInstanceidsOk returns a tuple with the Instanceids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolType200Response) GetInstanceidsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Instanceids) {
		return nil, false
	}
	return o.Instanceids, true
}

// HasInstanceids returns a boolean if a field has been set.
func (o *ModLtiCreateToolType200Response) HasInstanceids() bool {
	if o != nil && !IsNil(o.Instanceids) {
		return true
	}

	return false
}

// SetInstanceids gets a reference to the given []map[string]interface{} and assigns it to the Instanceids field.
func (o *ModLtiCreateToolType200Response) SetInstanceids(v []map[string]interface{}) {
	o.Instanceids = v
}

// GetName returns the Name field value
func (o *ModLtiCreateToolType200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolType200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ModLtiCreateToolType200Response) SetName(v string) {
	o.Name = v
}

// GetPlatformid returns the Platformid field value
func (o *ModLtiCreateToolType200Response) GetPlatformid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platformid
}

// GetPlatformidOk returns a tuple with the Platformid field value
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolType200Response) GetPlatformidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platformid, true
}

// SetPlatformid sets field value
func (o *ModLtiCreateToolType200Response) SetPlatformid(v string) {
	o.Platformid = v
}

// GetState returns the State field value
func (o *ModLtiCreateToolType200Response) GetState() ModLtiCreateToolType200ResponseState {
	if o == nil {
		var ret ModLtiCreateToolType200ResponseState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolType200Response) GetStateOk() (*ModLtiCreateToolType200ResponseState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ModLtiCreateToolType200Response) SetState(v ModLtiCreateToolType200ResponseState) {
	o.State = v
}

// GetUrls returns the Urls field value
func (o *ModLtiCreateToolType200Response) GetUrls() ModLtiCreateToolType200ResponseUrls {
	if o == nil {
		var ret ModLtiCreateToolType200ResponseUrls
		return ret
	}

	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value
// and a boolean to check if the value has been set.
func (o *ModLtiCreateToolType200Response) GetUrlsOk() (*ModLtiCreateToolType200ResponseUrls, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Urls, true
}

// SetUrls sets field value
func (o *ModLtiCreateToolType200Response) SetUrls(v ModLtiCreateToolType200ResponseUrls) {
	o.Urls = v
}

func (o ModLtiCreateToolType200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModLtiCreateToolType200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Capabilitygroups) {
		toSerialize["capabilitygroups"] = o.Capabilitygroups
	}
	toSerialize["clientid"] = o.Clientid
	if !IsNil(o.Courseid) {
		toSerialize["courseid"] = o.Courseid
	}
	toSerialize["deploymentid"] = o.Deploymentid
	toSerialize["description"] = o.Description
	toSerialize["hascapabilitygroups"] = o.Hascapabilitygroups
	toSerialize["id"] = o.Id
	toSerialize["instancecount"] = o.Instancecount
	if !IsNil(o.Instanceids) {
		toSerialize["instanceids"] = o.Instanceids
	}
	toSerialize["name"] = o.Name
	toSerialize["platformid"] = o.Platformid
	toSerialize["state"] = o.State
	toSerialize["urls"] = o.Urls
	return toSerialize, nil
}

func (o *ModLtiCreateToolType200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clientid",
		"deploymentid",
		"description",
		"hascapabilitygroups",
		"id",
		"instancecount",
		"name",
		"platformid",
		"state",
		"urls",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModLtiCreateToolType200Response := _ModLtiCreateToolType200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModLtiCreateToolType200Response)

	if err != nil {
		return err
	}

	*o = ModLtiCreateToolType200Response(varModLtiCreateToolType200Response)

	return err
}

type NullableModLtiCreateToolType200Response struct {
	value *ModLtiCreateToolType200Response
	isSet bool
}

func (v NullableModLtiCreateToolType200Response) Get() *ModLtiCreateToolType200Response {
	return v.value
}

func (v *NullableModLtiCreateToolType200Response) Set(val *ModLtiCreateToolType200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableModLtiCreateToolType200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableModLtiCreateToolType200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModLtiCreateToolType200Response(val *ModLtiCreateToolType200Response) *NullableModLtiCreateToolType200Response {
	return &NullableModLtiCreateToolType200Response{value: val, isSet: true}
}

func (v NullableModLtiCreateToolType200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModLtiCreateToolType200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


