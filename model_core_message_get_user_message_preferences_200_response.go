/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreMessageGetUserMessagePreferences200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreMessageGetUserMessagePreferences200Response{}

// CoreMessageGetUserMessagePreferences200Response struct for CoreMessageGetUserMessagePreferences200Response
type CoreMessageGetUserMessagePreferences200Response struct {
	// Privacy messaging setting to define who can message you
	Blocknoncontacts int32 `json:"blocknoncontacts"`
	// User preference for using enter to send messages
	Entertosend bool `json:"entertosend"`
	Preferences CoreMessageGetUserMessagePreferences200ResponsePreferences `json:"preferences"`
	Warnings []AuthEmailSignupUser200ResponseWarningsInner `json:"warnings,omitempty"`
}

type _CoreMessageGetUserMessagePreferences200Response CoreMessageGetUserMessagePreferences200Response

// NewCoreMessageGetUserMessagePreferences200Response instantiates a new CoreMessageGetUserMessagePreferences200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreMessageGetUserMessagePreferences200Response(blocknoncontacts int32, entertosend bool, preferences CoreMessageGetUserMessagePreferences200ResponsePreferences) *CoreMessageGetUserMessagePreferences200Response {
	this := CoreMessageGetUserMessagePreferences200Response{}
	this.Blocknoncontacts = blocknoncontacts
	this.Entertosend = entertosend
	this.Preferences = preferences
	return &this
}

// NewCoreMessageGetUserMessagePreferences200ResponseWithDefaults instantiates a new CoreMessageGetUserMessagePreferences200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreMessageGetUserMessagePreferences200ResponseWithDefaults() *CoreMessageGetUserMessagePreferences200Response {
	this := CoreMessageGetUserMessagePreferences200Response{}
	var blocknoncontacts int32 = null
	this.Blocknoncontacts = blocknoncontacts
	var entertosend bool = null
	this.Entertosend = entertosend
	return &this
}

// GetBlocknoncontacts returns the Blocknoncontacts field value
func (o *CoreMessageGetUserMessagePreferences200Response) GetBlocknoncontacts() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Blocknoncontacts
}

// GetBlocknoncontactsOk returns a tuple with the Blocknoncontacts field value
// and a boolean to check if the value has been set.
func (o *CoreMessageGetUserMessagePreferences200Response) GetBlocknoncontactsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Blocknoncontacts, true
}

// SetBlocknoncontacts sets field value
func (o *CoreMessageGetUserMessagePreferences200Response) SetBlocknoncontacts(v int32) {
	o.Blocknoncontacts = v
}

// GetEntertosend returns the Entertosend field value
func (o *CoreMessageGetUserMessagePreferences200Response) GetEntertosend() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Entertosend
}

// GetEntertosendOk returns a tuple with the Entertosend field value
// and a boolean to check if the value has been set.
func (o *CoreMessageGetUserMessagePreferences200Response) GetEntertosendOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entertosend, true
}

// SetEntertosend sets field value
func (o *CoreMessageGetUserMessagePreferences200Response) SetEntertosend(v bool) {
	o.Entertosend = v
}

// GetPreferences returns the Preferences field value
func (o *CoreMessageGetUserMessagePreferences200Response) GetPreferences() CoreMessageGetUserMessagePreferences200ResponsePreferences {
	if o == nil {
		var ret CoreMessageGetUserMessagePreferences200ResponsePreferences
		return ret
	}

	return o.Preferences
}

// GetPreferencesOk returns a tuple with the Preferences field value
// and a boolean to check if the value has been set.
func (o *CoreMessageGetUserMessagePreferences200Response) GetPreferencesOk() (*CoreMessageGetUserMessagePreferences200ResponsePreferences, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Preferences, true
}

// SetPreferences sets field value
func (o *CoreMessageGetUserMessagePreferences200Response) SetPreferences(v CoreMessageGetUserMessagePreferences200ResponsePreferences) {
	o.Preferences = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CoreMessageGetUserMessagePreferences200Response) GetWarnings() []AuthEmailSignupUser200ResponseWarningsInner {
	if o == nil || IsNil(o.Warnings) {
		var ret []AuthEmailSignupUser200ResponseWarningsInner
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetUserMessagePreferences200Response) GetWarningsOk() ([]AuthEmailSignupUser200ResponseWarningsInner, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CoreMessageGetUserMessagePreferences200Response) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []AuthEmailSignupUser200ResponseWarningsInner and assigns it to the Warnings field.
func (o *CoreMessageGetUserMessagePreferences200Response) SetWarnings(v []AuthEmailSignupUser200ResponseWarningsInner) {
	o.Warnings = v
}

func (o CoreMessageGetUserMessagePreferences200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreMessageGetUserMessagePreferences200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["blocknoncontacts"] = o.Blocknoncontacts
	toSerialize["entertosend"] = o.Entertosend
	toSerialize["preferences"] = o.Preferences
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

func (o *CoreMessageGetUserMessagePreferences200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"blocknoncontacts",
		"entertosend",
		"preferences",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreMessageGetUserMessagePreferences200Response := _CoreMessageGetUserMessagePreferences200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreMessageGetUserMessagePreferences200Response)

	if err != nil {
		return err
	}

	*o = CoreMessageGetUserMessagePreferences200Response(varCoreMessageGetUserMessagePreferences200Response)

	return err
}

type NullableCoreMessageGetUserMessagePreferences200Response struct {
	value *CoreMessageGetUserMessagePreferences200Response
	isSet bool
}

func (v NullableCoreMessageGetUserMessagePreferences200Response) Get() *CoreMessageGetUserMessagePreferences200Response {
	return v.value
}

func (v *NullableCoreMessageGetUserMessagePreferences200Response) Set(val *CoreMessageGetUserMessagePreferences200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreMessageGetUserMessagePreferences200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreMessageGetUserMessagePreferences200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreMessageGetUserMessagePreferences200Response(val *CoreMessageGetUserMessagePreferences200Response) *NullableCoreMessageGetUserMessagePreferences200Response {
	return &NullableCoreMessageGetUserMessagePreferences200Response{value: val, isSet: true}
}

func (v NullableCoreMessageGetUserMessagePreferences200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreMessageGetUserMessagePreferences200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


