/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreReportbuilderReportsGetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreReportbuilderReportsGetRequest{}

// CoreReportbuilderReportsGetRequest struct for CoreReportbuilderReportsGetRequest
type CoreReportbuilderReportsGetRequest struct {
	// Whether editing mode is enabled
	Editmode *bool `json:"editmode,omitempty"`
	// Page size
	Pagesize *int32 `json:"pagesize,omitempty"`
	// Report ID
	Reportid int32 `json:"reportid"`
}

type _CoreReportbuilderReportsGetRequest CoreReportbuilderReportsGetRequest

// NewCoreReportbuilderReportsGetRequest instantiates a new CoreReportbuilderReportsGetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreReportbuilderReportsGetRequest(reportid int32) *CoreReportbuilderReportsGetRequest {
	this := CoreReportbuilderReportsGetRequest{}
	var editmode bool = 0
	this.Editmode = &editmode
	var pagesize int32 = 0
	this.Pagesize = &pagesize
	this.Reportid = reportid
	return &this
}

// NewCoreReportbuilderReportsGetRequestWithDefaults instantiates a new CoreReportbuilderReportsGetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreReportbuilderReportsGetRequestWithDefaults() *CoreReportbuilderReportsGetRequest {
	this := CoreReportbuilderReportsGetRequest{}
	var editmode bool = 0
	this.Editmode = &editmode
	var pagesize int32 = 0
	this.Pagesize = &pagesize
	return &this
}

// GetEditmode returns the Editmode field value if set, zero value otherwise.
func (o *CoreReportbuilderReportsGetRequest) GetEditmode() bool {
	if o == nil || IsNil(o.Editmode) {
		var ret bool
		return ret
	}
	return *o.Editmode
}

// GetEditmodeOk returns a tuple with the Editmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderReportsGetRequest) GetEditmodeOk() (*bool, bool) {
	if o == nil || IsNil(o.Editmode) {
		return nil, false
	}
	return o.Editmode, true
}

// HasEditmode returns a boolean if a field has been set.
func (o *CoreReportbuilderReportsGetRequest) HasEditmode() bool {
	if o != nil && !IsNil(o.Editmode) {
		return true
	}

	return false
}

// SetEditmode gets a reference to the given bool and assigns it to the Editmode field.
func (o *CoreReportbuilderReportsGetRequest) SetEditmode(v bool) {
	o.Editmode = &v
}

// GetPagesize returns the Pagesize field value if set, zero value otherwise.
func (o *CoreReportbuilderReportsGetRequest) GetPagesize() int32 {
	if o == nil || IsNil(o.Pagesize) {
		var ret int32
		return ret
	}
	return *o.Pagesize
}

// GetPagesizeOk returns a tuple with the Pagesize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderReportsGetRequest) GetPagesizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Pagesize) {
		return nil, false
	}
	return o.Pagesize, true
}

// HasPagesize returns a boolean if a field has been set.
func (o *CoreReportbuilderReportsGetRequest) HasPagesize() bool {
	if o != nil && !IsNil(o.Pagesize) {
		return true
	}

	return false
}

// SetPagesize gets a reference to the given int32 and assigns it to the Pagesize field.
func (o *CoreReportbuilderReportsGetRequest) SetPagesize(v int32) {
	o.Pagesize = &v
}

// GetReportid returns the Reportid field value
func (o *CoreReportbuilderReportsGetRequest) GetReportid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Reportid
}

// GetReportidOk returns a tuple with the Reportid field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderReportsGetRequest) GetReportidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reportid, true
}

// SetReportid sets field value
func (o *CoreReportbuilderReportsGetRequest) SetReportid(v int32) {
	o.Reportid = v
}

func (o CoreReportbuilderReportsGetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreReportbuilderReportsGetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Editmode) {
		toSerialize["editmode"] = o.Editmode
	}
	if !IsNil(o.Pagesize) {
		toSerialize["pagesize"] = o.Pagesize
	}
	toSerialize["reportid"] = o.Reportid
	return toSerialize, nil
}

func (o *CoreReportbuilderReportsGetRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"reportid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreReportbuilderReportsGetRequest := _CoreReportbuilderReportsGetRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreReportbuilderReportsGetRequest)

	if err != nil {
		return err
	}

	*o = CoreReportbuilderReportsGetRequest(varCoreReportbuilderReportsGetRequest)

	return err
}

type NullableCoreReportbuilderReportsGetRequest struct {
	value *CoreReportbuilderReportsGetRequest
	isSet bool
}

func (v NullableCoreReportbuilderReportsGetRequest) Get() *CoreReportbuilderReportsGetRequest {
	return v.value
}

func (v *NullableCoreReportbuilderReportsGetRequest) Set(val *CoreReportbuilderReportsGetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreReportbuilderReportsGetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreReportbuilderReportsGetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreReportbuilderReportsGetRequest(val *CoreReportbuilderReportsGetRequest) *NullableCoreReportbuilderReportsGetRequest {
	return &NullableCoreReportbuilderReportsGetRequest{value: val, isSet: true}
}

func (v NullableCoreReportbuilderReportsGetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreReportbuilderReportsGetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


