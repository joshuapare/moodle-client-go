/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModAssignSaveSubmissionRequestPlugindata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModAssignSaveSubmissionRequestPlugindata{}

// ModAssignSaveSubmissionRequestPlugindata struct for ModAssignSaveSubmissionRequestPlugindata
type ModAssignSaveSubmissionRequestPlugindata struct {
	// The id of a draft area containing files for this submission.
	FilesFilemanager *int32 `json:"files_filemanager,omitempty"`
	OnlinetextEditor *ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor `json:"onlinetext_editor,omitempty"`
}

// NewModAssignSaveSubmissionRequestPlugindata instantiates a new ModAssignSaveSubmissionRequestPlugindata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModAssignSaveSubmissionRequestPlugindata() *ModAssignSaveSubmissionRequestPlugindata {
	this := ModAssignSaveSubmissionRequestPlugindata{}
	var filesFilemanager int32 = null
	this.FilesFilemanager = &filesFilemanager
	return &this
}

// NewModAssignSaveSubmissionRequestPlugindataWithDefaults instantiates a new ModAssignSaveSubmissionRequestPlugindata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModAssignSaveSubmissionRequestPlugindataWithDefaults() *ModAssignSaveSubmissionRequestPlugindata {
	this := ModAssignSaveSubmissionRequestPlugindata{}
	var filesFilemanager int32 = null
	this.FilesFilemanager = &filesFilemanager
	return &this
}

// GetFilesFilemanager returns the FilesFilemanager field value if set, zero value otherwise.
func (o *ModAssignSaveSubmissionRequestPlugindata) GetFilesFilemanager() int32 {
	if o == nil || IsNil(o.FilesFilemanager) {
		var ret int32
		return ret
	}
	return *o.FilesFilemanager
}

// GetFilesFilemanagerOk returns a tuple with the FilesFilemanager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignSaveSubmissionRequestPlugindata) GetFilesFilemanagerOk() (*int32, bool) {
	if o == nil || IsNil(o.FilesFilemanager) {
		return nil, false
	}
	return o.FilesFilemanager, true
}

// HasFilesFilemanager returns a boolean if a field has been set.
func (o *ModAssignSaveSubmissionRequestPlugindata) HasFilesFilemanager() bool {
	if o != nil && !IsNil(o.FilesFilemanager) {
		return true
	}

	return false
}

// SetFilesFilemanager gets a reference to the given int32 and assigns it to the FilesFilemanager field.
func (o *ModAssignSaveSubmissionRequestPlugindata) SetFilesFilemanager(v int32) {
	o.FilesFilemanager = &v
}

// GetOnlinetextEditor returns the OnlinetextEditor field value if set, zero value otherwise.
func (o *ModAssignSaveSubmissionRequestPlugindata) GetOnlinetextEditor() ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor {
	if o == nil || IsNil(o.OnlinetextEditor) {
		var ret ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor
		return ret
	}
	return *o.OnlinetextEditor
}

// GetOnlinetextEditorOk returns a tuple with the OnlinetextEditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignSaveSubmissionRequestPlugindata) GetOnlinetextEditorOk() (*ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor, bool) {
	if o == nil || IsNil(o.OnlinetextEditor) {
		return nil, false
	}
	return o.OnlinetextEditor, true
}

// HasOnlinetextEditor returns a boolean if a field has been set.
func (o *ModAssignSaveSubmissionRequestPlugindata) HasOnlinetextEditor() bool {
	if o != nil && !IsNil(o.OnlinetextEditor) {
		return true
	}

	return false
}

// SetOnlinetextEditor gets a reference to the given ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor and assigns it to the OnlinetextEditor field.
func (o *ModAssignSaveSubmissionRequestPlugindata) SetOnlinetextEditor(v ModAssignSaveSubmissionRequestPlugindataOnlinetextEditor) {
	o.OnlinetextEditor = &v
}

func (o ModAssignSaveSubmissionRequestPlugindata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModAssignSaveSubmissionRequestPlugindata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FilesFilemanager) {
		toSerialize["files_filemanager"] = o.FilesFilemanager
	}
	if !IsNil(o.OnlinetextEditor) {
		toSerialize["onlinetext_editor"] = o.OnlinetextEditor
	}
	return toSerialize, nil
}

type NullableModAssignSaveSubmissionRequestPlugindata struct {
	value *ModAssignSaveSubmissionRequestPlugindata
	isSet bool
}

func (v NullableModAssignSaveSubmissionRequestPlugindata) Get() *ModAssignSaveSubmissionRequestPlugindata {
	return v.value
}

func (v *NullableModAssignSaveSubmissionRequestPlugindata) Set(val *ModAssignSaveSubmissionRequestPlugindata) {
	v.value = val
	v.isSet = true
}

func (v NullableModAssignSaveSubmissionRequestPlugindata) IsSet() bool {
	return v.isSet
}

func (v *NullableModAssignSaveSubmissionRequestPlugindata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModAssignSaveSubmissionRequestPlugindata(val *ModAssignSaveSubmissionRequestPlugindata) *NullableModAssignSaveSubmissionRequestPlugindata {
	return &NullableModAssignSaveSubmissionRequestPlugindata{value: val, isSet: true}
}

func (v NullableModAssignSaveSubmissionRequestPlugindata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModAssignSaveSubmissionRequestPlugindata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


