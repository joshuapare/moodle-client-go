/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCourseformatUpdateCourseRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCourseformatUpdateCourseRequest{}

// CoreCourseformatUpdateCourseRequest struct for CoreCourseformatUpdateCourseRequest
type CoreCourseformatUpdateCourseRequest struct {
	// action: cm_hide, cm_show, section_hide, section_show, cm_moveleft...
	Action string `json:"action"`
	// course id
	Courseid int32 `json:"courseid"`
	Ids []map[string]interface{} `json:"ids,omitempty"`
	// Optional target cm id
	Targetcmid *int32 `json:"targetcmid,omitempty"`
	// Optional target section id
	Targetsectionid *int32 `json:"targetsectionid,omitempty"`
}

type _CoreCourseformatUpdateCourseRequest CoreCourseformatUpdateCourseRequest

// NewCoreCourseformatUpdateCourseRequest instantiates a new CoreCourseformatUpdateCourseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCourseformatUpdateCourseRequest(action string, courseid int32) *CoreCourseformatUpdateCourseRequest {
	this := CoreCourseformatUpdateCourseRequest{}
	this.Action = action
	this.Courseid = courseid
	var targetcmid int32 = null
	this.Targetcmid = &targetcmid
	var targetsectionid int32 = null
	this.Targetsectionid = &targetsectionid
	return &this
}

// NewCoreCourseformatUpdateCourseRequestWithDefaults instantiates a new CoreCourseformatUpdateCourseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCourseformatUpdateCourseRequestWithDefaults() *CoreCourseformatUpdateCourseRequest {
	this := CoreCourseformatUpdateCourseRequest{}
	var action string = "null"
	this.Action = action
	var targetcmid int32 = null
	this.Targetcmid = &targetcmid
	var targetsectionid int32 = null
	this.Targetsectionid = &targetsectionid
	return &this
}

// GetAction returns the Action field value
func (o *CoreCourseformatUpdateCourseRequest) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *CoreCourseformatUpdateCourseRequest) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *CoreCourseformatUpdateCourseRequest) SetAction(v string) {
	o.Action = v
}

// GetCourseid returns the Courseid field value
func (o *CoreCourseformatUpdateCourseRequest) GetCourseid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Courseid
}

// GetCourseidOk returns a tuple with the Courseid field value
// and a boolean to check if the value has been set.
func (o *CoreCourseformatUpdateCourseRequest) GetCourseidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Courseid, true
}

// SetCourseid sets field value
func (o *CoreCourseformatUpdateCourseRequest) SetCourseid(v int32) {
	o.Courseid = v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *CoreCourseformatUpdateCourseRequest) GetIds() []map[string]interface{} {
	if o == nil || IsNil(o.Ids) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseformatUpdateCourseRequest) GetIdsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *CoreCourseformatUpdateCourseRequest) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []map[string]interface{} and assigns it to the Ids field.
func (o *CoreCourseformatUpdateCourseRequest) SetIds(v []map[string]interface{}) {
	o.Ids = v
}

// GetTargetcmid returns the Targetcmid field value if set, zero value otherwise.
func (o *CoreCourseformatUpdateCourseRequest) GetTargetcmid() int32 {
	if o == nil || IsNil(o.Targetcmid) {
		var ret int32
		return ret
	}
	return *o.Targetcmid
}

// GetTargetcmidOk returns a tuple with the Targetcmid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseformatUpdateCourseRequest) GetTargetcmidOk() (*int32, bool) {
	if o == nil || IsNil(o.Targetcmid) {
		return nil, false
	}
	return o.Targetcmid, true
}

// HasTargetcmid returns a boolean if a field has been set.
func (o *CoreCourseformatUpdateCourseRequest) HasTargetcmid() bool {
	if o != nil && !IsNil(o.Targetcmid) {
		return true
	}

	return false
}

// SetTargetcmid gets a reference to the given int32 and assigns it to the Targetcmid field.
func (o *CoreCourseformatUpdateCourseRequest) SetTargetcmid(v int32) {
	o.Targetcmid = &v
}

// GetTargetsectionid returns the Targetsectionid field value if set, zero value otherwise.
func (o *CoreCourseformatUpdateCourseRequest) GetTargetsectionid() int32 {
	if o == nil || IsNil(o.Targetsectionid) {
		var ret int32
		return ret
	}
	return *o.Targetsectionid
}

// GetTargetsectionidOk returns a tuple with the Targetsectionid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseformatUpdateCourseRequest) GetTargetsectionidOk() (*int32, bool) {
	if o == nil || IsNil(o.Targetsectionid) {
		return nil, false
	}
	return o.Targetsectionid, true
}

// HasTargetsectionid returns a boolean if a field has been set.
func (o *CoreCourseformatUpdateCourseRequest) HasTargetsectionid() bool {
	if o != nil && !IsNil(o.Targetsectionid) {
		return true
	}

	return false
}

// SetTargetsectionid gets a reference to the given int32 and assigns it to the Targetsectionid field.
func (o *CoreCourseformatUpdateCourseRequest) SetTargetsectionid(v int32) {
	o.Targetsectionid = &v
}

func (o CoreCourseformatUpdateCourseRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCourseformatUpdateCourseRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	toSerialize["courseid"] = o.Courseid
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	if !IsNil(o.Targetcmid) {
		toSerialize["targetcmid"] = o.Targetcmid
	}
	if !IsNil(o.Targetsectionid) {
		toSerialize["targetsectionid"] = o.Targetsectionid
	}
	return toSerialize, nil
}

func (o *CoreCourseformatUpdateCourseRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"courseid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCourseformatUpdateCourseRequest := _CoreCourseformatUpdateCourseRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCourseformatUpdateCourseRequest)

	if err != nil {
		return err
	}

	*o = CoreCourseformatUpdateCourseRequest(varCoreCourseformatUpdateCourseRequest)

	return err
}

type NullableCoreCourseformatUpdateCourseRequest struct {
	value *CoreCourseformatUpdateCourseRequest
	isSet bool
}

func (v NullableCoreCourseformatUpdateCourseRequest) Get() *CoreCourseformatUpdateCourseRequest {
	return v.value
}

func (v *NullableCoreCourseformatUpdateCourseRequest) Set(val *CoreCourseformatUpdateCourseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCourseformatUpdateCourseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCourseformatUpdateCourseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCourseformatUpdateCourseRequest(val *CoreCourseformatUpdateCourseRequest) *NullableCoreCourseformatUpdateCourseRequest {
	return &NullableCoreCourseformatUpdateCourseRequest{value: val, isSet: true}
}

func (v NullableCoreCourseformatUpdateCourseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCourseformatUpdateCourseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


