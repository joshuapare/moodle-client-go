/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModScormGetScormScoesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModScormGetScormScoesRequest{}

// ModScormGetScormScoesRequest struct for ModScormGetScormScoesRequest
type ModScormGetScormScoesRequest struct {
	// organization id
	Organization *string `json:"organization,omitempty"`
	// scorm instance id
	Scormid int32 `json:"scormid"`
}

type _ModScormGetScormScoesRequest ModScormGetScormScoesRequest

// NewModScormGetScormScoesRequest instantiates a new ModScormGetScormScoesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModScormGetScormScoesRequest(scormid int32) *ModScormGetScormScoesRequest {
	this := ModScormGetScormScoesRequest{}
	var organization string = ""
	this.Organization = &organization
	this.Scormid = scormid
	return &this
}

// NewModScormGetScormScoesRequestWithDefaults instantiates a new ModScormGetScormScoesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModScormGetScormScoesRequestWithDefaults() *ModScormGetScormScoesRequest {
	this := ModScormGetScormScoesRequest{}
	var organization string = ""
	this.Organization = &organization
	var scormid int32 = null
	this.Scormid = scormid
	return &this
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *ModScormGetScormScoesRequest) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModScormGetScormScoesRequest) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *ModScormGetScormScoesRequest) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *ModScormGetScormScoesRequest) SetOrganization(v string) {
	o.Organization = &v
}

// GetScormid returns the Scormid field value
func (o *ModScormGetScormScoesRequest) GetScormid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Scormid
}

// GetScormidOk returns a tuple with the Scormid field value
// and a boolean to check if the value has been set.
func (o *ModScormGetScormScoesRequest) GetScormidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scormid, true
}

// SetScormid sets field value
func (o *ModScormGetScormScoesRequest) SetScormid(v int32) {
	o.Scormid = v
}

func (o ModScormGetScormScoesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModScormGetScormScoesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	toSerialize["scormid"] = o.Scormid
	return toSerialize, nil
}

func (o *ModScormGetScormScoesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"scormid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModScormGetScormScoesRequest := _ModScormGetScormScoesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModScormGetScormScoesRequest)

	if err != nil {
		return err
	}

	*o = ModScormGetScormScoesRequest(varModScormGetScormScoesRequest)

	return err
}

type NullableModScormGetScormScoesRequest struct {
	value *ModScormGetScormScoesRequest
	isSet bool
}

func (v NullableModScormGetScormScoesRequest) Get() *ModScormGetScormScoesRequest {
	return v.value
}

func (v *NullableModScormGetScormScoesRequest) Set(val *ModScormGetScormScoesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModScormGetScormScoesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModScormGetScormScoesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModScormGetScormScoesRequest(val *ModScormGetScormScoesRequest) *NullableModScormGetScormScoesRequest {
	return &NullableModScormGetScormScoesRequest{value: val, isSet: true}
}

func (v NullableModScormGetScormScoesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModScormGetScormScoesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


