/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreGroupUpdateGroupsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreGroupUpdateGroupsRequest{}

// CoreGroupUpdateGroupsRequest struct for CoreGroupUpdateGroupsRequest
type CoreGroupUpdateGroupsRequest struct {
	Groups []CoreGroupUpdateGroupsRequestGroupsInner `json:"groups"`
}

type _CoreGroupUpdateGroupsRequest CoreGroupUpdateGroupsRequest

// NewCoreGroupUpdateGroupsRequest instantiates a new CoreGroupUpdateGroupsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreGroupUpdateGroupsRequest(groups []CoreGroupUpdateGroupsRequestGroupsInner) *CoreGroupUpdateGroupsRequest {
	this := CoreGroupUpdateGroupsRequest{}
	this.Groups = groups
	return &this
}

// NewCoreGroupUpdateGroupsRequestWithDefaults instantiates a new CoreGroupUpdateGroupsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreGroupUpdateGroupsRequestWithDefaults() *CoreGroupUpdateGroupsRequest {
	this := CoreGroupUpdateGroupsRequest{}
	return &this
}

// GetGroups returns the Groups field value
func (o *CoreGroupUpdateGroupsRequest) GetGroups() []CoreGroupUpdateGroupsRequestGroupsInner {
	if o == nil {
		var ret []CoreGroupUpdateGroupsRequestGroupsInner
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
func (o *CoreGroupUpdateGroupsRequest) GetGroupsOk() ([]CoreGroupUpdateGroupsRequestGroupsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Groups, true
}

// SetGroups sets field value
func (o *CoreGroupUpdateGroupsRequest) SetGroups(v []CoreGroupUpdateGroupsRequestGroupsInner) {
	o.Groups = v
}

func (o CoreGroupUpdateGroupsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreGroupUpdateGroupsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["groups"] = o.Groups
	return toSerialize, nil
}

func (o *CoreGroupUpdateGroupsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"groups",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreGroupUpdateGroupsRequest := _CoreGroupUpdateGroupsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreGroupUpdateGroupsRequest)

	if err != nil {
		return err
	}

	*o = CoreGroupUpdateGroupsRequest(varCoreGroupUpdateGroupsRequest)

	return err
}

type NullableCoreGroupUpdateGroupsRequest struct {
	value *CoreGroupUpdateGroupsRequest
	isSet bool
}

func (v NullableCoreGroupUpdateGroupsRequest) Get() *CoreGroupUpdateGroupsRequest {
	return v.value
}

func (v *NullableCoreGroupUpdateGroupsRequest) Set(val *CoreGroupUpdateGroupsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreGroupUpdateGroupsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreGroupUpdateGroupsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreGroupUpdateGroupsRequest(val *CoreGroupUpdateGroupsRequest) *NullableCoreGroupUpdateGroupsRequest {
	return &NullableCoreGroupUpdateGroupsRequest{value: val, isSet: true}
}

func (v NullableCoreGroupUpdateGroupsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreGroupUpdateGroupsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


