/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModScormGetScormScoTracks200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModScormGetScormScoTracks200ResponseData{}

// ModScormGetScormScoTracks200ResponseData struct for ModScormGetScormScoTracks200ResponseData
type ModScormGetScormScoTracks200ResponseData struct {
	// Attempt number
	Attempt int32 `json:"attempt"`
	Tracks []ModScormGetScormScoTracks200ResponseDataTracksInner `json:"tracks"`
}

type _ModScormGetScormScoTracks200ResponseData ModScormGetScormScoTracks200ResponseData

// NewModScormGetScormScoTracks200ResponseData instantiates a new ModScormGetScormScoTracks200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModScormGetScormScoTracks200ResponseData(attempt int32, tracks []ModScormGetScormScoTracks200ResponseDataTracksInner) *ModScormGetScormScoTracks200ResponseData {
	this := ModScormGetScormScoTracks200ResponseData{}
	this.Attempt = attempt
	this.Tracks = tracks
	return &this
}

// NewModScormGetScormScoTracks200ResponseDataWithDefaults instantiates a new ModScormGetScormScoTracks200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModScormGetScormScoTracks200ResponseDataWithDefaults() *ModScormGetScormScoTracks200ResponseData {
	this := ModScormGetScormScoTracks200ResponseData{}
	return &this
}

// GetAttempt returns the Attempt field value
func (o *ModScormGetScormScoTracks200ResponseData) GetAttempt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Attempt
}

// GetAttemptOk returns a tuple with the Attempt field value
// and a boolean to check if the value has been set.
func (o *ModScormGetScormScoTracks200ResponseData) GetAttemptOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attempt, true
}

// SetAttempt sets field value
func (o *ModScormGetScormScoTracks200ResponseData) SetAttempt(v int32) {
	o.Attempt = v
}

// GetTracks returns the Tracks field value
func (o *ModScormGetScormScoTracks200ResponseData) GetTracks() []ModScormGetScormScoTracks200ResponseDataTracksInner {
	if o == nil {
		var ret []ModScormGetScormScoTracks200ResponseDataTracksInner
		return ret
	}

	return o.Tracks
}

// GetTracksOk returns a tuple with the Tracks field value
// and a boolean to check if the value has been set.
func (o *ModScormGetScormScoTracks200ResponseData) GetTracksOk() ([]ModScormGetScormScoTracks200ResponseDataTracksInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tracks, true
}

// SetTracks sets field value
func (o *ModScormGetScormScoTracks200ResponseData) SetTracks(v []ModScormGetScormScoTracks200ResponseDataTracksInner) {
	o.Tracks = v
}

func (o ModScormGetScormScoTracks200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModScormGetScormScoTracks200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attempt"] = o.Attempt
	toSerialize["tracks"] = o.Tracks
	return toSerialize, nil
}

func (o *ModScormGetScormScoTracks200ResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attempt",
		"tracks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModScormGetScormScoTracks200ResponseData := _ModScormGetScormScoTracks200ResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModScormGetScormScoTracks200ResponseData)

	if err != nil {
		return err
	}

	*o = ModScormGetScormScoTracks200ResponseData(varModScormGetScormScoTracks200ResponseData)

	return err
}

type NullableModScormGetScormScoTracks200ResponseData struct {
	value *ModScormGetScormScoTracks200ResponseData
	isSet bool
}

func (v NullableModScormGetScormScoTracks200ResponseData) Get() *ModScormGetScormScoTracks200ResponseData {
	return v.value
}

func (v *NullableModScormGetScormScoTracks200ResponseData) Set(val *ModScormGetScormScoTracks200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableModScormGetScormScoTracks200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableModScormGetScormScoTracks200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModScormGetScormScoTracks200ResponseData(val *ModScormGetScormScoTracks200ResponseData) *NullableModScormGetScormScoTracks200ResponseData {
	return &NullableModScormGetScormScoTracks200ResponseData{value: val, isSet: true}
}

func (v NullableModScormGetScormScoTracks200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModScormGetScormScoTracks200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


