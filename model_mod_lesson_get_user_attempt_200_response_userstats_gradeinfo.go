/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModLessonGetUserAttempt200ResponseUserstatsGradeinfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModLessonGetUserAttempt200ResponseUserstatsGradeinfo{}

// ModLessonGetUserAttempt200ResponseUserstatsGradeinfo struct for ModLessonGetUserAttempt200ResponseUserstatsGradeinfo
type ModLessonGetUserAttempt200ResponseUserstatsGradeinfo struct {
	// Number of question attempts
	Attempts int32 `json:"attempts"`
	// Points earned by student
	Earned float32 `json:"earned"`
	// Calculated percentage grade
	Grade float32 `json:"grade"`
	// Point value for manually graded questions
	Manualpoints float32 `json:"manualpoints"`
	// Number of manually graded questions
	Nmanual int32 `json:"nmanual"`
	// Number of questions answered
	Nquestions int32 `json:"nquestions"`
	// Max points possible
	Total float32 `json:"total"`
}

type _ModLessonGetUserAttempt200ResponseUserstatsGradeinfo ModLessonGetUserAttempt200ResponseUserstatsGradeinfo

// NewModLessonGetUserAttempt200ResponseUserstatsGradeinfo instantiates a new ModLessonGetUserAttempt200ResponseUserstatsGradeinfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModLessonGetUserAttempt200ResponseUserstatsGradeinfo(attempts int32, earned float32, grade float32, manualpoints float32, nmanual int32, nquestions int32, total float32) *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo {
	this := ModLessonGetUserAttempt200ResponseUserstatsGradeinfo{}
	this.Attempts = attempts
	this.Earned = earned
	this.Grade = grade
	this.Manualpoints = manualpoints
	this.Nmanual = nmanual
	this.Nquestions = nquestions
	this.Total = total
	return &this
}

// NewModLessonGetUserAttempt200ResponseUserstatsGradeinfoWithDefaults instantiates a new ModLessonGetUserAttempt200ResponseUserstatsGradeinfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModLessonGetUserAttempt200ResponseUserstatsGradeinfoWithDefaults() *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo {
	this := ModLessonGetUserAttempt200ResponseUserstatsGradeinfo{}
	var attempts int32 = null
	this.Attempts = attempts
	var earned float32 = null
	this.Earned = earned
	var grade float32 = null
	this.Grade = grade
	var manualpoints float32 = null
	this.Manualpoints = manualpoints
	var nmanual int32 = null
	this.Nmanual = nmanual
	var nquestions int32 = null
	this.Nquestions = nquestions
	var total float32 = null
	this.Total = total
	return &this
}

// GetAttempts returns the Attempts field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetAttempts() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Attempts
}

// GetAttemptsOk returns a tuple with the Attempts field value
// and a boolean to check if the value has been set.
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetAttemptsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attempts, true
}

// SetAttempts sets field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) SetAttempts(v int32) {
	o.Attempts = v
}

// GetEarned returns the Earned field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetEarned() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Earned
}

// GetEarnedOk returns a tuple with the Earned field value
// and a boolean to check if the value has been set.
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetEarnedOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Earned, true
}

// SetEarned sets field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) SetEarned(v float32) {
	o.Earned = v
}

// GetGrade returns the Grade field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetGrade() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Grade
}

// GetGradeOk returns a tuple with the Grade field value
// and a boolean to check if the value has been set.
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetGradeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Grade, true
}

// SetGrade sets field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) SetGrade(v float32) {
	o.Grade = v
}

// GetManualpoints returns the Manualpoints field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetManualpoints() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Manualpoints
}

// GetManualpointsOk returns a tuple with the Manualpoints field value
// and a boolean to check if the value has been set.
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetManualpointsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Manualpoints, true
}

// SetManualpoints sets field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) SetManualpoints(v float32) {
	o.Manualpoints = v
}

// GetNmanual returns the Nmanual field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetNmanual() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Nmanual
}

// GetNmanualOk returns a tuple with the Nmanual field value
// and a boolean to check if the value has been set.
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetNmanualOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nmanual, true
}

// SetNmanual sets field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) SetNmanual(v int32) {
	o.Nmanual = v
}

// GetNquestions returns the Nquestions field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetNquestions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Nquestions
}

// GetNquestionsOk returns a tuple with the Nquestions field value
// and a boolean to check if the value has been set.
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetNquestionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nquestions, true
}

// SetNquestions sets field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) SetNquestions(v int32) {
	o.Nquestions = v
}

// GetTotal returns the Total field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) GetTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) SetTotal(v float32) {
	o.Total = v
}

func (o ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attempts"] = o.Attempts
	toSerialize["earned"] = o.Earned
	toSerialize["grade"] = o.Grade
	toSerialize["manualpoints"] = o.Manualpoints
	toSerialize["nmanual"] = o.Nmanual
	toSerialize["nquestions"] = o.Nquestions
	toSerialize["total"] = o.Total
	return toSerialize, nil
}

func (o *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attempts",
		"earned",
		"grade",
		"manualpoints",
		"nmanual",
		"nquestions",
		"total",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModLessonGetUserAttempt200ResponseUserstatsGradeinfo := _ModLessonGetUserAttempt200ResponseUserstatsGradeinfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModLessonGetUserAttempt200ResponseUserstatsGradeinfo)

	if err != nil {
		return err
	}

	*o = ModLessonGetUserAttempt200ResponseUserstatsGradeinfo(varModLessonGetUserAttempt200ResponseUserstatsGradeinfo)

	return err
}

type NullableModLessonGetUserAttempt200ResponseUserstatsGradeinfo struct {
	value *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo
	isSet bool
}

func (v NullableModLessonGetUserAttempt200ResponseUserstatsGradeinfo) Get() *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo {
	return v.value
}

func (v *NullableModLessonGetUserAttempt200ResponseUserstatsGradeinfo) Set(val *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModLessonGetUserAttempt200ResponseUserstatsGradeinfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModLessonGetUserAttempt200ResponseUserstatsGradeinfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModLessonGetUserAttempt200ResponseUserstatsGradeinfo(val *ModLessonGetUserAttempt200ResponseUserstatsGradeinfo) *NullableModLessonGetUserAttempt200ResponseUserstatsGradeinfo {
	return &NullableModLessonGetUserAttempt200ResponseUserstatsGradeinfo{value: val, isSet: true}
}

func (v NullableModLessonGetUserAttempt200ResponseUserstatsGradeinfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModLessonGetUserAttempt200ResponseUserstatsGradeinfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


