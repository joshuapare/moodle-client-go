/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCalendarGetCalendarDayView200ResponseEventsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCalendarGetCalendarDayView200ResponseEventsInner{}

// CoreCalendarGetCalendarDayView200ResponseEventsInner struct for CoreCalendarGetCalendarDayView200ResponseEventsInner
type CoreCalendarGetCalendarDayView200ResponseEventsInner struct {
	Action *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction `json:"action,omitempty"`
	// activityname
	Activityname *string `json:"activityname,omitempty"`
	// activitystr
	Activitystr *string `json:"activitystr,omitempty"`
	// candelete
	Candelete *bool `json:"candelete,omitempty"`
	// canedit
	Canedit *bool `json:"canedit,omitempty"`
	Category *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory `json:"category,omitempty"`
	// categoryid
	Categoryid *int32 `json:"categoryid,omitempty"`
	// component
	Component *string `json:"component,omitempty"`
	Course *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse `json:"course,omitempty"`
	// deleteurl
	Deleteurl *string `json:"deleteurl,omitempty"`
	// description
	Description *string `json:"description,omitempty"`
	// description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Descriptionformat *int32 `json:"descriptionformat,omitempty"`
	// draggable
	Draggable *bool `json:"draggable,omitempty"`
	// editurl
	Editurl *string `json:"editurl,omitempty"`
	// eventcount
	Eventcount *int32 `json:"eventcount,omitempty"`
	// eventtype
	Eventtype *string `json:"eventtype,omitempty"`
	// formattedlocation
	Formattedlocation *string `json:"formattedlocation,omitempty"`
	// formattedtime
	Formattedtime *string `json:"formattedtime,omitempty"`
	// groupid
	Groupid *int32 `json:"groupid,omitempty"`
	// groupname
	Groupname *string `json:"groupname,omitempty"`
	Icon *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon `json:"icon,omitempty"`
	// id
	Id *int32 `json:"id,omitempty"`
	// instance
	Instance *int32 `json:"instance,omitempty"`
	// isactionevent
	Isactionevent *bool `json:"isactionevent,omitempty"`
	// iscategoryevent
	Iscategoryevent *bool `json:"iscategoryevent,omitempty"`
	// iscourseevent
	Iscourseevent *bool `json:"iscourseevent,omitempty"`
	// islastday
	Islastday *bool `json:"islastday,omitempty"`
	// location
	Location *string `json:"location,omitempty"`
	// maxdayerror
	Maxdayerror *string `json:"maxdayerror,omitempty"`
	// maxdaytimestamp
	Maxdaytimestamp *int32 `json:"maxdaytimestamp,omitempty"`
	// mindayerror
	Mindayerror *string `json:"mindayerror,omitempty"`
	// mindaytimestamp
	Mindaytimestamp *int32 `json:"mindaytimestamp,omitempty"`
	// modulename
	Modulename *string `json:"modulename,omitempty"`
	// name
	Name *string `json:"name,omitempty"`
	// normalisedeventtype
	Normalisedeventtype *string `json:"normalisedeventtype,omitempty"`
	// normalisedeventtypetext
	Normalisedeventtypetext *string `json:"normalisedeventtypetext,omitempty"`
	// overdue
	Overdue *bool `json:"overdue,omitempty"`
	// popupname
	Popupname *string `json:"popupname,omitempty"`
	// purpose
	Purpose *string `json:"purpose,omitempty"`
	// repeatid
	Repeatid *int32 `json:"repeatid,omitempty"`
	Subscription *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription `json:"subscription,omitempty"`
	// timeduration
	Timeduration *int32 `json:"timeduration,omitempty"`
	// timemodified
	Timemodified *int32 `json:"timemodified,omitempty"`
	// timesort
	Timesort *int32 `json:"timesort,omitempty"`
	// timestart
	Timestart *int32 `json:"timestart,omitempty"`
	// timeusermidnight
	Timeusermidnight *int32 `json:"timeusermidnight,omitempty"`
	// url
	Url *string `json:"url,omitempty"`
	// userid
	Userid *int32 `json:"userid,omitempty"`
	// viewurl
	Viewurl *string `json:"viewurl,omitempty"`
	// visible
	Visible *int32 `json:"visible,omitempty"`
}

// NewCoreCalendarGetCalendarDayView200ResponseEventsInner instantiates a new CoreCalendarGetCalendarDayView200ResponseEventsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCalendarGetCalendarDayView200ResponseEventsInner() *CoreCalendarGetCalendarDayView200ResponseEventsInner {
	this := CoreCalendarGetCalendarDayView200ResponseEventsInner{}
	var descriptionformat int32 = 1
	this.Descriptionformat = &descriptionformat
	var draggable bool = false
	this.Draggable = &draggable
	var islastday bool = false
	this.Islastday = &islastday
	var maxdayerror string = "null"
	this.Maxdayerror = &maxdayerror
	var maxdaytimestamp int32 = null
	this.Maxdaytimestamp = &maxdaytimestamp
	var mindayerror string = "null"
	this.Mindayerror = &mindayerror
	var mindaytimestamp int32 = null
	this.Mindaytimestamp = &mindaytimestamp
	var overdue bool = false
	this.Overdue = &overdue
	var popupname string = "null"
	this.Popupname = &popupname
	return &this
}

// NewCoreCalendarGetCalendarDayView200ResponseEventsInnerWithDefaults instantiates a new CoreCalendarGetCalendarDayView200ResponseEventsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCalendarGetCalendarDayView200ResponseEventsInnerWithDefaults() *CoreCalendarGetCalendarDayView200ResponseEventsInner {
	this := CoreCalendarGetCalendarDayView200ResponseEventsInner{}
	var descriptionformat int32 = 1
	this.Descriptionformat = &descriptionformat
	var draggable bool = false
	this.Draggable = &draggable
	var islastday bool = false
	this.Islastday = &islastday
	var maxdayerror string = "null"
	this.Maxdayerror = &maxdayerror
	var maxdaytimestamp int32 = null
	this.Maxdaytimestamp = &maxdaytimestamp
	var mindayerror string = "null"
	this.Mindayerror = &mindayerror
	var mindaytimestamp int32 = null
	this.Mindaytimestamp = &mindaytimestamp
	var overdue bool = false
	this.Overdue = &overdue
	var popupname string = "null"
	this.Popupname = &popupname
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetAction() CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction {
	if o == nil || IsNil(o.Action) {
		var ret CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetActionOk() (*CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction and assigns it to the Action field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetAction(v CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) {
	o.Action = &v
}

// GetActivityname returns the Activityname field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetActivityname() string {
	if o == nil || IsNil(o.Activityname) {
		var ret string
		return ret
	}
	return *o.Activityname
}

// GetActivitynameOk returns a tuple with the Activityname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetActivitynameOk() (*string, bool) {
	if o == nil || IsNil(o.Activityname) {
		return nil, false
	}
	return o.Activityname, true
}

// HasActivityname returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasActivityname() bool {
	if o != nil && !IsNil(o.Activityname) {
		return true
	}

	return false
}

// SetActivityname gets a reference to the given string and assigns it to the Activityname field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetActivityname(v string) {
	o.Activityname = &v
}

// GetActivitystr returns the Activitystr field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetActivitystr() string {
	if o == nil || IsNil(o.Activitystr) {
		var ret string
		return ret
	}
	return *o.Activitystr
}

// GetActivitystrOk returns a tuple with the Activitystr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetActivitystrOk() (*string, bool) {
	if o == nil || IsNil(o.Activitystr) {
		return nil, false
	}
	return o.Activitystr, true
}

// HasActivitystr returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasActivitystr() bool {
	if o != nil && !IsNil(o.Activitystr) {
		return true
	}

	return false
}

// SetActivitystr gets a reference to the given string and assigns it to the Activitystr field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetActivitystr(v string) {
	o.Activitystr = &v
}

// GetCandelete returns the Candelete field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetCandelete() bool {
	if o == nil || IsNil(o.Candelete) {
		var ret bool
		return ret
	}
	return *o.Candelete
}

// GetCandeleteOk returns a tuple with the Candelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetCandeleteOk() (*bool, bool) {
	if o == nil || IsNil(o.Candelete) {
		return nil, false
	}
	return o.Candelete, true
}

// HasCandelete returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasCandelete() bool {
	if o != nil && !IsNil(o.Candelete) {
		return true
	}

	return false
}

// SetCandelete gets a reference to the given bool and assigns it to the Candelete field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetCandelete(v bool) {
	o.Candelete = &v
}

// GetCanedit returns the Canedit field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetCanedit() bool {
	if o == nil || IsNil(o.Canedit) {
		var ret bool
		return ret
	}
	return *o.Canedit
}

// GetCaneditOk returns a tuple with the Canedit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetCaneditOk() (*bool, bool) {
	if o == nil || IsNil(o.Canedit) {
		return nil, false
	}
	return o.Canedit, true
}

// HasCanedit returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasCanedit() bool {
	if o != nil && !IsNil(o.Canedit) {
		return true
	}

	return false
}

// SetCanedit gets a reference to the given bool and assigns it to the Canedit field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetCanedit(v bool) {
	o.Canedit = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetCategory() CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory {
	if o == nil || IsNil(o.Category) {
		var ret CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetCategoryOk() (*CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory and assigns it to the Category field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetCategory(v CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCategory) {
	o.Category = &v
}

// GetCategoryid returns the Categoryid field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetCategoryid() int32 {
	if o == nil || IsNil(o.Categoryid) {
		var ret int32
		return ret
	}
	return *o.Categoryid
}

// GetCategoryidOk returns a tuple with the Categoryid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetCategoryidOk() (*int32, bool) {
	if o == nil || IsNil(o.Categoryid) {
		return nil, false
	}
	return o.Categoryid, true
}

// HasCategoryid returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasCategoryid() bool {
	if o != nil && !IsNil(o.Categoryid) {
		return true
	}

	return false
}

// SetCategoryid gets a reference to the given int32 and assigns it to the Categoryid field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetCategoryid(v int32) {
	o.Categoryid = &v
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetComponent() string {
	if o == nil || IsNil(o.Component) {
		var ret string
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetComponentOk() (*string, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given string and assigns it to the Component field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetComponent(v string) {
	o.Component = &v
}

// GetCourse returns the Course field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetCourse() CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse {
	if o == nil || IsNil(o.Course) {
		var ret CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
		return ret
	}
	return *o.Course
}

// GetCourseOk returns a tuple with the Course field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetCourseOk() (*CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse, bool) {
	if o == nil || IsNil(o.Course) {
		return nil, false
	}
	return o.Course, true
}

// HasCourse returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasCourse() bool {
	if o != nil && !IsNil(o.Course) {
		return true
	}

	return false
}

// SetCourse gets a reference to the given CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse and assigns it to the Course field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetCourse(v CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse) {
	o.Course = &v
}

// GetDeleteurl returns the Deleteurl field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetDeleteurl() string {
	if o == nil || IsNil(o.Deleteurl) {
		var ret string
		return ret
	}
	return *o.Deleteurl
}

// GetDeleteurlOk returns a tuple with the Deleteurl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetDeleteurlOk() (*string, bool) {
	if o == nil || IsNil(o.Deleteurl) {
		return nil, false
	}
	return o.Deleteurl, true
}

// HasDeleteurl returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasDeleteurl() bool {
	if o != nil && !IsNil(o.Deleteurl) {
		return true
	}

	return false
}

// SetDeleteurl gets a reference to the given string and assigns it to the Deleteurl field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetDeleteurl(v string) {
	o.Deleteurl = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetDescription(v string) {
	o.Description = &v
}

// GetDescriptionformat returns the Descriptionformat field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetDescriptionformat() int32 {
	if o == nil || IsNil(o.Descriptionformat) {
		var ret int32
		return ret
	}
	return *o.Descriptionformat
}

// GetDescriptionformatOk returns a tuple with the Descriptionformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetDescriptionformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Descriptionformat) {
		return nil, false
	}
	return o.Descriptionformat, true
}

// HasDescriptionformat returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasDescriptionformat() bool {
	if o != nil && !IsNil(o.Descriptionformat) {
		return true
	}

	return false
}

// SetDescriptionformat gets a reference to the given int32 and assigns it to the Descriptionformat field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetDescriptionformat(v int32) {
	o.Descriptionformat = &v
}

// GetDraggable returns the Draggable field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetDraggable() bool {
	if o == nil || IsNil(o.Draggable) {
		var ret bool
		return ret
	}
	return *o.Draggable
}

// GetDraggableOk returns a tuple with the Draggable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetDraggableOk() (*bool, bool) {
	if o == nil || IsNil(o.Draggable) {
		return nil, false
	}
	return o.Draggable, true
}

// HasDraggable returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasDraggable() bool {
	if o != nil && !IsNil(o.Draggable) {
		return true
	}

	return false
}

// SetDraggable gets a reference to the given bool and assigns it to the Draggable field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetDraggable(v bool) {
	o.Draggable = &v
}

// GetEditurl returns the Editurl field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetEditurl() string {
	if o == nil || IsNil(o.Editurl) {
		var ret string
		return ret
	}
	return *o.Editurl
}

// GetEditurlOk returns a tuple with the Editurl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetEditurlOk() (*string, bool) {
	if o == nil || IsNil(o.Editurl) {
		return nil, false
	}
	return o.Editurl, true
}

// HasEditurl returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasEditurl() bool {
	if o != nil && !IsNil(o.Editurl) {
		return true
	}

	return false
}

// SetEditurl gets a reference to the given string and assigns it to the Editurl field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetEditurl(v string) {
	o.Editurl = &v
}

// GetEventcount returns the Eventcount field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetEventcount() int32 {
	if o == nil || IsNil(o.Eventcount) {
		var ret int32
		return ret
	}
	return *o.Eventcount
}

// GetEventcountOk returns a tuple with the Eventcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetEventcountOk() (*int32, bool) {
	if o == nil || IsNil(o.Eventcount) {
		return nil, false
	}
	return o.Eventcount, true
}

// HasEventcount returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasEventcount() bool {
	if o != nil && !IsNil(o.Eventcount) {
		return true
	}

	return false
}

// SetEventcount gets a reference to the given int32 and assigns it to the Eventcount field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetEventcount(v int32) {
	o.Eventcount = &v
}

// GetEventtype returns the Eventtype field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetEventtype() string {
	if o == nil || IsNil(o.Eventtype) {
		var ret string
		return ret
	}
	return *o.Eventtype
}

// GetEventtypeOk returns a tuple with the Eventtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetEventtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Eventtype) {
		return nil, false
	}
	return o.Eventtype, true
}

// HasEventtype returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasEventtype() bool {
	if o != nil && !IsNil(o.Eventtype) {
		return true
	}

	return false
}

// SetEventtype gets a reference to the given string and assigns it to the Eventtype field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetEventtype(v string) {
	o.Eventtype = &v
}

// GetFormattedlocation returns the Formattedlocation field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetFormattedlocation() string {
	if o == nil || IsNil(o.Formattedlocation) {
		var ret string
		return ret
	}
	return *o.Formattedlocation
}

// GetFormattedlocationOk returns a tuple with the Formattedlocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetFormattedlocationOk() (*string, bool) {
	if o == nil || IsNil(o.Formattedlocation) {
		return nil, false
	}
	return o.Formattedlocation, true
}

// HasFormattedlocation returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasFormattedlocation() bool {
	if o != nil && !IsNil(o.Formattedlocation) {
		return true
	}

	return false
}

// SetFormattedlocation gets a reference to the given string and assigns it to the Formattedlocation field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetFormattedlocation(v string) {
	o.Formattedlocation = &v
}

// GetFormattedtime returns the Formattedtime field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetFormattedtime() string {
	if o == nil || IsNil(o.Formattedtime) {
		var ret string
		return ret
	}
	return *o.Formattedtime
}

// GetFormattedtimeOk returns a tuple with the Formattedtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetFormattedtimeOk() (*string, bool) {
	if o == nil || IsNil(o.Formattedtime) {
		return nil, false
	}
	return o.Formattedtime, true
}

// HasFormattedtime returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasFormattedtime() bool {
	if o != nil && !IsNil(o.Formattedtime) {
		return true
	}

	return false
}

// SetFormattedtime gets a reference to the given string and assigns it to the Formattedtime field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetFormattedtime(v string) {
	o.Formattedtime = &v
}

// GetGroupid returns the Groupid field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetGroupid() int32 {
	if o == nil || IsNil(o.Groupid) {
		var ret int32
		return ret
	}
	return *o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetGroupidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupid) {
		return nil, false
	}
	return o.Groupid, true
}

// HasGroupid returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasGroupid() bool {
	if o != nil && !IsNil(o.Groupid) {
		return true
	}

	return false
}

// SetGroupid gets a reference to the given int32 and assigns it to the Groupid field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetGroupid(v int32) {
	o.Groupid = &v
}

// GetGroupname returns the Groupname field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetGroupname() string {
	if o == nil || IsNil(o.Groupname) {
		var ret string
		return ret
	}
	return *o.Groupname
}

// GetGroupnameOk returns a tuple with the Groupname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetGroupnameOk() (*string, bool) {
	if o == nil || IsNil(o.Groupname) {
		return nil, false
	}
	return o.Groupname, true
}

// HasGroupname returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasGroupname() bool {
	if o != nil && !IsNil(o.Groupname) {
		return true
	}

	return false
}

// SetGroupname gets a reference to the given string and assigns it to the Groupname field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetGroupname(v string) {
	o.Groupname = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetIcon() CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon {
	if o == nil || IsNil(o.Icon) {
		var ret CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetIconOk() (*CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon and assigns it to the Icon field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetIcon(v CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerIcon) {
	o.Icon = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetId(v int32) {
	o.Id = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetInstance() int32 {
	if o == nil || IsNil(o.Instance) {
		var ret int32
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetInstanceOk() (*int32, bool) {
	if o == nil || IsNil(o.Instance) {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given int32 and assigns it to the Instance field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetInstance(v int32) {
	o.Instance = &v
}

// GetIsactionevent returns the Isactionevent field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetIsactionevent() bool {
	if o == nil || IsNil(o.Isactionevent) {
		var ret bool
		return ret
	}
	return *o.Isactionevent
}

// GetIsactioneventOk returns a tuple with the Isactionevent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetIsactioneventOk() (*bool, bool) {
	if o == nil || IsNil(o.Isactionevent) {
		return nil, false
	}
	return o.Isactionevent, true
}

// HasIsactionevent returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasIsactionevent() bool {
	if o != nil && !IsNil(o.Isactionevent) {
		return true
	}

	return false
}

// SetIsactionevent gets a reference to the given bool and assigns it to the Isactionevent field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetIsactionevent(v bool) {
	o.Isactionevent = &v
}

// GetIscategoryevent returns the Iscategoryevent field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetIscategoryevent() bool {
	if o == nil || IsNil(o.Iscategoryevent) {
		var ret bool
		return ret
	}
	return *o.Iscategoryevent
}

// GetIscategoryeventOk returns a tuple with the Iscategoryevent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetIscategoryeventOk() (*bool, bool) {
	if o == nil || IsNil(o.Iscategoryevent) {
		return nil, false
	}
	return o.Iscategoryevent, true
}

// HasIscategoryevent returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasIscategoryevent() bool {
	if o != nil && !IsNil(o.Iscategoryevent) {
		return true
	}

	return false
}

// SetIscategoryevent gets a reference to the given bool and assigns it to the Iscategoryevent field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetIscategoryevent(v bool) {
	o.Iscategoryevent = &v
}

// GetIscourseevent returns the Iscourseevent field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetIscourseevent() bool {
	if o == nil || IsNil(o.Iscourseevent) {
		var ret bool
		return ret
	}
	return *o.Iscourseevent
}

// GetIscourseeventOk returns a tuple with the Iscourseevent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetIscourseeventOk() (*bool, bool) {
	if o == nil || IsNil(o.Iscourseevent) {
		return nil, false
	}
	return o.Iscourseevent, true
}

// HasIscourseevent returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasIscourseevent() bool {
	if o != nil && !IsNil(o.Iscourseevent) {
		return true
	}

	return false
}

// SetIscourseevent gets a reference to the given bool and assigns it to the Iscourseevent field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetIscourseevent(v bool) {
	o.Iscourseevent = &v
}

// GetIslastday returns the Islastday field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetIslastday() bool {
	if o == nil || IsNil(o.Islastday) {
		var ret bool
		return ret
	}
	return *o.Islastday
}

// GetIslastdayOk returns a tuple with the Islastday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetIslastdayOk() (*bool, bool) {
	if o == nil || IsNil(o.Islastday) {
		return nil, false
	}
	return o.Islastday, true
}

// HasIslastday returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasIslastday() bool {
	if o != nil && !IsNil(o.Islastday) {
		return true
	}

	return false
}

// SetIslastday gets a reference to the given bool and assigns it to the Islastday field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetIslastday(v bool) {
	o.Islastday = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetLocation(v string) {
	o.Location = &v
}

// GetMaxdayerror returns the Maxdayerror field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetMaxdayerror() string {
	if o == nil || IsNil(o.Maxdayerror) {
		var ret string
		return ret
	}
	return *o.Maxdayerror
}

// GetMaxdayerrorOk returns a tuple with the Maxdayerror field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetMaxdayerrorOk() (*string, bool) {
	if o == nil || IsNil(o.Maxdayerror) {
		return nil, false
	}
	return o.Maxdayerror, true
}

// HasMaxdayerror returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasMaxdayerror() bool {
	if o != nil && !IsNil(o.Maxdayerror) {
		return true
	}

	return false
}

// SetMaxdayerror gets a reference to the given string and assigns it to the Maxdayerror field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetMaxdayerror(v string) {
	o.Maxdayerror = &v
}

// GetMaxdaytimestamp returns the Maxdaytimestamp field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetMaxdaytimestamp() int32 {
	if o == nil || IsNil(o.Maxdaytimestamp) {
		var ret int32
		return ret
	}
	return *o.Maxdaytimestamp
}

// GetMaxdaytimestampOk returns a tuple with the Maxdaytimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetMaxdaytimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Maxdaytimestamp) {
		return nil, false
	}
	return o.Maxdaytimestamp, true
}

// HasMaxdaytimestamp returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasMaxdaytimestamp() bool {
	if o != nil && !IsNil(o.Maxdaytimestamp) {
		return true
	}

	return false
}

// SetMaxdaytimestamp gets a reference to the given int32 and assigns it to the Maxdaytimestamp field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetMaxdaytimestamp(v int32) {
	o.Maxdaytimestamp = &v
}

// GetMindayerror returns the Mindayerror field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetMindayerror() string {
	if o == nil || IsNil(o.Mindayerror) {
		var ret string
		return ret
	}
	return *o.Mindayerror
}

// GetMindayerrorOk returns a tuple with the Mindayerror field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetMindayerrorOk() (*string, bool) {
	if o == nil || IsNil(o.Mindayerror) {
		return nil, false
	}
	return o.Mindayerror, true
}

// HasMindayerror returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasMindayerror() bool {
	if o != nil && !IsNil(o.Mindayerror) {
		return true
	}

	return false
}

// SetMindayerror gets a reference to the given string and assigns it to the Mindayerror field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetMindayerror(v string) {
	o.Mindayerror = &v
}

// GetMindaytimestamp returns the Mindaytimestamp field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetMindaytimestamp() int32 {
	if o == nil || IsNil(o.Mindaytimestamp) {
		var ret int32
		return ret
	}
	return *o.Mindaytimestamp
}

// GetMindaytimestampOk returns a tuple with the Mindaytimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetMindaytimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Mindaytimestamp) {
		return nil, false
	}
	return o.Mindaytimestamp, true
}

// HasMindaytimestamp returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasMindaytimestamp() bool {
	if o != nil && !IsNil(o.Mindaytimestamp) {
		return true
	}

	return false
}

// SetMindaytimestamp gets a reference to the given int32 and assigns it to the Mindaytimestamp field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetMindaytimestamp(v int32) {
	o.Mindaytimestamp = &v
}

// GetModulename returns the Modulename field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetModulename() string {
	if o == nil || IsNil(o.Modulename) {
		var ret string
		return ret
	}
	return *o.Modulename
}

// GetModulenameOk returns a tuple with the Modulename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetModulenameOk() (*string, bool) {
	if o == nil || IsNil(o.Modulename) {
		return nil, false
	}
	return o.Modulename, true
}

// HasModulename returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasModulename() bool {
	if o != nil && !IsNil(o.Modulename) {
		return true
	}

	return false
}

// SetModulename gets a reference to the given string and assigns it to the Modulename field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetModulename(v string) {
	o.Modulename = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetName(v string) {
	o.Name = &v
}

// GetNormalisedeventtype returns the Normalisedeventtype field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetNormalisedeventtype() string {
	if o == nil || IsNil(o.Normalisedeventtype) {
		var ret string
		return ret
	}
	return *o.Normalisedeventtype
}

// GetNormalisedeventtypeOk returns a tuple with the Normalisedeventtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetNormalisedeventtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Normalisedeventtype) {
		return nil, false
	}
	return o.Normalisedeventtype, true
}

// HasNormalisedeventtype returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasNormalisedeventtype() bool {
	if o != nil && !IsNil(o.Normalisedeventtype) {
		return true
	}

	return false
}

// SetNormalisedeventtype gets a reference to the given string and assigns it to the Normalisedeventtype field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetNormalisedeventtype(v string) {
	o.Normalisedeventtype = &v
}

// GetNormalisedeventtypetext returns the Normalisedeventtypetext field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetNormalisedeventtypetext() string {
	if o == nil || IsNil(o.Normalisedeventtypetext) {
		var ret string
		return ret
	}
	return *o.Normalisedeventtypetext
}

// GetNormalisedeventtypetextOk returns a tuple with the Normalisedeventtypetext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetNormalisedeventtypetextOk() (*string, bool) {
	if o == nil || IsNil(o.Normalisedeventtypetext) {
		return nil, false
	}
	return o.Normalisedeventtypetext, true
}

// HasNormalisedeventtypetext returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasNormalisedeventtypetext() bool {
	if o != nil && !IsNil(o.Normalisedeventtypetext) {
		return true
	}

	return false
}

// SetNormalisedeventtypetext gets a reference to the given string and assigns it to the Normalisedeventtypetext field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetNormalisedeventtypetext(v string) {
	o.Normalisedeventtypetext = &v
}

// GetOverdue returns the Overdue field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetOverdue() bool {
	if o == nil || IsNil(o.Overdue) {
		var ret bool
		return ret
	}
	return *o.Overdue
}

// GetOverdueOk returns a tuple with the Overdue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetOverdueOk() (*bool, bool) {
	if o == nil || IsNil(o.Overdue) {
		return nil, false
	}
	return o.Overdue, true
}

// HasOverdue returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasOverdue() bool {
	if o != nil && !IsNil(o.Overdue) {
		return true
	}

	return false
}

// SetOverdue gets a reference to the given bool and assigns it to the Overdue field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetOverdue(v bool) {
	o.Overdue = &v
}

// GetPopupname returns the Popupname field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetPopupname() string {
	if o == nil || IsNil(o.Popupname) {
		var ret string
		return ret
	}
	return *o.Popupname
}

// GetPopupnameOk returns a tuple with the Popupname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetPopupnameOk() (*string, bool) {
	if o == nil || IsNil(o.Popupname) {
		return nil, false
	}
	return o.Popupname, true
}

// HasPopupname returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasPopupname() bool {
	if o != nil && !IsNil(o.Popupname) {
		return true
	}

	return false
}

// SetPopupname gets a reference to the given string and assigns it to the Popupname field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetPopupname(v string) {
	o.Popupname = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetPurpose() string {
	if o == nil || IsNil(o.Purpose) {
		var ret string
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetPurposeOk() (*string, bool) {
	if o == nil || IsNil(o.Purpose) {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasPurpose() bool {
	if o != nil && !IsNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given string and assigns it to the Purpose field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetPurpose(v string) {
	o.Purpose = &v
}

// GetRepeatid returns the Repeatid field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetRepeatid() int32 {
	if o == nil || IsNil(o.Repeatid) {
		var ret int32
		return ret
	}
	return *o.Repeatid
}

// GetRepeatidOk returns a tuple with the Repeatid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetRepeatidOk() (*int32, bool) {
	if o == nil || IsNil(o.Repeatid) {
		return nil, false
	}
	return o.Repeatid, true
}

// HasRepeatid returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasRepeatid() bool {
	if o != nil && !IsNil(o.Repeatid) {
		return true
	}

	return false
}

// SetRepeatid gets a reference to the given int32 and assigns it to the Repeatid field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetRepeatid(v int32) {
	o.Repeatid = &v
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetSubscription() CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription {
	if o == nil || IsNil(o.Subscription) {
		var ret CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetSubscriptionOk() (*CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription, bool) {
	if o == nil || IsNil(o.Subscription) {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasSubscription() bool {
	if o != nil && !IsNil(o.Subscription) {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription and assigns it to the Subscription field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetSubscription(v CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerSubscription) {
	o.Subscription = &v
}

// GetTimeduration returns the Timeduration field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetTimeduration() int32 {
	if o == nil || IsNil(o.Timeduration) {
		var ret int32
		return ret
	}
	return *o.Timeduration
}

// GetTimedurationOk returns a tuple with the Timeduration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetTimedurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeduration) {
		return nil, false
	}
	return o.Timeduration, true
}

// HasTimeduration returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasTimeduration() bool {
	if o != nil && !IsNil(o.Timeduration) {
		return true
	}

	return false
}

// SetTimeduration gets a reference to the given int32 and assigns it to the Timeduration field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetTimeduration(v int32) {
	o.Timeduration = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetTimesort returns the Timesort field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetTimesort() int32 {
	if o == nil || IsNil(o.Timesort) {
		var ret int32
		return ret
	}
	return *o.Timesort
}

// GetTimesortOk returns a tuple with the Timesort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetTimesortOk() (*int32, bool) {
	if o == nil || IsNil(o.Timesort) {
		return nil, false
	}
	return o.Timesort, true
}

// HasTimesort returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasTimesort() bool {
	if o != nil && !IsNil(o.Timesort) {
		return true
	}

	return false
}

// SetTimesort gets a reference to the given int32 and assigns it to the Timesort field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetTimesort(v int32) {
	o.Timesort = &v
}

// GetTimestart returns the Timestart field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetTimestart() int32 {
	if o == nil || IsNil(o.Timestart) {
		var ret int32
		return ret
	}
	return *o.Timestart
}

// GetTimestartOk returns a tuple with the Timestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetTimestartOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestart) {
		return nil, false
	}
	return o.Timestart, true
}

// HasTimestart returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasTimestart() bool {
	if o != nil && !IsNil(o.Timestart) {
		return true
	}

	return false
}

// SetTimestart gets a reference to the given int32 and assigns it to the Timestart field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetTimestart(v int32) {
	o.Timestart = &v
}

// GetTimeusermidnight returns the Timeusermidnight field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetTimeusermidnight() int32 {
	if o == nil || IsNil(o.Timeusermidnight) {
		var ret int32
		return ret
	}
	return *o.Timeusermidnight
}

// GetTimeusermidnightOk returns a tuple with the Timeusermidnight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetTimeusermidnightOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeusermidnight) {
		return nil, false
	}
	return o.Timeusermidnight, true
}

// HasTimeusermidnight returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasTimeusermidnight() bool {
	if o != nil && !IsNil(o.Timeusermidnight) {
		return true
	}

	return false
}

// SetTimeusermidnight gets a reference to the given int32 and assigns it to the Timeusermidnight field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetTimeusermidnight(v int32) {
	o.Timeusermidnight = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetUrl(v string) {
	o.Url = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetUserid(v int32) {
	o.Userid = &v
}

// GetViewurl returns the Viewurl field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetViewurl() string {
	if o == nil || IsNil(o.Viewurl) {
		var ret string
		return ret
	}
	return *o.Viewurl
}

// GetViewurlOk returns a tuple with the Viewurl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetViewurlOk() (*string, bool) {
	if o == nil || IsNil(o.Viewurl) {
		return nil, false
	}
	return o.Viewurl, true
}

// HasViewurl returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasViewurl() bool {
	if o != nil && !IsNil(o.Viewurl) {
		return true
	}

	return false
}

// SetViewurl gets a reference to the given string and assigns it to the Viewurl field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetViewurl(v string) {
	o.Viewurl = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetVisible() int32 {
	if o == nil || IsNil(o.Visible) {
		var ret int32
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) GetVisibleOk() (*int32, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given int32 and assigns it to the Visible field.
func (o *CoreCalendarGetCalendarDayView200ResponseEventsInner) SetVisible(v int32) {
	o.Visible = &v
}

func (o CoreCalendarGetCalendarDayView200ResponseEventsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCalendarGetCalendarDayView200ResponseEventsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Activityname) {
		toSerialize["activityname"] = o.Activityname
	}
	if !IsNil(o.Activitystr) {
		toSerialize["activitystr"] = o.Activitystr
	}
	if !IsNil(o.Candelete) {
		toSerialize["candelete"] = o.Candelete
	}
	if !IsNil(o.Canedit) {
		toSerialize["canedit"] = o.Canedit
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Categoryid) {
		toSerialize["categoryid"] = o.Categoryid
	}
	if !IsNil(o.Component) {
		toSerialize["component"] = o.Component
	}
	if !IsNil(o.Course) {
		toSerialize["course"] = o.Course
	}
	if !IsNil(o.Deleteurl) {
		toSerialize["deleteurl"] = o.Deleteurl
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Descriptionformat) {
		toSerialize["descriptionformat"] = o.Descriptionformat
	}
	if !IsNil(o.Draggable) {
		toSerialize["draggable"] = o.Draggable
	}
	if !IsNil(o.Editurl) {
		toSerialize["editurl"] = o.Editurl
	}
	if !IsNil(o.Eventcount) {
		toSerialize["eventcount"] = o.Eventcount
	}
	if !IsNil(o.Eventtype) {
		toSerialize["eventtype"] = o.Eventtype
	}
	if !IsNil(o.Formattedlocation) {
		toSerialize["formattedlocation"] = o.Formattedlocation
	}
	if !IsNil(o.Formattedtime) {
		toSerialize["formattedtime"] = o.Formattedtime
	}
	if !IsNil(o.Groupid) {
		toSerialize["groupid"] = o.Groupid
	}
	if !IsNil(o.Groupname) {
		toSerialize["groupname"] = o.Groupname
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	if !IsNil(o.Isactionevent) {
		toSerialize["isactionevent"] = o.Isactionevent
	}
	if !IsNil(o.Iscategoryevent) {
		toSerialize["iscategoryevent"] = o.Iscategoryevent
	}
	if !IsNil(o.Iscourseevent) {
		toSerialize["iscourseevent"] = o.Iscourseevent
	}
	if !IsNil(o.Islastday) {
		toSerialize["islastday"] = o.Islastday
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Maxdayerror) {
		toSerialize["maxdayerror"] = o.Maxdayerror
	}
	if !IsNil(o.Maxdaytimestamp) {
		toSerialize["maxdaytimestamp"] = o.Maxdaytimestamp
	}
	if !IsNil(o.Mindayerror) {
		toSerialize["mindayerror"] = o.Mindayerror
	}
	if !IsNil(o.Mindaytimestamp) {
		toSerialize["mindaytimestamp"] = o.Mindaytimestamp
	}
	if !IsNil(o.Modulename) {
		toSerialize["modulename"] = o.Modulename
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Normalisedeventtype) {
		toSerialize["normalisedeventtype"] = o.Normalisedeventtype
	}
	if !IsNil(o.Normalisedeventtypetext) {
		toSerialize["normalisedeventtypetext"] = o.Normalisedeventtypetext
	}
	if !IsNil(o.Overdue) {
		toSerialize["overdue"] = o.Overdue
	}
	if !IsNil(o.Popupname) {
		toSerialize["popupname"] = o.Popupname
	}
	if !IsNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	if !IsNil(o.Repeatid) {
		toSerialize["repeatid"] = o.Repeatid
	}
	if !IsNil(o.Subscription) {
		toSerialize["subscription"] = o.Subscription
	}
	if !IsNil(o.Timeduration) {
		toSerialize["timeduration"] = o.Timeduration
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Timesort) {
		toSerialize["timesort"] = o.Timesort
	}
	if !IsNil(o.Timestart) {
		toSerialize["timestart"] = o.Timestart
	}
	if !IsNil(o.Timeusermidnight) {
		toSerialize["timeusermidnight"] = o.Timeusermidnight
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	if !IsNil(o.Viewurl) {
		toSerialize["viewurl"] = o.Viewurl
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	return toSerialize, nil
}

type NullableCoreCalendarGetCalendarDayView200ResponseEventsInner struct {
	value *CoreCalendarGetCalendarDayView200ResponseEventsInner
	isSet bool
}

func (v NullableCoreCalendarGetCalendarDayView200ResponseEventsInner) Get() *CoreCalendarGetCalendarDayView200ResponseEventsInner {
	return v.value
}

func (v *NullableCoreCalendarGetCalendarDayView200ResponseEventsInner) Set(val *CoreCalendarGetCalendarDayView200ResponseEventsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCalendarGetCalendarDayView200ResponseEventsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCalendarGetCalendarDayView200ResponseEventsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCalendarGetCalendarDayView200ResponseEventsInner(val *CoreCalendarGetCalendarDayView200ResponseEventsInner) *NullableCoreCalendarGetCalendarDayView200ResponseEventsInner {
	return &NullableCoreCalendarGetCalendarDayView200ResponseEventsInner{value: val, isSet: true}
}

func (v NullableCoreCalendarGetCalendarDayView200ResponseEventsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCalendarGetCalendarDayView200ResponseEventsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


