/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreTagGetTagindexRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreTagGetTagindexRequest{}

// CoreTagGetTagindexRequest struct for CoreTagGetTagindexRequest
type CoreTagGetTagindexRequest struct {
	Tagindex CoreTagGetTagindexRequestTagindex `json:"tagindex"`
}

type _CoreTagGetTagindexRequest CoreTagGetTagindexRequest

// NewCoreTagGetTagindexRequest instantiates a new CoreTagGetTagindexRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreTagGetTagindexRequest(tagindex CoreTagGetTagindexRequestTagindex) *CoreTagGetTagindexRequest {
	this := CoreTagGetTagindexRequest{}
	this.Tagindex = tagindex
	return &this
}

// NewCoreTagGetTagindexRequestWithDefaults instantiates a new CoreTagGetTagindexRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreTagGetTagindexRequestWithDefaults() *CoreTagGetTagindexRequest {
	this := CoreTagGetTagindexRequest{}
	return &this
}

// GetTagindex returns the Tagindex field value
func (o *CoreTagGetTagindexRequest) GetTagindex() CoreTagGetTagindexRequestTagindex {
	if o == nil {
		var ret CoreTagGetTagindexRequestTagindex
		return ret
	}

	return o.Tagindex
}

// GetTagindexOk returns a tuple with the Tagindex field value
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagindexRequest) GetTagindexOk() (*CoreTagGetTagindexRequestTagindex, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tagindex, true
}

// SetTagindex sets field value
func (o *CoreTagGetTagindexRequest) SetTagindex(v CoreTagGetTagindexRequestTagindex) {
	o.Tagindex = v
}

func (o CoreTagGetTagindexRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreTagGetTagindexRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tagindex"] = o.Tagindex
	return toSerialize, nil
}

func (o *CoreTagGetTagindexRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tagindex",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreTagGetTagindexRequest := _CoreTagGetTagindexRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreTagGetTagindexRequest)

	if err != nil {
		return err
	}

	*o = CoreTagGetTagindexRequest(varCoreTagGetTagindexRequest)

	return err
}

type NullableCoreTagGetTagindexRequest struct {
	value *CoreTagGetTagindexRequest
	isSet bool
}

func (v NullableCoreTagGetTagindexRequest) Get() *CoreTagGetTagindexRequest {
	return v.value
}

func (v *NullableCoreTagGetTagindexRequest) Set(val *CoreTagGetTagindexRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreTagGetTagindexRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreTagGetTagindexRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreTagGetTagindexRequest(val *CoreTagGetTagindexRequest) *NullableCoreTagGetTagindexRequest {
	return &NullableCoreTagGetTagindexRequest{value: val, isSet: true}
}

func (v NullableCoreTagGetTagindexRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreTagGetTagindexRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


