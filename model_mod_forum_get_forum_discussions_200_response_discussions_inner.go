/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModForumGetForumDiscussions200ResponseDiscussionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumGetForumDiscussions200ResponseDiscussionsInner{}

// ModForumGetForumDiscussions200ResponseDiscussionsInner post
type ModForumGetForumDiscussions200ResponseDiscussionsInner struct {
	// Has attachments?
	Attachment *string `json:"attachment,omitempty"`
	Attachments []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner `json:"attachments,omitempty"`
	// Can the user star the discussion
	Canfavourite *bool `json:"canfavourite,omitempty"`
	// Can the user lock the discussion
	Canlock *bool `json:"canlock,omitempty"`
	// Can the user reply to the discussion
	Canreply *bool `json:"canreply,omitempty"`
	// Creation time
	Created *int32 `json:"created,omitempty"`
	// Discussion id
	Discussion *int32 `json:"discussion,omitempty"`
	// Group id
	Groupid *int32 `json:"groupid,omitempty"`
	// Post id
	Id *int32 `json:"id,omitempty"`
	// Is the discussion locked
	Locked *bool `json:"locked,omitempty"`
	// Mailed?
	Mailed *int32 `json:"mailed,omitempty"`
	// Mail now?
	Mailnow *int32 `json:"mailnow,omitempty"`
	// The post message
	Message *string `json:"message,omitempty"`
	// message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Messageformat *int32 `json:"messageformat,omitempty"`
	Messageinlinefiles []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner `json:"messageinlinefiles,omitempty"`
	// Can we trust?
	Messagetrust *int32 `json:"messagetrust,omitempty"`
	// Time modified
	Modified *int32 `json:"modified,omitempty"`
	// Discussion name
	Name *string `json:"name,omitempty"`
	// The number of replies in the discussion
	Numreplies *int32 `json:"numreplies,omitempty"`
	// The number of unread discussions.
	Numunread *int32 `json:"numunread,omitempty"`
	// Parent id
	Parent *int32 `json:"parent,omitempty"`
	// Is the discussion pinned
	Pinned *bool `json:"pinned,omitempty"`
	// Is the discussion starred
	Starred *bool `json:"starred,omitempty"`
	// The post subject
	Subject *string `json:"subject,omitempty"`
	// Time discussion ends
	Timeend *int32 `json:"timeend,omitempty"`
	// Time modified
	Timemodified *int32 `json:"timemodified,omitempty"`
	// Time discussion can start
	Timestart *int32 `json:"timestart,omitempty"`
	// The post message total score
	Totalscore *int32 `json:"totalscore,omitempty"`
	// Post author full name
	Userfullname *string `json:"userfullname,omitempty"`
	// User who started the discussion id
	Userid *int32 `json:"userid,omitempty"`
	// The id of the user who last modified
	Usermodified *int32 `json:"usermodified,omitempty"`
	// Post modifier full name
	Usermodifiedfullname *string `json:"usermodifiedfullname,omitempty"`
	// Post modifier picture.
	Usermodifiedpictureurl *string `json:"usermodifiedpictureurl,omitempty"`
	// Post author picture.
	Userpictureurl *string `json:"userpictureurl,omitempty"`
}

// NewModForumGetForumDiscussions200ResponseDiscussionsInner instantiates a new ModForumGetForumDiscussions200ResponseDiscussionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumGetForumDiscussions200ResponseDiscussionsInner() *ModForumGetForumDiscussions200ResponseDiscussionsInner {
	this := ModForumGetForumDiscussions200ResponseDiscussionsInner{}
	var attachment string = "null"
	this.Attachment = &attachment
	var canfavourite bool = null
	this.Canfavourite = &canfavourite
	var canlock bool = null
	this.Canlock = &canlock
	var canreply bool = null
	this.Canreply = &canreply
	var created int32 = null
	this.Created = &created
	var discussion int32 = null
	this.Discussion = &discussion
	var id int32 = null
	this.Id = &id
	var locked bool = null
	this.Locked = &locked
	var mailed int32 = null
	this.Mailed = &mailed
	var mailnow int32 = null
	this.Mailnow = &mailnow
	var message string = "null"
	this.Message = &message
	var messagetrust int32 = null
	this.Messagetrust = &messagetrust
	var name string = "null"
	this.Name = &name
	var numreplies int32 = null
	this.Numreplies = &numreplies
	var numunread int32 = null
	this.Numunread = &numunread
	var parent int32 = null
	this.Parent = &parent
	var pinned bool = null
	this.Pinned = &pinned
	var starred bool = null
	this.Starred = &starred
	var subject string = "null"
	this.Subject = &subject
	var timeend int32 = null
	this.Timeend = &timeend
	var timestart int32 = null
	this.Timestart = &timestart
	var totalscore int32 = null
	this.Totalscore = &totalscore
	var userfullname string = "null"
	this.Userfullname = &userfullname
	var userid int32 = null
	this.Userid = &userid
	var usermodified int32 = null
	this.Usermodified = &usermodified
	var usermodifiedfullname string = "null"
	this.Usermodifiedfullname = &usermodifiedfullname
	var usermodifiedpictureurl string = "null"
	this.Usermodifiedpictureurl = &usermodifiedpictureurl
	var userpictureurl string = "null"
	this.Userpictureurl = &userpictureurl
	return &this
}

// NewModForumGetForumDiscussions200ResponseDiscussionsInnerWithDefaults instantiates a new ModForumGetForumDiscussions200ResponseDiscussionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumGetForumDiscussions200ResponseDiscussionsInnerWithDefaults() *ModForumGetForumDiscussions200ResponseDiscussionsInner {
	this := ModForumGetForumDiscussions200ResponseDiscussionsInner{}
	var attachment string = "null"
	this.Attachment = &attachment
	var canfavourite bool = null
	this.Canfavourite = &canfavourite
	var canlock bool = null
	this.Canlock = &canlock
	var canreply bool = null
	this.Canreply = &canreply
	var created int32 = null
	this.Created = &created
	var discussion int32 = null
	this.Discussion = &discussion
	var id int32 = null
	this.Id = &id
	var locked bool = null
	this.Locked = &locked
	var mailed int32 = null
	this.Mailed = &mailed
	var mailnow int32 = null
	this.Mailnow = &mailnow
	var message string = "null"
	this.Message = &message
	var messagetrust int32 = null
	this.Messagetrust = &messagetrust
	var name string = "null"
	this.Name = &name
	var numreplies int32 = null
	this.Numreplies = &numreplies
	var numunread int32 = null
	this.Numunread = &numunread
	var parent int32 = null
	this.Parent = &parent
	var pinned bool = null
	this.Pinned = &pinned
	var starred bool = null
	this.Starred = &starred
	var subject string = "null"
	this.Subject = &subject
	var timeend int32 = null
	this.Timeend = &timeend
	var timestart int32 = null
	this.Timestart = &timestart
	var totalscore int32 = null
	this.Totalscore = &totalscore
	var userfullname string = "null"
	this.Userfullname = &userfullname
	var userid int32 = null
	this.Userid = &userid
	var usermodified int32 = null
	this.Usermodified = &usermodified
	var usermodifiedfullname string = "null"
	this.Usermodifiedfullname = &usermodifiedfullname
	var usermodifiedpictureurl string = "null"
	this.Usermodifiedpictureurl = &usermodifiedpictureurl
	var userpictureurl string = "null"
	this.Userpictureurl = &userpictureurl
	return &this
}

// GetAttachment returns the Attachment field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetAttachment() string {
	if o == nil || IsNil(o.Attachment) {
		var ret string
		return ret
	}
	return *o.Attachment
}

// GetAttachmentOk returns a tuple with the Attachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetAttachmentOk() (*string, bool) {
	if o == nil || IsNil(o.Attachment) {
		return nil, false
	}
	return o.Attachment, true
}

// HasAttachment returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasAttachment() bool {
	if o != nil && !IsNil(o.Attachment) {
		return true
	}

	return false
}

// SetAttachment gets a reference to the given string and assigns it to the Attachment field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetAttachment(v string) {
	o.Attachment = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetAttachments() []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner {
	if o == nil || IsNil(o.Attachments) {
		var ret []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetAttachmentsOk() ([]CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner and assigns it to the Attachments field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetAttachments(v []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner) {
	o.Attachments = v
}

// GetCanfavourite returns the Canfavourite field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetCanfavourite() bool {
	if o == nil || IsNil(o.Canfavourite) {
		var ret bool
		return ret
	}
	return *o.Canfavourite
}

// GetCanfavouriteOk returns a tuple with the Canfavourite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetCanfavouriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Canfavourite) {
		return nil, false
	}
	return o.Canfavourite, true
}

// HasCanfavourite returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasCanfavourite() bool {
	if o != nil && !IsNil(o.Canfavourite) {
		return true
	}

	return false
}

// SetCanfavourite gets a reference to the given bool and assigns it to the Canfavourite field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetCanfavourite(v bool) {
	o.Canfavourite = &v
}

// GetCanlock returns the Canlock field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetCanlock() bool {
	if o == nil || IsNil(o.Canlock) {
		var ret bool
		return ret
	}
	return *o.Canlock
}

// GetCanlockOk returns a tuple with the Canlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetCanlockOk() (*bool, bool) {
	if o == nil || IsNil(o.Canlock) {
		return nil, false
	}
	return o.Canlock, true
}

// HasCanlock returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasCanlock() bool {
	if o != nil && !IsNil(o.Canlock) {
		return true
	}

	return false
}

// SetCanlock gets a reference to the given bool and assigns it to the Canlock field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetCanlock(v bool) {
	o.Canlock = &v
}

// GetCanreply returns the Canreply field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetCanreply() bool {
	if o == nil || IsNil(o.Canreply) {
		var ret bool
		return ret
	}
	return *o.Canreply
}

// GetCanreplyOk returns a tuple with the Canreply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetCanreplyOk() (*bool, bool) {
	if o == nil || IsNil(o.Canreply) {
		return nil, false
	}
	return o.Canreply, true
}

// HasCanreply returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasCanreply() bool {
	if o != nil && !IsNil(o.Canreply) {
		return true
	}

	return false
}

// SetCanreply gets a reference to the given bool and assigns it to the Canreply field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetCanreply(v bool) {
	o.Canreply = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetCreated() int32 {
	if o == nil || IsNil(o.Created) {
		var ret int32
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetCreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given int32 and assigns it to the Created field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetCreated(v int32) {
	o.Created = &v
}

// GetDiscussion returns the Discussion field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetDiscussion() int32 {
	if o == nil || IsNil(o.Discussion) {
		var ret int32
		return ret
	}
	return *o.Discussion
}

// GetDiscussionOk returns a tuple with the Discussion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetDiscussionOk() (*int32, bool) {
	if o == nil || IsNil(o.Discussion) {
		return nil, false
	}
	return o.Discussion, true
}

// HasDiscussion returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasDiscussion() bool {
	if o != nil && !IsNil(o.Discussion) {
		return true
	}

	return false
}

// SetDiscussion gets a reference to the given int32 and assigns it to the Discussion field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetDiscussion(v int32) {
	o.Discussion = &v
}

// GetGroupid returns the Groupid field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetGroupid() int32 {
	if o == nil || IsNil(o.Groupid) {
		var ret int32
		return ret
	}
	return *o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetGroupidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupid) {
		return nil, false
	}
	return o.Groupid, true
}

// HasGroupid returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasGroupid() bool {
	if o != nil && !IsNil(o.Groupid) {
		return true
	}

	return false
}

// SetGroupid gets a reference to the given int32 and assigns it to the Groupid field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetGroupid(v int32) {
	o.Groupid = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetId(v int32) {
	o.Id = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetLocked() bool {
	if o == nil || IsNil(o.Locked) {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.Locked) {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasLocked() bool {
	if o != nil && !IsNil(o.Locked) {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetLocked(v bool) {
	o.Locked = &v
}

// GetMailed returns the Mailed field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetMailed() int32 {
	if o == nil || IsNil(o.Mailed) {
		var ret int32
		return ret
	}
	return *o.Mailed
}

// GetMailedOk returns a tuple with the Mailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetMailedOk() (*int32, bool) {
	if o == nil || IsNil(o.Mailed) {
		return nil, false
	}
	return o.Mailed, true
}

// HasMailed returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasMailed() bool {
	if o != nil && !IsNil(o.Mailed) {
		return true
	}

	return false
}

// SetMailed gets a reference to the given int32 and assigns it to the Mailed field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetMailed(v int32) {
	o.Mailed = &v
}

// GetMailnow returns the Mailnow field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetMailnow() int32 {
	if o == nil || IsNil(o.Mailnow) {
		var ret int32
		return ret
	}
	return *o.Mailnow
}

// GetMailnowOk returns a tuple with the Mailnow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetMailnowOk() (*int32, bool) {
	if o == nil || IsNil(o.Mailnow) {
		return nil, false
	}
	return o.Mailnow, true
}

// HasMailnow returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasMailnow() bool {
	if o != nil && !IsNil(o.Mailnow) {
		return true
	}

	return false
}

// SetMailnow gets a reference to the given int32 and assigns it to the Mailnow field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetMailnow(v int32) {
	o.Mailnow = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetMessage(v string) {
	o.Message = &v
}

// GetMessageformat returns the Messageformat field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetMessageformat() int32 {
	if o == nil || IsNil(o.Messageformat) {
		var ret int32
		return ret
	}
	return *o.Messageformat
}

// GetMessageformatOk returns a tuple with the Messageformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetMessageformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Messageformat) {
		return nil, false
	}
	return o.Messageformat, true
}

// HasMessageformat returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasMessageformat() bool {
	if o != nil && !IsNil(o.Messageformat) {
		return true
	}

	return false
}

// SetMessageformat gets a reference to the given int32 and assigns it to the Messageformat field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetMessageformat(v int32) {
	o.Messageformat = &v
}

// GetMessageinlinefiles returns the Messageinlinefiles field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetMessageinlinefiles() []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner {
	if o == nil || IsNil(o.Messageinlinefiles) {
		var ret []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner
		return ret
	}
	return o.Messageinlinefiles
}

// GetMessageinlinefilesOk returns a tuple with the Messageinlinefiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetMessageinlinefilesOk() ([]CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner, bool) {
	if o == nil || IsNil(o.Messageinlinefiles) {
		return nil, false
	}
	return o.Messageinlinefiles, true
}

// HasMessageinlinefiles returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasMessageinlinefiles() bool {
	if o != nil && !IsNil(o.Messageinlinefiles) {
		return true
	}

	return false
}

// SetMessageinlinefiles gets a reference to the given []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner and assigns it to the Messageinlinefiles field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetMessageinlinefiles(v []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner) {
	o.Messageinlinefiles = v
}

// GetMessagetrust returns the Messagetrust field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetMessagetrust() int32 {
	if o == nil || IsNil(o.Messagetrust) {
		var ret int32
		return ret
	}
	return *o.Messagetrust
}

// GetMessagetrustOk returns a tuple with the Messagetrust field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetMessagetrustOk() (*int32, bool) {
	if o == nil || IsNil(o.Messagetrust) {
		return nil, false
	}
	return o.Messagetrust, true
}

// HasMessagetrust returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasMessagetrust() bool {
	if o != nil && !IsNil(o.Messagetrust) {
		return true
	}

	return false
}

// SetMessagetrust gets a reference to the given int32 and assigns it to the Messagetrust field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetMessagetrust(v int32) {
	o.Messagetrust = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetModified() int32 {
	if o == nil || IsNil(o.Modified) {
		var ret int32
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetModifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given int32 and assigns it to the Modified field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetModified(v int32) {
	o.Modified = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetName(v string) {
	o.Name = &v
}

// GetNumreplies returns the Numreplies field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetNumreplies() int32 {
	if o == nil || IsNil(o.Numreplies) {
		var ret int32
		return ret
	}
	return *o.Numreplies
}

// GetNumrepliesOk returns a tuple with the Numreplies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetNumrepliesOk() (*int32, bool) {
	if o == nil || IsNil(o.Numreplies) {
		return nil, false
	}
	return o.Numreplies, true
}

// HasNumreplies returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasNumreplies() bool {
	if o != nil && !IsNil(o.Numreplies) {
		return true
	}

	return false
}

// SetNumreplies gets a reference to the given int32 and assigns it to the Numreplies field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetNumreplies(v int32) {
	o.Numreplies = &v
}

// GetNumunread returns the Numunread field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetNumunread() int32 {
	if o == nil || IsNil(o.Numunread) {
		var ret int32
		return ret
	}
	return *o.Numunread
}

// GetNumunreadOk returns a tuple with the Numunread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetNumunreadOk() (*int32, bool) {
	if o == nil || IsNil(o.Numunread) {
		return nil, false
	}
	return o.Numunread, true
}

// HasNumunread returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasNumunread() bool {
	if o != nil && !IsNil(o.Numunread) {
		return true
	}

	return false
}

// SetNumunread gets a reference to the given int32 and assigns it to the Numunread field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetNumunread(v int32) {
	o.Numunread = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetParent() int32 {
	if o == nil || IsNil(o.Parent) {
		var ret int32
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetParentOk() (*int32, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given int32 and assigns it to the Parent field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetParent(v int32) {
	o.Parent = &v
}

// GetPinned returns the Pinned field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetPinned() bool {
	if o == nil || IsNil(o.Pinned) {
		var ret bool
		return ret
	}
	return *o.Pinned
}

// GetPinnedOk returns a tuple with the Pinned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetPinnedOk() (*bool, bool) {
	if o == nil || IsNil(o.Pinned) {
		return nil, false
	}
	return o.Pinned, true
}

// HasPinned returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasPinned() bool {
	if o != nil && !IsNil(o.Pinned) {
		return true
	}

	return false
}

// SetPinned gets a reference to the given bool and assigns it to the Pinned field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetPinned(v bool) {
	o.Pinned = &v
}

// GetStarred returns the Starred field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetStarred() bool {
	if o == nil || IsNil(o.Starred) {
		var ret bool
		return ret
	}
	return *o.Starred
}

// GetStarredOk returns a tuple with the Starred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetStarredOk() (*bool, bool) {
	if o == nil || IsNil(o.Starred) {
		return nil, false
	}
	return o.Starred, true
}

// HasStarred returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasStarred() bool {
	if o != nil && !IsNil(o.Starred) {
		return true
	}

	return false
}

// SetStarred gets a reference to the given bool and assigns it to the Starred field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetStarred(v bool) {
	o.Starred = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetSubject(v string) {
	o.Subject = &v
}

// GetTimeend returns the Timeend field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetTimeend() int32 {
	if o == nil || IsNil(o.Timeend) {
		var ret int32
		return ret
	}
	return *o.Timeend
}

// GetTimeendOk returns a tuple with the Timeend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetTimeendOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeend) {
		return nil, false
	}
	return o.Timeend, true
}

// HasTimeend returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasTimeend() bool {
	if o != nil && !IsNil(o.Timeend) {
		return true
	}

	return false
}

// SetTimeend gets a reference to the given int32 and assigns it to the Timeend field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetTimeend(v int32) {
	o.Timeend = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetTimestart returns the Timestart field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetTimestart() int32 {
	if o == nil || IsNil(o.Timestart) {
		var ret int32
		return ret
	}
	return *o.Timestart
}

// GetTimestartOk returns a tuple with the Timestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetTimestartOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestart) {
		return nil, false
	}
	return o.Timestart, true
}

// HasTimestart returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasTimestart() bool {
	if o != nil && !IsNil(o.Timestart) {
		return true
	}

	return false
}

// SetTimestart gets a reference to the given int32 and assigns it to the Timestart field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetTimestart(v int32) {
	o.Timestart = &v
}

// GetTotalscore returns the Totalscore field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetTotalscore() int32 {
	if o == nil || IsNil(o.Totalscore) {
		var ret int32
		return ret
	}
	return *o.Totalscore
}

// GetTotalscoreOk returns a tuple with the Totalscore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetTotalscoreOk() (*int32, bool) {
	if o == nil || IsNil(o.Totalscore) {
		return nil, false
	}
	return o.Totalscore, true
}

// HasTotalscore returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasTotalscore() bool {
	if o != nil && !IsNil(o.Totalscore) {
		return true
	}

	return false
}

// SetTotalscore gets a reference to the given int32 and assigns it to the Totalscore field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetTotalscore(v int32) {
	o.Totalscore = &v
}

// GetUserfullname returns the Userfullname field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetUserfullname() string {
	if o == nil || IsNil(o.Userfullname) {
		var ret string
		return ret
	}
	return *o.Userfullname
}

// GetUserfullnameOk returns a tuple with the Userfullname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetUserfullnameOk() (*string, bool) {
	if o == nil || IsNil(o.Userfullname) {
		return nil, false
	}
	return o.Userfullname, true
}

// HasUserfullname returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasUserfullname() bool {
	if o != nil && !IsNil(o.Userfullname) {
		return true
	}

	return false
}

// SetUserfullname gets a reference to the given string and assigns it to the Userfullname field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetUserfullname(v string) {
	o.Userfullname = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetUserid(v int32) {
	o.Userid = &v
}

// GetUsermodified returns the Usermodified field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetUsermodified() int32 {
	if o == nil || IsNil(o.Usermodified) {
		var ret int32
		return ret
	}
	return *o.Usermodified
}

// GetUsermodifiedOk returns a tuple with the Usermodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetUsermodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Usermodified) {
		return nil, false
	}
	return o.Usermodified, true
}

// HasUsermodified returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasUsermodified() bool {
	if o != nil && !IsNil(o.Usermodified) {
		return true
	}

	return false
}

// SetUsermodified gets a reference to the given int32 and assigns it to the Usermodified field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetUsermodified(v int32) {
	o.Usermodified = &v
}

// GetUsermodifiedfullname returns the Usermodifiedfullname field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetUsermodifiedfullname() string {
	if o == nil || IsNil(o.Usermodifiedfullname) {
		var ret string
		return ret
	}
	return *o.Usermodifiedfullname
}

// GetUsermodifiedfullnameOk returns a tuple with the Usermodifiedfullname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetUsermodifiedfullnameOk() (*string, bool) {
	if o == nil || IsNil(o.Usermodifiedfullname) {
		return nil, false
	}
	return o.Usermodifiedfullname, true
}

// HasUsermodifiedfullname returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasUsermodifiedfullname() bool {
	if o != nil && !IsNil(o.Usermodifiedfullname) {
		return true
	}

	return false
}

// SetUsermodifiedfullname gets a reference to the given string and assigns it to the Usermodifiedfullname field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetUsermodifiedfullname(v string) {
	o.Usermodifiedfullname = &v
}

// GetUsermodifiedpictureurl returns the Usermodifiedpictureurl field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetUsermodifiedpictureurl() string {
	if o == nil || IsNil(o.Usermodifiedpictureurl) {
		var ret string
		return ret
	}
	return *o.Usermodifiedpictureurl
}

// GetUsermodifiedpictureurlOk returns a tuple with the Usermodifiedpictureurl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetUsermodifiedpictureurlOk() (*string, bool) {
	if o == nil || IsNil(o.Usermodifiedpictureurl) {
		return nil, false
	}
	return o.Usermodifiedpictureurl, true
}

// HasUsermodifiedpictureurl returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasUsermodifiedpictureurl() bool {
	if o != nil && !IsNil(o.Usermodifiedpictureurl) {
		return true
	}

	return false
}

// SetUsermodifiedpictureurl gets a reference to the given string and assigns it to the Usermodifiedpictureurl field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetUsermodifiedpictureurl(v string) {
	o.Usermodifiedpictureurl = &v
}

// GetUserpictureurl returns the Userpictureurl field value if set, zero value otherwise.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetUserpictureurl() string {
	if o == nil || IsNil(o.Userpictureurl) {
		var ret string
		return ret
	}
	return *o.Userpictureurl
}

// GetUserpictureurlOk returns a tuple with the Userpictureurl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) GetUserpictureurlOk() (*string, bool) {
	if o == nil || IsNil(o.Userpictureurl) {
		return nil, false
	}
	return o.Userpictureurl, true
}

// HasUserpictureurl returns a boolean if a field has been set.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) HasUserpictureurl() bool {
	if o != nil && !IsNil(o.Userpictureurl) {
		return true
	}

	return false
}

// SetUserpictureurl gets a reference to the given string and assigns it to the Userpictureurl field.
func (o *ModForumGetForumDiscussions200ResponseDiscussionsInner) SetUserpictureurl(v string) {
	o.Userpictureurl = &v
}

func (o ModForumGetForumDiscussions200ResponseDiscussionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumGetForumDiscussions200ResponseDiscussionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachment) {
		toSerialize["attachment"] = o.Attachment
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Canfavourite) {
		toSerialize["canfavourite"] = o.Canfavourite
	}
	if !IsNil(o.Canlock) {
		toSerialize["canlock"] = o.Canlock
	}
	if !IsNil(o.Canreply) {
		toSerialize["canreply"] = o.Canreply
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Discussion) {
		toSerialize["discussion"] = o.Discussion
	}
	if !IsNil(o.Groupid) {
		toSerialize["groupid"] = o.Groupid
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Locked) {
		toSerialize["locked"] = o.Locked
	}
	if !IsNil(o.Mailed) {
		toSerialize["mailed"] = o.Mailed
	}
	if !IsNil(o.Mailnow) {
		toSerialize["mailnow"] = o.Mailnow
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Messageformat) {
		toSerialize["messageformat"] = o.Messageformat
	}
	if !IsNil(o.Messageinlinefiles) {
		toSerialize["messageinlinefiles"] = o.Messageinlinefiles
	}
	if !IsNil(o.Messagetrust) {
		toSerialize["messagetrust"] = o.Messagetrust
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Numreplies) {
		toSerialize["numreplies"] = o.Numreplies
	}
	if !IsNil(o.Numunread) {
		toSerialize["numunread"] = o.Numunread
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Pinned) {
		toSerialize["pinned"] = o.Pinned
	}
	if !IsNil(o.Starred) {
		toSerialize["starred"] = o.Starred
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Timeend) {
		toSerialize["timeend"] = o.Timeend
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Timestart) {
		toSerialize["timestart"] = o.Timestart
	}
	if !IsNil(o.Totalscore) {
		toSerialize["totalscore"] = o.Totalscore
	}
	if !IsNil(o.Userfullname) {
		toSerialize["userfullname"] = o.Userfullname
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	if !IsNil(o.Usermodified) {
		toSerialize["usermodified"] = o.Usermodified
	}
	if !IsNil(o.Usermodifiedfullname) {
		toSerialize["usermodifiedfullname"] = o.Usermodifiedfullname
	}
	if !IsNil(o.Usermodifiedpictureurl) {
		toSerialize["usermodifiedpictureurl"] = o.Usermodifiedpictureurl
	}
	if !IsNil(o.Userpictureurl) {
		toSerialize["userpictureurl"] = o.Userpictureurl
	}
	return toSerialize, nil
}

type NullableModForumGetForumDiscussions200ResponseDiscussionsInner struct {
	value *ModForumGetForumDiscussions200ResponseDiscussionsInner
	isSet bool
}

func (v NullableModForumGetForumDiscussions200ResponseDiscussionsInner) Get() *ModForumGetForumDiscussions200ResponseDiscussionsInner {
	return v.value
}

func (v *NullableModForumGetForumDiscussions200ResponseDiscussionsInner) Set(val *ModForumGetForumDiscussions200ResponseDiscussionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumGetForumDiscussions200ResponseDiscussionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumGetForumDiscussions200ResponseDiscussionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumGetForumDiscussions200ResponseDiscussionsInner(val *ModForumGetForumDiscussions200ResponseDiscussionsInner) *NullableModForumGetForumDiscussions200ResponseDiscussionsInner {
	return &NullableModForumGetForumDiscussions200ResponseDiscussionsInner{value: val, isSet: true}
}

func (v NullableModForumGetForumDiscussions200ResponseDiscussionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumGetForumDiscussions200ResponseDiscussionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


