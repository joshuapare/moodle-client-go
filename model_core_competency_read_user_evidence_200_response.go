/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCompetencyReadUserEvidence200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCompetencyReadUserEvidence200Response{}

// CoreCompetencyReadUserEvidence200Response struct for CoreCompetencyReadUserEvidence200Response
type CoreCompetencyReadUserEvidence200Response struct {
	// canmanage
	Canmanage bool `json:"canmanage"`
	Competencies []CoreCompetencyReadUserEvidence200ResponseCompetenciesInner `json:"competencies"`
	// competencycount
	Competencycount int32 `json:"competencycount"`
	// description
	Description string `json:"description"`
	// description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Descriptionformat *int32 `json:"descriptionformat,omitempty"`
	// filecount
	Filecount int32 `json:"filecount"`
	Files []CoreCompetencyReadUserEvidence200ResponseFilesInner `json:"files"`
	// hasurlorfiles
	Hasurlorfiles bool `json:"hasurlorfiles"`
	// id
	Id int32 `json:"id"`
	// name
	Name string `json:"name"`
	// timecreated
	Timecreated int32 `json:"timecreated"`
	// timemodified
	Timemodified int32 `json:"timemodified"`
	// url
	Url string `json:"url"`
	// urlshort
	Urlshort string `json:"urlshort"`
	// userid
	Userid int32 `json:"userid"`
	// usermodified
	Usermodified int32 `json:"usermodified"`
}

type _CoreCompetencyReadUserEvidence200Response CoreCompetencyReadUserEvidence200Response

// NewCoreCompetencyReadUserEvidence200Response instantiates a new CoreCompetencyReadUserEvidence200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCompetencyReadUserEvidence200Response(canmanage bool, competencies []CoreCompetencyReadUserEvidence200ResponseCompetenciesInner, competencycount int32, description string, filecount int32, files []CoreCompetencyReadUserEvidence200ResponseFilesInner, hasurlorfiles bool, id int32, name string, timecreated int32, timemodified int32, url string, urlshort string, userid int32, usermodified int32) *CoreCompetencyReadUserEvidence200Response {
	this := CoreCompetencyReadUserEvidence200Response{}
	this.Canmanage = canmanage
	this.Competencies = competencies
	this.Competencycount = competencycount
	this.Description = description
	var descriptionformat int32 = 1
	this.Descriptionformat = &descriptionformat
	this.Filecount = filecount
	this.Files = files
	this.Hasurlorfiles = hasurlorfiles
	this.Id = id
	this.Name = name
	this.Timecreated = timecreated
	this.Timemodified = timemodified
	this.Url = url
	this.Urlshort = urlshort
	this.Userid = userid
	this.Usermodified = usermodified
	return &this
}

// NewCoreCompetencyReadUserEvidence200ResponseWithDefaults instantiates a new CoreCompetencyReadUserEvidence200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCompetencyReadUserEvidence200ResponseWithDefaults() *CoreCompetencyReadUserEvidence200Response {
	this := CoreCompetencyReadUserEvidence200Response{}
	var competencycount int32 = null
	this.Competencycount = competencycount
	var description string = ""
	this.Description = description
	var descriptionformat int32 = 1
	this.Descriptionformat = &descriptionformat
	var filecount int32 = null
	this.Filecount = filecount
	var hasurlorfiles bool = null
	this.Hasurlorfiles = hasurlorfiles
	var id int32 = 0
	this.Id = id
	var timecreated int32 = 0
	this.Timecreated = timecreated
	var timemodified int32 = 0
	this.Timemodified = timemodified
	var url string = ""
	this.Url = url
	var urlshort string = "null"
	this.Urlshort = urlshort
	var usermodified int32 = 0
	this.Usermodified = usermodified
	return &this
}

// GetCanmanage returns the Canmanage field value
func (o *CoreCompetencyReadUserEvidence200Response) GetCanmanage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canmanage
}

// GetCanmanageOk returns a tuple with the Canmanage field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetCanmanageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canmanage, true
}

// SetCanmanage sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetCanmanage(v bool) {
	o.Canmanage = v
}

// GetCompetencies returns the Competencies field value
func (o *CoreCompetencyReadUserEvidence200Response) GetCompetencies() []CoreCompetencyReadUserEvidence200ResponseCompetenciesInner {
	if o == nil {
		var ret []CoreCompetencyReadUserEvidence200ResponseCompetenciesInner
		return ret
	}

	return o.Competencies
}

// GetCompetenciesOk returns a tuple with the Competencies field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetCompetenciesOk() ([]CoreCompetencyReadUserEvidence200ResponseCompetenciesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Competencies, true
}

// SetCompetencies sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetCompetencies(v []CoreCompetencyReadUserEvidence200ResponseCompetenciesInner) {
	o.Competencies = v
}

// GetCompetencycount returns the Competencycount field value
func (o *CoreCompetencyReadUserEvidence200Response) GetCompetencycount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Competencycount
}

// GetCompetencycountOk returns a tuple with the Competencycount field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetCompetencycountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Competencycount, true
}

// SetCompetencycount sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetCompetencycount(v int32) {
	o.Competencycount = v
}

// GetDescription returns the Description field value
func (o *CoreCompetencyReadUserEvidence200Response) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetDescription(v string) {
	o.Description = v
}

// GetDescriptionformat returns the Descriptionformat field value if set, zero value otherwise.
func (o *CoreCompetencyReadUserEvidence200Response) GetDescriptionformat() int32 {
	if o == nil || IsNil(o.Descriptionformat) {
		var ret int32
		return ret
	}
	return *o.Descriptionformat
}

// GetDescriptionformatOk returns a tuple with the Descriptionformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetDescriptionformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Descriptionformat) {
		return nil, false
	}
	return o.Descriptionformat, true
}

// HasDescriptionformat returns a boolean if a field has been set.
func (o *CoreCompetencyReadUserEvidence200Response) HasDescriptionformat() bool {
	if o != nil && !IsNil(o.Descriptionformat) {
		return true
	}

	return false
}

// SetDescriptionformat gets a reference to the given int32 and assigns it to the Descriptionformat field.
func (o *CoreCompetencyReadUserEvidence200Response) SetDescriptionformat(v int32) {
	o.Descriptionformat = &v
}

// GetFilecount returns the Filecount field value
func (o *CoreCompetencyReadUserEvidence200Response) GetFilecount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Filecount
}

// GetFilecountOk returns a tuple with the Filecount field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetFilecountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filecount, true
}

// SetFilecount sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetFilecount(v int32) {
	o.Filecount = v
}

// GetFiles returns the Files field value
func (o *CoreCompetencyReadUserEvidence200Response) GetFiles() []CoreCompetencyReadUserEvidence200ResponseFilesInner {
	if o == nil {
		var ret []CoreCompetencyReadUserEvidence200ResponseFilesInner
		return ret
	}

	return o.Files
}

// GetFilesOk returns a tuple with the Files field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetFilesOk() ([]CoreCompetencyReadUserEvidence200ResponseFilesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Files, true
}

// SetFiles sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetFiles(v []CoreCompetencyReadUserEvidence200ResponseFilesInner) {
	o.Files = v
}

// GetHasurlorfiles returns the Hasurlorfiles field value
func (o *CoreCompetencyReadUserEvidence200Response) GetHasurlorfiles() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hasurlorfiles
}

// GetHasurlorfilesOk returns a tuple with the Hasurlorfiles field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetHasurlorfilesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hasurlorfiles, true
}

// SetHasurlorfiles sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetHasurlorfiles(v bool) {
	o.Hasurlorfiles = v
}

// GetId returns the Id field value
func (o *CoreCompetencyReadUserEvidence200Response) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CoreCompetencyReadUserEvidence200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetName(v string) {
	o.Name = v
}

// GetTimecreated returns the Timecreated field value
func (o *CoreCompetencyReadUserEvidence200Response) GetTimecreated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetTimecreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timecreated, true
}

// SetTimecreated sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetTimecreated(v int32) {
	o.Timecreated = v
}

// GetTimemodified returns the Timemodified field value
func (o *CoreCompetencyReadUserEvidence200Response) GetTimemodified() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetTimemodifiedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timemodified, true
}

// SetTimemodified sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetTimemodified(v int32) {
	o.Timemodified = v
}

// GetUrl returns the Url field value
func (o *CoreCompetencyReadUserEvidence200Response) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetUrl(v string) {
	o.Url = v
}

// GetUrlshort returns the Urlshort field value
func (o *CoreCompetencyReadUserEvidence200Response) GetUrlshort() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Urlshort
}

// GetUrlshortOk returns a tuple with the Urlshort field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetUrlshortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Urlshort, true
}

// SetUrlshort sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetUrlshort(v string) {
	o.Urlshort = v
}

// GetUserid returns the Userid field value
func (o *CoreCompetencyReadUserEvidence200Response) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetUserid(v int32) {
	o.Userid = v
}

// GetUsermodified returns the Usermodified field value
func (o *CoreCompetencyReadUserEvidence200Response) GetUsermodified() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Usermodified
}

// GetUsermodifiedOk returns a tuple with the Usermodified field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyReadUserEvidence200Response) GetUsermodifiedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Usermodified, true
}

// SetUsermodified sets field value
func (o *CoreCompetencyReadUserEvidence200Response) SetUsermodified(v int32) {
	o.Usermodified = v
}

func (o CoreCompetencyReadUserEvidence200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCompetencyReadUserEvidence200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["canmanage"] = o.Canmanage
	toSerialize["competencies"] = o.Competencies
	toSerialize["competencycount"] = o.Competencycount
	toSerialize["description"] = o.Description
	if !IsNil(o.Descriptionformat) {
		toSerialize["descriptionformat"] = o.Descriptionformat
	}
	toSerialize["filecount"] = o.Filecount
	toSerialize["files"] = o.Files
	toSerialize["hasurlorfiles"] = o.Hasurlorfiles
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["timecreated"] = o.Timecreated
	toSerialize["timemodified"] = o.Timemodified
	toSerialize["url"] = o.Url
	toSerialize["urlshort"] = o.Urlshort
	toSerialize["userid"] = o.Userid
	toSerialize["usermodified"] = o.Usermodified
	return toSerialize, nil
}

func (o *CoreCompetencyReadUserEvidence200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"canmanage",
		"competencies",
		"competencycount",
		"description",
		"filecount",
		"files",
		"hasurlorfiles",
		"id",
		"name",
		"timecreated",
		"timemodified",
		"url",
		"urlshort",
		"userid",
		"usermodified",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCompetencyReadUserEvidence200Response := _CoreCompetencyReadUserEvidence200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCompetencyReadUserEvidence200Response)

	if err != nil {
		return err
	}

	*o = CoreCompetencyReadUserEvidence200Response(varCoreCompetencyReadUserEvidence200Response)

	return err
}

type NullableCoreCompetencyReadUserEvidence200Response struct {
	value *CoreCompetencyReadUserEvidence200Response
	isSet bool
}

func (v NullableCoreCompetencyReadUserEvidence200Response) Get() *CoreCompetencyReadUserEvidence200Response {
	return v.value
}

func (v *NullableCoreCompetencyReadUserEvidence200Response) Set(val *CoreCompetencyReadUserEvidence200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCompetencyReadUserEvidence200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCompetencyReadUserEvidence200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCompetencyReadUserEvidence200Response(val *CoreCompetencyReadUserEvidence200Response) *NullableCoreCompetencyReadUserEvidence200Response {
	return &NullableCoreCompetencyReadUserEvidence200Response{value: val, isSet: true}
}

func (v NullableCoreCompetencyReadUserEvidence200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCompetencyReadUserEvidence200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


