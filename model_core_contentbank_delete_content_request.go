/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreContentbankDeleteContentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreContentbankDeleteContentRequest{}

// CoreContentbankDeleteContentRequest struct for CoreContentbankDeleteContentRequest
type CoreContentbankDeleteContentRequest struct {
	Contentids []map[string]interface{} `json:"contentids"`
}

type _CoreContentbankDeleteContentRequest CoreContentbankDeleteContentRequest

// NewCoreContentbankDeleteContentRequest instantiates a new CoreContentbankDeleteContentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreContentbankDeleteContentRequest(contentids []map[string]interface{}) *CoreContentbankDeleteContentRequest {
	this := CoreContentbankDeleteContentRequest{}
	this.Contentids = contentids
	return &this
}

// NewCoreContentbankDeleteContentRequestWithDefaults instantiates a new CoreContentbankDeleteContentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreContentbankDeleteContentRequestWithDefaults() *CoreContentbankDeleteContentRequest {
	this := CoreContentbankDeleteContentRequest{}
	return &this
}

// GetContentids returns the Contentids field value
func (o *CoreContentbankDeleteContentRequest) GetContentids() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Contentids
}

// GetContentidsOk returns a tuple with the Contentids field value
// and a boolean to check if the value has been set.
func (o *CoreContentbankDeleteContentRequest) GetContentidsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Contentids, true
}

// SetContentids sets field value
func (o *CoreContentbankDeleteContentRequest) SetContentids(v []map[string]interface{}) {
	o.Contentids = v
}

func (o CoreContentbankDeleteContentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreContentbankDeleteContentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contentids"] = o.Contentids
	return toSerialize, nil
}

func (o *CoreContentbankDeleteContentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contentids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreContentbankDeleteContentRequest := _CoreContentbankDeleteContentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreContentbankDeleteContentRequest)

	if err != nil {
		return err
	}

	*o = CoreContentbankDeleteContentRequest(varCoreContentbankDeleteContentRequest)

	return err
}

type NullableCoreContentbankDeleteContentRequest struct {
	value *CoreContentbankDeleteContentRequest
	isSet bool
}

func (v NullableCoreContentbankDeleteContentRequest) Get() *CoreContentbankDeleteContentRequest {
	return v.value
}

func (v *NullableCoreContentbankDeleteContentRequest) Set(val *CoreContentbankDeleteContentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreContentbankDeleteContentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreContentbankDeleteContentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreContentbankDeleteContentRequest(val *CoreContentbankDeleteContentRequest) *NullableCoreContentbankDeleteContentRequest {
	return &NullableCoreContentbankDeleteContentRequest{value: val, isSet: true}
}

func (v NullableCoreContentbankDeleteContentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreContentbankDeleteContentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


