/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner{}

// ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner assignment information object
type ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner struct {
	// Description of activity
	Activity *string `json:"activity,omitempty"`
	Activityattachments []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner `json:"activityattachments,omitempty"`
	// activity format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Activityformat *int32 `json:"activityformat,omitempty"`
	// allow submissions from date
	Allowsubmissionsfromdate *int32 `json:"allowsubmissionsfromdate,omitempty"`
	// method used to control opening new attempts
	Attemptreopenmethod *string `json:"attemptreopenmethod,omitempty"`
	// if enabled, hide identities until reveal identities actioned
	Blindmarking *int32 `json:"blindmarking,omitempty"`
	// course module id
	Cmid *int32 `json:"cmid,omitempty"`
	// if enabled, set activity as complete following submission
	Completionsubmit *int32 `json:"completionsubmit,omitempty"`
	Configs []ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner `json:"configs,omitempty"`
	// course id
	Course *int32 `json:"course,omitempty"`
	// date after which submission is not accepted without an extension
	Cutoffdate *int32 `json:"cutoffdate,omitempty"`
	// assignment due date
	Duedate *int32 `json:"duedate,omitempty"`
	// grade type
	Grade *int32 `json:"grade,omitempty"`
	// the expected date for marking the submissions
	Gradingduedate *int32 `json:"gradingduedate,omitempty"`
	// If enabled, hide grader to student
	Hidegrader *int32 `json:"hidegrader,omitempty"`
	// assignment id
	Id *int32 `json:"id,omitempty"`
	// assignment intro, not allways returned because it deppends on the activity configuration
	Intro *string `json:"intro,omitempty"`
	Introattachments []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner `json:"introattachments,omitempty"`
	Introfiles []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner `json:"introfiles,omitempty"`
	// intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Introformat *int32 `json:"introformat,omitempty"`
	// enable marking allocation
	Markingallocation *int32 `json:"markingallocation,omitempty"`
	// enable marking workflow
	Markingworkflow *int32 `json:"markingworkflow,omitempty"`
	// maximum number of attempts allowed
	Maxattempts *int32 `json:"maxattempts,omitempty"`
	// assignment name
	Name *string `json:"name,omitempty"`
	// no submissions
	Nosubmissions *int32 `json:"nosubmissions,omitempty"`
	// Prevent submission not in group
	Preventsubmissionnotingroup *int32 `json:"preventsubmissionnotingroup,omitempty"`
	// if enabled, all team members must submit
	Requireallteammemberssubmit *int32 `json:"requireallteammemberssubmit,omitempty"`
	// student must accept submission statement
	Requiresubmissionstatement *int32 `json:"requiresubmissionstatement,omitempty"`
	// show identities for a blind marking assignment
	Revealidentities *int32 `json:"revealidentities,omitempty"`
	// send notifications
	Sendlatenotifications *int32 `json:"sendlatenotifications,omitempty"`
	// send notifications
	Sendnotifications *int32 `json:"sendnotifications,omitempty"`
	// send student notifications (default)
	Sendstudentnotifications *int32 `json:"sendstudentnotifications,omitempty"`
	// Flag to only show files during submission
	Submissionattachments *int32 `json:"submissionattachments,omitempty"`
	// submissions drafts
	Submissiondrafts *int32 `json:"submissiondrafts,omitempty"`
	// Submission statement formatted.
	Submissionstatement *string `json:"submissionstatement,omitempty"`
	// submissionstatement format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Submissionstatementformat *int32 `json:"submissionstatementformat,omitempty"`
	// if enabled, students submit as a team
	Teamsubmission *int32 `json:"teamsubmission,omitempty"`
	// the grouping id for the team submission groups
	Teamsubmissiongroupingid *int32 `json:"teamsubmissiongroupingid,omitempty"`
	// Time limit to complete assigment
	Timelimit *int32 `json:"timelimit,omitempty"`
	// last time assignment was modified
	Timemodified *int32 `json:"timemodified,omitempty"`
}

// NewModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner instantiates a new ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner() *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner {
	this := ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner{}
	var activity string = "null"
	this.Activity = &activity
	var activityformat int32 = null
	this.Activityformat = &activityformat
	var allowsubmissionsfromdate int32 = null
	this.Allowsubmissionsfromdate = &allowsubmissionsfromdate
	var attemptreopenmethod string = "null"
	this.Attemptreopenmethod = &attemptreopenmethod
	var blindmarking int32 = null
	this.Blindmarking = &blindmarking
	var completionsubmit int32 = null
	this.Completionsubmit = &completionsubmit
	var cutoffdate int32 = null
	this.Cutoffdate = &cutoffdate
	var duedate int32 = null
	this.Duedate = &duedate
	var grade int32 = null
	this.Grade = &grade
	var gradingduedate int32 = null
	this.Gradingduedate = &gradingduedate
	var hidegrader int32 = null
	this.Hidegrader = &hidegrader
	var intro string = "null"
	this.Intro = &intro
	var introformat int32 = null
	this.Introformat = &introformat
	var markingallocation int32 = null
	this.Markingallocation = &markingallocation
	var markingworkflow int32 = null
	this.Markingworkflow = &markingworkflow
	var maxattempts int32 = null
	this.Maxattempts = &maxattempts
	var name string = "null"
	this.Name = &name
	var nosubmissions int32 = null
	this.Nosubmissions = &nosubmissions
	var preventsubmissionnotingroup int32 = null
	this.Preventsubmissionnotingroup = &preventsubmissionnotingroup
	var requireallteammemberssubmit int32 = null
	this.Requireallteammemberssubmit = &requireallteammemberssubmit
	var requiresubmissionstatement int32 = null
	this.Requiresubmissionstatement = &requiresubmissionstatement
	var revealidentities int32 = null
	this.Revealidentities = &revealidentities
	var sendlatenotifications int32 = null
	this.Sendlatenotifications = &sendlatenotifications
	var sendstudentnotifications int32 = null
	this.Sendstudentnotifications = &sendstudentnotifications
	var submissionattachments int32 = null
	this.Submissionattachments = &submissionattachments
	var submissiondrafts int32 = null
	this.Submissiondrafts = &submissiondrafts
	var submissionstatement string = "null"
	this.Submissionstatement = &submissionstatement
	var submissionstatementformat int32 = null
	this.Submissionstatementformat = &submissionstatementformat
	var teamsubmission int32 = null
	this.Teamsubmission = &teamsubmission
	var teamsubmissiongroupingid int32 = null
	this.Teamsubmissiongroupingid = &teamsubmissiongroupingid
	var timelimit int32 = null
	this.Timelimit = &timelimit
	var timemodified int32 = null
	this.Timemodified = &timemodified
	return &this
}

// NewModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerWithDefaults instantiates a new ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerWithDefaults() *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner {
	this := ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner{}
	var activity string = "null"
	this.Activity = &activity
	var activityformat int32 = null
	this.Activityformat = &activityformat
	var allowsubmissionsfromdate int32 = null
	this.Allowsubmissionsfromdate = &allowsubmissionsfromdate
	var attemptreopenmethod string = "null"
	this.Attemptreopenmethod = &attemptreopenmethod
	var blindmarking int32 = null
	this.Blindmarking = &blindmarking
	var completionsubmit int32 = null
	this.Completionsubmit = &completionsubmit
	var cutoffdate int32 = null
	this.Cutoffdate = &cutoffdate
	var duedate int32 = null
	this.Duedate = &duedate
	var grade int32 = null
	this.Grade = &grade
	var gradingduedate int32 = null
	this.Gradingduedate = &gradingduedate
	var hidegrader int32 = null
	this.Hidegrader = &hidegrader
	var intro string = "null"
	this.Intro = &intro
	var introformat int32 = null
	this.Introformat = &introformat
	var markingallocation int32 = null
	this.Markingallocation = &markingallocation
	var markingworkflow int32 = null
	this.Markingworkflow = &markingworkflow
	var maxattempts int32 = null
	this.Maxattempts = &maxattempts
	var name string = "null"
	this.Name = &name
	var nosubmissions int32 = null
	this.Nosubmissions = &nosubmissions
	var preventsubmissionnotingroup int32 = null
	this.Preventsubmissionnotingroup = &preventsubmissionnotingroup
	var requireallteammemberssubmit int32 = null
	this.Requireallteammemberssubmit = &requireallteammemberssubmit
	var requiresubmissionstatement int32 = null
	this.Requiresubmissionstatement = &requiresubmissionstatement
	var revealidentities int32 = null
	this.Revealidentities = &revealidentities
	var sendlatenotifications int32 = null
	this.Sendlatenotifications = &sendlatenotifications
	var sendstudentnotifications int32 = null
	this.Sendstudentnotifications = &sendstudentnotifications
	var submissionattachments int32 = null
	this.Submissionattachments = &submissionattachments
	var submissiondrafts int32 = null
	this.Submissiondrafts = &submissiondrafts
	var submissionstatement string = "null"
	this.Submissionstatement = &submissionstatement
	var submissionstatementformat int32 = null
	this.Submissionstatementformat = &submissionstatementformat
	var teamsubmission int32 = null
	this.Teamsubmission = &teamsubmission
	var teamsubmissiongroupingid int32 = null
	this.Teamsubmissiongroupingid = &teamsubmissiongroupingid
	var timelimit int32 = null
	this.Timelimit = &timelimit
	var timemodified int32 = null
	this.Timemodified = &timemodified
	return &this
}

// GetActivity returns the Activity field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetActivity() string {
	if o == nil || IsNil(o.Activity) {
		var ret string
		return ret
	}
	return *o.Activity
}

// GetActivityOk returns a tuple with the Activity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetActivityOk() (*string, bool) {
	if o == nil || IsNil(o.Activity) {
		return nil, false
	}
	return o.Activity, true
}

// HasActivity returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasActivity() bool {
	if o != nil && !IsNil(o.Activity) {
		return true
	}

	return false
}

// SetActivity gets a reference to the given string and assigns it to the Activity field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetActivity(v string) {
	o.Activity = &v
}

// GetActivityattachments returns the Activityattachments field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetActivityattachments() []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner {
	if o == nil || IsNil(o.Activityattachments) {
		var ret []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner
		return ret
	}
	return o.Activityattachments
}

// GetActivityattachmentsOk returns a tuple with the Activityattachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetActivityattachmentsOk() ([]CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner, bool) {
	if o == nil || IsNil(o.Activityattachments) {
		return nil, false
	}
	return o.Activityattachments, true
}

// HasActivityattachments returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasActivityattachments() bool {
	if o != nil && !IsNil(o.Activityattachments) {
		return true
	}

	return false
}

// SetActivityattachments gets a reference to the given []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner and assigns it to the Activityattachments field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetActivityattachments(v []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner) {
	o.Activityattachments = v
}

// GetActivityformat returns the Activityformat field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetActivityformat() int32 {
	if o == nil || IsNil(o.Activityformat) {
		var ret int32
		return ret
	}
	return *o.Activityformat
}

// GetActivityformatOk returns a tuple with the Activityformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetActivityformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Activityformat) {
		return nil, false
	}
	return o.Activityformat, true
}

// HasActivityformat returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasActivityformat() bool {
	if o != nil && !IsNil(o.Activityformat) {
		return true
	}

	return false
}

// SetActivityformat gets a reference to the given int32 and assigns it to the Activityformat field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetActivityformat(v int32) {
	o.Activityformat = &v
}

// GetAllowsubmissionsfromdate returns the Allowsubmissionsfromdate field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetAllowsubmissionsfromdate() int32 {
	if o == nil || IsNil(o.Allowsubmissionsfromdate) {
		var ret int32
		return ret
	}
	return *o.Allowsubmissionsfromdate
}

// GetAllowsubmissionsfromdateOk returns a tuple with the Allowsubmissionsfromdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetAllowsubmissionsfromdateOk() (*int32, bool) {
	if o == nil || IsNil(o.Allowsubmissionsfromdate) {
		return nil, false
	}
	return o.Allowsubmissionsfromdate, true
}

// HasAllowsubmissionsfromdate returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasAllowsubmissionsfromdate() bool {
	if o != nil && !IsNil(o.Allowsubmissionsfromdate) {
		return true
	}

	return false
}

// SetAllowsubmissionsfromdate gets a reference to the given int32 and assigns it to the Allowsubmissionsfromdate field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetAllowsubmissionsfromdate(v int32) {
	o.Allowsubmissionsfromdate = &v
}

// GetAttemptreopenmethod returns the Attemptreopenmethod field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetAttemptreopenmethod() string {
	if o == nil || IsNil(o.Attemptreopenmethod) {
		var ret string
		return ret
	}
	return *o.Attemptreopenmethod
}

// GetAttemptreopenmethodOk returns a tuple with the Attemptreopenmethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetAttemptreopenmethodOk() (*string, bool) {
	if o == nil || IsNil(o.Attemptreopenmethod) {
		return nil, false
	}
	return o.Attemptreopenmethod, true
}

// HasAttemptreopenmethod returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasAttemptreopenmethod() bool {
	if o != nil && !IsNil(o.Attemptreopenmethod) {
		return true
	}

	return false
}

// SetAttemptreopenmethod gets a reference to the given string and assigns it to the Attemptreopenmethod field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetAttemptreopenmethod(v string) {
	o.Attemptreopenmethod = &v
}

// GetBlindmarking returns the Blindmarking field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetBlindmarking() int32 {
	if o == nil || IsNil(o.Blindmarking) {
		var ret int32
		return ret
	}
	return *o.Blindmarking
}

// GetBlindmarkingOk returns a tuple with the Blindmarking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetBlindmarkingOk() (*int32, bool) {
	if o == nil || IsNil(o.Blindmarking) {
		return nil, false
	}
	return o.Blindmarking, true
}

// HasBlindmarking returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasBlindmarking() bool {
	if o != nil && !IsNil(o.Blindmarking) {
		return true
	}

	return false
}

// SetBlindmarking gets a reference to the given int32 and assigns it to the Blindmarking field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetBlindmarking(v int32) {
	o.Blindmarking = &v
}

// GetCmid returns the Cmid field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetCmid() int32 {
	if o == nil || IsNil(o.Cmid) {
		var ret int32
		return ret
	}
	return *o.Cmid
}

// GetCmidOk returns a tuple with the Cmid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetCmidOk() (*int32, bool) {
	if o == nil || IsNil(o.Cmid) {
		return nil, false
	}
	return o.Cmid, true
}

// HasCmid returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasCmid() bool {
	if o != nil && !IsNil(o.Cmid) {
		return true
	}

	return false
}

// SetCmid gets a reference to the given int32 and assigns it to the Cmid field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetCmid(v int32) {
	o.Cmid = &v
}

// GetCompletionsubmit returns the Completionsubmit field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetCompletionsubmit() int32 {
	if o == nil || IsNil(o.Completionsubmit) {
		var ret int32
		return ret
	}
	return *o.Completionsubmit
}

// GetCompletionsubmitOk returns a tuple with the Completionsubmit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetCompletionsubmitOk() (*int32, bool) {
	if o == nil || IsNil(o.Completionsubmit) {
		return nil, false
	}
	return o.Completionsubmit, true
}

// HasCompletionsubmit returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasCompletionsubmit() bool {
	if o != nil && !IsNil(o.Completionsubmit) {
		return true
	}

	return false
}

// SetCompletionsubmit gets a reference to the given int32 and assigns it to the Completionsubmit field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetCompletionsubmit(v int32) {
	o.Completionsubmit = &v
}

// GetConfigs returns the Configs field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetConfigs() []ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner {
	if o == nil || IsNil(o.Configs) {
		var ret []ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner
		return ret
	}
	return o.Configs
}

// GetConfigsOk returns a tuple with the Configs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetConfigsOk() ([]ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner, bool) {
	if o == nil || IsNil(o.Configs) {
		return nil, false
	}
	return o.Configs, true
}

// HasConfigs returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasConfigs() bool {
	if o != nil && !IsNil(o.Configs) {
		return true
	}

	return false
}

// SetConfigs gets a reference to the given []ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner and assigns it to the Configs field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetConfigs(v []ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner) {
	o.Configs = v
}

// GetCourse returns the Course field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetCourse() int32 {
	if o == nil || IsNil(o.Course) {
		var ret int32
		return ret
	}
	return *o.Course
}

// GetCourseOk returns a tuple with the Course field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetCourseOk() (*int32, bool) {
	if o == nil || IsNil(o.Course) {
		return nil, false
	}
	return o.Course, true
}

// HasCourse returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasCourse() bool {
	if o != nil && !IsNil(o.Course) {
		return true
	}

	return false
}

// SetCourse gets a reference to the given int32 and assigns it to the Course field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetCourse(v int32) {
	o.Course = &v
}

// GetCutoffdate returns the Cutoffdate field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetCutoffdate() int32 {
	if o == nil || IsNil(o.Cutoffdate) {
		var ret int32
		return ret
	}
	return *o.Cutoffdate
}

// GetCutoffdateOk returns a tuple with the Cutoffdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetCutoffdateOk() (*int32, bool) {
	if o == nil || IsNil(o.Cutoffdate) {
		return nil, false
	}
	return o.Cutoffdate, true
}

// HasCutoffdate returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasCutoffdate() bool {
	if o != nil && !IsNil(o.Cutoffdate) {
		return true
	}

	return false
}

// SetCutoffdate gets a reference to the given int32 and assigns it to the Cutoffdate field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetCutoffdate(v int32) {
	o.Cutoffdate = &v
}

// GetDuedate returns the Duedate field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetDuedate() int32 {
	if o == nil || IsNil(o.Duedate) {
		var ret int32
		return ret
	}
	return *o.Duedate
}

// GetDuedateOk returns a tuple with the Duedate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetDuedateOk() (*int32, bool) {
	if o == nil || IsNil(o.Duedate) {
		return nil, false
	}
	return o.Duedate, true
}

// HasDuedate returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasDuedate() bool {
	if o != nil && !IsNil(o.Duedate) {
		return true
	}

	return false
}

// SetDuedate gets a reference to the given int32 and assigns it to the Duedate field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetDuedate(v int32) {
	o.Duedate = &v
}

// GetGrade returns the Grade field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetGrade() int32 {
	if o == nil || IsNil(o.Grade) {
		var ret int32
		return ret
	}
	return *o.Grade
}

// GetGradeOk returns a tuple with the Grade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetGradeOk() (*int32, bool) {
	if o == nil || IsNil(o.Grade) {
		return nil, false
	}
	return o.Grade, true
}

// HasGrade returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasGrade() bool {
	if o != nil && !IsNil(o.Grade) {
		return true
	}

	return false
}

// SetGrade gets a reference to the given int32 and assigns it to the Grade field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetGrade(v int32) {
	o.Grade = &v
}

// GetGradingduedate returns the Gradingduedate field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetGradingduedate() int32 {
	if o == nil || IsNil(o.Gradingduedate) {
		var ret int32
		return ret
	}
	return *o.Gradingduedate
}

// GetGradingduedateOk returns a tuple with the Gradingduedate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetGradingduedateOk() (*int32, bool) {
	if o == nil || IsNil(o.Gradingduedate) {
		return nil, false
	}
	return o.Gradingduedate, true
}

// HasGradingduedate returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasGradingduedate() bool {
	if o != nil && !IsNil(o.Gradingduedate) {
		return true
	}

	return false
}

// SetGradingduedate gets a reference to the given int32 and assigns it to the Gradingduedate field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetGradingduedate(v int32) {
	o.Gradingduedate = &v
}

// GetHidegrader returns the Hidegrader field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetHidegrader() int32 {
	if o == nil || IsNil(o.Hidegrader) {
		var ret int32
		return ret
	}
	return *o.Hidegrader
}

// GetHidegraderOk returns a tuple with the Hidegrader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetHidegraderOk() (*int32, bool) {
	if o == nil || IsNil(o.Hidegrader) {
		return nil, false
	}
	return o.Hidegrader, true
}

// HasHidegrader returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasHidegrader() bool {
	if o != nil && !IsNil(o.Hidegrader) {
		return true
	}

	return false
}

// SetHidegrader gets a reference to the given int32 and assigns it to the Hidegrader field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetHidegrader(v int32) {
	o.Hidegrader = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetId(v int32) {
	o.Id = &v
}

// GetIntro returns the Intro field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetIntro() string {
	if o == nil || IsNil(o.Intro) {
		var ret string
		return ret
	}
	return *o.Intro
}

// GetIntroOk returns a tuple with the Intro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetIntroOk() (*string, bool) {
	if o == nil || IsNil(o.Intro) {
		return nil, false
	}
	return o.Intro, true
}

// HasIntro returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasIntro() bool {
	if o != nil && !IsNil(o.Intro) {
		return true
	}

	return false
}

// SetIntro gets a reference to the given string and assigns it to the Intro field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetIntro(v string) {
	o.Intro = &v
}

// GetIntroattachments returns the Introattachments field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetIntroattachments() []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner {
	if o == nil || IsNil(o.Introattachments) {
		var ret []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner
		return ret
	}
	return o.Introattachments
}

// GetIntroattachmentsOk returns a tuple with the Introattachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetIntroattachmentsOk() ([]CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner, bool) {
	if o == nil || IsNil(o.Introattachments) {
		return nil, false
	}
	return o.Introattachments, true
}

// HasIntroattachments returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasIntroattachments() bool {
	if o != nil && !IsNil(o.Introattachments) {
		return true
	}

	return false
}

// SetIntroattachments gets a reference to the given []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner and assigns it to the Introattachments field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetIntroattachments(v []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner) {
	o.Introattachments = v
}

// GetIntrofiles returns the Introfiles field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetIntrofiles() []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner {
	if o == nil || IsNil(o.Introfiles) {
		var ret []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner
		return ret
	}
	return o.Introfiles
}

// GetIntrofilesOk returns a tuple with the Introfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetIntrofilesOk() ([]CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner, bool) {
	if o == nil || IsNil(o.Introfiles) {
		return nil, false
	}
	return o.Introfiles, true
}

// HasIntrofiles returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasIntrofiles() bool {
	if o != nil && !IsNil(o.Introfiles) {
		return true
	}

	return false
}

// SetIntrofiles gets a reference to the given []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner and assigns it to the Introfiles field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetIntrofiles(v []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner) {
	o.Introfiles = v
}

// GetIntroformat returns the Introformat field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetIntroformat() int32 {
	if o == nil || IsNil(o.Introformat) {
		var ret int32
		return ret
	}
	return *o.Introformat
}

// GetIntroformatOk returns a tuple with the Introformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetIntroformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Introformat) {
		return nil, false
	}
	return o.Introformat, true
}

// HasIntroformat returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasIntroformat() bool {
	if o != nil && !IsNil(o.Introformat) {
		return true
	}

	return false
}

// SetIntroformat gets a reference to the given int32 and assigns it to the Introformat field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetIntroformat(v int32) {
	o.Introformat = &v
}

// GetMarkingallocation returns the Markingallocation field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetMarkingallocation() int32 {
	if o == nil || IsNil(o.Markingallocation) {
		var ret int32
		return ret
	}
	return *o.Markingallocation
}

// GetMarkingallocationOk returns a tuple with the Markingallocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetMarkingallocationOk() (*int32, bool) {
	if o == nil || IsNil(o.Markingallocation) {
		return nil, false
	}
	return o.Markingallocation, true
}

// HasMarkingallocation returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasMarkingallocation() bool {
	if o != nil && !IsNil(o.Markingallocation) {
		return true
	}

	return false
}

// SetMarkingallocation gets a reference to the given int32 and assigns it to the Markingallocation field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetMarkingallocation(v int32) {
	o.Markingallocation = &v
}

// GetMarkingworkflow returns the Markingworkflow field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetMarkingworkflow() int32 {
	if o == nil || IsNil(o.Markingworkflow) {
		var ret int32
		return ret
	}
	return *o.Markingworkflow
}

// GetMarkingworkflowOk returns a tuple with the Markingworkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetMarkingworkflowOk() (*int32, bool) {
	if o == nil || IsNil(o.Markingworkflow) {
		return nil, false
	}
	return o.Markingworkflow, true
}

// HasMarkingworkflow returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasMarkingworkflow() bool {
	if o != nil && !IsNil(o.Markingworkflow) {
		return true
	}

	return false
}

// SetMarkingworkflow gets a reference to the given int32 and assigns it to the Markingworkflow field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetMarkingworkflow(v int32) {
	o.Markingworkflow = &v
}

// GetMaxattempts returns the Maxattempts field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetMaxattempts() int32 {
	if o == nil || IsNil(o.Maxattempts) {
		var ret int32
		return ret
	}
	return *o.Maxattempts
}

// GetMaxattemptsOk returns a tuple with the Maxattempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetMaxattemptsOk() (*int32, bool) {
	if o == nil || IsNil(o.Maxattempts) {
		return nil, false
	}
	return o.Maxattempts, true
}

// HasMaxattempts returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasMaxattempts() bool {
	if o != nil && !IsNil(o.Maxattempts) {
		return true
	}

	return false
}

// SetMaxattempts gets a reference to the given int32 and assigns it to the Maxattempts field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetMaxattempts(v int32) {
	o.Maxattempts = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetName(v string) {
	o.Name = &v
}

// GetNosubmissions returns the Nosubmissions field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetNosubmissions() int32 {
	if o == nil || IsNil(o.Nosubmissions) {
		var ret int32
		return ret
	}
	return *o.Nosubmissions
}

// GetNosubmissionsOk returns a tuple with the Nosubmissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetNosubmissionsOk() (*int32, bool) {
	if o == nil || IsNil(o.Nosubmissions) {
		return nil, false
	}
	return o.Nosubmissions, true
}

// HasNosubmissions returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasNosubmissions() bool {
	if o != nil && !IsNil(o.Nosubmissions) {
		return true
	}

	return false
}

// SetNosubmissions gets a reference to the given int32 and assigns it to the Nosubmissions field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetNosubmissions(v int32) {
	o.Nosubmissions = &v
}

// GetPreventsubmissionnotingroup returns the Preventsubmissionnotingroup field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetPreventsubmissionnotingroup() int32 {
	if o == nil || IsNil(o.Preventsubmissionnotingroup) {
		var ret int32
		return ret
	}
	return *o.Preventsubmissionnotingroup
}

// GetPreventsubmissionnotingroupOk returns a tuple with the Preventsubmissionnotingroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetPreventsubmissionnotingroupOk() (*int32, bool) {
	if o == nil || IsNil(o.Preventsubmissionnotingroup) {
		return nil, false
	}
	return o.Preventsubmissionnotingroup, true
}

// HasPreventsubmissionnotingroup returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasPreventsubmissionnotingroup() bool {
	if o != nil && !IsNil(o.Preventsubmissionnotingroup) {
		return true
	}

	return false
}

// SetPreventsubmissionnotingroup gets a reference to the given int32 and assigns it to the Preventsubmissionnotingroup field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetPreventsubmissionnotingroup(v int32) {
	o.Preventsubmissionnotingroup = &v
}

// GetRequireallteammemberssubmit returns the Requireallteammemberssubmit field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetRequireallteammemberssubmit() int32 {
	if o == nil || IsNil(o.Requireallteammemberssubmit) {
		var ret int32
		return ret
	}
	return *o.Requireallteammemberssubmit
}

// GetRequireallteammemberssubmitOk returns a tuple with the Requireallteammemberssubmit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetRequireallteammemberssubmitOk() (*int32, bool) {
	if o == nil || IsNil(o.Requireallteammemberssubmit) {
		return nil, false
	}
	return o.Requireallteammemberssubmit, true
}

// HasRequireallteammemberssubmit returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasRequireallteammemberssubmit() bool {
	if o != nil && !IsNil(o.Requireallteammemberssubmit) {
		return true
	}

	return false
}

// SetRequireallteammemberssubmit gets a reference to the given int32 and assigns it to the Requireallteammemberssubmit field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetRequireallteammemberssubmit(v int32) {
	o.Requireallteammemberssubmit = &v
}

// GetRequiresubmissionstatement returns the Requiresubmissionstatement field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetRequiresubmissionstatement() int32 {
	if o == nil || IsNil(o.Requiresubmissionstatement) {
		var ret int32
		return ret
	}
	return *o.Requiresubmissionstatement
}

// GetRequiresubmissionstatementOk returns a tuple with the Requiresubmissionstatement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetRequiresubmissionstatementOk() (*int32, bool) {
	if o == nil || IsNil(o.Requiresubmissionstatement) {
		return nil, false
	}
	return o.Requiresubmissionstatement, true
}

// HasRequiresubmissionstatement returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasRequiresubmissionstatement() bool {
	if o != nil && !IsNil(o.Requiresubmissionstatement) {
		return true
	}

	return false
}

// SetRequiresubmissionstatement gets a reference to the given int32 and assigns it to the Requiresubmissionstatement field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetRequiresubmissionstatement(v int32) {
	o.Requiresubmissionstatement = &v
}

// GetRevealidentities returns the Revealidentities field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetRevealidentities() int32 {
	if o == nil || IsNil(o.Revealidentities) {
		var ret int32
		return ret
	}
	return *o.Revealidentities
}

// GetRevealidentitiesOk returns a tuple with the Revealidentities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetRevealidentitiesOk() (*int32, bool) {
	if o == nil || IsNil(o.Revealidentities) {
		return nil, false
	}
	return o.Revealidentities, true
}

// HasRevealidentities returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasRevealidentities() bool {
	if o != nil && !IsNil(o.Revealidentities) {
		return true
	}

	return false
}

// SetRevealidentities gets a reference to the given int32 and assigns it to the Revealidentities field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetRevealidentities(v int32) {
	o.Revealidentities = &v
}

// GetSendlatenotifications returns the Sendlatenotifications field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSendlatenotifications() int32 {
	if o == nil || IsNil(o.Sendlatenotifications) {
		var ret int32
		return ret
	}
	return *o.Sendlatenotifications
}

// GetSendlatenotificationsOk returns a tuple with the Sendlatenotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSendlatenotificationsOk() (*int32, bool) {
	if o == nil || IsNil(o.Sendlatenotifications) {
		return nil, false
	}
	return o.Sendlatenotifications, true
}

// HasSendlatenotifications returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasSendlatenotifications() bool {
	if o != nil && !IsNil(o.Sendlatenotifications) {
		return true
	}

	return false
}

// SetSendlatenotifications gets a reference to the given int32 and assigns it to the Sendlatenotifications field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetSendlatenotifications(v int32) {
	o.Sendlatenotifications = &v
}

// GetSendnotifications returns the Sendnotifications field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSendnotifications() int32 {
	if o == nil || IsNil(o.Sendnotifications) {
		var ret int32
		return ret
	}
	return *o.Sendnotifications
}

// GetSendnotificationsOk returns a tuple with the Sendnotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSendnotificationsOk() (*int32, bool) {
	if o == nil || IsNil(o.Sendnotifications) {
		return nil, false
	}
	return o.Sendnotifications, true
}

// HasSendnotifications returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasSendnotifications() bool {
	if o != nil && !IsNil(o.Sendnotifications) {
		return true
	}

	return false
}

// SetSendnotifications gets a reference to the given int32 and assigns it to the Sendnotifications field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetSendnotifications(v int32) {
	o.Sendnotifications = &v
}

// GetSendstudentnotifications returns the Sendstudentnotifications field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSendstudentnotifications() int32 {
	if o == nil || IsNil(o.Sendstudentnotifications) {
		var ret int32
		return ret
	}
	return *o.Sendstudentnotifications
}

// GetSendstudentnotificationsOk returns a tuple with the Sendstudentnotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSendstudentnotificationsOk() (*int32, bool) {
	if o == nil || IsNil(o.Sendstudentnotifications) {
		return nil, false
	}
	return o.Sendstudentnotifications, true
}

// HasSendstudentnotifications returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasSendstudentnotifications() bool {
	if o != nil && !IsNil(o.Sendstudentnotifications) {
		return true
	}

	return false
}

// SetSendstudentnotifications gets a reference to the given int32 and assigns it to the Sendstudentnotifications field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetSendstudentnotifications(v int32) {
	o.Sendstudentnotifications = &v
}

// GetSubmissionattachments returns the Submissionattachments field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSubmissionattachments() int32 {
	if o == nil || IsNil(o.Submissionattachments) {
		var ret int32
		return ret
	}
	return *o.Submissionattachments
}

// GetSubmissionattachmentsOk returns a tuple with the Submissionattachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSubmissionattachmentsOk() (*int32, bool) {
	if o == nil || IsNil(o.Submissionattachments) {
		return nil, false
	}
	return o.Submissionattachments, true
}

// HasSubmissionattachments returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasSubmissionattachments() bool {
	if o != nil && !IsNil(o.Submissionattachments) {
		return true
	}

	return false
}

// SetSubmissionattachments gets a reference to the given int32 and assigns it to the Submissionattachments field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetSubmissionattachments(v int32) {
	o.Submissionattachments = &v
}

// GetSubmissiondrafts returns the Submissiondrafts field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSubmissiondrafts() int32 {
	if o == nil || IsNil(o.Submissiondrafts) {
		var ret int32
		return ret
	}
	return *o.Submissiondrafts
}

// GetSubmissiondraftsOk returns a tuple with the Submissiondrafts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSubmissiondraftsOk() (*int32, bool) {
	if o == nil || IsNil(o.Submissiondrafts) {
		return nil, false
	}
	return o.Submissiondrafts, true
}

// HasSubmissiondrafts returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasSubmissiondrafts() bool {
	if o != nil && !IsNil(o.Submissiondrafts) {
		return true
	}

	return false
}

// SetSubmissiondrafts gets a reference to the given int32 and assigns it to the Submissiondrafts field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetSubmissiondrafts(v int32) {
	o.Submissiondrafts = &v
}

// GetSubmissionstatement returns the Submissionstatement field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSubmissionstatement() string {
	if o == nil || IsNil(o.Submissionstatement) {
		var ret string
		return ret
	}
	return *o.Submissionstatement
}

// GetSubmissionstatementOk returns a tuple with the Submissionstatement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSubmissionstatementOk() (*string, bool) {
	if o == nil || IsNil(o.Submissionstatement) {
		return nil, false
	}
	return o.Submissionstatement, true
}

// HasSubmissionstatement returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasSubmissionstatement() bool {
	if o != nil && !IsNil(o.Submissionstatement) {
		return true
	}

	return false
}

// SetSubmissionstatement gets a reference to the given string and assigns it to the Submissionstatement field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetSubmissionstatement(v string) {
	o.Submissionstatement = &v
}

// GetSubmissionstatementformat returns the Submissionstatementformat field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSubmissionstatementformat() int32 {
	if o == nil || IsNil(o.Submissionstatementformat) {
		var ret int32
		return ret
	}
	return *o.Submissionstatementformat
}

// GetSubmissionstatementformatOk returns a tuple with the Submissionstatementformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetSubmissionstatementformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Submissionstatementformat) {
		return nil, false
	}
	return o.Submissionstatementformat, true
}

// HasSubmissionstatementformat returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasSubmissionstatementformat() bool {
	if o != nil && !IsNil(o.Submissionstatementformat) {
		return true
	}

	return false
}

// SetSubmissionstatementformat gets a reference to the given int32 and assigns it to the Submissionstatementformat field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetSubmissionstatementformat(v int32) {
	o.Submissionstatementformat = &v
}

// GetTeamsubmission returns the Teamsubmission field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetTeamsubmission() int32 {
	if o == nil || IsNil(o.Teamsubmission) {
		var ret int32
		return ret
	}
	return *o.Teamsubmission
}

// GetTeamsubmissionOk returns a tuple with the Teamsubmission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetTeamsubmissionOk() (*int32, bool) {
	if o == nil || IsNil(o.Teamsubmission) {
		return nil, false
	}
	return o.Teamsubmission, true
}

// HasTeamsubmission returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasTeamsubmission() bool {
	if o != nil && !IsNil(o.Teamsubmission) {
		return true
	}

	return false
}

// SetTeamsubmission gets a reference to the given int32 and assigns it to the Teamsubmission field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetTeamsubmission(v int32) {
	o.Teamsubmission = &v
}

// GetTeamsubmissiongroupingid returns the Teamsubmissiongroupingid field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetTeamsubmissiongroupingid() int32 {
	if o == nil || IsNil(o.Teamsubmissiongroupingid) {
		var ret int32
		return ret
	}
	return *o.Teamsubmissiongroupingid
}

// GetTeamsubmissiongroupingidOk returns a tuple with the Teamsubmissiongroupingid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetTeamsubmissiongroupingidOk() (*int32, bool) {
	if o == nil || IsNil(o.Teamsubmissiongroupingid) {
		return nil, false
	}
	return o.Teamsubmissiongroupingid, true
}

// HasTeamsubmissiongroupingid returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasTeamsubmissiongroupingid() bool {
	if o != nil && !IsNil(o.Teamsubmissiongroupingid) {
		return true
	}

	return false
}

// SetTeamsubmissiongroupingid gets a reference to the given int32 and assigns it to the Teamsubmissiongroupingid field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetTeamsubmissiongroupingid(v int32) {
	o.Teamsubmissiongroupingid = &v
}

// GetTimelimit returns the Timelimit field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetTimelimit() int32 {
	if o == nil || IsNil(o.Timelimit) {
		var ret int32
		return ret
	}
	return *o.Timelimit
}

// GetTimelimitOk returns a tuple with the Timelimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetTimelimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Timelimit) {
		return nil, false
	}
	return o.Timelimit, true
}

// HasTimelimit returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasTimelimit() bool {
	if o != nil && !IsNil(o.Timelimit) {
		return true
	}

	return false
}

// SetTimelimit gets a reference to the given int32 and assigns it to the Timelimit field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetTimelimit(v int32) {
	o.Timelimit = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

func (o ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Activity) {
		toSerialize["activity"] = o.Activity
	}
	if !IsNil(o.Activityattachments) {
		toSerialize["activityattachments"] = o.Activityattachments
	}
	if !IsNil(o.Activityformat) {
		toSerialize["activityformat"] = o.Activityformat
	}
	if !IsNil(o.Allowsubmissionsfromdate) {
		toSerialize["allowsubmissionsfromdate"] = o.Allowsubmissionsfromdate
	}
	if !IsNil(o.Attemptreopenmethod) {
		toSerialize["attemptreopenmethod"] = o.Attemptreopenmethod
	}
	if !IsNil(o.Blindmarking) {
		toSerialize["blindmarking"] = o.Blindmarking
	}
	if !IsNil(o.Cmid) {
		toSerialize["cmid"] = o.Cmid
	}
	if !IsNil(o.Completionsubmit) {
		toSerialize["completionsubmit"] = o.Completionsubmit
	}
	if !IsNil(o.Configs) {
		toSerialize["configs"] = o.Configs
	}
	if !IsNil(o.Course) {
		toSerialize["course"] = o.Course
	}
	if !IsNil(o.Cutoffdate) {
		toSerialize["cutoffdate"] = o.Cutoffdate
	}
	if !IsNil(o.Duedate) {
		toSerialize["duedate"] = o.Duedate
	}
	if !IsNil(o.Grade) {
		toSerialize["grade"] = o.Grade
	}
	if !IsNil(o.Gradingduedate) {
		toSerialize["gradingduedate"] = o.Gradingduedate
	}
	if !IsNil(o.Hidegrader) {
		toSerialize["hidegrader"] = o.Hidegrader
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Intro) {
		toSerialize["intro"] = o.Intro
	}
	if !IsNil(o.Introattachments) {
		toSerialize["introattachments"] = o.Introattachments
	}
	if !IsNil(o.Introfiles) {
		toSerialize["introfiles"] = o.Introfiles
	}
	if !IsNil(o.Introformat) {
		toSerialize["introformat"] = o.Introformat
	}
	if !IsNil(o.Markingallocation) {
		toSerialize["markingallocation"] = o.Markingallocation
	}
	if !IsNil(o.Markingworkflow) {
		toSerialize["markingworkflow"] = o.Markingworkflow
	}
	if !IsNil(o.Maxattempts) {
		toSerialize["maxattempts"] = o.Maxattempts
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Nosubmissions) {
		toSerialize["nosubmissions"] = o.Nosubmissions
	}
	if !IsNil(o.Preventsubmissionnotingroup) {
		toSerialize["preventsubmissionnotingroup"] = o.Preventsubmissionnotingroup
	}
	if !IsNil(o.Requireallteammemberssubmit) {
		toSerialize["requireallteammemberssubmit"] = o.Requireallteammemberssubmit
	}
	if !IsNil(o.Requiresubmissionstatement) {
		toSerialize["requiresubmissionstatement"] = o.Requiresubmissionstatement
	}
	if !IsNil(o.Revealidentities) {
		toSerialize["revealidentities"] = o.Revealidentities
	}
	if !IsNil(o.Sendlatenotifications) {
		toSerialize["sendlatenotifications"] = o.Sendlatenotifications
	}
	if !IsNil(o.Sendnotifications) {
		toSerialize["sendnotifications"] = o.Sendnotifications
	}
	if !IsNil(o.Sendstudentnotifications) {
		toSerialize["sendstudentnotifications"] = o.Sendstudentnotifications
	}
	if !IsNil(o.Submissionattachments) {
		toSerialize["submissionattachments"] = o.Submissionattachments
	}
	if !IsNil(o.Submissiondrafts) {
		toSerialize["submissiondrafts"] = o.Submissiondrafts
	}
	if !IsNil(o.Submissionstatement) {
		toSerialize["submissionstatement"] = o.Submissionstatement
	}
	if !IsNil(o.Submissionstatementformat) {
		toSerialize["submissionstatementformat"] = o.Submissionstatementformat
	}
	if !IsNil(o.Teamsubmission) {
		toSerialize["teamsubmission"] = o.Teamsubmission
	}
	if !IsNil(o.Teamsubmissiongroupingid) {
		toSerialize["teamsubmissiongroupingid"] = o.Teamsubmissiongroupingid
	}
	if !IsNil(o.Timelimit) {
		toSerialize["timelimit"] = o.Timelimit
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	return toSerialize, nil
}

type NullableModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner struct {
	value *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner
	isSet bool
}

func (v NullableModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) Get() *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner {
	return v.value
}

func (v *NullableModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) Set(val *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner(val *ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) *NullableModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner {
	return &NullableModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner{value: val, isSet: true}
}

func (v NullableModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


