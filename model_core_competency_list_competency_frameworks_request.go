/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCompetencyListCompetencyFrameworksRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCompetencyListCompetencyFrameworksRequest{}

// CoreCompetencyListCompetencyFrameworksRequest struct for CoreCompetencyListCompetencyFrameworksRequest
type CoreCompetencyListCompetencyFrameworksRequest struct {
	Context CoreCohortSearchCohortsRequestContext `json:"context"`
	// What other contextes to fetch the frameworks from. (children, parents, self)
	Includes *string `json:"includes,omitempty"`
	// Return this number of records at most.
	Limit *int32 `json:"limit,omitempty"`
	// Only visible frameworks will be returned if visible true
	Onlyvisible *bool `json:"onlyvisible,omitempty"`
	// Sort direction. Should be either ASC or DESC
	Order *string `json:"order,omitempty"`
	// A query string to filter the results
	Query *string `json:"query,omitempty"`
	// Skip this number of records before returning results
	Skip *int32 `json:"skip,omitempty"`
	// Column to sort by.
	Sort *string `json:"sort,omitempty"`
}

type _CoreCompetencyListCompetencyFrameworksRequest CoreCompetencyListCompetencyFrameworksRequest

// NewCoreCompetencyListCompetencyFrameworksRequest instantiates a new CoreCompetencyListCompetencyFrameworksRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCompetencyListCompetencyFrameworksRequest(context CoreCohortSearchCohortsRequestContext) *CoreCompetencyListCompetencyFrameworksRequest {
	this := CoreCompetencyListCompetencyFrameworksRequest{}
	this.Context = context
	var includes string = "children"
	this.Includes = &includes
	var limit int32 = 0
	this.Limit = &limit
	var onlyvisible bool = false
	this.Onlyvisible = &onlyvisible
	var order string = ""
	this.Order = &order
	var query string = ""
	this.Query = &query
	var skip int32 = 0
	this.Skip = &skip
	var sort string = "shortname"
	this.Sort = &sort
	return &this
}

// NewCoreCompetencyListCompetencyFrameworksRequestWithDefaults instantiates a new CoreCompetencyListCompetencyFrameworksRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCompetencyListCompetencyFrameworksRequestWithDefaults() *CoreCompetencyListCompetencyFrameworksRequest {
	this := CoreCompetencyListCompetencyFrameworksRequest{}
	var includes string = "children"
	this.Includes = &includes
	var limit int32 = 0
	this.Limit = &limit
	var onlyvisible bool = false
	this.Onlyvisible = &onlyvisible
	var order string = ""
	this.Order = &order
	var query string = ""
	this.Query = &query
	var skip int32 = 0
	this.Skip = &skip
	var sort string = "shortname"
	this.Sort = &sort
	return &this
}

// GetContext returns the Context field value
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetContext() CoreCohortSearchCohortsRequestContext {
	if o == nil {
		var ret CoreCohortSearchCohortsRequestContext
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetContextOk() (*CoreCohortSearchCohortsRequestContext, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *CoreCompetencyListCompetencyFrameworksRequest) SetContext(v CoreCohortSearchCohortsRequestContext) {
	o.Context = v
}

// GetIncludes returns the Includes field value if set, zero value otherwise.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetIncludes() string {
	if o == nil || IsNil(o.Includes) {
		var ret string
		return ret
	}
	return *o.Includes
}

// GetIncludesOk returns a tuple with the Includes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetIncludesOk() (*string, bool) {
	if o == nil || IsNil(o.Includes) {
		return nil, false
	}
	return o.Includes, true
}

// HasIncludes returns a boolean if a field has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) HasIncludes() bool {
	if o != nil && !IsNil(o.Includes) {
		return true
	}

	return false
}

// SetIncludes gets a reference to the given string and assigns it to the Includes field.
func (o *CoreCompetencyListCompetencyFrameworksRequest) SetIncludes(v string) {
	o.Includes = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *CoreCompetencyListCompetencyFrameworksRequest) SetLimit(v int32) {
	o.Limit = &v
}

// GetOnlyvisible returns the Onlyvisible field value if set, zero value otherwise.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetOnlyvisible() bool {
	if o == nil || IsNil(o.Onlyvisible) {
		var ret bool
		return ret
	}
	return *o.Onlyvisible
}

// GetOnlyvisibleOk returns a tuple with the Onlyvisible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetOnlyvisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Onlyvisible) {
		return nil, false
	}
	return o.Onlyvisible, true
}

// HasOnlyvisible returns a boolean if a field has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) HasOnlyvisible() bool {
	if o != nil && !IsNil(o.Onlyvisible) {
		return true
	}

	return false
}

// SetOnlyvisible gets a reference to the given bool and assigns it to the Onlyvisible field.
func (o *CoreCompetencyListCompetencyFrameworksRequest) SetOnlyvisible(v bool) {
	o.Onlyvisible = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetOrder() string {
	if o == nil || IsNil(o.Order) {
		var ret string
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetOrderOk() (*string, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given string and assigns it to the Order field.
func (o *CoreCompetencyListCompetencyFrameworksRequest) SetOrder(v string) {
	o.Order = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *CoreCompetencyListCompetencyFrameworksRequest) SetQuery(v string) {
	o.Query = &v
}

// GetSkip returns the Skip field value if set, zero value otherwise.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetSkip() int32 {
	if o == nil || IsNil(o.Skip) {
		var ret int32
		return ret
	}
	return *o.Skip
}

// GetSkipOk returns a tuple with the Skip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetSkipOk() (*int32, bool) {
	if o == nil || IsNil(o.Skip) {
		return nil, false
	}
	return o.Skip, true
}

// HasSkip returns a boolean if a field has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) HasSkip() bool {
	if o != nil && !IsNil(o.Skip) {
		return true
	}

	return false
}

// SetSkip gets a reference to the given int32 and assigns it to the Skip field.
func (o *CoreCompetencyListCompetencyFrameworksRequest) SetSkip(v int32) {
	o.Skip = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetSort() string {
	if o == nil || IsNil(o.Sort) {
		var ret string
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) GetSortOk() (*string, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *CoreCompetencyListCompetencyFrameworksRequest) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given string and assigns it to the Sort field.
func (o *CoreCompetencyListCompetencyFrameworksRequest) SetSort(v string) {
	o.Sort = &v
}

func (o CoreCompetencyListCompetencyFrameworksRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCompetencyListCompetencyFrameworksRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["context"] = o.Context
	if !IsNil(o.Includes) {
		toSerialize["includes"] = o.Includes
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Onlyvisible) {
		toSerialize["onlyvisible"] = o.Onlyvisible
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.Skip) {
		toSerialize["skip"] = o.Skip
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	return toSerialize, nil
}

func (o *CoreCompetencyListCompetencyFrameworksRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"context",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCompetencyListCompetencyFrameworksRequest := _CoreCompetencyListCompetencyFrameworksRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCompetencyListCompetencyFrameworksRequest)

	if err != nil {
		return err
	}

	*o = CoreCompetencyListCompetencyFrameworksRequest(varCoreCompetencyListCompetencyFrameworksRequest)

	return err
}

type NullableCoreCompetencyListCompetencyFrameworksRequest struct {
	value *CoreCompetencyListCompetencyFrameworksRequest
	isSet bool
}

func (v NullableCoreCompetencyListCompetencyFrameworksRequest) Get() *CoreCompetencyListCompetencyFrameworksRequest {
	return v.value
}

func (v *NullableCoreCompetencyListCompetencyFrameworksRequest) Set(val *CoreCompetencyListCompetencyFrameworksRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCompetencyListCompetencyFrameworksRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCompetencyListCompetencyFrameworksRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCompetencyListCompetencyFrameworksRequest(val *CoreCompetencyListCompetencyFrameworksRequest) *NullableCoreCompetencyListCompetencyFrameworksRequest {
	return &NullableCoreCompetencyListCompetencyFrameworksRequest{value: val, isSet: true}
}

func (v NullableCoreCompetencyListCompetencyFrameworksRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCompetencyListCompetencyFrameworksRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


