/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreUpdateInplaceEditableRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreUpdateInplaceEditableRequest{}

// CoreUpdateInplaceEditableRequest struct for CoreUpdateInplaceEditableRequest
type CoreUpdateInplaceEditableRequest struct {
	// component responsible for the update
	Component string `json:"component"`
	// identifier of the updated item
	Itemid string `json:"itemid"`
	// type of the updated item inside the component
	Itemtype string `json:"itemtype"`
	// new value
	Value string `json:"value"`
}

type _CoreUpdateInplaceEditableRequest CoreUpdateInplaceEditableRequest

// NewCoreUpdateInplaceEditableRequest instantiates a new CoreUpdateInplaceEditableRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreUpdateInplaceEditableRequest(component string, itemid string, itemtype string, value string) *CoreUpdateInplaceEditableRequest {
	this := CoreUpdateInplaceEditableRequest{}
	this.Component = component
	this.Itemid = itemid
	this.Itemtype = itemtype
	this.Value = value
	return &this
}

// NewCoreUpdateInplaceEditableRequestWithDefaults instantiates a new CoreUpdateInplaceEditableRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreUpdateInplaceEditableRequestWithDefaults() *CoreUpdateInplaceEditableRequest {
	this := CoreUpdateInplaceEditableRequest{}
	var component string = "null"
	this.Component = component
	var itemid string = "null"
	this.Itemid = itemid
	var itemtype string = "null"
	this.Itemtype = itemtype
	var value string = "null"
	this.Value = value
	return &this
}

// GetComponent returns the Component field value
func (o *CoreUpdateInplaceEditableRequest) GetComponent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Component
}

// GetComponentOk returns a tuple with the Component field value
// and a boolean to check if the value has been set.
func (o *CoreUpdateInplaceEditableRequest) GetComponentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Component, true
}

// SetComponent sets field value
func (o *CoreUpdateInplaceEditableRequest) SetComponent(v string) {
	o.Component = v
}

// GetItemid returns the Itemid field value
func (o *CoreUpdateInplaceEditableRequest) GetItemid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Itemid
}

// GetItemidOk returns a tuple with the Itemid field value
// and a boolean to check if the value has been set.
func (o *CoreUpdateInplaceEditableRequest) GetItemidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Itemid, true
}

// SetItemid sets field value
func (o *CoreUpdateInplaceEditableRequest) SetItemid(v string) {
	o.Itemid = v
}

// GetItemtype returns the Itemtype field value
func (o *CoreUpdateInplaceEditableRequest) GetItemtype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Itemtype
}

// GetItemtypeOk returns a tuple with the Itemtype field value
// and a boolean to check if the value has been set.
func (o *CoreUpdateInplaceEditableRequest) GetItemtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Itemtype, true
}

// SetItemtype sets field value
func (o *CoreUpdateInplaceEditableRequest) SetItemtype(v string) {
	o.Itemtype = v
}

// GetValue returns the Value field value
func (o *CoreUpdateInplaceEditableRequest) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *CoreUpdateInplaceEditableRequest) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *CoreUpdateInplaceEditableRequest) SetValue(v string) {
	o.Value = v
}

func (o CoreUpdateInplaceEditableRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreUpdateInplaceEditableRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["component"] = o.Component
	toSerialize["itemid"] = o.Itemid
	toSerialize["itemtype"] = o.Itemtype
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *CoreUpdateInplaceEditableRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"component",
		"itemid",
		"itemtype",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreUpdateInplaceEditableRequest := _CoreUpdateInplaceEditableRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreUpdateInplaceEditableRequest)

	if err != nil {
		return err
	}

	*o = CoreUpdateInplaceEditableRequest(varCoreUpdateInplaceEditableRequest)

	return err
}

type NullableCoreUpdateInplaceEditableRequest struct {
	value *CoreUpdateInplaceEditableRequest
	isSet bool
}

func (v NullableCoreUpdateInplaceEditableRequest) Get() *CoreUpdateInplaceEditableRequest {
	return v.value
}

func (v *NullableCoreUpdateInplaceEditableRequest) Set(val *CoreUpdateInplaceEditableRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreUpdateInplaceEditableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreUpdateInplaceEditableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreUpdateInplaceEditableRequest(val *CoreUpdateInplaceEditableRequest) *NullableCoreUpdateInplaceEditableRequest {
	return &NullableCoreUpdateInplaceEditableRequest{value: val, isSet: true}
}

func (v NullableCoreUpdateInplaceEditableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreUpdateInplaceEditableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


