/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner{}

// BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner struct for BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner
type BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner struct {
	// Course ID
	Licensecourseid *int32 `json:"licensecourseid,omitempty"`
	// License ID
	Licenseid *int32 `json:"licenseid,omitempty"`
	// User ID
	Userid *int32 `json:"userid,omitempty"`
}

// NewBlockIomadCompanyAdminAllocateLicensesRequestLicensesInner instantiates a new BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockIomadCompanyAdminAllocateLicensesRequestLicensesInner() *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner {
	this := BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner{}
	var licensecourseid int32 = null
	this.Licensecourseid = &licensecourseid
	var licenseid int32 = null
	this.Licenseid = &licenseid
	var userid int32 = null
	this.Userid = &userid
	return &this
}

// NewBlockIomadCompanyAdminAllocateLicensesRequestLicensesInnerWithDefaults instantiates a new BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockIomadCompanyAdminAllocateLicensesRequestLicensesInnerWithDefaults() *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner {
	this := BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner{}
	var licensecourseid int32 = null
	this.Licensecourseid = &licensecourseid
	var licenseid int32 = null
	this.Licenseid = &licenseid
	var userid int32 = null
	this.Userid = &userid
	return &this
}

// GetLicensecourseid returns the Licensecourseid field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) GetLicensecourseid() int32 {
	if o == nil || IsNil(o.Licensecourseid) {
		var ret int32
		return ret
	}
	return *o.Licensecourseid
}

// GetLicensecourseidOk returns a tuple with the Licensecourseid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) GetLicensecourseidOk() (*int32, bool) {
	if o == nil || IsNil(o.Licensecourseid) {
		return nil, false
	}
	return o.Licensecourseid, true
}

// HasLicensecourseid returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) HasLicensecourseid() bool {
	if o != nil && !IsNil(o.Licensecourseid) {
		return true
	}

	return false
}

// SetLicensecourseid gets a reference to the given int32 and assigns it to the Licensecourseid field.
func (o *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) SetLicensecourseid(v int32) {
	o.Licensecourseid = &v
}

// GetLicenseid returns the Licenseid field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) GetLicenseid() int32 {
	if o == nil || IsNil(o.Licenseid) {
		var ret int32
		return ret
	}
	return *o.Licenseid
}

// GetLicenseidOk returns a tuple with the Licenseid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) GetLicenseidOk() (*int32, bool) {
	if o == nil || IsNil(o.Licenseid) {
		return nil, false
	}
	return o.Licenseid, true
}

// HasLicenseid returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) HasLicenseid() bool {
	if o != nil && !IsNil(o.Licenseid) {
		return true
	}

	return false
}

// SetLicenseid gets a reference to the given int32 and assigns it to the Licenseid field.
func (o *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) SetLicenseid(v int32) {
	o.Licenseid = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) SetUserid(v int32) {
	o.Userid = &v
}

func (o BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Licensecourseid) {
		toSerialize["licensecourseid"] = o.Licensecourseid
	}
	if !IsNil(o.Licenseid) {
		toSerialize["licenseid"] = o.Licenseid
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

type NullableBlockIomadCompanyAdminAllocateLicensesRequestLicensesInner struct {
	value *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner
	isSet bool
}

func (v NullableBlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) Get() *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner {
	return v.value
}

func (v *NullableBlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) Set(val *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockIomadCompanyAdminAllocateLicensesRequestLicensesInner(val *BlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) *NullableBlockIomadCompanyAdminAllocateLicensesRequestLicensesInner {
	return &NullableBlockIomadCompanyAdminAllocateLicensesRequestLicensesInner{value: val, isSet: true}
}

func (v NullableBlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockIomadCompanyAdminAllocateLicensesRequestLicensesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


