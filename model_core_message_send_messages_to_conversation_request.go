/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreMessageSendMessagesToConversationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreMessageSendMessagesToConversationRequest{}

// CoreMessageSendMessagesToConversationRequest struct for CoreMessageSendMessagesToConversationRequest
type CoreMessageSendMessagesToConversationRequest struct {
	// id of the conversation
	Conversationid int32 `json:"conversationid"`
	Messages []CoreMessageSendMessagesToConversationRequestMessagesInner `json:"messages"`
}

type _CoreMessageSendMessagesToConversationRequest CoreMessageSendMessagesToConversationRequest

// NewCoreMessageSendMessagesToConversationRequest instantiates a new CoreMessageSendMessagesToConversationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreMessageSendMessagesToConversationRequest(conversationid int32, messages []CoreMessageSendMessagesToConversationRequestMessagesInner) *CoreMessageSendMessagesToConversationRequest {
	this := CoreMessageSendMessagesToConversationRequest{}
	this.Conversationid = conversationid
	this.Messages = messages
	return &this
}

// NewCoreMessageSendMessagesToConversationRequestWithDefaults instantiates a new CoreMessageSendMessagesToConversationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreMessageSendMessagesToConversationRequestWithDefaults() *CoreMessageSendMessagesToConversationRequest {
	this := CoreMessageSendMessagesToConversationRequest{}
	var conversationid int32 = null
	this.Conversationid = conversationid
	return &this
}

// GetConversationid returns the Conversationid field value
func (o *CoreMessageSendMessagesToConversationRequest) GetConversationid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Conversationid
}

// GetConversationidOk returns a tuple with the Conversationid field value
// and a boolean to check if the value has been set.
func (o *CoreMessageSendMessagesToConversationRequest) GetConversationidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Conversationid, true
}

// SetConversationid sets field value
func (o *CoreMessageSendMessagesToConversationRequest) SetConversationid(v int32) {
	o.Conversationid = v
}

// GetMessages returns the Messages field value
func (o *CoreMessageSendMessagesToConversationRequest) GetMessages() []CoreMessageSendMessagesToConversationRequestMessagesInner {
	if o == nil {
		var ret []CoreMessageSendMessagesToConversationRequestMessagesInner
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *CoreMessageSendMessagesToConversationRequest) GetMessagesOk() ([]CoreMessageSendMessagesToConversationRequestMessagesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *CoreMessageSendMessagesToConversationRequest) SetMessages(v []CoreMessageSendMessagesToConversationRequestMessagesInner) {
	o.Messages = v
}

func (o CoreMessageSendMessagesToConversationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreMessageSendMessagesToConversationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["conversationid"] = o.Conversationid
	toSerialize["messages"] = o.Messages
	return toSerialize, nil
}

func (o *CoreMessageSendMessagesToConversationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"conversationid",
		"messages",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreMessageSendMessagesToConversationRequest := _CoreMessageSendMessagesToConversationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreMessageSendMessagesToConversationRequest)

	if err != nil {
		return err
	}

	*o = CoreMessageSendMessagesToConversationRequest(varCoreMessageSendMessagesToConversationRequest)

	return err
}

type NullableCoreMessageSendMessagesToConversationRequest struct {
	value *CoreMessageSendMessagesToConversationRequest
	isSet bool
}

func (v NullableCoreMessageSendMessagesToConversationRequest) Get() *CoreMessageSendMessagesToConversationRequest {
	return v.value
}

func (v *NullableCoreMessageSendMessagesToConversationRequest) Set(val *CoreMessageSendMessagesToConversationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreMessageSendMessagesToConversationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreMessageSendMessagesToConversationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreMessageSendMessagesToConversationRequest(val *CoreMessageSendMessagesToConversationRequest) *NullableCoreMessageSendMessagesToConversationRequest {
	return &NullableCoreMessageSendMessagesToConversationRequest{value: val, isSet: true}
}

func (v NullableCoreMessageSendMessagesToConversationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreMessageSendMessagesToConversationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


