/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModDataGetEntries200ResponseEntriesInnerTagsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModDataGetEntries200ResponseEntriesInnerTagsInner{}

// ModDataGetEntries200ResponseEntriesInnerTagsInner struct for ModDataGetEntries200ResponseEntriesInnerTagsInner
type ModDataGetEntries200ResponseEntriesInnerTagsInner struct {
	// Whether the tag is flagged as inappropriate.
	Flag *int32 `json:"flag,omitempty"`
	// Tag id.
	Id *int32 `json:"id,omitempty"`
	// Whether this tag is standard.
	Isstandard *bool `json:"isstandard,omitempty"`
	// Id of the record tagged.
	Itemid *int32 `json:"itemid,omitempty"`
	// Tag name.
	Name *string `json:"name,omitempty"`
	// Tag ordering.
	Ordering *int32 `json:"ordering,omitempty"`
	// The raw, unnormalised name for the tag as entered by users.
	Rawname *string `json:"rawname,omitempty"`
	// Tag collection id.
	Tagcollid *int32 `json:"tagcollid,omitempty"`
	// Context the tag instance belongs to.
	Taginstancecontextid *int32 `json:"taginstancecontextid,omitempty"`
	// Tag instance id.
	Taginstanceid *int32 `json:"taginstanceid,omitempty"`
}

// NewModDataGetEntries200ResponseEntriesInnerTagsInner instantiates a new ModDataGetEntries200ResponseEntriesInnerTagsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModDataGetEntries200ResponseEntriesInnerTagsInner() *ModDataGetEntries200ResponseEntriesInnerTagsInner {
	this := ModDataGetEntries200ResponseEntriesInnerTagsInner{}
	var flag int32 = 0
	this.Flag = &flag
	var isstandard bool = false
	this.Isstandard = &isstandard
	return &this
}

// NewModDataGetEntries200ResponseEntriesInnerTagsInnerWithDefaults instantiates a new ModDataGetEntries200ResponseEntriesInnerTagsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModDataGetEntries200ResponseEntriesInnerTagsInnerWithDefaults() *ModDataGetEntries200ResponseEntriesInnerTagsInner {
	this := ModDataGetEntries200ResponseEntriesInnerTagsInner{}
	var flag int32 = 0
	this.Flag = &flag
	var isstandard bool = false
	this.Isstandard = &isstandard
	return &this
}

// GetFlag returns the Flag field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetFlag() int32 {
	if o == nil || IsNil(o.Flag) {
		var ret int32
		return ret
	}
	return *o.Flag
}

// GetFlagOk returns a tuple with the Flag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetFlagOk() (*int32, bool) {
	if o == nil || IsNil(o.Flag) {
		return nil, false
	}
	return o.Flag, true
}

// HasFlag returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) HasFlag() bool {
	if o != nil && !IsNil(o.Flag) {
		return true
	}

	return false
}

// SetFlag gets a reference to the given int32 and assigns it to the Flag field.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) SetFlag(v int32) {
	o.Flag = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) SetId(v int32) {
	o.Id = &v
}

// GetIsstandard returns the Isstandard field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetIsstandard() bool {
	if o == nil || IsNil(o.Isstandard) {
		var ret bool
		return ret
	}
	return *o.Isstandard
}

// GetIsstandardOk returns a tuple with the Isstandard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetIsstandardOk() (*bool, bool) {
	if o == nil || IsNil(o.Isstandard) {
		return nil, false
	}
	return o.Isstandard, true
}

// HasIsstandard returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) HasIsstandard() bool {
	if o != nil && !IsNil(o.Isstandard) {
		return true
	}

	return false
}

// SetIsstandard gets a reference to the given bool and assigns it to the Isstandard field.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) SetIsstandard(v bool) {
	o.Isstandard = &v
}

// GetItemid returns the Itemid field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetItemid() int32 {
	if o == nil || IsNil(o.Itemid) {
		var ret int32
		return ret
	}
	return *o.Itemid
}

// GetItemidOk returns a tuple with the Itemid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetItemidOk() (*int32, bool) {
	if o == nil || IsNil(o.Itemid) {
		return nil, false
	}
	return o.Itemid, true
}

// HasItemid returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) HasItemid() bool {
	if o != nil && !IsNil(o.Itemid) {
		return true
	}

	return false
}

// SetItemid gets a reference to the given int32 and assigns it to the Itemid field.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) SetItemid(v int32) {
	o.Itemid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) SetName(v string) {
	o.Name = &v
}

// GetOrdering returns the Ordering field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetOrdering() int32 {
	if o == nil || IsNil(o.Ordering) {
		var ret int32
		return ret
	}
	return *o.Ordering
}

// GetOrderingOk returns a tuple with the Ordering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetOrderingOk() (*int32, bool) {
	if o == nil || IsNil(o.Ordering) {
		return nil, false
	}
	return o.Ordering, true
}

// HasOrdering returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) HasOrdering() bool {
	if o != nil && !IsNil(o.Ordering) {
		return true
	}

	return false
}

// SetOrdering gets a reference to the given int32 and assigns it to the Ordering field.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) SetOrdering(v int32) {
	o.Ordering = &v
}

// GetRawname returns the Rawname field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetRawname() string {
	if o == nil || IsNil(o.Rawname) {
		var ret string
		return ret
	}
	return *o.Rawname
}

// GetRawnameOk returns a tuple with the Rawname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetRawnameOk() (*string, bool) {
	if o == nil || IsNil(o.Rawname) {
		return nil, false
	}
	return o.Rawname, true
}

// HasRawname returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) HasRawname() bool {
	if o != nil && !IsNil(o.Rawname) {
		return true
	}

	return false
}

// SetRawname gets a reference to the given string and assigns it to the Rawname field.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) SetRawname(v string) {
	o.Rawname = &v
}

// GetTagcollid returns the Tagcollid field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetTagcollid() int32 {
	if o == nil || IsNil(o.Tagcollid) {
		var ret int32
		return ret
	}
	return *o.Tagcollid
}

// GetTagcollidOk returns a tuple with the Tagcollid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetTagcollidOk() (*int32, bool) {
	if o == nil || IsNil(o.Tagcollid) {
		return nil, false
	}
	return o.Tagcollid, true
}

// HasTagcollid returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) HasTagcollid() bool {
	if o != nil && !IsNil(o.Tagcollid) {
		return true
	}

	return false
}

// SetTagcollid gets a reference to the given int32 and assigns it to the Tagcollid field.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) SetTagcollid(v int32) {
	o.Tagcollid = &v
}

// GetTaginstancecontextid returns the Taginstancecontextid field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetTaginstancecontextid() int32 {
	if o == nil || IsNil(o.Taginstancecontextid) {
		var ret int32
		return ret
	}
	return *o.Taginstancecontextid
}

// GetTaginstancecontextidOk returns a tuple with the Taginstancecontextid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetTaginstancecontextidOk() (*int32, bool) {
	if o == nil || IsNil(o.Taginstancecontextid) {
		return nil, false
	}
	return o.Taginstancecontextid, true
}

// HasTaginstancecontextid returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) HasTaginstancecontextid() bool {
	if o != nil && !IsNil(o.Taginstancecontextid) {
		return true
	}

	return false
}

// SetTaginstancecontextid gets a reference to the given int32 and assigns it to the Taginstancecontextid field.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) SetTaginstancecontextid(v int32) {
	o.Taginstancecontextid = &v
}

// GetTaginstanceid returns the Taginstanceid field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetTaginstanceid() int32 {
	if o == nil || IsNil(o.Taginstanceid) {
		var ret int32
		return ret
	}
	return *o.Taginstanceid
}

// GetTaginstanceidOk returns a tuple with the Taginstanceid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) GetTaginstanceidOk() (*int32, bool) {
	if o == nil || IsNil(o.Taginstanceid) {
		return nil, false
	}
	return o.Taginstanceid, true
}

// HasTaginstanceid returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) HasTaginstanceid() bool {
	if o != nil && !IsNil(o.Taginstanceid) {
		return true
	}

	return false
}

// SetTaginstanceid gets a reference to the given int32 and assigns it to the Taginstanceid field.
func (o *ModDataGetEntries200ResponseEntriesInnerTagsInner) SetTaginstanceid(v int32) {
	o.Taginstanceid = &v
}

func (o ModDataGetEntries200ResponseEntriesInnerTagsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModDataGetEntries200ResponseEntriesInnerTagsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Flag) {
		toSerialize["flag"] = o.Flag
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Isstandard) {
		toSerialize["isstandard"] = o.Isstandard
	}
	if !IsNil(o.Itemid) {
		toSerialize["itemid"] = o.Itemid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Ordering) {
		toSerialize["ordering"] = o.Ordering
	}
	if !IsNil(o.Rawname) {
		toSerialize["rawname"] = o.Rawname
	}
	if !IsNil(o.Tagcollid) {
		toSerialize["tagcollid"] = o.Tagcollid
	}
	if !IsNil(o.Taginstancecontextid) {
		toSerialize["taginstancecontextid"] = o.Taginstancecontextid
	}
	if !IsNil(o.Taginstanceid) {
		toSerialize["taginstanceid"] = o.Taginstanceid
	}
	return toSerialize, nil
}

type NullableModDataGetEntries200ResponseEntriesInnerTagsInner struct {
	value *ModDataGetEntries200ResponseEntriesInnerTagsInner
	isSet bool
}

func (v NullableModDataGetEntries200ResponseEntriesInnerTagsInner) Get() *ModDataGetEntries200ResponseEntriesInnerTagsInner {
	return v.value
}

func (v *NullableModDataGetEntries200ResponseEntriesInnerTagsInner) Set(val *ModDataGetEntries200ResponseEntriesInnerTagsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModDataGetEntries200ResponseEntriesInnerTagsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModDataGetEntries200ResponseEntriesInnerTagsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModDataGetEntries200ResponseEntriesInnerTagsInner(val *ModDataGetEntries200ResponseEntriesInnerTagsInner) *NullableModDataGetEntries200ResponseEntriesInnerTagsInner {
	return &NullableModDataGetEntries200ResponseEntriesInnerTagsInner{value: val, isSet: true}
}

func (v NullableModDataGetEntries200ResponseEntriesInnerTagsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModDataGetEntries200ResponseEntriesInnerTagsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


