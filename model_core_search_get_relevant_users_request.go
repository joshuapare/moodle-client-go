/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreSearchGetRelevantUsersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreSearchGetRelevantUsersRequest{}

// CoreSearchGetRelevantUsersRequest struct for CoreSearchGetRelevantUsersRequest
type CoreSearchGetRelevantUsersRequest struct {
	// Course id (0 if none)
	Courseid int32 `json:"courseid"`
	// Query string (full or partial user full name or other details)
	Query string `json:"query"`
}

type _CoreSearchGetRelevantUsersRequest CoreSearchGetRelevantUsersRequest

// NewCoreSearchGetRelevantUsersRequest instantiates a new CoreSearchGetRelevantUsersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreSearchGetRelevantUsersRequest(courseid int32, query string) *CoreSearchGetRelevantUsersRequest {
	this := CoreSearchGetRelevantUsersRequest{}
	this.Courseid = courseid
	this.Query = query
	return &this
}

// NewCoreSearchGetRelevantUsersRequestWithDefaults instantiates a new CoreSearchGetRelevantUsersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreSearchGetRelevantUsersRequestWithDefaults() *CoreSearchGetRelevantUsersRequest {
	this := CoreSearchGetRelevantUsersRequest{}
	var courseid int32 = null
	this.Courseid = courseid
	var query string = "null"
	this.Query = query
	return &this
}

// GetCourseid returns the Courseid field value
func (o *CoreSearchGetRelevantUsersRequest) GetCourseid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Courseid
}

// GetCourseidOk returns a tuple with the Courseid field value
// and a boolean to check if the value has been set.
func (o *CoreSearchGetRelevantUsersRequest) GetCourseidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Courseid, true
}

// SetCourseid sets field value
func (o *CoreSearchGetRelevantUsersRequest) SetCourseid(v int32) {
	o.Courseid = v
}

// GetQuery returns the Query field value
func (o *CoreSearchGetRelevantUsersRequest) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *CoreSearchGetRelevantUsersRequest) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *CoreSearchGetRelevantUsersRequest) SetQuery(v string) {
	o.Query = v
}

func (o CoreSearchGetRelevantUsersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreSearchGetRelevantUsersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["courseid"] = o.Courseid
	toSerialize["query"] = o.Query
	return toSerialize, nil
}

func (o *CoreSearchGetRelevantUsersRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"courseid",
		"query",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreSearchGetRelevantUsersRequest := _CoreSearchGetRelevantUsersRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreSearchGetRelevantUsersRequest)

	if err != nil {
		return err
	}

	*o = CoreSearchGetRelevantUsersRequest(varCoreSearchGetRelevantUsersRequest)

	return err
}

type NullableCoreSearchGetRelevantUsersRequest struct {
	value *CoreSearchGetRelevantUsersRequest
	isSet bool
}

func (v NullableCoreSearchGetRelevantUsersRequest) Get() *CoreSearchGetRelevantUsersRequest {
	return v.value
}

func (v *NullableCoreSearchGetRelevantUsersRequest) Set(val *CoreSearchGetRelevantUsersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreSearchGetRelevantUsersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreSearchGetRelevantUsersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreSearchGetRelevantUsersRequest(val *CoreSearchGetRelevantUsersRequest) *NullableCoreSearchGetRelevantUsersRequest {
	return &NullableCoreSearchGetRelevantUsersRequest{value: val, isSet: true}
}

func (v NullableCoreSearchGetRelevantUsersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreSearchGetRelevantUsersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


