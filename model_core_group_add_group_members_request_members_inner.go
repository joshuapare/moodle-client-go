/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreGroupAddGroupMembersRequestMembersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreGroupAddGroupMembersRequestMembersInner{}

// CoreGroupAddGroupMembersRequestMembersInner struct for CoreGroupAddGroupMembersRequestMembersInner
type CoreGroupAddGroupMembersRequestMembersInner struct {
	// group record id
	Groupid *int32 `json:"groupid,omitempty"`
	// user id
	Userid *int32 `json:"userid,omitempty"`
}

// NewCoreGroupAddGroupMembersRequestMembersInner instantiates a new CoreGroupAddGroupMembersRequestMembersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreGroupAddGroupMembersRequestMembersInner() *CoreGroupAddGroupMembersRequestMembersInner {
	this := CoreGroupAddGroupMembersRequestMembersInner{}
	var groupid int32 = null
	this.Groupid = &groupid
	return &this
}

// NewCoreGroupAddGroupMembersRequestMembersInnerWithDefaults instantiates a new CoreGroupAddGroupMembersRequestMembersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreGroupAddGroupMembersRequestMembersInnerWithDefaults() *CoreGroupAddGroupMembersRequestMembersInner {
	this := CoreGroupAddGroupMembersRequestMembersInner{}
	var groupid int32 = null
	this.Groupid = &groupid
	return &this
}

// GetGroupid returns the Groupid field value if set, zero value otherwise.
func (o *CoreGroupAddGroupMembersRequestMembersInner) GetGroupid() int32 {
	if o == nil || IsNil(o.Groupid) {
		var ret int32
		return ret
	}
	return *o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGroupAddGroupMembersRequestMembersInner) GetGroupidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupid) {
		return nil, false
	}
	return o.Groupid, true
}

// HasGroupid returns a boolean if a field has been set.
func (o *CoreGroupAddGroupMembersRequestMembersInner) HasGroupid() bool {
	if o != nil && !IsNil(o.Groupid) {
		return true
	}

	return false
}

// SetGroupid gets a reference to the given int32 and assigns it to the Groupid field.
func (o *CoreGroupAddGroupMembersRequestMembersInner) SetGroupid(v int32) {
	o.Groupid = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *CoreGroupAddGroupMembersRequestMembersInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGroupAddGroupMembersRequestMembersInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *CoreGroupAddGroupMembersRequestMembersInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *CoreGroupAddGroupMembersRequestMembersInner) SetUserid(v int32) {
	o.Userid = &v
}

func (o CoreGroupAddGroupMembersRequestMembersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreGroupAddGroupMembersRequestMembersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Groupid) {
		toSerialize["groupid"] = o.Groupid
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

type NullableCoreGroupAddGroupMembersRequestMembersInner struct {
	value *CoreGroupAddGroupMembersRequestMembersInner
	isSet bool
}

func (v NullableCoreGroupAddGroupMembersRequestMembersInner) Get() *CoreGroupAddGroupMembersRequestMembersInner {
	return v.value
}

func (v *NullableCoreGroupAddGroupMembersRequestMembersInner) Set(val *CoreGroupAddGroupMembersRequestMembersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreGroupAddGroupMembersRequestMembersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreGroupAddGroupMembersRequestMembersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreGroupAddGroupMembersRequestMembersInner(val *CoreGroupAddGroupMembersRequestMembersInner) *NullableCoreGroupAddGroupMembersRequestMembersInner {
	return &NullableCoreGroupAddGroupMembersRequestMembersInner{value: val, isSet: true}
}

func (v NullableCoreGroupAddGroupMembersRequestMembersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreGroupAddGroupMembersRequestMembersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


