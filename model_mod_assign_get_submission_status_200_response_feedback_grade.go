/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModAssignGetSubmissionStatus200ResponseFeedbackGrade type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModAssignGetSubmissionStatus200ResponseFeedbackGrade{}

// ModAssignGetSubmissionStatus200ResponseFeedbackGrade struct for ModAssignGetSubmissionStatus200ResponseFeedbackGrade
type ModAssignGetSubmissionStatus200ResponseFeedbackGrade struct {
	// assignment id
	Assignment *int32 `json:"assignment,omitempty"`
	// attempt number
	Attemptnumber int32 `json:"attemptnumber"`
	// grade
	Grade string `json:"grade"`
	// grade rendered into a format suitable for display
	Gradefordisplay *string `json:"gradefordisplay,omitempty"`
	// grader, -1 if grader is hidden
	Grader int32 `json:"grader"`
	// grade id
	Id int32 `json:"id"`
	// grade creation time
	Timecreated int32 `json:"timecreated"`
	// grade last modified time
	Timemodified int32 `json:"timemodified"`
	// student id
	Userid int32 `json:"userid"`
}

type _ModAssignGetSubmissionStatus200ResponseFeedbackGrade ModAssignGetSubmissionStatus200ResponseFeedbackGrade

// NewModAssignGetSubmissionStatus200ResponseFeedbackGrade instantiates a new ModAssignGetSubmissionStatus200ResponseFeedbackGrade object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModAssignGetSubmissionStatus200ResponseFeedbackGrade(attemptnumber int32, grade string, grader int32, id int32, timecreated int32, timemodified int32, userid int32) *ModAssignGetSubmissionStatus200ResponseFeedbackGrade {
	this := ModAssignGetSubmissionStatus200ResponseFeedbackGrade{}
	this.Attemptnumber = attemptnumber
	this.Grade = grade
	this.Grader = grader
	this.Id = id
	this.Timecreated = timecreated
	this.Timemodified = timemodified
	this.Userid = userid
	return &this
}

// NewModAssignGetSubmissionStatus200ResponseFeedbackGradeWithDefaults instantiates a new ModAssignGetSubmissionStatus200ResponseFeedbackGrade object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModAssignGetSubmissionStatus200ResponseFeedbackGradeWithDefaults() *ModAssignGetSubmissionStatus200ResponseFeedbackGrade {
	this := ModAssignGetSubmissionStatus200ResponseFeedbackGrade{}
	return &this
}

// GetAssignment returns the Assignment field value if set, zero value otherwise.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetAssignment() int32 {
	if o == nil || IsNil(o.Assignment) {
		var ret int32
		return ret
	}
	return *o.Assignment
}

// GetAssignmentOk returns a tuple with the Assignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetAssignmentOk() (*int32, bool) {
	if o == nil || IsNil(o.Assignment) {
		return nil, false
	}
	return o.Assignment, true
}

// HasAssignment returns a boolean if a field has been set.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) HasAssignment() bool {
	if o != nil && !IsNil(o.Assignment) {
		return true
	}

	return false
}

// SetAssignment gets a reference to the given int32 and assigns it to the Assignment field.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) SetAssignment(v int32) {
	o.Assignment = &v
}

// GetAttemptnumber returns the Attemptnumber field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetAttemptnumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Attemptnumber
}

// GetAttemptnumberOk returns a tuple with the Attemptnumber field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetAttemptnumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attemptnumber, true
}

// SetAttemptnumber sets field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) SetAttemptnumber(v int32) {
	o.Attemptnumber = v
}

// GetGrade returns the Grade field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetGrade() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Grade
}

// GetGradeOk returns a tuple with the Grade field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetGradeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Grade, true
}

// SetGrade sets field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) SetGrade(v string) {
	o.Grade = v
}

// GetGradefordisplay returns the Gradefordisplay field value if set, zero value otherwise.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetGradefordisplay() string {
	if o == nil || IsNil(o.Gradefordisplay) {
		var ret string
		return ret
	}
	return *o.Gradefordisplay
}

// GetGradefordisplayOk returns a tuple with the Gradefordisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetGradefordisplayOk() (*string, bool) {
	if o == nil || IsNil(o.Gradefordisplay) {
		return nil, false
	}
	return o.Gradefordisplay, true
}

// HasGradefordisplay returns a boolean if a field has been set.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) HasGradefordisplay() bool {
	if o != nil && !IsNil(o.Gradefordisplay) {
		return true
	}

	return false
}

// SetGradefordisplay gets a reference to the given string and assigns it to the Gradefordisplay field.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) SetGradefordisplay(v string) {
	o.Gradefordisplay = &v
}

// GetGrader returns the Grader field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetGrader() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Grader
}

// GetGraderOk returns a tuple with the Grader field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetGraderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Grader, true
}

// SetGrader sets field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) SetGrader(v int32) {
	o.Grader = v
}

// GetId returns the Id field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) SetId(v int32) {
	o.Id = v
}

// GetTimecreated returns the Timecreated field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetTimecreated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetTimecreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timecreated, true
}

// SetTimecreated sets field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) SetTimecreated(v int32) {
	o.Timecreated = v
}

// GetTimemodified returns the Timemodified field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetTimemodified() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetTimemodifiedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timemodified, true
}

// SetTimemodified sets field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) SetTimemodified(v int32) {
	o.Timemodified = v
}

// GetUserid returns the Userid field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) SetUserid(v int32) {
	o.Userid = v
}

func (o ModAssignGetSubmissionStatus200ResponseFeedbackGrade) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModAssignGetSubmissionStatus200ResponseFeedbackGrade) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Assignment) {
		toSerialize["assignment"] = o.Assignment
	}
	toSerialize["attemptnumber"] = o.Attemptnumber
	toSerialize["grade"] = o.Grade
	if !IsNil(o.Gradefordisplay) {
		toSerialize["gradefordisplay"] = o.Gradefordisplay
	}
	toSerialize["grader"] = o.Grader
	toSerialize["id"] = o.Id
	toSerialize["timecreated"] = o.Timecreated
	toSerialize["timemodified"] = o.Timemodified
	toSerialize["userid"] = o.Userid
	return toSerialize, nil
}

func (o *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attemptnumber",
		"grade",
		"grader",
		"id",
		"timecreated",
		"timemodified",
		"userid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModAssignGetSubmissionStatus200ResponseFeedbackGrade := _ModAssignGetSubmissionStatus200ResponseFeedbackGrade{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModAssignGetSubmissionStatus200ResponseFeedbackGrade)

	if err != nil {
		return err
	}

	*o = ModAssignGetSubmissionStatus200ResponseFeedbackGrade(varModAssignGetSubmissionStatus200ResponseFeedbackGrade)

	return err
}

type NullableModAssignGetSubmissionStatus200ResponseFeedbackGrade struct {
	value *ModAssignGetSubmissionStatus200ResponseFeedbackGrade
	isSet bool
}

func (v NullableModAssignGetSubmissionStatus200ResponseFeedbackGrade) Get() *ModAssignGetSubmissionStatus200ResponseFeedbackGrade {
	return v.value
}

func (v *NullableModAssignGetSubmissionStatus200ResponseFeedbackGrade) Set(val *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) {
	v.value = val
	v.isSet = true
}

func (v NullableModAssignGetSubmissionStatus200ResponseFeedbackGrade) IsSet() bool {
	return v.isSet
}

func (v *NullableModAssignGetSubmissionStatus200ResponseFeedbackGrade) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModAssignGetSubmissionStatus200ResponseFeedbackGrade(val *ModAssignGetSubmissionStatus200ResponseFeedbackGrade) *NullableModAssignGetSubmissionStatus200ResponseFeedbackGrade {
	return &NullableModAssignGetSubmissionStatus200ResponseFeedbackGrade{value: val, isSet: true}
}

func (v NullableModAssignGetSubmissionStatus200ResponseFeedbackGrade) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModAssignGetSubmissionStatus200ResponseFeedbackGrade) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


