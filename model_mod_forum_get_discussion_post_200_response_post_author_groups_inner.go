/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner{}

// ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner struct for ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner
type ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner struct {
	// id
	Id *int32 `json:"id,omitempty"`
	// name
	Name *string `json:"name,omitempty"`
	Urls *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInnerUrls `json:"urls,omitempty"`
}

// NewModForumGetDiscussionPost200ResponsePostAuthorGroupsInner instantiates a new ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumGetDiscussionPost200ResponsePostAuthorGroupsInner() *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner {
	this := ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner{}
	return &this
}

// NewModForumGetDiscussionPost200ResponsePostAuthorGroupsInnerWithDefaults instantiates a new ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumGetDiscussionPost200ResponsePostAuthorGroupsInnerWithDefaults() *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner {
	this := ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) SetName(v string) {
	o.Name = &v
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) GetUrls() ModForumGetDiscussionPost200ResponsePostAuthorGroupsInnerUrls {
	if o == nil || IsNil(o.Urls) {
		var ret ModForumGetDiscussionPost200ResponsePostAuthorGroupsInnerUrls
		return ret
	}
	return *o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) GetUrlsOk() (*ModForumGetDiscussionPost200ResponsePostAuthorGroupsInnerUrls, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) HasUrls() bool {
	if o != nil && !IsNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given ModForumGetDiscussionPost200ResponsePostAuthorGroupsInnerUrls and assigns it to the Urls field.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) SetUrls(v ModForumGetDiscussionPost200ResponsePostAuthorGroupsInnerUrls) {
	o.Urls = &v
}

func (o ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Urls) {
		toSerialize["urls"] = o.Urls
	}
	return toSerialize, nil
}

type NullableModForumGetDiscussionPost200ResponsePostAuthorGroupsInner struct {
	value *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner
	isSet bool
}

func (v NullableModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) Get() *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner {
	return v.value
}

func (v *NullableModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) Set(val *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumGetDiscussionPost200ResponsePostAuthorGroupsInner(val *ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) *NullableModForumGetDiscussionPost200ResponsePostAuthorGroupsInner {
	return &NullableModForumGetDiscussionPost200ResponsePostAuthorGroupsInner{value: val, isSet: true}
}

func (v NullableModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


