/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModDataGetDataAccessInformation200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModDataGetDataAccessInformation200Response{}

// ModDataGetDataAccessInformation200Response struct for ModDataGetDataAccessInformation200Response
type ModDataGetDataAccessInformation200Response struct {
	// Whether the user can add entries or not.
	Canaddentry bool `json:"canaddentry"`
	// Whether the user can approve entries or not.
	Canapprove bool `json:"canapprove"`
	// Whether the user can manage entries or not.
	Canmanageentries bool `json:"canmanageentries"`
	// The number of entries left to complete the activity.
	Entrieslefttoadd int32 `json:"entrieslefttoadd"`
	// The number of entries left to view other users entries.
	Entrieslefttoview int32 `json:"entrieslefttoview"`
	// User current group id (calculated)
	Groupid int32 `json:"groupid"`
	// Whether the database is in read mode only.
	Inreadonlyperiod bool `json:"inreadonlyperiod"`
	// The number of entries the current user added.
	Numentries int32 `json:"numentries"`
	// Whether the database is available or not by time restrictions.
	Timeavailable bool `json:"timeavailable"`
	Warnings []AuthEmailSignupUser200ResponseWarningsInner `json:"warnings,omitempty"`
}

type _ModDataGetDataAccessInformation200Response ModDataGetDataAccessInformation200Response

// NewModDataGetDataAccessInformation200Response instantiates a new ModDataGetDataAccessInformation200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModDataGetDataAccessInformation200Response(canaddentry bool, canapprove bool, canmanageentries bool, entrieslefttoadd int32, entrieslefttoview int32, groupid int32, inreadonlyperiod bool, numentries int32, timeavailable bool) *ModDataGetDataAccessInformation200Response {
	this := ModDataGetDataAccessInformation200Response{}
	this.Canaddentry = canaddentry
	this.Canapprove = canapprove
	this.Canmanageentries = canmanageentries
	this.Entrieslefttoadd = entrieslefttoadd
	this.Entrieslefttoview = entrieslefttoview
	this.Groupid = groupid
	this.Inreadonlyperiod = inreadonlyperiod
	this.Numentries = numentries
	this.Timeavailable = timeavailable
	return &this
}

// NewModDataGetDataAccessInformation200ResponseWithDefaults instantiates a new ModDataGetDataAccessInformation200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModDataGetDataAccessInformation200ResponseWithDefaults() *ModDataGetDataAccessInformation200Response {
	this := ModDataGetDataAccessInformation200Response{}
	var canaddentry bool = null
	this.Canaddentry = canaddentry
	var canapprove bool = null
	this.Canapprove = canapprove
	var canmanageentries bool = null
	this.Canmanageentries = canmanageentries
	var entrieslefttoadd int32 = null
	this.Entrieslefttoadd = entrieslefttoadd
	var entrieslefttoview int32 = null
	this.Entrieslefttoview = entrieslefttoview
	var groupid int32 = null
	this.Groupid = groupid
	var inreadonlyperiod bool = null
	this.Inreadonlyperiod = inreadonlyperiod
	var numentries int32 = null
	this.Numentries = numentries
	var timeavailable bool = null
	this.Timeavailable = timeavailable
	return &this
}

// GetCanaddentry returns the Canaddentry field value
func (o *ModDataGetDataAccessInformation200Response) GetCanaddentry() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canaddentry
}

// GetCanaddentryOk returns a tuple with the Canaddentry field value
// and a boolean to check if the value has been set.
func (o *ModDataGetDataAccessInformation200Response) GetCanaddentryOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canaddentry, true
}

// SetCanaddentry sets field value
func (o *ModDataGetDataAccessInformation200Response) SetCanaddentry(v bool) {
	o.Canaddentry = v
}

// GetCanapprove returns the Canapprove field value
func (o *ModDataGetDataAccessInformation200Response) GetCanapprove() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canapprove
}

// GetCanapproveOk returns a tuple with the Canapprove field value
// and a boolean to check if the value has been set.
func (o *ModDataGetDataAccessInformation200Response) GetCanapproveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canapprove, true
}

// SetCanapprove sets field value
func (o *ModDataGetDataAccessInformation200Response) SetCanapprove(v bool) {
	o.Canapprove = v
}

// GetCanmanageentries returns the Canmanageentries field value
func (o *ModDataGetDataAccessInformation200Response) GetCanmanageentries() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canmanageentries
}

// GetCanmanageentriesOk returns a tuple with the Canmanageentries field value
// and a boolean to check if the value has been set.
func (o *ModDataGetDataAccessInformation200Response) GetCanmanageentriesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canmanageentries, true
}

// SetCanmanageentries sets field value
func (o *ModDataGetDataAccessInformation200Response) SetCanmanageentries(v bool) {
	o.Canmanageentries = v
}

// GetEntrieslefttoadd returns the Entrieslefttoadd field value
func (o *ModDataGetDataAccessInformation200Response) GetEntrieslefttoadd() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Entrieslefttoadd
}

// GetEntrieslefttoaddOk returns a tuple with the Entrieslefttoadd field value
// and a boolean to check if the value has been set.
func (o *ModDataGetDataAccessInformation200Response) GetEntrieslefttoaddOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entrieslefttoadd, true
}

// SetEntrieslefttoadd sets field value
func (o *ModDataGetDataAccessInformation200Response) SetEntrieslefttoadd(v int32) {
	o.Entrieslefttoadd = v
}

// GetEntrieslefttoview returns the Entrieslefttoview field value
func (o *ModDataGetDataAccessInformation200Response) GetEntrieslefttoview() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Entrieslefttoview
}

// GetEntrieslefttoviewOk returns a tuple with the Entrieslefttoview field value
// and a boolean to check if the value has been set.
func (o *ModDataGetDataAccessInformation200Response) GetEntrieslefttoviewOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entrieslefttoview, true
}

// SetEntrieslefttoview sets field value
func (o *ModDataGetDataAccessInformation200Response) SetEntrieslefttoview(v int32) {
	o.Entrieslefttoview = v
}

// GetGroupid returns the Groupid field value
func (o *ModDataGetDataAccessInformation200Response) GetGroupid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value
// and a boolean to check if the value has been set.
func (o *ModDataGetDataAccessInformation200Response) GetGroupidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Groupid, true
}

// SetGroupid sets field value
func (o *ModDataGetDataAccessInformation200Response) SetGroupid(v int32) {
	o.Groupid = v
}

// GetInreadonlyperiod returns the Inreadonlyperiod field value
func (o *ModDataGetDataAccessInformation200Response) GetInreadonlyperiod() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Inreadonlyperiod
}

// GetInreadonlyperiodOk returns a tuple with the Inreadonlyperiod field value
// and a boolean to check if the value has been set.
func (o *ModDataGetDataAccessInformation200Response) GetInreadonlyperiodOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Inreadonlyperiod, true
}

// SetInreadonlyperiod sets field value
func (o *ModDataGetDataAccessInformation200Response) SetInreadonlyperiod(v bool) {
	o.Inreadonlyperiod = v
}

// GetNumentries returns the Numentries field value
func (o *ModDataGetDataAccessInformation200Response) GetNumentries() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Numentries
}

// GetNumentriesOk returns a tuple with the Numentries field value
// and a boolean to check if the value has been set.
func (o *ModDataGetDataAccessInformation200Response) GetNumentriesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Numentries, true
}

// SetNumentries sets field value
func (o *ModDataGetDataAccessInformation200Response) SetNumentries(v int32) {
	o.Numentries = v
}

// GetTimeavailable returns the Timeavailable field value
func (o *ModDataGetDataAccessInformation200Response) GetTimeavailable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Timeavailable
}

// GetTimeavailableOk returns a tuple with the Timeavailable field value
// and a boolean to check if the value has been set.
func (o *ModDataGetDataAccessInformation200Response) GetTimeavailableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timeavailable, true
}

// SetTimeavailable sets field value
func (o *ModDataGetDataAccessInformation200Response) SetTimeavailable(v bool) {
	o.Timeavailable = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ModDataGetDataAccessInformation200Response) GetWarnings() []AuthEmailSignupUser200ResponseWarningsInner {
	if o == nil || IsNil(o.Warnings) {
		var ret []AuthEmailSignupUser200ResponseWarningsInner
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetDataAccessInformation200Response) GetWarningsOk() ([]AuthEmailSignupUser200ResponseWarningsInner, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ModDataGetDataAccessInformation200Response) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []AuthEmailSignupUser200ResponseWarningsInner and assigns it to the Warnings field.
func (o *ModDataGetDataAccessInformation200Response) SetWarnings(v []AuthEmailSignupUser200ResponseWarningsInner) {
	o.Warnings = v
}

func (o ModDataGetDataAccessInformation200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModDataGetDataAccessInformation200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["canaddentry"] = o.Canaddentry
	toSerialize["canapprove"] = o.Canapprove
	toSerialize["canmanageentries"] = o.Canmanageentries
	toSerialize["entrieslefttoadd"] = o.Entrieslefttoadd
	toSerialize["entrieslefttoview"] = o.Entrieslefttoview
	toSerialize["groupid"] = o.Groupid
	toSerialize["inreadonlyperiod"] = o.Inreadonlyperiod
	toSerialize["numentries"] = o.Numentries
	toSerialize["timeavailable"] = o.Timeavailable
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

func (o *ModDataGetDataAccessInformation200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"canaddentry",
		"canapprove",
		"canmanageentries",
		"entrieslefttoadd",
		"entrieslefttoview",
		"groupid",
		"inreadonlyperiod",
		"numentries",
		"timeavailable",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModDataGetDataAccessInformation200Response := _ModDataGetDataAccessInformation200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModDataGetDataAccessInformation200Response)

	if err != nil {
		return err
	}

	*o = ModDataGetDataAccessInformation200Response(varModDataGetDataAccessInformation200Response)

	return err
}

type NullableModDataGetDataAccessInformation200Response struct {
	value *ModDataGetDataAccessInformation200Response
	isSet bool
}

func (v NullableModDataGetDataAccessInformation200Response) Get() *ModDataGetDataAccessInformation200Response {
	return v.value
}

func (v *NullableModDataGetDataAccessInformation200Response) Set(val *ModDataGetDataAccessInformation200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableModDataGetDataAccessInformation200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableModDataGetDataAccessInformation200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModDataGetDataAccessInformation200Response(val *ModDataGetDataAccessInformation200Response) *NullableModDataGetDataAccessInformation200Response {
	return &NullableModDataGetDataAccessInformation200Response{value: val, isSet: true}
}

func (v NullableModDataGetDataAccessInformation200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModDataGetDataAccessInformation200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


