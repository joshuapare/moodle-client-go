/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreBlockGetDashboardBlocks200ResponseBlocksInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreBlockGetDashboardBlocks200ResponseBlocksInner{}

// CoreBlockGetDashboardBlocks200ResponseBlocksInner Block information.
type CoreBlockGetDashboardBlocks200ResponseBlocksInner struct {
	// Whether the block is collapsible.
	Collapsible *bool `json:"collapsible,omitempty"`
	Configs []CoreBlockGetDashboardBlocks200ResponseBlocksInnerConfigsInner `json:"configs,omitempty"`
	Contents *CoreBlockGetDashboardBlocks200ResponseBlocksInnerContents `json:"contents,omitempty"`
	// Whether the block is dockable.
	Dockable *bool `json:"dockable,omitempty"`
	// Block instance id.
	Instanceid *int32 `json:"instanceid,omitempty"`
	// Block name.
	Name *string `json:"name,omitempty"`
	// Position id.
	Positionid *int32 `json:"positionid,omitempty"`
	// Block region.
	Region *string `json:"region,omitempty"`
	// Whether the block is visible.
	Visible *bool `json:"visible,omitempty"`
	// Used to order blocks within a region.
	Weight *int32 `json:"weight,omitempty"`
}

// NewCoreBlockGetDashboardBlocks200ResponseBlocksInner instantiates a new CoreBlockGetDashboardBlocks200ResponseBlocksInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreBlockGetDashboardBlocks200ResponseBlocksInner() *CoreBlockGetDashboardBlocks200ResponseBlocksInner {
	this := CoreBlockGetDashboardBlocks200ResponseBlocksInner{}
	return &this
}

// NewCoreBlockGetDashboardBlocks200ResponseBlocksInnerWithDefaults instantiates a new CoreBlockGetDashboardBlocks200ResponseBlocksInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreBlockGetDashboardBlocks200ResponseBlocksInnerWithDefaults() *CoreBlockGetDashboardBlocks200ResponseBlocksInner {
	this := CoreBlockGetDashboardBlocks200ResponseBlocksInner{}
	return &this
}

// GetCollapsible returns the Collapsible field value if set, zero value otherwise.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetCollapsible() bool {
	if o == nil || IsNil(o.Collapsible) {
		var ret bool
		return ret
	}
	return *o.Collapsible
}

// GetCollapsibleOk returns a tuple with the Collapsible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetCollapsibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Collapsible) {
		return nil, false
	}
	return o.Collapsible, true
}

// HasCollapsible returns a boolean if a field has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) HasCollapsible() bool {
	if o != nil && !IsNil(o.Collapsible) {
		return true
	}

	return false
}

// SetCollapsible gets a reference to the given bool and assigns it to the Collapsible field.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) SetCollapsible(v bool) {
	o.Collapsible = &v
}

// GetConfigs returns the Configs field value if set, zero value otherwise.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetConfigs() []CoreBlockGetDashboardBlocks200ResponseBlocksInnerConfigsInner {
	if o == nil || IsNil(o.Configs) {
		var ret []CoreBlockGetDashboardBlocks200ResponseBlocksInnerConfigsInner
		return ret
	}
	return o.Configs
}

// GetConfigsOk returns a tuple with the Configs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetConfigsOk() ([]CoreBlockGetDashboardBlocks200ResponseBlocksInnerConfigsInner, bool) {
	if o == nil || IsNil(o.Configs) {
		return nil, false
	}
	return o.Configs, true
}

// HasConfigs returns a boolean if a field has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) HasConfigs() bool {
	if o != nil && !IsNil(o.Configs) {
		return true
	}

	return false
}

// SetConfigs gets a reference to the given []CoreBlockGetDashboardBlocks200ResponseBlocksInnerConfigsInner and assigns it to the Configs field.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) SetConfigs(v []CoreBlockGetDashboardBlocks200ResponseBlocksInnerConfigsInner) {
	o.Configs = v
}

// GetContents returns the Contents field value if set, zero value otherwise.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetContents() CoreBlockGetDashboardBlocks200ResponseBlocksInnerContents {
	if o == nil || IsNil(o.Contents) {
		var ret CoreBlockGetDashboardBlocks200ResponseBlocksInnerContents
		return ret
	}
	return *o.Contents
}

// GetContentsOk returns a tuple with the Contents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetContentsOk() (*CoreBlockGetDashboardBlocks200ResponseBlocksInnerContents, bool) {
	if o == nil || IsNil(o.Contents) {
		return nil, false
	}
	return o.Contents, true
}

// HasContents returns a boolean if a field has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) HasContents() bool {
	if o != nil && !IsNil(o.Contents) {
		return true
	}

	return false
}

// SetContents gets a reference to the given CoreBlockGetDashboardBlocks200ResponseBlocksInnerContents and assigns it to the Contents field.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) SetContents(v CoreBlockGetDashboardBlocks200ResponseBlocksInnerContents) {
	o.Contents = &v
}

// GetDockable returns the Dockable field value if set, zero value otherwise.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetDockable() bool {
	if o == nil || IsNil(o.Dockable) {
		var ret bool
		return ret
	}
	return *o.Dockable
}

// GetDockableOk returns a tuple with the Dockable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetDockableOk() (*bool, bool) {
	if o == nil || IsNil(o.Dockable) {
		return nil, false
	}
	return o.Dockable, true
}

// HasDockable returns a boolean if a field has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) HasDockable() bool {
	if o != nil && !IsNil(o.Dockable) {
		return true
	}

	return false
}

// SetDockable gets a reference to the given bool and assigns it to the Dockable field.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) SetDockable(v bool) {
	o.Dockable = &v
}

// GetInstanceid returns the Instanceid field value if set, zero value otherwise.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetInstanceid() int32 {
	if o == nil || IsNil(o.Instanceid) {
		var ret int32
		return ret
	}
	return *o.Instanceid
}

// GetInstanceidOk returns a tuple with the Instanceid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetInstanceidOk() (*int32, bool) {
	if o == nil || IsNil(o.Instanceid) {
		return nil, false
	}
	return o.Instanceid, true
}

// HasInstanceid returns a boolean if a field has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) HasInstanceid() bool {
	if o != nil && !IsNil(o.Instanceid) {
		return true
	}

	return false
}

// SetInstanceid gets a reference to the given int32 and assigns it to the Instanceid field.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) SetInstanceid(v int32) {
	o.Instanceid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) SetName(v string) {
	o.Name = &v
}

// GetPositionid returns the Positionid field value if set, zero value otherwise.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetPositionid() int32 {
	if o == nil || IsNil(o.Positionid) {
		var ret int32
		return ret
	}
	return *o.Positionid
}

// GetPositionidOk returns a tuple with the Positionid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetPositionidOk() (*int32, bool) {
	if o == nil || IsNil(o.Positionid) {
		return nil, false
	}
	return o.Positionid, true
}

// HasPositionid returns a boolean if a field has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) HasPositionid() bool {
	if o != nil && !IsNil(o.Positionid) {
		return true
	}

	return false
}

// SetPositionid gets a reference to the given int32 and assigns it to the Positionid field.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) SetPositionid(v int32) {
	o.Positionid = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) SetRegion(v string) {
	o.Region = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetVisible() bool {
	if o == nil || IsNil(o.Visible) {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetVisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) SetVisible(v bool) {
	o.Visible = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetWeight() int32 {
	if o == nil || IsNil(o.Weight) {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) GetWeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *CoreBlockGetDashboardBlocks200ResponseBlocksInner) SetWeight(v int32) {
	o.Weight = &v
}

func (o CoreBlockGetDashboardBlocks200ResponseBlocksInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreBlockGetDashboardBlocks200ResponseBlocksInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Collapsible) {
		toSerialize["collapsible"] = o.Collapsible
	}
	if !IsNil(o.Configs) {
		toSerialize["configs"] = o.Configs
	}
	if !IsNil(o.Contents) {
		toSerialize["contents"] = o.Contents
	}
	if !IsNil(o.Dockable) {
		toSerialize["dockable"] = o.Dockable
	}
	if !IsNil(o.Instanceid) {
		toSerialize["instanceid"] = o.Instanceid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Positionid) {
		toSerialize["positionid"] = o.Positionid
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	return toSerialize, nil
}

type NullableCoreBlockGetDashboardBlocks200ResponseBlocksInner struct {
	value *CoreBlockGetDashboardBlocks200ResponseBlocksInner
	isSet bool
}

func (v NullableCoreBlockGetDashboardBlocks200ResponseBlocksInner) Get() *CoreBlockGetDashboardBlocks200ResponseBlocksInner {
	return v.value
}

func (v *NullableCoreBlockGetDashboardBlocks200ResponseBlocksInner) Set(val *CoreBlockGetDashboardBlocks200ResponseBlocksInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreBlockGetDashboardBlocks200ResponseBlocksInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreBlockGetDashboardBlocks200ResponseBlocksInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreBlockGetDashboardBlocks200ResponseBlocksInner(val *CoreBlockGetDashboardBlocks200ResponseBlocksInner) *NullableCoreBlockGetDashboardBlocks200ResponseBlocksInner {
	return &NullableCoreBlockGetDashboardBlocks200ResponseBlocksInner{value: val, isSet: true}
}

func (v NullableCoreBlockGetDashboardBlocks200ResponseBlocksInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreBlockGetDashboardBlocks200ResponseBlocksInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


