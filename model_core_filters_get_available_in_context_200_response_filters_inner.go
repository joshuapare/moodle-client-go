/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreFiltersGetAvailableInContext200ResponseFiltersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreFiltersGetAvailableInContext200ResponseFiltersInner{}

// CoreFiltersGetAvailableInContext200ResponseFiltersInner struct for CoreFiltersGetAvailableInContext200ResponseFiltersInner
type CoreFiltersGetAvailableInContext200ResponseFiltersInner struct {
	// The context id.
	Contextid *int32 `json:"contextid,omitempty"`
	// The context level where the filters are:                                 (coursecat, course, module).
	Contextlevel *string `json:"contextlevel,omitempty"`
	// Filter plugin name.
	Filter *string `json:"filter,omitempty"`
	// 1 or 0 to use when localstate is set to inherit.
	Inheritedstate *int32 `json:"inheritedstate,omitempty"`
	// The instance id of item associated with the context.
	Instanceid *int32 `json:"instanceid,omitempty"`
	// Filter state: 1 for on, -1 for off, 0 if inherit.
	Localstate *int32 `json:"localstate,omitempty"`
}

// NewCoreFiltersGetAvailableInContext200ResponseFiltersInner instantiates a new CoreFiltersGetAvailableInContext200ResponseFiltersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreFiltersGetAvailableInContext200ResponseFiltersInner() *CoreFiltersGetAvailableInContext200ResponseFiltersInner {
	this := CoreFiltersGetAvailableInContext200ResponseFiltersInner{}
	var contextid int32 = null
	this.Contextid = &contextid
	var contextlevel string = "null"
	this.Contextlevel = &contextlevel
	var filter string = "null"
	this.Filter = &filter
	var inheritedstate int32 = null
	this.Inheritedstate = &inheritedstate
	var localstate int32 = null
	this.Localstate = &localstate
	return &this
}

// NewCoreFiltersGetAvailableInContext200ResponseFiltersInnerWithDefaults instantiates a new CoreFiltersGetAvailableInContext200ResponseFiltersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreFiltersGetAvailableInContext200ResponseFiltersInnerWithDefaults() *CoreFiltersGetAvailableInContext200ResponseFiltersInner {
	this := CoreFiltersGetAvailableInContext200ResponseFiltersInner{}
	var contextid int32 = null
	this.Contextid = &contextid
	var contextlevel string = "null"
	this.Contextlevel = &contextlevel
	var filter string = "null"
	this.Filter = &filter
	var inheritedstate int32 = null
	this.Inheritedstate = &inheritedstate
	var localstate int32 = null
	this.Localstate = &localstate
	return &this
}

// GetContextid returns the Contextid field value if set, zero value otherwise.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) GetContextid() int32 {
	if o == nil || IsNil(o.Contextid) {
		var ret int32
		return ret
	}
	return *o.Contextid
}

// GetContextidOk returns a tuple with the Contextid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) GetContextidOk() (*int32, bool) {
	if o == nil || IsNil(o.Contextid) {
		return nil, false
	}
	return o.Contextid, true
}

// HasContextid returns a boolean if a field has been set.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) HasContextid() bool {
	if o != nil && !IsNil(o.Contextid) {
		return true
	}

	return false
}

// SetContextid gets a reference to the given int32 and assigns it to the Contextid field.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) SetContextid(v int32) {
	o.Contextid = &v
}

// GetContextlevel returns the Contextlevel field value if set, zero value otherwise.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) GetContextlevel() string {
	if o == nil || IsNil(o.Contextlevel) {
		var ret string
		return ret
	}
	return *o.Contextlevel
}

// GetContextlevelOk returns a tuple with the Contextlevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) GetContextlevelOk() (*string, bool) {
	if o == nil || IsNil(o.Contextlevel) {
		return nil, false
	}
	return o.Contextlevel, true
}

// HasContextlevel returns a boolean if a field has been set.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) HasContextlevel() bool {
	if o != nil && !IsNil(o.Contextlevel) {
		return true
	}

	return false
}

// SetContextlevel gets a reference to the given string and assigns it to the Contextlevel field.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) SetContextlevel(v string) {
	o.Contextlevel = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) SetFilter(v string) {
	o.Filter = &v
}

// GetInheritedstate returns the Inheritedstate field value if set, zero value otherwise.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) GetInheritedstate() int32 {
	if o == nil || IsNil(o.Inheritedstate) {
		var ret int32
		return ret
	}
	return *o.Inheritedstate
}

// GetInheritedstateOk returns a tuple with the Inheritedstate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) GetInheritedstateOk() (*int32, bool) {
	if o == nil || IsNil(o.Inheritedstate) {
		return nil, false
	}
	return o.Inheritedstate, true
}

// HasInheritedstate returns a boolean if a field has been set.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) HasInheritedstate() bool {
	if o != nil && !IsNil(o.Inheritedstate) {
		return true
	}

	return false
}

// SetInheritedstate gets a reference to the given int32 and assigns it to the Inheritedstate field.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) SetInheritedstate(v int32) {
	o.Inheritedstate = &v
}

// GetInstanceid returns the Instanceid field value if set, zero value otherwise.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) GetInstanceid() int32 {
	if o == nil || IsNil(o.Instanceid) {
		var ret int32
		return ret
	}
	return *o.Instanceid
}

// GetInstanceidOk returns a tuple with the Instanceid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) GetInstanceidOk() (*int32, bool) {
	if o == nil || IsNil(o.Instanceid) {
		return nil, false
	}
	return o.Instanceid, true
}

// HasInstanceid returns a boolean if a field has been set.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) HasInstanceid() bool {
	if o != nil && !IsNil(o.Instanceid) {
		return true
	}

	return false
}

// SetInstanceid gets a reference to the given int32 and assigns it to the Instanceid field.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) SetInstanceid(v int32) {
	o.Instanceid = &v
}

// GetLocalstate returns the Localstate field value if set, zero value otherwise.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) GetLocalstate() int32 {
	if o == nil || IsNil(o.Localstate) {
		var ret int32
		return ret
	}
	return *o.Localstate
}

// GetLocalstateOk returns a tuple with the Localstate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) GetLocalstateOk() (*int32, bool) {
	if o == nil || IsNil(o.Localstate) {
		return nil, false
	}
	return o.Localstate, true
}

// HasLocalstate returns a boolean if a field has been set.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) HasLocalstate() bool {
	if o != nil && !IsNil(o.Localstate) {
		return true
	}

	return false
}

// SetLocalstate gets a reference to the given int32 and assigns it to the Localstate field.
func (o *CoreFiltersGetAvailableInContext200ResponseFiltersInner) SetLocalstate(v int32) {
	o.Localstate = &v
}

func (o CoreFiltersGetAvailableInContext200ResponseFiltersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreFiltersGetAvailableInContext200ResponseFiltersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Contextid) {
		toSerialize["contextid"] = o.Contextid
	}
	if !IsNil(o.Contextlevel) {
		toSerialize["contextlevel"] = o.Contextlevel
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.Inheritedstate) {
		toSerialize["inheritedstate"] = o.Inheritedstate
	}
	if !IsNil(o.Instanceid) {
		toSerialize["instanceid"] = o.Instanceid
	}
	if !IsNil(o.Localstate) {
		toSerialize["localstate"] = o.Localstate
	}
	return toSerialize, nil
}

type NullableCoreFiltersGetAvailableInContext200ResponseFiltersInner struct {
	value *CoreFiltersGetAvailableInContext200ResponseFiltersInner
	isSet bool
}

func (v NullableCoreFiltersGetAvailableInContext200ResponseFiltersInner) Get() *CoreFiltersGetAvailableInContext200ResponseFiltersInner {
	return v.value
}

func (v *NullableCoreFiltersGetAvailableInContext200ResponseFiltersInner) Set(val *CoreFiltersGetAvailableInContext200ResponseFiltersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreFiltersGetAvailableInContext200ResponseFiltersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreFiltersGetAvailableInContext200ResponseFiltersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreFiltersGetAvailableInContext200ResponseFiltersInner(val *CoreFiltersGetAvailableInContext200ResponseFiltersInner) *NullableCoreFiltersGetAvailableInContext200ResponseFiltersInner {
	return &NullableCoreFiltersGetAvailableInContext200ResponseFiltersInner{value: val, isSet: true}
}

func (v NullableCoreFiltersGetAvailableInContext200ResponseFiltersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreFiltersGetAvailableInContext200ResponseFiltersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


