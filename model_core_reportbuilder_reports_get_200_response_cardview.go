/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreReportbuilderReportsGet200ResponseCardview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreReportbuilderReportsGet200ResponseCardview{}

// CoreReportbuilderReportsGet200ResponseCardview struct for CoreReportbuilderReportsGet200ResponseCardview
type CoreReportbuilderReportsGet200ResponseCardview struct {
	// form
	Form string `json:"form"`
	// helpicon
	Helpicon string `json:"helpicon"`
}

type _CoreReportbuilderReportsGet200ResponseCardview CoreReportbuilderReportsGet200ResponseCardview

// NewCoreReportbuilderReportsGet200ResponseCardview instantiates a new CoreReportbuilderReportsGet200ResponseCardview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreReportbuilderReportsGet200ResponseCardview(form string, helpicon string) *CoreReportbuilderReportsGet200ResponseCardview {
	this := CoreReportbuilderReportsGet200ResponseCardview{}
	this.Form = form
	this.Helpicon = helpicon
	return &this
}

// NewCoreReportbuilderReportsGet200ResponseCardviewWithDefaults instantiates a new CoreReportbuilderReportsGet200ResponseCardview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreReportbuilderReportsGet200ResponseCardviewWithDefaults() *CoreReportbuilderReportsGet200ResponseCardview {
	this := CoreReportbuilderReportsGet200ResponseCardview{}
	var form string = "null"
	this.Form = form
	return &this
}

// GetForm returns the Form field value
func (o *CoreReportbuilderReportsGet200ResponseCardview) GetForm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Form
}

// GetFormOk returns a tuple with the Form field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderReportsGet200ResponseCardview) GetFormOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Form, true
}

// SetForm sets field value
func (o *CoreReportbuilderReportsGet200ResponseCardview) SetForm(v string) {
	o.Form = v
}

// GetHelpicon returns the Helpicon field value
func (o *CoreReportbuilderReportsGet200ResponseCardview) GetHelpicon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Helpicon
}

// GetHelpiconOk returns a tuple with the Helpicon field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderReportsGet200ResponseCardview) GetHelpiconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Helpicon, true
}

// SetHelpicon sets field value
func (o *CoreReportbuilderReportsGet200ResponseCardview) SetHelpicon(v string) {
	o.Helpicon = v
}

func (o CoreReportbuilderReportsGet200ResponseCardview) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreReportbuilderReportsGet200ResponseCardview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["form"] = o.Form
	toSerialize["helpicon"] = o.Helpicon
	return toSerialize, nil
}

func (o *CoreReportbuilderReportsGet200ResponseCardview) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"form",
		"helpicon",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreReportbuilderReportsGet200ResponseCardview := _CoreReportbuilderReportsGet200ResponseCardview{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreReportbuilderReportsGet200ResponseCardview)

	if err != nil {
		return err
	}

	*o = CoreReportbuilderReportsGet200ResponseCardview(varCoreReportbuilderReportsGet200ResponseCardview)

	return err
}

type NullableCoreReportbuilderReportsGet200ResponseCardview struct {
	value *CoreReportbuilderReportsGet200ResponseCardview
	isSet bool
}

func (v NullableCoreReportbuilderReportsGet200ResponseCardview) Get() *CoreReportbuilderReportsGet200ResponseCardview {
	return v.value
}

func (v *NullableCoreReportbuilderReportsGet200ResponseCardview) Set(val *CoreReportbuilderReportsGet200ResponseCardview) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreReportbuilderReportsGet200ResponseCardview) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreReportbuilderReportsGet200ResponseCardview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreReportbuilderReportsGet200ResponseCardview(val *CoreReportbuilderReportsGet200ResponseCardview) *NullableCoreReportbuilderReportsGet200ResponseCardview {
	return &NullableCoreReportbuilderReportsGet200ResponseCardview{value: val, isSet: true}
}

func (v NullableCoreReportbuilderReportsGet200ResponseCardview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreReportbuilderReportsGet200ResponseCardview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


