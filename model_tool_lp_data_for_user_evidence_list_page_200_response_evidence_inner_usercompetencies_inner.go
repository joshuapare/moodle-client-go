/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner{}

// ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner struct for ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner
type ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner struct {
	Competency *CoreCompetencyCreateCompetency200Response `json:"competency,omitempty"`
	Usercompetency *ToolLpDataForUserCompetencySummary200ResponseUsercompetency `json:"usercompetency,omitempty"`
}

// NewToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner instantiates a new ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner() *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner {
	this := ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner{}
	return &this
}

// NewToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerWithDefaults instantiates a new ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInnerWithDefaults() *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner {
	this := ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner{}
	return &this
}

// GetCompetency returns the Competency field value if set, zero value otherwise.
func (o *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) GetCompetency() CoreCompetencyCreateCompetency200Response {
	if o == nil || IsNil(o.Competency) {
		var ret CoreCompetencyCreateCompetency200Response
		return ret
	}
	return *o.Competency
}

// GetCompetencyOk returns a tuple with the Competency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) GetCompetencyOk() (*CoreCompetencyCreateCompetency200Response, bool) {
	if o == nil || IsNil(o.Competency) {
		return nil, false
	}
	return o.Competency, true
}

// HasCompetency returns a boolean if a field has been set.
func (o *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) HasCompetency() bool {
	if o != nil && !IsNil(o.Competency) {
		return true
	}

	return false
}

// SetCompetency gets a reference to the given CoreCompetencyCreateCompetency200Response and assigns it to the Competency field.
func (o *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) SetCompetency(v CoreCompetencyCreateCompetency200Response) {
	o.Competency = &v
}

// GetUsercompetency returns the Usercompetency field value if set, zero value otherwise.
func (o *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) GetUsercompetency() ToolLpDataForUserCompetencySummary200ResponseUsercompetency {
	if o == nil || IsNil(o.Usercompetency) {
		var ret ToolLpDataForUserCompetencySummary200ResponseUsercompetency
		return ret
	}
	return *o.Usercompetency
}

// GetUsercompetencyOk returns a tuple with the Usercompetency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) GetUsercompetencyOk() (*ToolLpDataForUserCompetencySummary200ResponseUsercompetency, bool) {
	if o == nil || IsNil(o.Usercompetency) {
		return nil, false
	}
	return o.Usercompetency, true
}

// HasUsercompetency returns a boolean if a field has been set.
func (o *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) HasUsercompetency() bool {
	if o != nil && !IsNil(o.Usercompetency) {
		return true
	}

	return false
}

// SetUsercompetency gets a reference to the given ToolLpDataForUserCompetencySummary200ResponseUsercompetency and assigns it to the Usercompetency field.
func (o *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) SetUsercompetency(v ToolLpDataForUserCompetencySummary200ResponseUsercompetency) {
	o.Usercompetency = &v
}

func (o ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Competency) {
		toSerialize["competency"] = o.Competency
	}
	if !IsNil(o.Usercompetency) {
		toSerialize["usercompetency"] = o.Usercompetency
	}
	return toSerialize, nil
}

type NullableToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner struct {
	value *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner
	isSet bool
}

func (v NullableToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) Get() *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner {
	return v.value
}

func (v *NullableToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) Set(val *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner(val *ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) *NullableToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner {
	return &NullableToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner{value: val, isSet: true}
}

func (v NullableToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


