/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ToolLpDataForTemplateCompetenciesPage200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolLpDataForTemplateCompetenciesPage200Response{}

// ToolLpDataForTemplateCompetenciesPage200Response struct for ToolLpDataForTemplateCompetenciesPage200Response
type ToolLpDataForTemplateCompetenciesPage200Response struct {
	// User can manage competency frameworks
	Canmanagecompetencyframeworks bool `json:"canmanagecompetencyframeworks"`
	// User can manage learning plan templates
	Canmanagetemplatecompetencies bool `json:"canmanagetemplatecompetencies"`
	Competencies []ToolLpDataForTemplateCompetenciesPage200ResponseCompetenciesInner `json:"competencies"`
	// Url to the manage competencies page.
	Manageurl string `json:"manageurl"`
	// Context ID
	Pagecontextid int32 `json:"pagecontextid"`
	// Base URL of the plugin.
	Pluginbaseurl string `json:"pluginbaseurl"`
	Statistics ToolLpDataForTemplateCompetenciesPage200ResponseStatistics `json:"statistics"`
	Template CoreCompetencyCreateTemplate200Response `json:"template"`
}

type _ToolLpDataForTemplateCompetenciesPage200Response ToolLpDataForTemplateCompetenciesPage200Response

// NewToolLpDataForTemplateCompetenciesPage200Response instantiates a new ToolLpDataForTemplateCompetenciesPage200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolLpDataForTemplateCompetenciesPage200Response(canmanagecompetencyframeworks bool, canmanagetemplatecompetencies bool, competencies []ToolLpDataForTemplateCompetenciesPage200ResponseCompetenciesInner, manageurl string, pagecontextid int32, pluginbaseurl string, statistics ToolLpDataForTemplateCompetenciesPage200ResponseStatistics, template CoreCompetencyCreateTemplate200Response) *ToolLpDataForTemplateCompetenciesPage200Response {
	this := ToolLpDataForTemplateCompetenciesPage200Response{}
	this.Canmanagecompetencyframeworks = canmanagecompetencyframeworks
	this.Canmanagetemplatecompetencies = canmanagetemplatecompetencies
	this.Competencies = competencies
	this.Manageurl = manageurl
	this.Pagecontextid = pagecontextid
	this.Pluginbaseurl = pluginbaseurl
	this.Statistics = statistics
	this.Template = template
	return &this
}

// NewToolLpDataForTemplateCompetenciesPage200ResponseWithDefaults instantiates a new ToolLpDataForTemplateCompetenciesPage200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolLpDataForTemplateCompetenciesPage200ResponseWithDefaults() *ToolLpDataForTemplateCompetenciesPage200Response {
	this := ToolLpDataForTemplateCompetenciesPage200Response{}
	var canmanagetemplatecompetencies bool = null
	this.Canmanagetemplatecompetencies = canmanagetemplatecompetencies
	var pluginbaseurl string = "null"
	this.Pluginbaseurl = pluginbaseurl
	return &this
}

// GetCanmanagecompetencyframeworks returns the Canmanagecompetencyframeworks field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetCanmanagecompetencyframeworks() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canmanagecompetencyframeworks
}

// GetCanmanagecompetencyframeworksOk returns a tuple with the Canmanagecompetencyframeworks field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetCanmanagecompetencyframeworksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canmanagecompetencyframeworks, true
}

// SetCanmanagecompetencyframeworks sets field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) SetCanmanagecompetencyframeworks(v bool) {
	o.Canmanagecompetencyframeworks = v
}

// GetCanmanagetemplatecompetencies returns the Canmanagetemplatecompetencies field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetCanmanagetemplatecompetencies() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canmanagetemplatecompetencies
}

// GetCanmanagetemplatecompetenciesOk returns a tuple with the Canmanagetemplatecompetencies field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetCanmanagetemplatecompetenciesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canmanagetemplatecompetencies, true
}

// SetCanmanagetemplatecompetencies sets field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) SetCanmanagetemplatecompetencies(v bool) {
	o.Canmanagetemplatecompetencies = v
}

// GetCompetencies returns the Competencies field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetCompetencies() []ToolLpDataForTemplateCompetenciesPage200ResponseCompetenciesInner {
	if o == nil {
		var ret []ToolLpDataForTemplateCompetenciesPage200ResponseCompetenciesInner
		return ret
	}

	return o.Competencies
}

// GetCompetenciesOk returns a tuple with the Competencies field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetCompetenciesOk() ([]ToolLpDataForTemplateCompetenciesPage200ResponseCompetenciesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Competencies, true
}

// SetCompetencies sets field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) SetCompetencies(v []ToolLpDataForTemplateCompetenciesPage200ResponseCompetenciesInner) {
	o.Competencies = v
}

// GetManageurl returns the Manageurl field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetManageurl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Manageurl
}

// GetManageurlOk returns a tuple with the Manageurl field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetManageurlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Manageurl, true
}

// SetManageurl sets field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) SetManageurl(v string) {
	o.Manageurl = v
}

// GetPagecontextid returns the Pagecontextid field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetPagecontextid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pagecontextid
}

// GetPagecontextidOk returns a tuple with the Pagecontextid field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetPagecontextidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagecontextid, true
}

// SetPagecontextid sets field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) SetPagecontextid(v int32) {
	o.Pagecontextid = v
}

// GetPluginbaseurl returns the Pluginbaseurl field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetPluginbaseurl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pluginbaseurl
}

// GetPluginbaseurlOk returns a tuple with the Pluginbaseurl field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetPluginbaseurlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pluginbaseurl, true
}

// SetPluginbaseurl sets field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) SetPluginbaseurl(v string) {
	o.Pluginbaseurl = v
}

// GetStatistics returns the Statistics field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetStatistics() ToolLpDataForTemplateCompetenciesPage200ResponseStatistics {
	if o == nil {
		var ret ToolLpDataForTemplateCompetenciesPage200ResponseStatistics
		return ret
	}

	return o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetStatisticsOk() (*ToolLpDataForTemplateCompetenciesPage200ResponseStatistics, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Statistics, true
}

// SetStatistics sets field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) SetStatistics(v ToolLpDataForTemplateCompetenciesPage200ResponseStatistics) {
	o.Statistics = v
}

// GetTemplate returns the Template field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetTemplate() CoreCompetencyCreateTemplate200Response {
	if o == nil {
		var ret CoreCompetencyCreateTemplate200Response
		return ret
	}

	return o.Template
}

// GetTemplateOk returns a tuple with the Template field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForTemplateCompetenciesPage200Response) GetTemplateOk() (*CoreCompetencyCreateTemplate200Response, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Template, true
}

// SetTemplate sets field value
func (o *ToolLpDataForTemplateCompetenciesPage200Response) SetTemplate(v CoreCompetencyCreateTemplate200Response) {
	o.Template = v
}

func (o ToolLpDataForTemplateCompetenciesPage200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolLpDataForTemplateCompetenciesPage200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["canmanagecompetencyframeworks"] = o.Canmanagecompetencyframeworks
	toSerialize["canmanagetemplatecompetencies"] = o.Canmanagetemplatecompetencies
	toSerialize["competencies"] = o.Competencies
	toSerialize["manageurl"] = o.Manageurl
	toSerialize["pagecontextid"] = o.Pagecontextid
	toSerialize["pluginbaseurl"] = o.Pluginbaseurl
	toSerialize["statistics"] = o.Statistics
	toSerialize["template"] = o.Template
	return toSerialize, nil
}

func (o *ToolLpDataForTemplateCompetenciesPage200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"canmanagecompetencyframeworks",
		"canmanagetemplatecompetencies",
		"competencies",
		"manageurl",
		"pagecontextid",
		"pluginbaseurl",
		"statistics",
		"template",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varToolLpDataForTemplateCompetenciesPage200Response := _ToolLpDataForTemplateCompetenciesPage200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varToolLpDataForTemplateCompetenciesPage200Response)

	if err != nil {
		return err
	}

	*o = ToolLpDataForTemplateCompetenciesPage200Response(varToolLpDataForTemplateCompetenciesPage200Response)

	return err
}

type NullableToolLpDataForTemplateCompetenciesPage200Response struct {
	value *ToolLpDataForTemplateCompetenciesPage200Response
	isSet bool
}

func (v NullableToolLpDataForTemplateCompetenciesPage200Response) Get() *ToolLpDataForTemplateCompetenciesPage200Response {
	return v.value
}

func (v *NullableToolLpDataForTemplateCompetenciesPage200Response) Set(val *ToolLpDataForTemplateCompetenciesPage200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableToolLpDataForTemplateCompetenciesPage200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableToolLpDataForTemplateCompetenciesPage200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolLpDataForTemplateCompetenciesPage200Response(val *ToolLpDataForTemplateCompetenciesPage200Response) *NullableToolLpDataForTemplateCompetenciesPage200Response {
	return &NullableToolLpDataForTemplateCompetenciesPage200Response{value: val, isSet: true}
}

func (v NullableToolLpDataForTemplateCompetenciesPage200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolLpDataForTemplateCompetenciesPage200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


