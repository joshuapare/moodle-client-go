/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreMessageGetMessagesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreMessageGetMessagesRequest{}

// CoreMessageGetMessagesRequest struct for CoreMessageGetMessagesRequest
type CoreMessageGetMessagesRequest struct {
	// limit from
	Limitfrom *int32 `json:"limitfrom,omitempty"`
	// limit number
	Limitnum *int32 `json:"limitnum,omitempty"`
	// true for ordering by newest first, false for oldest first
	Newestfirst *bool `json:"newestfirst,omitempty"`
	// 1 for getting read messages, 0 for unread, 2 for both
	Read *int32 `json:"read,omitempty"`
	// type of message to return, expected values are: notifications, conversations and both
	Type *string `json:"type,omitempty"`
	// the user id who send the message, 0 for any user. -10 or -20 for no-reply or support user
	Useridfrom *int32 `json:"useridfrom,omitempty"`
	// the user id who received the message, 0 for any user
	Useridto int32 `json:"useridto"`
}

type _CoreMessageGetMessagesRequest CoreMessageGetMessagesRequest

// NewCoreMessageGetMessagesRequest instantiates a new CoreMessageGetMessagesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreMessageGetMessagesRequest(useridto int32) *CoreMessageGetMessagesRequest {
	this := CoreMessageGetMessagesRequest{}
	var limitfrom int32 = 0
	this.Limitfrom = &limitfrom
	var limitnum int32 = 0
	this.Limitnum = &limitnum
	var newestfirst bool = true
	this.Newestfirst = &newestfirst
	var read int32 = 1
	this.Read = &read
	var type_ string = "both"
	this.Type = &type_
	var useridfrom int32 = 0
	this.Useridfrom = &useridfrom
	this.Useridto = useridto
	return &this
}

// NewCoreMessageGetMessagesRequestWithDefaults instantiates a new CoreMessageGetMessagesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreMessageGetMessagesRequestWithDefaults() *CoreMessageGetMessagesRequest {
	this := CoreMessageGetMessagesRequest{}
	var limitfrom int32 = 0
	this.Limitfrom = &limitfrom
	var limitnum int32 = 0
	this.Limitnum = &limitnum
	var newestfirst bool = true
	this.Newestfirst = &newestfirst
	var read int32 = 1
	this.Read = &read
	var type_ string = "both"
	this.Type = &type_
	var useridfrom int32 = 0
	this.Useridfrom = &useridfrom
	var useridto int32 = null
	this.Useridto = useridto
	return &this
}

// GetLimitfrom returns the Limitfrom field value if set, zero value otherwise.
func (o *CoreMessageGetMessagesRequest) GetLimitfrom() int32 {
	if o == nil || IsNil(o.Limitfrom) {
		var ret int32
		return ret
	}
	return *o.Limitfrom
}

// GetLimitfromOk returns a tuple with the Limitfrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetMessagesRequest) GetLimitfromOk() (*int32, bool) {
	if o == nil || IsNil(o.Limitfrom) {
		return nil, false
	}
	return o.Limitfrom, true
}

// HasLimitfrom returns a boolean if a field has been set.
func (o *CoreMessageGetMessagesRequest) HasLimitfrom() bool {
	if o != nil && !IsNil(o.Limitfrom) {
		return true
	}

	return false
}

// SetLimitfrom gets a reference to the given int32 and assigns it to the Limitfrom field.
func (o *CoreMessageGetMessagesRequest) SetLimitfrom(v int32) {
	o.Limitfrom = &v
}

// GetLimitnum returns the Limitnum field value if set, zero value otherwise.
func (o *CoreMessageGetMessagesRequest) GetLimitnum() int32 {
	if o == nil || IsNil(o.Limitnum) {
		var ret int32
		return ret
	}
	return *o.Limitnum
}

// GetLimitnumOk returns a tuple with the Limitnum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetMessagesRequest) GetLimitnumOk() (*int32, bool) {
	if o == nil || IsNil(o.Limitnum) {
		return nil, false
	}
	return o.Limitnum, true
}

// HasLimitnum returns a boolean if a field has been set.
func (o *CoreMessageGetMessagesRequest) HasLimitnum() bool {
	if o != nil && !IsNil(o.Limitnum) {
		return true
	}

	return false
}

// SetLimitnum gets a reference to the given int32 and assigns it to the Limitnum field.
func (o *CoreMessageGetMessagesRequest) SetLimitnum(v int32) {
	o.Limitnum = &v
}

// GetNewestfirst returns the Newestfirst field value if set, zero value otherwise.
func (o *CoreMessageGetMessagesRequest) GetNewestfirst() bool {
	if o == nil || IsNil(o.Newestfirst) {
		var ret bool
		return ret
	}
	return *o.Newestfirst
}

// GetNewestfirstOk returns a tuple with the Newestfirst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetMessagesRequest) GetNewestfirstOk() (*bool, bool) {
	if o == nil || IsNil(o.Newestfirst) {
		return nil, false
	}
	return o.Newestfirst, true
}

// HasNewestfirst returns a boolean if a field has been set.
func (o *CoreMessageGetMessagesRequest) HasNewestfirst() bool {
	if o != nil && !IsNil(o.Newestfirst) {
		return true
	}

	return false
}

// SetNewestfirst gets a reference to the given bool and assigns it to the Newestfirst field.
func (o *CoreMessageGetMessagesRequest) SetNewestfirst(v bool) {
	o.Newestfirst = &v
}

// GetRead returns the Read field value if set, zero value otherwise.
func (o *CoreMessageGetMessagesRequest) GetRead() int32 {
	if o == nil || IsNil(o.Read) {
		var ret int32
		return ret
	}
	return *o.Read
}

// GetReadOk returns a tuple with the Read field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetMessagesRequest) GetReadOk() (*int32, bool) {
	if o == nil || IsNil(o.Read) {
		return nil, false
	}
	return o.Read, true
}

// HasRead returns a boolean if a field has been set.
func (o *CoreMessageGetMessagesRequest) HasRead() bool {
	if o != nil && !IsNil(o.Read) {
		return true
	}

	return false
}

// SetRead gets a reference to the given int32 and assigns it to the Read field.
func (o *CoreMessageGetMessagesRequest) SetRead(v int32) {
	o.Read = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CoreMessageGetMessagesRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetMessagesRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CoreMessageGetMessagesRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CoreMessageGetMessagesRequest) SetType(v string) {
	o.Type = &v
}

// GetUseridfrom returns the Useridfrom field value if set, zero value otherwise.
func (o *CoreMessageGetMessagesRequest) GetUseridfrom() int32 {
	if o == nil || IsNil(o.Useridfrom) {
		var ret int32
		return ret
	}
	return *o.Useridfrom
}

// GetUseridfromOk returns a tuple with the Useridfrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetMessagesRequest) GetUseridfromOk() (*int32, bool) {
	if o == nil || IsNil(o.Useridfrom) {
		return nil, false
	}
	return o.Useridfrom, true
}

// HasUseridfrom returns a boolean if a field has been set.
func (o *CoreMessageGetMessagesRequest) HasUseridfrom() bool {
	if o != nil && !IsNil(o.Useridfrom) {
		return true
	}

	return false
}

// SetUseridfrom gets a reference to the given int32 and assigns it to the Useridfrom field.
func (o *CoreMessageGetMessagesRequest) SetUseridfrom(v int32) {
	o.Useridfrom = &v
}

// GetUseridto returns the Useridto field value
func (o *CoreMessageGetMessagesRequest) GetUseridto() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Useridto
}

// GetUseridtoOk returns a tuple with the Useridto field value
// and a boolean to check if the value has been set.
func (o *CoreMessageGetMessagesRequest) GetUseridtoOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Useridto, true
}

// SetUseridto sets field value
func (o *CoreMessageGetMessagesRequest) SetUseridto(v int32) {
	o.Useridto = v
}

func (o CoreMessageGetMessagesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreMessageGetMessagesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Limitfrom) {
		toSerialize["limitfrom"] = o.Limitfrom
	}
	if !IsNil(o.Limitnum) {
		toSerialize["limitnum"] = o.Limitnum
	}
	if !IsNil(o.Newestfirst) {
		toSerialize["newestfirst"] = o.Newestfirst
	}
	if !IsNil(o.Read) {
		toSerialize["read"] = o.Read
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Useridfrom) {
		toSerialize["useridfrom"] = o.Useridfrom
	}
	toSerialize["useridto"] = o.Useridto
	return toSerialize, nil
}

func (o *CoreMessageGetMessagesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"useridto",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreMessageGetMessagesRequest := _CoreMessageGetMessagesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreMessageGetMessagesRequest)

	if err != nil {
		return err
	}

	*o = CoreMessageGetMessagesRequest(varCoreMessageGetMessagesRequest)

	return err
}

type NullableCoreMessageGetMessagesRequest struct {
	value *CoreMessageGetMessagesRequest
	isSet bool
}

func (v NullableCoreMessageGetMessagesRequest) Get() *CoreMessageGetMessagesRequest {
	return v.value
}

func (v *NullableCoreMessageGetMessagesRequest) Set(val *CoreMessageGetMessagesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreMessageGetMessagesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreMessageGetMessagesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreMessageGetMessagesRequest(val *CoreMessageGetMessagesRequest) *NullableCoreMessageGetMessagesRequest {
	return &NullableCoreMessageGetMessagesRequest{value: val, isSet: true}
}

func (v NullableCoreMessageGetMessagesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreMessageGetMessagesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


