/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCourseCheckUpdatesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCourseCheckUpdatesRequest{}

// CoreCourseCheckUpdatesRequest struct for CoreCourseCheckUpdatesRequest
type CoreCourseCheckUpdatesRequest struct {
	// Course id to check
	Courseid int32 `json:"courseid"`
	Filter []map[string]interface{} `json:"filter,omitempty"`
	Tocheck []CoreCourseCheckUpdatesRequestTocheckInner `json:"tocheck"`
}

type _CoreCourseCheckUpdatesRequest CoreCourseCheckUpdatesRequest

// NewCoreCourseCheckUpdatesRequest instantiates a new CoreCourseCheckUpdatesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCourseCheckUpdatesRequest(courseid int32, tocheck []CoreCourseCheckUpdatesRequestTocheckInner) *CoreCourseCheckUpdatesRequest {
	this := CoreCourseCheckUpdatesRequest{}
	this.Courseid = courseid
	this.Tocheck = tocheck
	return &this
}

// NewCoreCourseCheckUpdatesRequestWithDefaults instantiates a new CoreCourseCheckUpdatesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCourseCheckUpdatesRequestWithDefaults() *CoreCourseCheckUpdatesRequest {
	this := CoreCourseCheckUpdatesRequest{}
	var courseid int32 = null
	this.Courseid = courseid
	return &this
}

// GetCourseid returns the Courseid field value
func (o *CoreCourseCheckUpdatesRequest) GetCourseid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Courseid
}

// GetCourseidOk returns a tuple with the Courseid field value
// and a boolean to check if the value has been set.
func (o *CoreCourseCheckUpdatesRequest) GetCourseidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Courseid, true
}

// SetCourseid sets field value
func (o *CoreCourseCheckUpdatesRequest) SetCourseid(v int32) {
	o.Courseid = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *CoreCourseCheckUpdatesRequest) GetFilter() []map[string]interface{} {
	if o == nil || IsNil(o.Filter) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseCheckUpdatesRequest) GetFilterOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *CoreCourseCheckUpdatesRequest) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given []map[string]interface{} and assigns it to the Filter field.
func (o *CoreCourseCheckUpdatesRequest) SetFilter(v []map[string]interface{}) {
	o.Filter = v
}

// GetTocheck returns the Tocheck field value
func (o *CoreCourseCheckUpdatesRequest) GetTocheck() []CoreCourseCheckUpdatesRequestTocheckInner {
	if o == nil {
		var ret []CoreCourseCheckUpdatesRequestTocheckInner
		return ret
	}

	return o.Tocheck
}

// GetTocheckOk returns a tuple with the Tocheck field value
// and a boolean to check if the value has been set.
func (o *CoreCourseCheckUpdatesRequest) GetTocheckOk() ([]CoreCourseCheckUpdatesRequestTocheckInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tocheck, true
}

// SetTocheck sets field value
func (o *CoreCourseCheckUpdatesRequest) SetTocheck(v []CoreCourseCheckUpdatesRequestTocheckInner) {
	o.Tocheck = v
}

func (o CoreCourseCheckUpdatesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCourseCheckUpdatesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["courseid"] = o.Courseid
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	toSerialize["tocheck"] = o.Tocheck
	return toSerialize, nil
}

func (o *CoreCourseCheckUpdatesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"courseid",
		"tocheck",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCourseCheckUpdatesRequest := _CoreCourseCheckUpdatesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCourseCheckUpdatesRequest)

	if err != nil {
		return err
	}

	*o = CoreCourseCheckUpdatesRequest(varCoreCourseCheckUpdatesRequest)

	return err
}

type NullableCoreCourseCheckUpdatesRequest struct {
	value *CoreCourseCheckUpdatesRequest
	isSet bool
}

func (v NullableCoreCourseCheckUpdatesRequest) Get() *CoreCourseCheckUpdatesRequest {
	return v.value
}

func (v *NullableCoreCourseCheckUpdatesRequest) Set(val *CoreCourseCheckUpdatesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCourseCheckUpdatesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCourseCheckUpdatesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCourseCheckUpdatesRequest(val *CoreCourseCheckUpdatesRequest) *NullableCoreCourseCheckUpdatesRequest {
	return &NullableCoreCourseCheckUpdatesRequest{value: val, isSet: true}
}

func (v NullableCoreCourseCheckUpdatesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCourseCheckUpdatesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


