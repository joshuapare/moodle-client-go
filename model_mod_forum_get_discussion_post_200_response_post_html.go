/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModForumGetDiscussionPost200ResponsePostHtml type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumGetDiscussionPost200ResponsePostHtml{}

// ModForumGetDiscussionPost200ResponsePostHtml struct for ModForumGetDiscussionPost200ResponsePostHtml
type ModForumGetDiscussionPost200ResponsePostHtml struct {
	// The HTML source to view the author details
	Authorsubheading *string `json:"authorsubheading,omitempty"`
	// The HTML source to rate the post
	Rating *string `json:"rating,omitempty"`
	// The HTML source to view the list of tags
	Taglist *string `json:"taglist,omitempty"`
}

// NewModForumGetDiscussionPost200ResponsePostHtml instantiates a new ModForumGetDiscussionPost200ResponsePostHtml object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumGetDiscussionPost200ResponsePostHtml() *ModForumGetDiscussionPost200ResponsePostHtml {
	this := ModForumGetDiscussionPost200ResponsePostHtml{}
	return &this
}

// NewModForumGetDiscussionPost200ResponsePostHtmlWithDefaults instantiates a new ModForumGetDiscussionPost200ResponsePostHtml object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumGetDiscussionPost200ResponsePostHtmlWithDefaults() *ModForumGetDiscussionPost200ResponsePostHtml {
	this := ModForumGetDiscussionPost200ResponsePostHtml{}
	return &this
}

// GetAuthorsubheading returns the Authorsubheading field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePostHtml) GetAuthorsubheading() string {
	if o == nil || IsNil(o.Authorsubheading) {
		var ret string
		return ret
	}
	return *o.Authorsubheading
}

// GetAuthorsubheadingOk returns a tuple with the Authorsubheading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePostHtml) GetAuthorsubheadingOk() (*string, bool) {
	if o == nil || IsNil(o.Authorsubheading) {
		return nil, false
	}
	return o.Authorsubheading, true
}

// HasAuthorsubheading returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePostHtml) HasAuthorsubheading() bool {
	if o != nil && !IsNil(o.Authorsubheading) {
		return true
	}

	return false
}

// SetAuthorsubheading gets a reference to the given string and assigns it to the Authorsubheading field.
func (o *ModForumGetDiscussionPost200ResponsePostHtml) SetAuthorsubheading(v string) {
	o.Authorsubheading = &v
}

// GetRating returns the Rating field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePostHtml) GetRating() string {
	if o == nil || IsNil(o.Rating) {
		var ret string
		return ret
	}
	return *o.Rating
}

// GetRatingOk returns a tuple with the Rating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePostHtml) GetRatingOk() (*string, bool) {
	if o == nil || IsNil(o.Rating) {
		return nil, false
	}
	return o.Rating, true
}

// HasRating returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePostHtml) HasRating() bool {
	if o != nil && !IsNil(o.Rating) {
		return true
	}

	return false
}

// SetRating gets a reference to the given string and assigns it to the Rating field.
func (o *ModForumGetDiscussionPost200ResponsePostHtml) SetRating(v string) {
	o.Rating = &v
}

// GetTaglist returns the Taglist field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePostHtml) GetTaglist() string {
	if o == nil || IsNil(o.Taglist) {
		var ret string
		return ret
	}
	return *o.Taglist
}

// GetTaglistOk returns a tuple with the Taglist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePostHtml) GetTaglistOk() (*string, bool) {
	if o == nil || IsNil(o.Taglist) {
		return nil, false
	}
	return o.Taglist, true
}

// HasTaglist returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePostHtml) HasTaglist() bool {
	if o != nil && !IsNil(o.Taglist) {
		return true
	}

	return false
}

// SetTaglist gets a reference to the given string and assigns it to the Taglist field.
func (o *ModForumGetDiscussionPost200ResponsePostHtml) SetTaglist(v string) {
	o.Taglist = &v
}

func (o ModForumGetDiscussionPost200ResponsePostHtml) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumGetDiscussionPost200ResponsePostHtml) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Authorsubheading) {
		toSerialize["authorsubheading"] = o.Authorsubheading
	}
	if !IsNil(o.Rating) {
		toSerialize["rating"] = o.Rating
	}
	if !IsNil(o.Taglist) {
		toSerialize["taglist"] = o.Taglist
	}
	return toSerialize, nil
}

type NullableModForumGetDiscussionPost200ResponsePostHtml struct {
	value *ModForumGetDiscussionPost200ResponsePostHtml
	isSet bool
}

func (v NullableModForumGetDiscussionPost200ResponsePostHtml) Get() *ModForumGetDiscussionPost200ResponsePostHtml {
	return v.value
}

func (v *NullableModForumGetDiscussionPost200ResponsePostHtml) Set(val *ModForumGetDiscussionPost200ResponsePostHtml) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumGetDiscussionPost200ResponsePostHtml) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumGetDiscussionPost200ResponsePostHtml) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumGetDiscussionPost200ResponsePostHtml(val *ModForumGetDiscussionPost200ResponsePostHtml) *NullableModForumGetDiscussionPost200ResponsePostHtml {
	return &NullableModForumGetDiscussionPost200ResponsePostHtml{value: val, isSet: true}
}

func (v NullableModForumGetDiscussionPost200ResponsePostHtml) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumGetDiscussionPost200ResponsePostHtml) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


