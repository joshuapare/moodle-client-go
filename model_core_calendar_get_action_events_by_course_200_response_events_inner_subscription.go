/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription{}

// CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription struct for CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription
type CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription struct {
	// displayeventsource
	Displayeventsource bool `json:"displayeventsource"`
	// subscriptionname
	Subscriptionname *string `json:"subscriptionname,omitempty"`
	// subscriptionurl
	Subscriptionurl *string `json:"subscriptionurl,omitempty"`
}

type _CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription

// NewCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription instantiates a new CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription(displayeventsource bool) *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription {
	this := CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription{}
	this.Displayeventsource = displayeventsource
	var subscriptionname string = "null"
	this.Subscriptionname = &subscriptionname
	var subscriptionurl string = "null"
	this.Subscriptionurl = &subscriptionurl
	return &this
}

// NewCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscriptionWithDefaults instantiates a new CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscriptionWithDefaults() *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription {
	this := CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription{}
	var displayeventsource bool = null
	this.Displayeventsource = displayeventsource
	var subscriptionname string = "null"
	this.Subscriptionname = &subscriptionname
	var subscriptionurl string = "null"
	this.Subscriptionurl = &subscriptionurl
	return &this
}

// GetDisplayeventsource returns the Displayeventsource field value
func (o *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) GetDisplayeventsource() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Displayeventsource
}

// GetDisplayeventsourceOk returns a tuple with the Displayeventsource field value
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) GetDisplayeventsourceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Displayeventsource, true
}

// SetDisplayeventsource sets field value
func (o *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) SetDisplayeventsource(v bool) {
	o.Displayeventsource = v
}

// GetSubscriptionname returns the Subscriptionname field value if set, zero value otherwise.
func (o *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) GetSubscriptionname() string {
	if o == nil || IsNil(o.Subscriptionname) {
		var ret string
		return ret
	}
	return *o.Subscriptionname
}

// GetSubscriptionnameOk returns a tuple with the Subscriptionname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) GetSubscriptionnameOk() (*string, bool) {
	if o == nil || IsNil(o.Subscriptionname) {
		return nil, false
	}
	return o.Subscriptionname, true
}

// HasSubscriptionname returns a boolean if a field has been set.
func (o *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) HasSubscriptionname() bool {
	if o != nil && !IsNil(o.Subscriptionname) {
		return true
	}

	return false
}

// SetSubscriptionname gets a reference to the given string and assigns it to the Subscriptionname field.
func (o *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) SetSubscriptionname(v string) {
	o.Subscriptionname = &v
}

// GetSubscriptionurl returns the Subscriptionurl field value if set, zero value otherwise.
func (o *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) GetSubscriptionurl() string {
	if o == nil || IsNil(o.Subscriptionurl) {
		var ret string
		return ret
	}
	return *o.Subscriptionurl
}

// GetSubscriptionurlOk returns a tuple with the Subscriptionurl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) GetSubscriptionurlOk() (*string, bool) {
	if o == nil || IsNil(o.Subscriptionurl) {
		return nil, false
	}
	return o.Subscriptionurl, true
}

// HasSubscriptionurl returns a boolean if a field has been set.
func (o *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) HasSubscriptionurl() bool {
	if o != nil && !IsNil(o.Subscriptionurl) {
		return true
	}

	return false
}

// SetSubscriptionurl gets a reference to the given string and assigns it to the Subscriptionurl field.
func (o *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) SetSubscriptionurl(v string) {
	o.Subscriptionurl = &v
}

func (o CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["displayeventsource"] = o.Displayeventsource
	if !IsNil(o.Subscriptionname) {
		toSerialize["subscriptionname"] = o.Subscriptionname
	}
	if !IsNil(o.Subscriptionurl) {
		toSerialize["subscriptionurl"] = o.Subscriptionurl
	}
	return toSerialize, nil
}

func (o *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"displayeventsource",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription := _CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription)

	if err != nil {
		return err
	}

	*o = CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription(varCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription)

	return err
}

type NullableCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription struct {
	value *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription
	isSet bool
}

func (v NullableCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) Get() *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription {
	return v.value
}

func (v *NullableCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) Set(val *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription(val *CoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) *NullableCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription {
	return &NullableCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription{value: val, isSet: true}
}

func (v NullableCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCalendarGetActionEventsByCourse200ResponseEventsInnerSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


