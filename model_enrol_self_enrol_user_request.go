/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EnrolSelfEnrolUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrolSelfEnrolUserRequest{}

// EnrolSelfEnrolUserRequest struct for EnrolSelfEnrolUserRequest
type EnrolSelfEnrolUserRequest struct {
	// Id of the course
	Courseid int32 `json:"courseid"`
	// Instance id of self enrolment plugin.
	Instanceid *int32 `json:"instanceid,omitempty"`
	// Enrolment key
	Password *string `json:"password,omitempty"`
}

type _EnrolSelfEnrolUserRequest EnrolSelfEnrolUserRequest

// NewEnrolSelfEnrolUserRequest instantiates a new EnrolSelfEnrolUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrolSelfEnrolUserRequest(courseid int32) *EnrolSelfEnrolUserRequest {
	this := EnrolSelfEnrolUserRequest{}
	this.Courseid = courseid
	var instanceid int32 = 0
	this.Instanceid = &instanceid
	var password string = ""
	this.Password = &password
	return &this
}

// NewEnrolSelfEnrolUserRequestWithDefaults instantiates a new EnrolSelfEnrolUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrolSelfEnrolUserRequestWithDefaults() *EnrolSelfEnrolUserRequest {
	this := EnrolSelfEnrolUserRequest{}
	var instanceid int32 = 0
	this.Instanceid = &instanceid
	var password string = ""
	this.Password = &password
	return &this
}

// GetCourseid returns the Courseid field value
func (o *EnrolSelfEnrolUserRequest) GetCourseid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Courseid
}

// GetCourseidOk returns a tuple with the Courseid field value
// and a boolean to check if the value has been set.
func (o *EnrolSelfEnrolUserRequest) GetCourseidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Courseid, true
}

// SetCourseid sets field value
func (o *EnrolSelfEnrolUserRequest) SetCourseid(v int32) {
	o.Courseid = v
}

// GetInstanceid returns the Instanceid field value if set, zero value otherwise.
func (o *EnrolSelfEnrolUserRequest) GetInstanceid() int32 {
	if o == nil || IsNil(o.Instanceid) {
		var ret int32
		return ret
	}
	return *o.Instanceid
}

// GetInstanceidOk returns a tuple with the Instanceid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrolSelfEnrolUserRequest) GetInstanceidOk() (*int32, bool) {
	if o == nil || IsNil(o.Instanceid) {
		return nil, false
	}
	return o.Instanceid, true
}

// HasInstanceid returns a boolean if a field has been set.
func (o *EnrolSelfEnrolUserRequest) HasInstanceid() bool {
	if o != nil && !IsNil(o.Instanceid) {
		return true
	}

	return false
}

// SetInstanceid gets a reference to the given int32 and assigns it to the Instanceid field.
func (o *EnrolSelfEnrolUserRequest) SetInstanceid(v int32) {
	o.Instanceid = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *EnrolSelfEnrolUserRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrolSelfEnrolUserRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *EnrolSelfEnrolUserRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *EnrolSelfEnrolUserRequest) SetPassword(v string) {
	o.Password = &v
}

func (o EnrolSelfEnrolUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrolSelfEnrolUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["courseid"] = o.Courseid
	if !IsNil(o.Instanceid) {
		toSerialize["instanceid"] = o.Instanceid
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	return toSerialize, nil
}

func (o *EnrolSelfEnrolUserRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"courseid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEnrolSelfEnrolUserRequest := _EnrolSelfEnrolUserRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEnrolSelfEnrolUserRequest)

	if err != nil {
		return err
	}

	*o = EnrolSelfEnrolUserRequest(varEnrolSelfEnrolUserRequest)

	return err
}

type NullableEnrolSelfEnrolUserRequest struct {
	value *EnrolSelfEnrolUserRequest
	isSet bool
}

func (v NullableEnrolSelfEnrolUserRequest) Get() *EnrolSelfEnrolUserRequest {
	return v.value
}

func (v *NullableEnrolSelfEnrolUserRequest) Set(val *EnrolSelfEnrolUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrolSelfEnrolUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrolSelfEnrolUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrolSelfEnrolUserRequest(val *EnrolSelfEnrolUserRequest) *NullableEnrolSelfEnrolUserRequest {
	return &NullableEnrolSelfEnrolUserRequest{value: val, isSet: true}
}

func (v NullableEnrolSelfEnrolUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrolSelfEnrolUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


