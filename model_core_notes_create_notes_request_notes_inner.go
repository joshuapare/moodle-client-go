/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreNotesCreateNotesRequestNotesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreNotesCreateNotesRequestNotesInner{}

// CoreNotesCreateNotesRequestNotesInner struct for CoreNotesCreateNotesRequestNotesInner
type CoreNotesCreateNotesRequestNotesInner struct {
	// your own client id for the note. If this id is provided, the fail message id will be returned to you
	Clientnoteid *string `json:"clientnoteid,omitempty"`
	// course id of the note (in Moodle a note can only be created into a course, even for site and personal notes)
	Courseid *int32 `json:"courseid,omitempty"`
	// text format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Format *int32 `json:"format,omitempty"`
	// 'personal', 'course' or 'site'
	Publishstate *string `json:"publishstate,omitempty"`
	// the text of the message - text or HTML
	Text *string `json:"text,omitempty"`
	// id of the user the note is about
	Userid *int32 `json:"userid,omitempty"`
}

// NewCoreNotesCreateNotesRequestNotesInner instantiates a new CoreNotesCreateNotesRequestNotesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreNotesCreateNotesRequestNotesInner() *CoreNotesCreateNotesRequestNotesInner {
	this := CoreNotesCreateNotesRequestNotesInner{}
	var clientnoteid string = "null"
	this.Clientnoteid = &clientnoteid
	var courseid int32 = null
	this.Courseid = &courseid
	var format int32 = 1
	this.Format = &format
	var publishstate string = "null"
	this.Publishstate = &publishstate
	var text string = "null"
	this.Text = &text
	var userid int32 = null
	this.Userid = &userid
	return &this
}

// NewCoreNotesCreateNotesRequestNotesInnerWithDefaults instantiates a new CoreNotesCreateNotesRequestNotesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreNotesCreateNotesRequestNotesInnerWithDefaults() *CoreNotesCreateNotesRequestNotesInner {
	this := CoreNotesCreateNotesRequestNotesInner{}
	var clientnoteid string = "null"
	this.Clientnoteid = &clientnoteid
	var courseid int32 = null
	this.Courseid = &courseid
	var format int32 = 1
	this.Format = &format
	var publishstate string = "null"
	this.Publishstate = &publishstate
	var text string = "null"
	this.Text = &text
	var userid int32 = null
	this.Userid = &userid
	return &this
}

// GetClientnoteid returns the Clientnoteid field value if set, zero value otherwise.
func (o *CoreNotesCreateNotesRequestNotesInner) GetClientnoteid() string {
	if o == nil || IsNil(o.Clientnoteid) {
		var ret string
		return ret
	}
	return *o.Clientnoteid
}

// GetClientnoteidOk returns a tuple with the Clientnoteid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreNotesCreateNotesRequestNotesInner) GetClientnoteidOk() (*string, bool) {
	if o == nil || IsNil(o.Clientnoteid) {
		return nil, false
	}
	return o.Clientnoteid, true
}

// HasClientnoteid returns a boolean if a field has been set.
func (o *CoreNotesCreateNotesRequestNotesInner) HasClientnoteid() bool {
	if o != nil && !IsNil(o.Clientnoteid) {
		return true
	}

	return false
}

// SetClientnoteid gets a reference to the given string and assigns it to the Clientnoteid field.
func (o *CoreNotesCreateNotesRequestNotesInner) SetClientnoteid(v string) {
	o.Clientnoteid = &v
}

// GetCourseid returns the Courseid field value if set, zero value otherwise.
func (o *CoreNotesCreateNotesRequestNotesInner) GetCourseid() int32 {
	if o == nil || IsNil(o.Courseid) {
		var ret int32
		return ret
	}
	return *o.Courseid
}

// GetCourseidOk returns a tuple with the Courseid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreNotesCreateNotesRequestNotesInner) GetCourseidOk() (*int32, bool) {
	if o == nil || IsNil(o.Courseid) {
		return nil, false
	}
	return o.Courseid, true
}

// HasCourseid returns a boolean if a field has been set.
func (o *CoreNotesCreateNotesRequestNotesInner) HasCourseid() bool {
	if o != nil && !IsNil(o.Courseid) {
		return true
	}

	return false
}

// SetCourseid gets a reference to the given int32 and assigns it to the Courseid field.
func (o *CoreNotesCreateNotesRequestNotesInner) SetCourseid(v int32) {
	o.Courseid = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *CoreNotesCreateNotesRequestNotesInner) GetFormat() int32 {
	if o == nil || IsNil(o.Format) {
		var ret int32
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreNotesCreateNotesRequestNotesInner) GetFormatOk() (*int32, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *CoreNotesCreateNotesRequestNotesInner) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given int32 and assigns it to the Format field.
func (o *CoreNotesCreateNotesRequestNotesInner) SetFormat(v int32) {
	o.Format = &v
}

// GetPublishstate returns the Publishstate field value if set, zero value otherwise.
func (o *CoreNotesCreateNotesRequestNotesInner) GetPublishstate() string {
	if o == nil || IsNil(o.Publishstate) {
		var ret string
		return ret
	}
	return *o.Publishstate
}

// GetPublishstateOk returns a tuple with the Publishstate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreNotesCreateNotesRequestNotesInner) GetPublishstateOk() (*string, bool) {
	if o == nil || IsNil(o.Publishstate) {
		return nil, false
	}
	return o.Publishstate, true
}

// HasPublishstate returns a boolean if a field has been set.
func (o *CoreNotesCreateNotesRequestNotesInner) HasPublishstate() bool {
	if o != nil && !IsNil(o.Publishstate) {
		return true
	}

	return false
}

// SetPublishstate gets a reference to the given string and assigns it to the Publishstate field.
func (o *CoreNotesCreateNotesRequestNotesInner) SetPublishstate(v string) {
	o.Publishstate = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *CoreNotesCreateNotesRequestNotesInner) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreNotesCreateNotesRequestNotesInner) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *CoreNotesCreateNotesRequestNotesInner) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *CoreNotesCreateNotesRequestNotesInner) SetText(v string) {
	o.Text = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *CoreNotesCreateNotesRequestNotesInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreNotesCreateNotesRequestNotesInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *CoreNotesCreateNotesRequestNotesInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *CoreNotesCreateNotesRequestNotesInner) SetUserid(v int32) {
	o.Userid = &v
}

func (o CoreNotesCreateNotesRequestNotesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreNotesCreateNotesRequestNotesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Clientnoteid) {
		toSerialize["clientnoteid"] = o.Clientnoteid
	}
	if !IsNil(o.Courseid) {
		toSerialize["courseid"] = o.Courseid
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Publishstate) {
		toSerialize["publishstate"] = o.Publishstate
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

type NullableCoreNotesCreateNotesRequestNotesInner struct {
	value *CoreNotesCreateNotesRequestNotesInner
	isSet bool
}

func (v NullableCoreNotesCreateNotesRequestNotesInner) Get() *CoreNotesCreateNotesRequestNotesInner {
	return v.value
}

func (v *NullableCoreNotesCreateNotesRequestNotesInner) Set(val *CoreNotesCreateNotesRequestNotesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreNotesCreateNotesRequestNotesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreNotesCreateNotesRequestNotesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreNotesCreateNotesRequestNotesInner(val *CoreNotesCreateNotesRequestNotesInner) *NullableCoreNotesCreateNotesRequestNotesInner {
	return &NullableCoreNotesCreateNotesRequestNotesInner{value: val, isSet: true}
}

func (v NullableCoreNotesCreateNotesRequestNotesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreNotesCreateNotesRequestNotesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


