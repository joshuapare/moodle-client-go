/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCalendarSubmitCreateUpdateForm200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCalendarSubmitCreateUpdateForm200Response{}

// CoreCalendarSubmitCreateUpdateForm200Response struct for CoreCalendarSubmitCreateUpdateForm200Response
type CoreCalendarSubmitCreateUpdateForm200Response struct {
	Event *CoreCalendarGetCalendarEventById200ResponseEvent `json:"event,omitempty"`
	// Invalid form data
	Validationerror *bool `json:"validationerror,omitempty"`
}

// NewCoreCalendarSubmitCreateUpdateForm200Response instantiates a new CoreCalendarSubmitCreateUpdateForm200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCalendarSubmitCreateUpdateForm200Response() *CoreCalendarSubmitCreateUpdateForm200Response {
	this := CoreCalendarSubmitCreateUpdateForm200Response{}
	var validationerror bool = false
	this.Validationerror = &validationerror
	return &this
}

// NewCoreCalendarSubmitCreateUpdateForm200ResponseWithDefaults instantiates a new CoreCalendarSubmitCreateUpdateForm200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCalendarSubmitCreateUpdateForm200ResponseWithDefaults() *CoreCalendarSubmitCreateUpdateForm200Response {
	this := CoreCalendarSubmitCreateUpdateForm200Response{}
	var validationerror bool = false
	this.Validationerror = &validationerror
	return &this
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *CoreCalendarSubmitCreateUpdateForm200Response) GetEvent() CoreCalendarGetCalendarEventById200ResponseEvent {
	if o == nil || IsNil(o.Event) {
		var ret CoreCalendarGetCalendarEventById200ResponseEvent
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarSubmitCreateUpdateForm200Response) GetEventOk() (*CoreCalendarGetCalendarEventById200ResponseEvent, bool) {
	if o == nil || IsNil(o.Event) {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *CoreCalendarSubmitCreateUpdateForm200Response) HasEvent() bool {
	if o != nil && !IsNil(o.Event) {
		return true
	}

	return false
}

// SetEvent gets a reference to the given CoreCalendarGetCalendarEventById200ResponseEvent and assigns it to the Event field.
func (o *CoreCalendarSubmitCreateUpdateForm200Response) SetEvent(v CoreCalendarGetCalendarEventById200ResponseEvent) {
	o.Event = &v
}

// GetValidationerror returns the Validationerror field value if set, zero value otherwise.
func (o *CoreCalendarSubmitCreateUpdateForm200Response) GetValidationerror() bool {
	if o == nil || IsNil(o.Validationerror) {
		var ret bool
		return ret
	}
	return *o.Validationerror
}

// GetValidationerrorOk returns a tuple with the Validationerror field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarSubmitCreateUpdateForm200Response) GetValidationerrorOk() (*bool, bool) {
	if o == nil || IsNil(o.Validationerror) {
		return nil, false
	}
	return o.Validationerror, true
}

// HasValidationerror returns a boolean if a field has been set.
func (o *CoreCalendarSubmitCreateUpdateForm200Response) HasValidationerror() bool {
	if o != nil && !IsNil(o.Validationerror) {
		return true
	}

	return false
}

// SetValidationerror gets a reference to the given bool and assigns it to the Validationerror field.
func (o *CoreCalendarSubmitCreateUpdateForm200Response) SetValidationerror(v bool) {
	o.Validationerror = &v
}

func (o CoreCalendarSubmitCreateUpdateForm200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCalendarSubmitCreateUpdateForm200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Event) {
		toSerialize["event"] = o.Event
	}
	if !IsNil(o.Validationerror) {
		toSerialize["validationerror"] = o.Validationerror
	}
	return toSerialize, nil
}

type NullableCoreCalendarSubmitCreateUpdateForm200Response struct {
	value *CoreCalendarSubmitCreateUpdateForm200Response
	isSet bool
}

func (v NullableCoreCalendarSubmitCreateUpdateForm200Response) Get() *CoreCalendarSubmitCreateUpdateForm200Response {
	return v.value
}

func (v *NullableCoreCalendarSubmitCreateUpdateForm200Response) Set(val *CoreCalendarSubmitCreateUpdateForm200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCalendarSubmitCreateUpdateForm200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCalendarSubmitCreateUpdateForm200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCalendarSubmitCreateUpdateForm200Response(val *CoreCalendarSubmitCreateUpdateForm200Response) *NullableCoreCalendarSubmitCreateUpdateForm200Response {
	return &NullableCoreCalendarSubmitCreateUpdateForm200Response{value: val, isSet: true}
}

func (v NullableCoreCalendarSubmitCreateUpdateForm200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCalendarSubmitCreateUpdateForm200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


