/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModQuizReopenAttemptRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModQuizReopenAttemptRequest{}

// ModQuizReopenAttemptRequest struct for ModQuizReopenAttemptRequest
type ModQuizReopenAttemptRequest struct {
	// The id of the attempt to reopen
	Attemptid int32 `json:"attemptid"`
}

type _ModQuizReopenAttemptRequest ModQuizReopenAttemptRequest

// NewModQuizReopenAttemptRequest instantiates a new ModQuizReopenAttemptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModQuizReopenAttemptRequest(attemptid int32) *ModQuizReopenAttemptRequest {
	this := ModQuizReopenAttemptRequest{}
	this.Attemptid = attemptid
	return &this
}

// NewModQuizReopenAttemptRequestWithDefaults instantiates a new ModQuizReopenAttemptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModQuizReopenAttemptRequestWithDefaults() *ModQuizReopenAttemptRequest {
	this := ModQuizReopenAttemptRequest{}
	return &this
}

// GetAttemptid returns the Attemptid field value
func (o *ModQuizReopenAttemptRequest) GetAttemptid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Attemptid
}

// GetAttemptidOk returns a tuple with the Attemptid field value
// and a boolean to check if the value has been set.
func (o *ModQuizReopenAttemptRequest) GetAttemptidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attemptid, true
}

// SetAttemptid sets field value
func (o *ModQuizReopenAttemptRequest) SetAttemptid(v int32) {
	o.Attemptid = v
}

func (o ModQuizReopenAttemptRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModQuizReopenAttemptRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attemptid"] = o.Attemptid
	return toSerialize, nil
}

func (o *ModQuizReopenAttemptRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attemptid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModQuizReopenAttemptRequest := _ModQuizReopenAttemptRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModQuizReopenAttemptRequest)

	if err != nil {
		return err
	}

	*o = ModQuizReopenAttemptRequest(varModQuizReopenAttemptRequest)

	return err
}

type NullableModQuizReopenAttemptRequest struct {
	value *ModQuizReopenAttemptRequest
	isSet bool
}

func (v NullableModQuizReopenAttemptRequest) Get() *ModQuizReopenAttemptRequest {
	return v.value
}

func (v *NullableModQuizReopenAttemptRequest) Set(val *ModQuizReopenAttemptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModQuizReopenAttemptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModQuizReopenAttemptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModQuizReopenAttemptRequest(val *ModQuizReopenAttemptRequest) *NullableModQuizReopenAttemptRequest {
	return &NullableModQuizReopenAttemptRequest{value: val, isSet: true}
}

func (v NullableModQuizReopenAttemptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModQuizReopenAttemptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


