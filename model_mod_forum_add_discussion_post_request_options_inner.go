/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModForumAddDiscussionPostRequestOptionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumAddDiscussionPostRequestOptionsInner{}

// ModForumAddDiscussionPostRequestOptionsInner struct for ModForumAddDiscussionPostRequestOptionsInner
type ModForumAddDiscussionPostRequestOptionsInner struct {
	// The allowed keys (value format) are:                                         discussionsubscribe (bool); subscribe to the discussion?, default to true                                         private (bool); make this reply private to the author of the parent post, default to false.                                         inlineattachmentsid              (int); the draft file area id for inline attachments                                         attachmentsid       (int); the draft file area id for attachments                                         topreferredformat (bool); convert the message & messageformat to FORMAT_HTML, defaults to false                             
	Name *string `json:"name,omitempty"`
	// the value of the option,                                                             this param is validated in the external function.
	Value *string `json:"value,omitempty"`
}

// NewModForumAddDiscussionPostRequestOptionsInner instantiates a new ModForumAddDiscussionPostRequestOptionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumAddDiscussionPostRequestOptionsInner() *ModForumAddDiscussionPostRequestOptionsInner {
	this := ModForumAddDiscussionPostRequestOptionsInner{}
	var name string = "null"
	this.Name = &name
	var value string = "null"
	this.Value = &value
	return &this
}

// NewModForumAddDiscussionPostRequestOptionsInnerWithDefaults instantiates a new ModForumAddDiscussionPostRequestOptionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumAddDiscussionPostRequestOptionsInnerWithDefaults() *ModForumAddDiscussionPostRequestOptionsInner {
	this := ModForumAddDiscussionPostRequestOptionsInner{}
	var name string = "null"
	this.Name = &name
	var value string = "null"
	this.Value = &value
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModForumAddDiscussionPostRequestOptionsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionPostRequestOptionsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModForumAddDiscussionPostRequestOptionsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModForumAddDiscussionPostRequestOptionsInner) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ModForumAddDiscussionPostRequestOptionsInner) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionPostRequestOptionsInner) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ModForumAddDiscussionPostRequestOptionsInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ModForumAddDiscussionPostRequestOptionsInner) SetValue(v string) {
	o.Value = &v
}

func (o ModForumAddDiscussionPostRequestOptionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumAddDiscussionPostRequestOptionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableModForumAddDiscussionPostRequestOptionsInner struct {
	value *ModForumAddDiscussionPostRequestOptionsInner
	isSet bool
}

func (v NullableModForumAddDiscussionPostRequestOptionsInner) Get() *ModForumAddDiscussionPostRequestOptionsInner {
	return v.value
}

func (v *NullableModForumAddDiscussionPostRequestOptionsInner) Set(val *ModForumAddDiscussionPostRequestOptionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumAddDiscussionPostRequestOptionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumAddDiscussionPostRequestOptionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumAddDiscussionPostRequestOptionsInner(val *ModForumAddDiscussionPostRequestOptionsInner) *NullableModForumAddDiscussionPostRequestOptionsInner {
	return &NullableModForumAddDiscussionPostRequestOptionsInner{value: val, isSet: true}
}

func (v NullableModForumAddDiscussionPostRequestOptionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumAddDiscussionPostRequestOptionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


