/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModLtiUpdateToolType200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModLtiUpdateToolType200Response{}

// ModLtiUpdateToolType200Response struct for ModLtiUpdateToolType200Response
type ModLtiUpdateToolType200Response struct {
	Capabilitygroups []map[string]interface{} `json:"capabilitygroups,omitempty"`
	// Client ID
	Clientid string `json:"clientid"`
	// Tool type course
	Courseid *int32 `json:"courseid,omitempty"`
	// Deployment ID
	Deploymentid int32 `json:"deploymentid"`
	// Tool type description
	Description string `json:"description"`
	// Indicate if capabilitygroups is populated
	Hascapabilitygroups bool `json:"hascapabilitygroups"`
	// Tool type id
	Id int32 `json:"id"`
	// The number of times this tool is being used
	Instancecount int32 `json:"instancecount"`
	Instanceids []map[string]interface{} `json:"instanceids,omitempty"`
	// Tool type name
	Name string `json:"name"`
	// Platform ID
	Platformid string `json:"platformid"`
	State ModLtiGetToolTypesAndProxies200ResponseTypesInnerState `json:"state"`
	Urls ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls `json:"urls"`
}

type _ModLtiUpdateToolType200Response ModLtiUpdateToolType200Response

// NewModLtiUpdateToolType200Response instantiates a new ModLtiUpdateToolType200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModLtiUpdateToolType200Response(clientid string, deploymentid int32, description string, hascapabilitygroups bool, id int32, instancecount int32, name string, platformid string, state ModLtiGetToolTypesAndProxies200ResponseTypesInnerState, urls ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls) *ModLtiUpdateToolType200Response {
	this := ModLtiUpdateToolType200Response{}
	this.Clientid = clientid
	var courseid int32 = 0
	this.Courseid = &courseid
	this.Deploymentid = deploymentid
	this.Description = description
	this.Hascapabilitygroups = hascapabilitygroups
	this.Id = id
	this.Instancecount = instancecount
	this.Name = name
	this.Platformid = platformid
	this.State = state
	this.Urls = urls
	return &this
}

// NewModLtiUpdateToolType200ResponseWithDefaults instantiates a new ModLtiUpdateToolType200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModLtiUpdateToolType200ResponseWithDefaults() *ModLtiUpdateToolType200Response {
	this := ModLtiUpdateToolType200Response{}
	var courseid int32 = 0
	this.Courseid = &courseid
	return &this
}

// GetCapabilitygroups returns the Capabilitygroups field value if set, zero value otherwise.
func (o *ModLtiUpdateToolType200Response) GetCapabilitygroups() []map[string]interface{} {
	if o == nil || IsNil(o.Capabilitygroups) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Capabilitygroups
}

// GetCapabilitygroupsOk returns a tuple with the Capabilitygroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolType200Response) GetCapabilitygroupsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Capabilitygroups) {
		return nil, false
	}
	return o.Capabilitygroups, true
}

// HasCapabilitygroups returns a boolean if a field has been set.
func (o *ModLtiUpdateToolType200Response) HasCapabilitygroups() bool {
	if o != nil && !IsNil(o.Capabilitygroups) {
		return true
	}

	return false
}

// SetCapabilitygroups gets a reference to the given []map[string]interface{} and assigns it to the Capabilitygroups field.
func (o *ModLtiUpdateToolType200Response) SetCapabilitygroups(v []map[string]interface{}) {
	o.Capabilitygroups = v
}

// GetClientid returns the Clientid field value
func (o *ModLtiUpdateToolType200Response) GetClientid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Clientid
}

// GetClientidOk returns a tuple with the Clientid field value
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolType200Response) GetClientidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Clientid, true
}

// SetClientid sets field value
func (o *ModLtiUpdateToolType200Response) SetClientid(v string) {
	o.Clientid = v
}

// GetCourseid returns the Courseid field value if set, zero value otherwise.
func (o *ModLtiUpdateToolType200Response) GetCourseid() int32 {
	if o == nil || IsNil(o.Courseid) {
		var ret int32
		return ret
	}
	return *o.Courseid
}

// GetCourseidOk returns a tuple with the Courseid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolType200Response) GetCourseidOk() (*int32, bool) {
	if o == nil || IsNil(o.Courseid) {
		return nil, false
	}
	return o.Courseid, true
}

// HasCourseid returns a boolean if a field has been set.
func (o *ModLtiUpdateToolType200Response) HasCourseid() bool {
	if o != nil && !IsNil(o.Courseid) {
		return true
	}

	return false
}

// SetCourseid gets a reference to the given int32 and assigns it to the Courseid field.
func (o *ModLtiUpdateToolType200Response) SetCourseid(v int32) {
	o.Courseid = &v
}

// GetDeploymentid returns the Deploymentid field value
func (o *ModLtiUpdateToolType200Response) GetDeploymentid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Deploymentid
}

// GetDeploymentidOk returns a tuple with the Deploymentid field value
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolType200Response) GetDeploymentidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deploymentid, true
}

// SetDeploymentid sets field value
func (o *ModLtiUpdateToolType200Response) SetDeploymentid(v int32) {
	o.Deploymentid = v
}

// GetDescription returns the Description field value
func (o *ModLtiUpdateToolType200Response) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolType200Response) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ModLtiUpdateToolType200Response) SetDescription(v string) {
	o.Description = v
}

// GetHascapabilitygroups returns the Hascapabilitygroups field value
func (o *ModLtiUpdateToolType200Response) GetHascapabilitygroups() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hascapabilitygroups
}

// GetHascapabilitygroupsOk returns a tuple with the Hascapabilitygroups field value
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolType200Response) GetHascapabilitygroupsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hascapabilitygroups, true
}

// SetHascapabilitygroups sets field value
func (o *ModLtiUpdateToolType200Response) SetHascapabilitygroups(v bool) {
	o.Hascapabilitygroups = v
}

// GetId returns the Id field value
func (o *ModLtiUpdateToolType200Response) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolType200Response) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModLtiUpdateToolType200Response) SetId(v int32) {
	o.Id = v
}

// GetInstancecount returns the Instancecount field value
func (o *ModLtiUpdateToolType200Response) GetInstancecount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Instancecount
}

// GetInstancecountOk returns a tuple with the Instancecount field value
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolType200Response) GetInstancecountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instancecount, true
}

// SetInstancecount sets field value
func (o *ModLtiUpdateToolType200Response) SetInstancecount(v int32) {
	o.Instancecount = v
}

// GetInstanceids returns the Instanceids field value if set, zero value otherwise.
func (o *ModLtiUpdateToolType200Response) GetInstanceids() []map[string]interface{} {
	if o == nil || IsNil(o.Instanceids) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Instanceids
}

// GetInstanceidsOk returns a tuple with the Instanceids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolType200Response) GetInstanceidsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Instanceids) {
		return nil, false
	}
	return o.Instanceids, true
}

// HasInstanceids returns a boolean if a field has been set.
func (o *ModLtiUpdateToolType200Response) HasInstanceids() bool {
	if o != nil && !IsNil(o.Instanceids) {
		return true
	}

	return false
}

// SetInstanceids gets a reference to the given []map[string]interface{} and assigns it to the Instanceids field.
func (o *ModLtiUpdateToolType200Response) SetInstanceids(v []map[string]interface{}) {
	o.Instanceids = v
}

// GetName returns the Name field value
func (o *ModLtiUpdateToolType200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolType200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ModLtiUpdateToolType200Response) SetName(v string) {
	o.Name = v
}

// GetPlatformid returns the Platformid field value
func (o *ModLtiUpdateToolType200Response) GetPlatformid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platformid
}

// GetPlatformidOk returns a tuple with the Platformid field value
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolType200Response) GetPlatformidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platformid, true
}

// SetPlatformid sets field value
func (o *ModLtiUpdateToolType200Response) SetPlatformid(v string) {
	o.Platformid = v
}

// GetState returns the State field value
func (o *ModLtiUpdateToolType200Response) GetState() ModLtiGetToolTypesAndProxies200ResponseTypesInnerState {
	if o == nil {
		var ret ModLtiGetToolTypesAndProxies200ResponseTypesInnerState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolType200Response) GetStateOk() (*ModLtiGetToolTypesAndProxies200ResponseTypesInnerState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ModLtiUpdateToolType200Response) SetState(v ModLtiGetToolTypesAndProxies200ResponseTypesInnerState) {
	o.State = v
}

// GetUrls returns the Urls field value
func (o *ModLtiUpdateToolType200Response) GetUrls() ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls {
	if o == nil {
		var ret ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls
		return ret
	}

	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value
// and a boolean to check if the value has been set.
func (o *ModLtiUpdateToolType200Response) GetUrlsOk() (*ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Urls, true
}

// SetUrls sets field value
func (o *ModLtiUpdateToolType200Response) SetUrls(v ModLtiGetToolTypesAndProxies200ResponseTypesInnerUrls) {
	o.Urls = v
}

func (o ModLtiUpdateToolType200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModLtiUpdateToolType200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Capabilitygroups) {
		toSerialize["capabilitygroups"] = o.Capabilitygroups
	}
	toSerialize["clientid"] = o.Clientid
	if !IsNil(o.Courseid) {
		toSerialize["courseid"] = o.Courseid
	}
	toSerialize["deploymentid"] = o.Deploymentid
	toSerialize["description"] = o.Description
	toSerialize["hascapabilitygroups"] = o.Hascapabilitygroups
	toSerialize["id"] = o.Id
	toSerialize["instancecount"] = o.Instancecount
	if !IsNil(o.Instanceids) {
		toSerialize["instanceids"] = o.Instanceids
	}
	toSerialize["name"] = o.Name
	toSerialize["platformid"] = o.Platformid
	toSerialize["state"] = o.State
	toSerialize["urls"] = o.Urls
	return toSerialize, nil
}

func (o *ModLtiUpdateToolType200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clientid",
		"deploymentid",
		"description",
		"hascapabilitygroups",
		"id",
		"instancecount",
		"name",
		"platformid",
		"state",
		"urls",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModLtiUpdateToolType200Response := _ModLtiUpdateToolType200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModLtiUpdateToolType200Response)

	if err != nil {
		return err
	}

	*o = ModLtiUpdateToolType200Response(varModLtiUpdateToolType200Response)

	return err
}

type NullableModLtiUpdateToolType200Response struct {
	value *ModLtiUpdateToolType200Response
	isSet bool
}

func (v NullableModLtiUpdateToolType200Response) Get() *ModLtiUpdateToolType200Response {
	return v.value
}

func (v *NullableModLtiUpdateToolType200Response) Set(val *ModLtiUpdateToolType200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableModLtiUpdateToolType200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableModLtiUpdateToolType200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModLtiUpdateToolType200Response(val *ModLtiUpdateToolType200Response) *NullableModLtiUpdateToolType200Response {
	return &NullableModLtiUpdateToolType200Response{value: val, isSet: true}
}

func (v NullableModLtiUpdateToolType200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModLtiUpdateToolType200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


