/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCourseDeleteCategoriesRequestCategoriesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCourseDeleteCategoriesRequestCategoriesInner{}

// CoreCourseDeleteCategoriesRequestCategoriesInner struct for CoreCourseDeleteCategoriesRequestCategoriesInner
type CoreCourseDeleteCategoriesRequestCategoriesInner struct {
	// category id to delete
	Id *int32 `json:"id,omitempty"`
	// the parent category to move the contents to, if specified
	Newparent *int32 `json:"newparent,omitempty"`
	// 1: recursively delete all contents inside this                                 category, 0 (default): move contents to newparent or current parent category (except if parent is root)
	Recursive *bool `json:"recursive,omitempty"`
}

// NewCoreCourseDeleteCategoriesRequestCategoriesInner instantiates a new CoreCourseDeleteCategoriesRequestCategoriesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCourseDeleteCategoriesRequestCategoriesInner() *CoreCourseDeleteCategoriesRequestCategoriesInner {
	this := CoreCourseDeleteCategoriesRequestCategoriesInner{}
	var id int32 = null
	this.Id = &id
	var newparent int32 = null
	this.Newparent = &newparent
	var recursive bool = 0
	this.Recursive = &recursive
	return &this
}

// NewCoreCourseDeleteCategoriesRequestCategoriesInnerWithDefaults instantiates a new CoreCourseDeleteCategoriesRequestCategoriesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCourseDeleteCategoriesRequestCategoriesInnerWithDefaults() *CoreCourseDeleteCategoriesRequestCategoriesInner {
	this := CoreCourseDeleteCategoriesRequestCategoriesInner{}
	var id int32 = null
	this.Id = &id
	var newparent int32 = null
	this.Newparent = &newparent
	var recursive bool = 0
	this.Recursive = &recursive
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreCourseDeleteCategoriesRequestCategoriesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseDeleteCategoriesRequestCategoriesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreCourseDeleteCategoriesRequestCategoriesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CoreCourseDeleteCategoriesRequestCategoriesInner) SetId(v int32) {
	o.Id = &v
}

// GetNewparent returns the Newparent field value if set, zero value otherwise.
func (o *CoreCourseDeleteCategoriesRequestCategoriesInner) GetNewparent() int32 {
	if o == nil || IsNil(o.Newparent) {
		var ret int32
		return ret
	}
	return *o.Newparent
}

// GetNewparentOk returns a tuple with the Newparent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseDeleteCategoriesRequestCategoriesInner) GetNewparentOk() (*int32, bool) {
	if o == nil || IsNil(o.Newparent) {
		return nil, false
	}
	return o.Newparent, true
}

// HasNewparent returns a boolean if a field has been set.
func (o *CoreCourseDeleteCategoriesRequestCategoriesInner) HasNewparent() bool {
	if o != nil && !IsNil(o.Newparent) {
		return true
	}

	return false
}

// SetNewparent gets a reference to the given int32 and assigns it to the Newparent field.
func (o *CoreCourseDeleteCategoriesRequestCategoriesInner) SetNewparent(v int32) {
	o.Newparent = &v
}

// GetRecursive returns the Recursive field value if set, zero value otherwise.
func (o *CoreCourseDeleteCategoriesRequestCategoriesInner) GetRecursive() bool {
	if o == nil || IsNil(o.Recursive) {
		var ret bool
		return ret
	}
	return *o.Recursive
}

// GetRecursiveOk returns a tuple with the Recursive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseDeleteCategoriesRequestCategoriesInner) GetRecursiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Recursive) {
		return nil, false
	}
	return o.Recursive, true
}

// HasRecursive returns a boolean if a field has been set.
func (o *CoreCourseDeleteCategoriesRequestCategoriesInner) HasRecursive() bool {
	if o != nil && !IsNil(o.Recursive) {
		return true
	}

	return false
}

// SetRecursive gets a reference to the given bool and assigns it to the Recursive field.
func (o *CoreCourseDeleteCategoriesRequestCategoriesInner) SetRecursive(v bool) {
	o.Recursive = &v
}

func (o CoreCourseDeleteCategoriesRequestCategoriesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCourseDeleteCategoriesRequestCategoriesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Newparent) {
		toSerialize["newparent"] = o.Newparent
	}
	if !IsNil(o.Recursive) {
		toSerialize["recursive"] = o.Recursive
	}
	return toSerialize, nil
}

type NullableCoreCourseDeleteCategoriesRequestCategoriesInner struct {
	value *CoreCourseDeleteCategoriesRequestCategoriesInner
	isSet bool
}

func (v NullableCoreCourseDeleteCategoriesRequestCategoriesInner) Get() *CoreCourseDeleteCategoriesRequestCategoriesInner {
	return v.value
}

func (v *NullableCoreCourseDeleteCategoriesRequestCategoriesInner) Set(val *CoreCourseDeleteCategoriesRequestCategoriesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCourseDeleteCategoriesRequestCategoriesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCourseDeleteCategoriesRequestCategoriesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCourseDeleteCategoriesRequestCategoriesInner(val *CoreCourseDeleteCategoriesRequestCategoriesInner) *NullableCoreCourseDeleteCategoriesRequestCategoriesInner {
	return &NullableCoreCourseDeleteCategoriesRequestCategoriesInner{value: val, isSet: true}
}

func (v NullableCoreCourseDeleteCategoriesRequestCategoriesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCourseDeleteCategoriesRequestCategoriesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


