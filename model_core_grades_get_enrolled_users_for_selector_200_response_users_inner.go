/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner{}

// CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner struct for CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner
type CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner struct {
	// Postal address
	Address *string `json:"address,omitempty"`
	// Auth plugins include manual, ldap, etc
	Auth *string `json:"auth,omitempty"`
	// Calendar type such as \"gregorian\", must exist on server
	Calendartype *string `json:"calendartype,omitempty"`
	// Home city of the user
	City *string `json:"city,omitempty"`
	// Active user: 1 if confirmed, 0 otherwise
	Confirmed *bool `json:"confirmed,omitempty"`
	// Home country code of the user, such as AU or CZ
	Country *string `json:"country,omitempty"`
	Customfields []CoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerCustomfieldsInner `json:"customfields,omitempty"`
	// department
	Department *string `json:"department,omitempty"`
	// User profile description
	Description *string `json:"description,omitempty"`
	// int format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Descriptionformat *int32 `json:"descriptionformat,omitempty"`
	// An email address - allow email as root@localhost
	Email *string `json:"email,omitempty"`
	// first access to the site (0 if never)
	Firstaccess *int32 `json:"firstaccess,omitempty"`
	// The first name(s) of the user
	Firstname *string `json:"firstname,omitempty"`
	// The fullname of the user
	Fullname *string `json:"fullname,omitempty"`
	// ID of the user
	Id *int32 `json:"id,omitempty"`
	// An arbitrary ID code number perhaps from the institution
	Idnumber *string `json:"idnumber,omitempty"`
	// institution
	Institution *string `json:"institution,omitempty"`
	// user interests (separated by commas)
	Interests *string `json:"interests,omitempty"`
	// Language code such as \"en\", must exist on server
	Lang *string `json:"lang,omitempty"`
	// last access to the site (0 if never)
	Lastaccess *int32 `json:"lastaccess,omitempty"`
	// The family name of the user
	Lastname *string `json:"lastname,omitempty"`
	// Mail format code is 0 for plain text, 1 for HTML etc
	Mailformat *int32 `json:"mailformat,omitempty"`
	// Phone 1
	Phone1 *string `json:"phone1,omitempty"`
	// Phone 2
	Phone2 *string `json:"phone2,omitempty"`
	Preferences []CoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerPreferencesInner `json:"preferences,omitempty"`
	// User image profile URL - big version
	Profileimageurl *string `json:"profileimageurl,omitempty"`
	// User image profile URL - small version
	Profileimageurlsmall *string `json:"profileimageurlsmall,omitempty"`
	// Suspend user account, either false to enable user login or true to disable it
	Suspended *bool `json:"suspended,omitempty"`
	// Theme name such as \"standard\", must exist on server
	Theme *string `json:"theme,omitempty"`
	// Timezone code such as Australia/Perth, or 99 for default
	Timezone *string `json:"timezone,omitempty"`
	// The username
	Username *string `json:"username,omitempty"`
}

// NewCoreGradesGetEnrolledUsersForSelector200ResponseUsersInner instantiates a new CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreGradesGetEnrolledUsersForSelector200ResponseUsersInner() *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner {
	this := CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner{}
	var address string = "null"
	this.Address = &address
	var auth string = "null"
	this.Auth = &auth
	var calendartype string = "null"
	this.Calendartype = &calendartype
	var city string = "null"
	this.City = &city
	var confirmed bool = null
	this.Confirmed = &confirmed
	var country string = "null"
	this.Country = &country
	var department string = "null"
	this.Department = &department
	var description string = "null"
	this.Description = &description
	var descriptionformat int32 = null
	this.Descriptionformat = &descriptionformat
	var firstaccess int32 = null
	this.Firstaccess = &firstaccess
	var fullname string = "null"
	this.Fullname = &fullname
	var idnumber string = "null"
	this.Idnumber = &idnumber
	var institution string = "null"
	this.Institution = &institution
	var interests string = "null"
	this.Interests = &interests
	var lang string = "null"
	this.Lang = &lang
	var lastaccess int32 = null
	this.Lastaccess = &lastaccess
	var mailformat int32 = null
	this.Mailformat = &mailformat
	var phone1 string = "null"
	this.Phone1 = &phone1
	var phone2 string = "null"
	this.Phone2 = &phone2
	var profileimageurl string = "null"
	this.Profileimageurl = &profileimageurl
	var profileimageurlsmall string = "null"
	this.Profileimageurlsmall = &profileimageurlsmall
	var suspended bool = null
	this.Suspended = &suspended
	var theme string = "null"
	this.Theme = &theme
	var timezone string = "null"
	this.Timezone = &timezone
	var username string = "null"
	this.Username = &username
	return &this
}

// NewCoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerWithDefaults instantiates a new CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerWithDefaults() *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner {
	this := CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner{}
	var address string = "null"
	this.Address = &address
	var auth string = "null"
	this.Auth = &auth
	var calendartype string = "null"
	this.Calendartype = &calendartype
	var city string = "null"
	this.City = &city
	var confirmed bool = null
	this.Confirmed = &confirmed
	var country string = "null"
	this.Country = &country
	var department string = "null"
	this.Department = &department
	var description string = "null"
	this.Description = &description
	var descriptionformat int32 = null
	this.Descriptionformat = &descriptionformat
	var firstaccess int32 = null
	this.Firstaccess = &firstaccess
	var fullname string = "null"
	this.Fullname = &fullname
	var idnumber string = "null"
	this.Idnumber = &idnumber
	var institution string = "null"
	this.Institution = &institution
	var interests string = "null"
	this.Interests = &interests
	var lang string = "null"
	this.Lang = &lang
	var lastaccess int32 = null
	this.Lastaccess = &lastaccess
	var mailformat int32 = null
	this.Mailformat = &mailformat
	var phone1 string = "null"
	this.Phone1 = &phone1
	var phone2 string = "null"
	this.Phone2 = &phone2
	var profileimageurl string = "null"
	this.Profileimageurl = &profileimageurl
	var profileimageurlsmall string = "null"
	this.Profileimageurlsmall = &profileimageurlsmall
	var suspended bool = null
	this.Suspended = &suspended
	var theme string = "null"
	this.Theme = &theme
	var timezone string = "null"
	this.Timezone = &timezone
	var username string = "null"
	this.Username = &username
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetAddress(v string) {
	o.Address = &v
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetAuth() string {
	if o == nil || IsNil(o.Auth) {
		var ret string
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetAuthOk() (*string, bool) {
	if o == nil || IsNil(o.Auth) {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasAuth() bool {
	if o != nil && !IsNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given string and assigns it to the Auth field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetAuth(v string) {
	o.Auth = &v
}

// GetCalendartype returns the Calendartype field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetCalendartype() string {
	if o == nil || IsNil(o.Calendartype) {
		var ret string
		return ret
	}
	return *o.Calendartype
}

// GetCalendartypeOk returns a tuple with the Calendartype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetCalendartypeOk() (*string, bool) {
	if o == nil || IsNil(o.Calendartype) {
		return nil, false
	}
	return o.Calendartype, true
}

// HasCalendartype returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasCalendartype() bool {
	if o != nil && !IsNil(o.Calendartype) {
		return true
	}

	return false
}

// SetCalendartype gets a reference to the given string and assigns it to the Calendartype field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetCalendartype(v string) {
	o.Calendartype = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetCity(v string) {
	o.City = &v
}

// GetConfirmed returns the Confirmed field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetConfirmed() bool {
	if o == nil || IsNil(o.Confirmed) {
		var ret bool
		return ret
	}
	return *o.Confirmed
}

// GetConfirmedOk returns a tuple with the Confirmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetConfirmedOk() (*bool, bool) {
	if o == nil || IsNil(o.Confirmed) {
		return nil, false
	}
	return o.Confirmed, true
}

// HasConfirmed returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasConfirmed() bool {
	if o != nil && !IsNil(o.Confirmed) {
		return true
	}

	return false
}

// SetConfirmed gets a reference to the given bool and assigns it to the Confirmed field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetConfirmed(v bool) {
	o.Confirmed = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetCountry(v string) {
	o.Country = &v
}

// GetCustomfields returns the Customfields field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetCustomfields() []CoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerCustomfieldsInner {
	if o == nil || IsNil(o.Customfields) {
		var ret []CoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerCustomfieldsInner
		return ret
	}
	return o.Customfields
}

// GetCustomfieldsOk returns a tuple with the Customfields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetCustomfieldsOk() ([]CoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerCustomfieldsInner, bool) {
	if o == nil || IsNil(o.Customfields) {
		return nil, false
	}
	return o.Customfields, true
}

// HasCustomfields returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasCustomfields() bool {
	if o != nil && !IsNil(o.Customfields) {
		return true
	}

	return false
}

// SetCustomfields gets a reference to the given []CoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerCustomfieldsInner and assigns it to the Customfields field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetCustomfields(v []CoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerCustomfieldsInner) {
	o.Customfields = v
}

// GetDepartment returns the Department field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetDepartment() string {
	if o == nil || IsNil(o.Department) {
		var ret string
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetDepartmentOk() (*string, bool) {
	if o == nil || IsNil(o.Department) {
		return nil, false
	}
	return o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasDepartment() bool {
	if o != nil && !IsNil(o.Department) {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given string and assigns it to the Department field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetDepartment(v string) {
	o.Department = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetDescription(v string) {
	o.Description = &v
}

// GetDescriptionformat returns the Descriptionformat field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetDescriptionformat() int32 {
	if o == nil || IsNil(o.Descriptionformat) {
		var ret int32
		return ret
	}
	return *o.Descriptionformat
}

// GetDescriptionformatOk returns a tuple with the Descriptionformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetDescriptionformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Descriptionformat) {
		return nil, false
	}
	return o.Descriptionformat, true
}

// HasDescriptionformat returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasDescriptionformat() bool {
	if o != nil && !IsNil(o.Descriptionformat) {
		return true
	}

	return false
}

// SetDescriptionformat gets a reference to the given int32 and assigns it to the Descriptionformat field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetDescriptionformat(v int32) {
	o.Descriptionformat = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetEmail(v string) {
	o.Email = &v
}

// GetFirstaccess returns the Firstaccess field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetFirstaccess() int32 {
	if o == nil || IsNil(o.Firstaccess) {
		var ret int32
		return ret
	}
	return *o.Firstaccess
}

// GetFirstaccessOk returns a tuple with the Firstaccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetFirstaccessOk() (*int32, bool) {
	if o == nil || IsNil(o.Firstaccess) {
		return nil, false
	}
	return o.Firstaccess, true
}

// HasFirstaccess returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasFirstaccess() bool {
	if o != nil && !IsNil(o.Firstaccess) {
		return true
	}

	return false
}

// SetFirstaccess gets a reference to the given int32 and assigns it to the Firstaccess field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetFirstaccess(v int32) {
	o.Firstaccess = &v
}

// GetFirstname returns the Firstname field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetFirstname() string {
	if o == nil || IsNil(o.Firstname) {
		var ret string
		return ret
	}
	return *o.Firstname
}

// GetFirstnameOk returns a tuple with the Firstname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetFirstnameOk() (*string, bool) {
	if o == nil || IsNil(o.Firstname) {
		return nil, false
	}
	return o.Firstname, true
}

// HasFirstname returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasFirstname() bool {
	if o != nil && !IsNil(o.Firstname) {
		return true
	}

	return false
}

// SetFirstname gets a reference to the given string and assigns it to the Firstname field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetFirstname(v string) {
	o.Firstname = &v
}

// GetFullname returns the Fullname field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetFullname() string {
	if o == nil || IsNil(o.Fullname) {
		var ret string
		return ret
	}
	return *o.Fullname
}

// GetFullnameOk returns a tuple with the Fullname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetFullnameOk() (*string, bool) {
	if o == nil || IsNil(o.Fullname) {
		return nil, false
	}
	return o.Fullname, true
}

// HasFullname returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasFullname() bool {
	if o != nil && !IsNil(o.Fullname) {
		return true
	}

	return false
}

// SetFullname gets a reference to the given string and assigns it to the Fullname field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetFullname(v string) {
	o.Fullname = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetId(v int32) {
	o.Id = &v
}

// GetIdnumber returns the Idnumber field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetIdnumber() string {
	if o == nil || IsNil(o.Idnumber) {
		var ret string
		return ret
	}
	return *o.Idnumber
}

// GetIdnumberOk returns a tuple with the Idnumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetIdnumberOk() (*string, bool) {
	if o == nil || IsNil(o.Idnumber) {
		return nil, false
	}
	return o.Idnumber, true
}

// HasIdnumber returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasIdnumber() bool {
	if o != nil && !IsNil(o.Idnumber) {
		return true
	}

	return false
}

// SetIdnumber gets a reference to the given string and assigns it to the Idnumber field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetIdnumber(v string) {
	o.Idnumber = &v
}

// GetInstitution returns the Institution field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetInstitution() string {
	if o == nil || IsNil(o.Institution) {
		var ret string
		return ret
	}
	return *o.Institution
}

// GetInstitutionOk returns a tuple with the Institution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetInstitutionOk() (*string, bool) {
	if o == nil || IsNil(o.Institution) {
		return nil, false
	}
	return o.Institution, true
}

// HasInstitution returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasInstitution() bool {
	if o != nil && !IsNil(o.Institution) {
		return true
	}

	return false
}

// SetInstitution gets a reference to the given string and assigns it to the Institution field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetInstitution(v string) {
	o.Institution = &v
}

// GetInterests returns the Interests field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetInterests() string {
	if o == nil || IsNil(o.Interests) {
		var ret string
		return ret
	}
	return *o.Interests
}

// GetInterestsOk returns a tuple with the Interests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetInterestsOk() (*string, bool) {
	if o == nil || IsNil(o.Interests) {
		return nil, false
	}
	return o.Interests, true
}

// HasInterests returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasInterests() bool {
	if o != nil && !IsNil(o.Interests) {
		return true
	}

	return false
}

// SetInterests gets a reference to the given string and assigns it to the Interests field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetInterests(v string) {
	o.Interests = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetLang(v string) {
	o.Lang = &v
}

// GetLastaccess returns the Lastaccess field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetLastaccess() int32 {
	if o == nil || IsNil(o.Lastaccess) {
		var ret int32
		return ret
	}
	return *o.Lastaccess
}

// GetLastaccessOk returns a tuple with the Lastaccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetLastaccessOk() (*int32, bool) {
	if o == nil || IsNil(o.Lastaccess) {
		return nil, false
	}
	return o.Lastaccess, true
}

// HasLastaccess returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasLastaccess() bool {
	if o != nil && !IsNil(o.Lastaccess) {
		return true
	}

	return false
}

// SetLastaccess gets a reference to the given int32 and assigns it to the Lastaccess field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetLastaccess(v int32) {
	o.Lastaccess = &v
}

// GetLastname returns the Lastname field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetLastname() string {
	if o == nil || IsNil(o.Lastname) {
		var ret string
		return ret
	}
	return *o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetLastnameOk() (*string, bool) {
	if o == nil || IsNil(o.Lastname) {
		return nil, false
	}
	return o.Lastname, true
}

// HasLastname returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasLastname() bool {
	if o != nil && !IsNil(o.Lastname) {
		return true
	}

	return false
}

// SetLastname gets a reference to the given string and assigns it to the Lastname field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetLastname(v string) {
	o.Lastname = &v
}

// GetMailformat returns the Mailformat field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetMailformat() int32 {
	if o == nil || IsNil(o.Mailformat) {
		var ret int32
		return ret
	}
	return *o.Mailformat
}

// GetMailformatOk returns a tuple with the Mailformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetMailformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Mailformat) {
		return nil, false
	}
	return o.Mailformat, true
}

// HasMailformat returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasMailformat() bool {
	if o != nil && !IsNil(o.Mailformat) {
		return true
	}

	return false
}

// SetMailformat gets a reference to the given int32 and assigns it to the Mailformat field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetMailformat(v int32) {
	o.Mailformat = &v
}

// GetPhone1 returns the Phone1 field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetPhone1() string {
	if o == nil || IsNil(o.Phone1) {
		var ret string
		return ret
	}
	return *o.Phone1
}

// GetPhone1Ok returns a tuple with the Phone1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetPhone1Ok() (*string, bool) {
	if o == nil || IsNil(o.Phone1) {
		return nil, false
	}
	return o.Phone1, true
}

// HasPhone1 returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasPhone1() bool {
	if o != nil && !IsNil(o.Phone1) {
		return true
	}

	return false
}

// SetPhone1 gets a reference to the given string and assigns it to the Phone1 field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetPhone1(v string) {
	o.Phone1 = &v
}

// GetPhone2 returns the Phone2 field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetPhone2() string {
	if o == nil || IsNil(o.Phone2) {
		var ret string
		return ret
	}
	return *o.Phone2
}

// GetPhone2Ok returns a tuple with the Phone2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetPhone2Ok() (*string, bool) {
	if o == nil || IsNil(o.Phone2) {
		return nil, false
	}
	return o.Phone2, true
}

// HasPhone2 returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasPhone2() bool {
	if o != nil && !IsNil(o.Phone2) {
		return true
	}

	return false
}

// SetPhone2 gets a reference to the given string and assigns it to the Phone2 field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetPhone2(v string) {
	o.Phone2 = &v
}

// GetPreferences returns the Preferences field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetPreferences() []CoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerPreferencesInner {
	if o == nil || IsNil(o.Preferences) {
		var ret []CoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerPreferencesInner
		return ret
	}
	return o.Preferences
}

// GetPreferencesOk returns a tuple with the Preferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetPreferencesOk() ([]CoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerPreferencesInner, bool) {
	if o == nil || IsNil(o.Preferences) {
		return nil, false
	}
	return o.Preferences, true
}

// HasPreferences returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasPreferences() bool {
	if o != nil && !IsNil(o.Preferences) {
		return true
	}

	return false
}

// SetPreferences gets a reference to the given []CoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerPreferencesInner and assigns it to the Preferences field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetPreferences(v []CoreGradesGetEnrolledUsersForSelector200ResponseUsersInnerPreferencesInner) {
	o.Preferences = v
}

// GetProfileimageurl returns the Profileimageurl field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetProfileimageurl() string {
	if o == nil || IsNil(o.Profileimageurl) {
		var ret string
		return ret
	}
	return *o.Profileimageurl
}

// GetProfileimageurlOk returns a tuple with the Profileimageurl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetProfileimageurlOk() (*string, bool) {
	if o == nil || IsNil(o.Profileimageurl) {
		return nil, false
	}
	return o.Profileimageurl, true
}

// HasProfileimageurl returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasProfileimageurl() bool {
	if o != nil && !IsNil(o.Profileimageurl) {
		return true
	}

	return false
}

// SetProfileimageurl gets a reference to the given string and assigns it to the Profileimageurl field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetProfileimageurl(v string) {
	o.Profileimageurl = &v
}

// GetProfileimageurlsmall returns the Profileimageurlsmall field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetProfileimageurlsmall() string {
	if o == nil || IsNil(o.Profileimageurlsmall) {
		var ret string
		return ret
	}
	return *o.Profileimageurlsmall
}

// GetProfileimageurlsmallOk returns a tuple with the Profileimageurlsmall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetProfileimageurlsmallOk() (*string, bool) {
	if o == nil || IsNil(o.Profileimageurlsmall) {
		return nil, false
	}
	return o.Profileimageurlsmall, true
}

// HasProfileimageurlsmall returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasProfileimageurlsmall() bool {
	if o != nil && !IsNil(o.Profileimageurlsmall) {
		return true
	}

	return false
}

// SetProfileimageurlsmall gets a reference to the given string and assigns it to the Profileimageurlsmall field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetProfileimageurlsmall(v string) {
	o.Profileimageurlsmall = &v
}

// GetSuspended returns the Suspended field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetSuspended() bool {
	if o == nil || IsNil(o.Suspended) {
		var ret bool
		return ret
	}
	return *o.Suspended
}

// GetSuspendedOk returns a tuple with the Suspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetSuspendedOk() (*bool, bool) {
	if o == nil || IsNil(o.Suspended) {
		return nil, false
	}
	return o.Suspended, true
}

// HasSuspended returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasSuspended() bool {
	if o != nil && !IsNil(o.Suspended) {
		return true
	}

	return false
}

// SetSuspended gets a reference to the given bool and assigns it to the Suspended field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetSuspended(v bool) {
	o.Suspended = &v
}

// GetTheme returns the Theme field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetTheme() string {
	if o == nil || IsNil(o.Theme) {
		var ret string
		return ret
	}
	return *o.Theme
}

// GetThemeOk returns a tuple with the Theme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetThemeOk() (*string, bool) {
	if o == nil || IsNil(o.Theme) {
		return nil, false
	}
	return o.Theme, true
}

// HasTheme returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasTheme() bool {
	if o != nil && !IsNil(o.Theme) {
		return true
	}

	return false
}

// SetTheme gets a reference to the given string and assigns it to the Theme field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetTheme(v string) {
	o.Theme = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetTimezone(v string) {
	o.Timezone = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) SetUsername(v string) {
	o.Username = &v
}

func (o CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Auth) {
		toSerialize["auth"] = o.Auth
	}
	if !IsNil(o.Calendartype) {
		toSerialize["calendartype"] = o.Calendartype
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Confirmed) {
		toSerialize["confirmed"] = o.Confirmed
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Customfields) {
		toSerialize["customfields"] = o.Customfields
	}
	if !IsNil(o.Department) {
		toSerialize["department"] = o.Department
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Descriptionformat) {
		toSerialize["descriptionformat"] = o.Descriptionformat
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Firstaccess) {
		toSerialize["firstaccess"] = o.Firstaccess
	}
	if !IsNil(o.Firstname) {
		toSerialize["firstname"] = o.Firstname
	}
	if !IsNil(o.Fullname) {
		toSerialize["fullname"] = o.Fullname
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Idnumber) {
		toSerialize["idnumber"] = o.Idnumber
	}
	if !IsNil(o.Institution) {
		toSerialize["institution"] = o.Institution
	}
	if !IsNil(o.Interests) {
		toSerialize["interests"] = o.Interests
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !IsNil(o.Lastaccess) {
		toSerialize["lastaccess"] = o.Lastaccess
	}
	if !IsNil(o.Lastname) {
		toSerialize["lastname"] = o.Lastname
	}
	if !IsNil(o.Mailformat) {
		toSerialize["mailformat"] = o.Mailformat
	}
	if !IsNil(o.Phone1) {
		toSerialize["phone1"] = o.Phone1
	}
	if !IsNil(o.Phone2) {
		toSerialize["phone2"] = o.Phone2
	}
	if !IsNil(o.Preferences) {
		toSerialize["preferences"] = o.Preferences
	}
	if !IsNil(o.Profileimageurl) {
		toSerialize["profileimageurl"] = o.Profileimageurl
	}
	if !IsNil(o.Profileimageurlsmall) {
		toSerialize["profileimageurlsmall"] = o.Profileimageurlsmall
	}
	if !IsNil(o.Suspended) {
		toSerialize["suspended"] = o.Suspended
	}
	if !IsNil(o.Theme) {
		toSerialize["theme"] = o.Theme
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableCoreGradesGetEnrolledUsersForSelector200ResponseUsersInner struct {
	value *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner
	isSet bool
}

func (v NullableCoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) Get() *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner {
	return v.value
}

func (v *NullableCoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) Set(val *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreGradesGetEnrolledUsersForSelector200ResponseUsersInner(val *CoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) *NullableCoreGradesGetEnrolledUsersForSelector200ResponseUsersInner {
	return &NullableCoreGradesGetEnrolledUsersForSelector200ResponseUsersInner{value: val, isSet: true}
}

func (v NullableCoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreGradesGetEnrolledUsersForSelector200ResponseUsersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


