/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModLessonLaunchAttemptRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModLessonLaunchAttemptRequest{}

// ModLessonLaunchAttemptRequest struct for ModLessonLaunchAttemptRequest
type ModLessonLaunchAttemptRequest struct {
	// lesson instance id
	Lessonid int32 `json:"lessonid"`
	// page id to continue from (only when continuing an attempt)
	Pageid *int32 `json:"pageid,omitempty"`
	// optional password (the lesson may be protected)
	Password *string `json:"password,omitempty"`
	// if we want to review just after finishing
	Review *bool `json:"review,omitempty"`
}

type _ModLessonLaunchAttemptRequest ModLessonLaunchAttemptRequest

// NewModLessonLaunchAttemptRequest instantiates a new ModLessonLaunchAttemptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModLessonLaunchAttemptRequest(lessonid int32) *ModLessonLaunchAttemptRequest {
	this := ModLessonLaunchAttemptRequest{}
	this.Lessonid = lessonid
	var pageid int32 = 0
	this.Pageid = &pageid
	var password string = ""
	this.Password = &password
	var review bool = false
	this.Review = &review
	return &this
}

// NewModLessonLaunchAttemptRequestWithDefaults instantiates a new ModLessonLaunchAttemptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModLessonLaunchAttemptRequestWithDefaults() *ModLessonLaunchAttemptRequest {
	this := ModLessonLaunchAttemptRequest{}
	var pageid int32 = 0
	this.Pageid = &pageid
	var password string = ""
	this.Password = &password
	var review bool = false
	this.Review = &review
	return &this
}

// GetLessonid returns the Lessonid field value
func (o *ModLessonLaunchAttemptRequest) GetLessonid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Lessonid
}

// GetLessonidOk returns a tuple with the Lessonid field value
// and a boolean to check if the value has been set.
func (o *ModLessonLaunchAttemptRequest) GetLessonidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lessonid, true
}

// SetLessonid sets field value
func (o *ModLessonLaunchAttemptRequest) SetLessonid(v int32) {
	o.Lessonid = v
}

// GetPageid returns the Pageid field value if set, zero value otherwise.
func (o *ModLessonLaunchAttemptRequest) GetPageid() int32 {
	if o == nil || IsNil(o.Pageid) {
		var ret int32
		return ret
	}
	return *o.Pageid
}

// GetPageidOk returns a tuple with the Pageid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLessonLaunchAttemptRequest) GetPageidOk() (*int32, bool) {
	if o == nil || IsNil(o.Pageid) {
		return nil, false
	}
	return o.Pageid, true
}

// HasPageid returns a boolean if a field has been set.
func (o *ModLessonLaunchAttemptRequest) HasPageid() bool {
	if o != nil && !IsNil(o.Pageid) {
		return true
	}

	return false
}

// SetPageid gets a reference to the given int32 and assigns it to the Pageid field.
func (o *ModLessonLaunchAttemptRequest) SetPageid(v int32) {
	o.Pageid = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ModLessonLaunchAttemptRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLessonLaunchAttemptRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ModLessonLaunchAttemptRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ModLessonLaunchAttemptRequest) SetPassword(v string) {
	o.Password = &v
}

// GetReview returns the Review field value if set, zero value otherwise.
func (o *ModLessonLaunchAttemptRequest) GetReview() bool {
	if o == nil || IsNil(o.Review) {
		var ret bool
		return ret
	}
	return *o.Review
}

// GetReviewOk returns a tuple with the Review field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLessonLaunchAttemptRequest) GetReviewOk() (*bool, bool) {
	if o == nil || IsNil(o.Review) {
		return nil, false
	}
	return o.Review, true
}

// HasReview returns a boolean if a field has been set.
func (o *ModLessonLaunchAttemptRequest) HasReview() bool {
	if o != nil && !IsNil(o.Review) {
		return true
	}

	return false
}

// SetReview gets a reference to the given bool and assigns it to the Review field.
func (o *ModLessonLaunchAttemptRequest) SetReview(v bool) {
	o.Review = &v
}

func (o ModLessonLaunchAttemptRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModLessonLaunchAttemptRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lessonid"] = o.Lessonid
	if !IsNil(o.Pageid) {
		toSerialize["pageid"] = o.Pageid
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Review) {
		toSerialize["review"] = o.Review
	}
	return toSerialize, nil
}

func (o *ModLessonLaunchAttemptRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lessonid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModLessonLaunchAttemptRequest := _ModLessonLaunchAttemptRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModLessonLaunchAttemptRequest)

	if err != nil {
		return err
	}

	*o = ModLessonLaunchAttemptRequest(varModLessonLaunchAttemptRequest)

	return err
}

type NullableModLessonLaunchAttemptRequest struct {
	value *ModLessonLaunchAttemptRequest
	isSet bool
}

func (v NullableModLessonLaunchAttemptRequest) Get() *ModLessonLaunchAttemptRequest {
	return v.value
}

func (v *NullableModLessonLaunchAttemptRequest) Set(val *ModLessonLaunchAttemptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModLessonLaunchAttemptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModLessonLaunchAttemptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModLessonLaunchAttemptRequest(val *ModLessonLaunchAttemptRequest) *NullableModLessonLaunchAttemptRequest {
	return &NullableModLessonLaunchAttemptRequest{value: val, isSet: true}
}

func (v NullableModLessonLaunchAttemptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModLessonLaunchAttemptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


