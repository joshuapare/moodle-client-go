/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreMessageGetConversations200ResponseConversationsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreMessageGetConversations200ResponseConversationsInner{}

// CoreMessageGetConversations200ResponseConversationsInner struct for CoreMessageGetConversations200ResponseConversationsInner
type CoreMessageGetConversations200ResponseConversationsInner struct {
	// If the user can delete messages in the conversation for all users
	Candeletemessagesforallusers *bool `json:"candeletemessagesforallusers,omitempty"`
	// The conversation id
	Id *int32 `json:"id,omitempty"`
	// A link to the conversation picture, if set
	Imageurl *string `json:"imageurl,omitempty"`
	// If the user marked this conversation as a favourite
	Isfavourite *bool `json:"isfavourite,omitempty"`
	// If the user muted this conversation
	Ismuted *bool `json:"ismuted,omitempty"`
	// If the user has read all messages in the conversation
	Isread *bool `json:"isread,omitempty"`
	// Total number of conversation members
	Membercount *int32 `json:"membercount,omitempty"`
	Members []CoreMessageGetConversationBetweenUsers200ResponseMembersInner `json:"members,omitempty"`
	Messages []CoreMessageGetConversationBetweenUsers200ResponseMessagesInner `json:"messages,omitempty"`
	// The conversation name, if set
	Name *string `json:"name,omitempty"`
	// A subtitle for the conversation name, if set
	Subname *string `json:"subname,omitempty"`
	// The type of the conversation (1=individual,2=group,3=self)
	Type *int32 `json:"type,omitempty"`
	// The number of unread messages in this conversation
	Unreadcount *int32 `json:"unreadcount,omitempty"`
}

// NewCoreMessageGetConversations200ResponseConversationsInner instantiates a new CoreMessageGetConversations200ResponseConversationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreMessageGetConversations200ResponseConversationsInner() *CoreMessageGetConversations200ResponseConversationsInner {
	this := CoreMessageGetConversations200ResponseConversationsInner{}
	var candeletemessagesforallusers bool = false
	this.Candeletemessagesforallusers = &candeletemessagesforallusers
	return &this
}

// NewCoreMessageGetConversations200ResponseConversationsInnerWithDefaults instantiates a new CoreMessageGetConversations200ResponseConversationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreMessageGetConversations200ResponseConversationsInnerWithDefaults() *CoreMessageGetConversations200ResponseConversationsInner {
	this := CoreMessageGetConversations200ResponseConversationsInner{}
	var candeletemessagesforallusers bool = false
	this.Candeletemessagesforallusers = &candeletemessagesforallusers
	return &this
}

// GetCandeletemessagesforallusers returns the Candeletemessagesforallusers field value if set, zero value otherwise.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetCandeletemessagesforallusers() bool {
	if o == nil || IsNil(o.Candeletemessagesforallusers) {
		var ret bool
		return ret
	}
	return *o.Candeletemessagesforallusers
}

// GetCandeletemessagesforallusersOk returns a tuple with the Candeletemessagesforallusers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetCandeletemessagesforallusersOk() (*bool, bool) {
	if o == nil || IsNil(o.Candeletemessagesforallusers) {
		return nil, false
	}
	return o.Candeletemessagesforallusers, true
}

// HasCandeletemessagesforallusers returns a boolean if a field has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) HasCandeletemessagesforallusers() bool {
	if o != nil && !IsNil(o.Candeletemessagesforallusers) {
		return true
	}

	return false
}

// SetCandeletemessagesforallusers gets a reference to the given bool and assigns it to the Candeletemessagesforallusers field.
func (o *CoreMessageGetConversations200ResponseConversationsInner) SetCandeletemessagesforallusers(v bool) {
	o.Candeletemessagesforallusers = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CoreMessageGetConversations200ResponseConversationsInner) SetId(v int32) {
	o.Id = &v
}

// GetImageurl returns the Imageurl field value if set, zero value otherwise.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetImageurl() string {
	if o == nil || IsNil(o.Imageurl) {
		var ret string
		return ret
	}
	return *o.Imageurl
}

// GetImageurlOk returns a tuple with the Imageurl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetImageurlOk() (*string, bool) {
	if o == nil || IsNil(o.Imageurl) {
		return nil, false
	}
	return o.Imageurl, true
}

// HasImageurl returns a boolean if a field has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) HasImageurl() bool {
	if o != nil && !IsNil(o.Imageurl) {
		return true
	}

	return false
}

// SetImageurl gets a reference to the given string and assigns it to the Imageurl field.
func (o *CoreMessageGetConversations200ResponseConversationsInner) SetImageurl(v string) {
	o.Imageurl = &v
}

// GetIsfavourite returns the Isfavourite field value if set, zero value otherwise.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetIsfavourite() bool {
	if o == nil || IsNil(o.Isfavourite) {
		var ret bool
		return ret
	}
	return *o.Isfavourite
}

// GetIsfavouriteOk returns a tuple with the Isfavourite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetIsfavouriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Isfavourite) {
		return nil, false
	}
	return o.Isfavourite, true
}

// HasIsfavourite returns a boolean if a field has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) HasIsfavourite() bool {
	if o != nil && !IsNil(o.Isfavourite) {
		return true
	}

	return false
}

// SetIsfavourite gets a reference to the given bool and assigns it to the Isfavourite field.
func (o *CoreMessageGetConversations200ResponseConversationsInner) SetIsfavourite(v bool) {
	o.Isfavourite = &v
}

// GetIsmuted returns the Ismuted field value if set, zero value otherwise.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetIsmuted() bool {
	if o == nil || IsNil(o.Ismuted) {
		var ret bool
		return ret
	}
	return *o.Ismuted
}

// GetIsmutedOk returns a tuple with the Ismuted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetIsmutedOk() (*bool, bool) {
	if o == nil || IsNil(o.Ismuted) {
		return nil, false
	}
	return o.Ismuted, true
}

// HasIsmuted returns a boolean if a field has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) HasIsmuted() bool {
	if o != nil && !IsNil(o.Ismuted) {
		return true
	}

	return false
}

// SetIsmuted gets a reference to the given bool and assigns it to the Ismuted field.
func (o *CoreMessageGetConversations200ResponseConversationsInner) SetIsmuted(v bool) {
	o.Ismuted = &v
}

// GetIsread returns the Isread field value if set, zero value otherwise.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetIsread() bool {
	if o == nil || IsNil(o.Isread) {
		var ret bool
		return ret
	}
	return *o.Isread
}

// GetIsreadOk returns a tuple with the Isread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetIsreadOk() (*bool, bool) {
	if o == nil || IsNil(o.Isread) {
		return nil, false
	}
	return o.Isread, true
}

// HasIsread returns a boolean if a field has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) HasIsread() bool {
	if o != nil && !IsNil(o.Isread) {
		return true
	}

	return false
}

// SetIsread gets a reference to the given bool and assigns it to the Isread field.
func (o *CoreMessageGetConversations200ResponseConversationsInner) SetIsread(v bool) {
	o.Isread = &v
}

// GetMembercount returns the Membercount field value if set, zero value otherwise.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetMembercount() int32 {
	if o == nil || IsNil(o.Membercount) {
		var ret int32
		return ret
	}
	return *o.Membercount
}

// GetMembercountOk returns a tuple with the Membercount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetMembercountOk() (*int32, bool) {
	if o == nil || IsNil(o.Membercount) {
		return nil, false
	}
	return o.Membercount, true
}

// HasMembercount returns a boolean if a field has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) HasMembercount() bool {
	if o != nil && !IsNil(o.Membercount) {
		return true
	}

	return false
}

// SetMembercount gets a reference to the given int32 and assigns it to the Membercount field.
func (o *CoreMessageGetConversations200ResponseConversationsInner) SetMembercount(v int32) {
	o.Membercount = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetMembers() []CoreMessageGetConversationBetweenUsers200ResponseMembersInner {
	if o == nil || IsNil(o.Members) {
		var ret []CoreMessageGetConversationBetweenUsers200ResponseMembersInner
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetMembersOk() ([]CoreMessageGetConversationBetweenUsers200ResponseMembersInner, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []CoreMessageGetConversationBetweenUsers200ResponseMembersInner and assigns it to the Members field.
func (o *CoreMessageGetConversations200ResponseConversationsInner) SetMembers(v []CoreMessageGetConversationBetweenUsers200ResponseMembersInner) {
	o.Members = v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetMessages() []CoreMessageGetConversationBetweenUsers200ResponseMessagesInner {
	if o == nil || IsNil(o.Messages) {
		var ret []CoreMessageGetConversationBetweenUsers200ResponseMessagesInner
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetMessagesOk() ([]CoreMessageGetConversationBetweenUsers200ResponseMessagesInner, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []CoreMessageGetConversationBetweenUsers200ResponseMessagesInner and assigns it to the Messages field.
func (o *CoreMessageGetConversations200ResponseConversationsInner) SetMessages(v []CoreMessageGetConversationBetweenUsers200ResponseMessagesInner) {
	o.Messages = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreMessageGetConversations200ResponseConversationsInner) SetName(v string) {
	o.Name = &v
}

// GetSubname returns the Subname field value if set, zero value otherwise.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetSubname() string {
	if o == nil || IsNil(o.Subname) {
		var ret string
		return ret
	}
	return *o.Subname
}

// GetSubnameOk returns a tuple with the Subname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetSubnameOk() (*string, bool) {
	if o == nil || IsNil(o.Subname) {
		return nil, false
	}
	return o.Subname, true
}

// HasSubname returns a boolean if a field has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) HasSubname() bool {
	if o != nil && !IsNil(o.Subname) {
		return true
	}

	return false
}

// SetSubname gets a reference to the given string and assigns it to the Subname field.
func (o *CoreMessageGetConversations200ResponseConversationsInner) SetSubname(v string) {
	o.Subname = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *CoreMessageGetConversations200ResponseConversationsInner) SetType(v int32) {
	o.Type = &v
}

// GetUnreadcount returns the Unreadcount field value if set, zero value otherwise.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetUnreadcount() int32 {
	if o == nil || IsNil(o.Unreadcount) {
		var ret int32
		return ret
	}
	return *o.Unreadcount
}

// GetUnreadcountOk returns a tuple with the Unreadcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) GetUnreadcountOk() (*int32, bool) {
	if o == nil || IsNil(o.Unreadcount) {
		return nil, false
	}
	return o.Unreadcount, true
}

// HasUnreadcount returns a boolean if a field has been set.
func (o *CoreMessageGetConversations200ResponseConversationsInner) HasUnreadcount() bool {
	if o != nil && !IsNil(o.Unreadcount) {
		return true
	}

	return false
}

// SetUnreadcount gets a reference to the given int32 and assigns it to the Unreadcount field.
func (o *CoreMessageGetConversations200ResponseConversationsInner) SetUnreadcount(v int32) {
	o.Unreadcount = &v
}

func (o CoreMessageGetConversations200ResponseConversationsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreMessageGetConversations200ResponseConversationsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Candeletemessagesforallusers) {
		toSerialize["candeletemessagesforallusers"] = o.Candeletemessagesforallusers
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Imageurl) {
		toSerialize["imageurl"] = o.Imageurl
	}
	if !IsNil(o.Isfavourite) {
		toSerialize["isfavourite"] = o.Isfavourite
	}
	if !IsNil(o.Ismuted) {
		toSerialize["ismuted"] = o.Ismuted
	}
	if !IsNil(o.Isread) {
		toSerialize["isread"] = o.Isread
	}
	if !IsNil(o.Membercount) {
		toSerialize["membercount"] = o.Membercount
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Subname) {
		toSerialize["subname"] = o.Subname
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Unreadcount) {
		toSerialize["unreadcount"] = o.Unreadcount
	}
	return toSerialize, nil
}

type NullableCoreMessageGetConversations200ResponseConversationsInner struct {
	value *CoreMessageGetConversations200ResponseConversationsInner
	isSet bool
}

func (v NullableCoreMessageGetConversations200ResponseConversationsInner) Get() *CoreMessageGetConversations200ResponseConversationsInner {
	return v.value
}

func (v *NullableCoreMessageGetConversations200ResponseConversationsInner) Set(val *CoreMessageGetConversations200ResponseConversationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreMessageGetConversations200ResponseConversationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreMessageGetConversations200ResponseConversationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreMessageGetConversations200ResponseConversationsInner(val *CoreMessageGetConversations200ResponseConversationsInner) *NullableCoreMessageGetConversations200ResponseConversationsInner {
	return &NullableCoreMessageGetConversations200ResponseConversationsInner{value: val, isSet: true}
}

func (v NullableCoreMessageGetConversations200ResponseConversationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreMessageGetConversations200ResponseConversationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


