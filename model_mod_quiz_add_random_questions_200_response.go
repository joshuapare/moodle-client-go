/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModQuizAddRandomQuestions200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModQuizAddRandomQuestions200Response{}

// ModQuizAddRandomQuestions200Response struct for ModQuizAddRandomQuestions200Response
type ModQuizAddRandomQuestions200Response struct {
	// Message
	Message *string `json:"message,omitempty"`
}

// NewModQuizAddRandomQuestions200Response instantiates a new ModQuizAddRandomQuestions200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModQuizAddRandomQuestions200Response() *ModQuizAddRandomQuestions200Response {
	this := ModQuizAddRandomQuestions200Response{}
	var message string = "null"
	this.Message = &message
	return &this
}

// NewModQuizAddRandomQuestions200ResponseWithDefaults instantiates a new ModQuizAddRandomQuestions200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModQuizAddRandomQuestions200ResponseWithDefaults() *ModQuizAddRandomQuestions200Response {
	this := ModQuizAddRandomQuestions200Response{}
	var message string = "null"
	this.Message = &message
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ModQuizAddRandomQuestions200Response) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizAddRandomQuestions200Response) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ModQuizAddRandomQuestions200Response) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ModQuizAddRandomQuestions200Response) SetMessage(v string) {
	o.Message = &v
}

func (o ModQuizAddRandomQuestions200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModQuizAddRandomQuestions200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableModQuizAddRandomQuestions200Response struct {
	value *ModQuizAddRandomQuestions200Response
	isSet bool
}

func (v NullableModQuizAddRandomQuestions200Response) Get() *ModQuizAddRandomQuestions200Response {
	return v.value
}

func (v *NullableModQuizAddRandomQuestions200Response) Set(val *ModQuizAddRandomQuestions200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableModQuizAddRandomQuestions200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableModQuizAddRandomQuestions200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModQuizAddRandomQuestions200Response(val *ModQuizAddRandomQuestions200Response) *NullableModQuizAddRandomQuestions200Response {
	return &NullableModQuizAddRandomQuestions200Response{value: val, isSet: true}
}

func (v NullableModQuizAddRandomQuestions200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModQuizAddRandomQuestions200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


