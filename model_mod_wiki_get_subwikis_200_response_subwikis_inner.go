/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModWikiGetSubwikis200ResponseSubwikisInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModWikiGetSubwikis200ResponseSubwikisInner{}

// ModWikiGetSubwikis200ResponseSubwikisInner Subwikis
type ModWikiGetSubwikis200ResponseSubwikisInner struct {
	// True if user can edit the subwiki.
	Canedit *bool `json:"canedit,omitempty"`
	// Group ID.
	Groupid *string `json:"groupid,omitempty"`
	// Subwiki ID.
	Id *int32 `json:"id,omitempty"`
	// User ID.
	Userid *int32 `json:"userid,omitempty"`
	// Wiki ID.
	Wikiid *int32 `json:"wikiid,omitempty"`
}

// NewModWikiGetSubwikis200ResponseSubwikisInner instantiates a new ModWikiGetSubwikis200ResponseSubwikisInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModWikiGetSubwikis200ResponseSubwikisInner() *ModWikiGetSubwikis200ResponseSubwikisInner {
	this := ModWikiGetSubwikis200ResponseSubwikisInner{}
	var canedit bool = null
	this.Canedit = &canedit
	var groupid string = "null"
	this.Groupid = &groupid
	var id int32 = null
	this.Id = &id
	var userid int32 = null
	this.Userid = &userid
	var wikiid int32 = null
	this.Wikiid = &wikiid
	return &this
}

// NewModWikiGetSubwikis200ResponseSubwikisInnerWithDefaults instantiates a new ModWikiGetSubwikis200ResponseSubwikisInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModWikiGetSubwikis200ResponseSubwikisInnerWithDefaults() *ModWikiGetSubwikis200ResponseSubwikisInner {
	this := ModWikiGetSubwikis200ResponseSubwikisInner{}
	var canedit bool = null
	this.Canedit = &canedit
	var groupid string = "null"
	this.Groupid = &groupid
	var id int32 = null
	this.Id = &id
	var userid int32 = null
	this.Userid = &userid
	var wikiid int32 = null
	this.Wikiid = &wikiid
	return &this
}

// GetCanedit returns the Canedit field value if set, zero value otherwise.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) GetCanedit() bool {
	if o == nil || IsNil(o.Canedit) {
		var ret bool
		return ret
	}
	return *o.Canedit
}

// GetCaneditOk returns a tuple with the Canedit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) GetCaneditOk() (*bool, bool) {
	if o == nil || IsNil(o.Canedit) {
		return nil, false
	}
	return o.Canedit, true
}

// HasCanedit returns a boolean if a field has been set.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) HasCanedit() bool {
	if o != nil && !IsNil(o.Canedit) {
		return true
	}

	return false
}

// SetCanedit gets a reference to the given bool and assigns it to the Canedit field.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) SetCanedit(v bool) {
	o.Canedit = &v
}

// GetGroupid returns the Groupid field value if set, zero value otherwise.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) GetGroupid() string {
	if o == nil || IsNil(o.Groupid) {
		var ret string
		return ret
	}
	return *o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) GetGroupidOk() (*string, bool) {
	if o == nil || IsNil(o.Groupid) {
		return nil, false
	}
	return o.Groupid, true
}

// HasGroupid returns a boolean if a field has been set.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) HasGroupid() bool {
	if o != nil && !IsNil(o.Groupid) {
		return true
	}

	return false
}

// SetGroupid gets a reference to the given string and assigns it to the Groupid field.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) SetGroupid(v string) {
	o.Groupid = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) SetId(v int32) {
	o.Id = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) SetUserid(v int32) {
	o.Userid = &v
}

// GetWikiid returns the Wikiid field value if set, zero value otherwise.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) GetWikiid() int32 {
	if o == nil || IsNil(o.Wikiid) {
		var ret int32
		return ret
	}
	return *o.Wikiid
}

// GetWikiidOk returns a tuple with the Wikiid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) GetWikiidOk() (*int32, bool) {
	if o == nil || IsNil(o.Wikiid) {
		return nil, false
	}
	return o.Wikiid, true
}

// HasWikiid returns a boolean if a field has been set.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) HasWikiid() bool {
	if o != nil && !IsNil(o.Wikiid) {
		return true
	}

	return false
}

// SetWikiid gets a reference to the given int32 and assigns it to the Wikiid field.
func (o *ModWikiGetSubwikis200ResponseSubwikisInner) SetWikiid(v int32) {
	o.Wikiid = &v
}

func (o ModWikiGetSubwikis200ResponseSubwikisInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModWikiGetSubwikis200ResponseSubwikisInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Canedit) {
		toSerialize["canedit"] = o.Canedit
	}
	if !IsNil(o.Groupid) {
		toSerialize["groupid"] = o.Groupid
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	if !IsNil(o.Wikiid) {
		toSerialize["wikiid"] = o.Wikiid
	}
	return toSerialize, nil
}

type NullableModWikiGetSubwikis200ResponseSubwikisInner struct {
	value *ModWikiGetSubwikis200ResponseSubwikisInner
	isSet bool
}

func (v NullableModWikiGetSubwikis200ResponseSubwikisInner) Get() *ModWikiGetSubwikis200ResponseSubwikisInner {
	return v.value
}

func (v *NullableModWikiGetSubwikis200ResponseSubwikisInner) Set(val *ModWikiGetSubwikis200ResponseSubwikisInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModWikiGetSubwikis200ResponseSubwikisInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModWikiGetSubwikis200ResponseSubwikisInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModWikiGetSubwikis200ResponseSubwikisInner(val *ModWikiGetSubwikis200ResponseSubwikisInner) *NullableModWikiGetSubwikis200ResponseSubwikisInner {
	return &NullableModWikiGetSubwikis200ResponseSubwikisInner{value: val, isSet: true}
}

func (v NullableModWikiGetSubwikis200ResponseSubwikisInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModWikiGetSubwikis200ResponseSubwikisInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


