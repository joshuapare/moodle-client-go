/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModForumSetPinState200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumSetPinState200Response{}

// ModForumSetPinState200Response struct for ModForumSetPinState200Response
type ModForumSetPinState200Response struct {
	Capabilities ModForumSetPinState200ResponseCapabilities `json:"capabilities"`
	// firstpostid
	Firstpostid int32 `json:"firstpostid"`
	// forumid
	Forumid int32 `json:"forumid"`
	Group *ModForumSetPinState200ResponseGroup `json:"group,omitempty"`
	// id
	Id int32 `json:"id"`
	// istimelocked
	Istimelocked bool `json:"istimelocked"`
	// locked
	Locked bool `json:"locked"`
	// name
	Name string `json:"name"`
	// pinned
	Pinned bool `json:"pinned"`
	Timed ModForumSetPinState200ResponseTimed `json:"timed"`
	Times ModForumSetPinState200ResponseTimes `json:"times"`
	Urls ModForumSetPinState200ResponseUrls `json:"urls"`
	Userstate ModForumSetPinState200ResponseUserstate `json:"userstate"`
}

type _ModForumSetPinState200Response ModForumSetPinState200Response

// NewModForumSetPinState200Response instantiates a new ModForumSetPinState200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumSetPinState200Response(capabilities ModForumSetPinState200ResponseCapabilities, firstpostid int32, forumid int32, id int32, istimelocked bool, locked bool, name string, pinned bool, timed ModForumSetPinState200ResponseTimed, times ModForumSetPinState200ResponseTimes, urls ModForumSetPinState200ResponseUrls, userstate ModForumSetPinState200ResponseUserstate) *ModForumSetPinState200Response {
	this := ModForumSetPinState200Response{}
	this.Capabilities = capabilities
	this.Firstpostid = firstpostid
	this.Forumid = forumid
	this.Id = id
	this.Istimelocked = istimelocked
	this.Locked = locked
	this.Name = name
	this.Pinned = pinned
	this.Timed = timed
	this.Times = times
	this.Urls = urls
	this.Userstate = userstate
	return &this
}

// NewModForumSetPinState200ResponseWithDefaults instantiates a new ModForumSetPinState200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumSetPinState200ResponseWithDefaults() *ModForumSetPinState200Response {
	this := ModForumSetPinState200Response{}
	var firstpostid int32 = null
	this.Firstpostid = firstpostid
	var forumid int32 = null
	this.Forumid = forumid
	var istimelocked bool = null
	this.Istimelocked = istimelocked
	var locked bool = null
	this.Locked = locked
	var pinned bool = null
	this.Pinned = pinned
	return &this
}

// GetCapabilities returns the Capabilities field value
func (o *ModForumSetPinState200Response) GetCapabilities() ModForumSetPinState200ResponseCapabilities {
	if o == nil {
		var ret ModForumSetPinState200ResponseCapabilities
		return ret
	}

	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200Response) GetCapabilitiesOk() (*ModForumSetPinState200ResponseCapabilities, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Capabilities, true
}

// SetCapabilities sets field value
func (o *ModForumSetPinState200Response) SetCapabilities(v ModForumSetPinState200ResponseCapabilities) {
	o.Capabilities = v
}

// GetFirstpostid returns the Firstpostid field value
func (o *ModForumSetPinState200Response) GetFirstpostid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Firstpostid
}

// GetFirstpostidOk returns a tuple with the Firstpostid field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200Response) GetFirstpostidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Firstpostid, true
}

// SetFirstpostid sets field value
func (o *ModForumSetPinState200Response) SetFirstpostid(v int32) {
	o.Firstpostid = v
}

// GetForumid returns the Forumid field value
func (o *ModForumSetPinState200Response) GetForumid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Forumid
}

// GetForumidOk returns a tuple with the Forumid field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200Response) GetForumidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Forumid, true
}

// SetForumid sets field value
func (o *ModForumSetPinState200Response) SetForumid(v int32) {
	o.Forumid = v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *ModForumSetPinState200Response) GetGroup() ModForumSetPinState200ResponseGroup {
	if o == nil || IsNil(o.Group) {
		var ret ModForumSetPinState200ResponseGroup
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200Response) GetGroupOk() (*ModForumSetPinState200ResponseGroup, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *ModForumSetPinState200Response) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given ModForumSetPinState200ResponseGroup and assigns it to the Group field.
func (o *ModForumSetPinState200Response) SetGroup(v ModForumSetPinState200ResponseGroup) {
	o.Group = &v
}

// GetId returns the Id field value
func (o *ModForumSetPinState200Response) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200Response) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModForumSetPinState200Response) SetId(v int32) {
	o.Id = v
}

// GetIstimelocked returns the Istimelocked field value
func (o *ModForumSetPinState200Response) GetIstimelocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Istimelocked
}

// GetIstimelockedOk returns a tuple with the Istimelocked field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200Response) GetIstimelockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Istimelocked, true
}

// SetIstimelocked sets field value
func (o *ModForumSetPinState200Response) SetIstimelocked(v bool) {
	o.Istimelocked = v
}

// GetLocked returns the Locked field value
func (o *ModForumSetPinState200Response) GetLocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Locked
}

// GetLockedOk returns a tuple with the Locked field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200Response) GetLockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locked, true
}

// SetLocked sets field value
func (o *ModForumSetPinState200Response) SetLocked(v bool) {
	o.Locked = v
}

// GetName returns the Name field value
func (o *ModForumSetPinState200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ModForumSetPinState200Response) SetName(v string) {
	o.Name = v
}

// GetPinned returns the Pinned field value
func (o *ModForumSetPinState200Response) GetPinned() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Pinned
}

// GetPinnedOk returns a tuple with the Pinned field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200Response) GetPinnedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pinned, true
}

// SetPinned sets field value
func (o *ModForumSetPinState200Response) SetPinned(v bool) {
	o.Pinned = v
}

// GetTimed returns the Timed field value
func (o *ModForumSetPinState200Response) GetTimed() ModForumSetPinState200ResponseTimed {
	if o == nil {
		var ret ModForumSetPinState200ResponseTimed
		return ret
	}

	return o.Timed
}

// GetTimedOk returns a tuple with the Timed field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200Response) GetTimedOk() (*ModForumSetPinState200ResponseTimed, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timed, true
}

// SetTimed sets field value
func (o *ModForumSetPinState200Response) SetTimed(v ModForumSetPinState200ResponseTimed) {
	o.Timed = v
}

// GetTimes returns the Times field value
func (o *ModForumSetPinState200Response) GetTimes() ModForumSetPinState200ResponseTimes {
	if o == nil {
		var ret ModForumSetPinState200ResponseTimes
		return ret
	}

	return o.Times
}

// GetTimesOk returns a tuple with the Times field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200Response) GetTimesOk() (*ModForumSetPinState200ResponseTimes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Times, true
}

// SetTimes sets field value
func (o *ModForumSetPinState200Response) SetTimes(v ModForumSetPinState200ResponseTimes) {
	o.Times = v
}

// GetUrls returns the Urls field value
func (o *ModForumSetPinState200Response) GetUrls() ModForumSetPinState200ResponseUrls {
	if o == nil {
		var ret ModForumSetPinState200ResponseUrls
		return ret
	}

	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200Response) GetUrlsOk() (*ModForumSetPinState200ResponseUrls, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Urls, true
}

// SetUrls sets field value
func (o *ModForumSetPinState200Response) SetUrls(v ModForumSetPinState200ResponseUrls) {
	o.Urls = v
}

// GetUserstate returns the Userstate field value
func (o *ModForumSetPinState200Response) GetUserstate() ModForumSetPinState200ResponseUserstate {
	if o == nil {
		var ret ModForumSetPinState200ResponseUserstate
		return ret
	}

	return o.Userstate
}

// GetUserstateOk returns a tuple with the Userstate field value
// and a boolean to check if the value has been set.
func (o *ModForumSetPinState200Response) GetUserstateOk() (*ModForumSetPinState200ResponseUserstate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userstate, true
}

// SetUserstate sets field value
func (o *ModForumSetPinState200Response) SetUserstate(v ModForumSetPinState200ResponseUserstate) {
	o.Userstate = v
}

func (o ModForumSetPinState200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumSetPinState200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["capabilities"] = o.Capabilities
	toSerialize["firstpostid"] = o.Firstpostid
	toSerialize["forumid"] = o.Forumid
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	toSerialize["id"] = o.Id
	toSerialize["istimelocked"] = o.Istimelocked
	toSerialize["locked"] = o.Locked
	toSerialize["name"] = o.Name
	toSerialize["pinned"] = o.Pinned
	toSerialize["timed"] = o.Timed
	toSerialize["times"] = o.Times
	toSerialize["urls"] = o.Urls
	toSerialize["userstate"] = o.Userstate
	return toSerialize, nil
}

func (o *ModForumSetPinState200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"capabilities",
		"firstpostid",
		"forumid",
		"id",
		"istimelocked",
		"locked",
		"name",
		"pinned",
		"timed",
		"times",
		"urls",
		"userstate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModForumSetPinState200Response := _ModForumSetPinState200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModForumSetPinState200Response)

	if err != nil {
		return err
	}

	*o = ModForumSetPinState200Response(varModForumSetPinState200Response)

	return err
}

type NullableModForumSetPinState200Response struct {
	value *ModForumSetPinState200Response
	isSet bool
}

func (v NullableModForumSetPinState200Response) Get() *ModForumSetPinState200Response {
	return v.value
}

func (v *NullableModForumSetPinState200Response) Set(val *ModForumSetPinState200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumSetPinState200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumSetPinState200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumSetPinState200Response(val *ModForumSetPinState200Response) *NullableModForumSetPinState200Response {
	return &NullableModForumSetPinState200Response{value: val, isSet: true}
}

func (v NullableModForumSetPinState200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumSetPinState200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


