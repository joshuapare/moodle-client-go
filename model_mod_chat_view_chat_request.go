/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModChatViewChatRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModChatViewChatRequest{}

// ModChatViewChatRequest struct for ModChatViewChatRequest
type ModChatViewChatRequest struct {
	// chat instance id
	Chatid int32 `json:"chatid"`
}

type _ModChatViewChatRequest ModChatViewChatRequest

// NewModChatViewChatRequest instantiates a new ModChatViewChatRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModChatViewChatRequest(chatid int32) *ModChatViewChatRequest {
	this := ModChatViewChatRequest{}
	this.Chatid = chatid
	return &this
}

// NewModChatViewChatRequestWithDefaults instantiates a new ModChatViewChatRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModChatViewChatRequestWithDefaults() *ModChatViewChatRequest {
	this := ModChatViewChatRequest{}
	return &this
}

// GetChatid returns the Chatid field value
func (o *ModChatViewChatRequest) GetChatid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Chatid
}

// GetChatidOk returns a tuple with the Chatid field value
// and a boolean to check if the value has been set.
func (o *ModChatViewChatRequest) GetChatidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Chatid, true
}

// SetChatid sets field value
func (o *ModChatViewChatRequest) SetChatid(v int32) {
	o.Chatid = v
}

func (o ModChatViewChatRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModChatViewChatRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chatid"] = o.Chatid
	return toSerialize, nil
}

func (o *ModChatViewChatRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chatid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModChatViewChatRequest := _ModChatViewChatRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModChatViewChatRequest)

	if err != nil {
		return err
	}

	*o = ModChatViewChatRequest(varModChatViewChatRequest)

	return err
}

type NullableModChatViewChatRequest struct {
	value *ModChatViewChatRequest
	isSet bool
}

func (v NullableModChatViewChatRequest) Get() *ModChatViewChatRequest {
	return v.value
}

func (v *NullableModChatViewChatRequest) Set(val *ModChatViewChatRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModChatViewChatRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModChatViewChatRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModChatViewChatRequest(val *ModChatViewChatRequest) *NullableModChatViewChatRequest {
	return &NullableModChatViewChatRequest{value: val, isSet: true}
}

func (v NullableModChatViewChatRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModChatViewChatRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


