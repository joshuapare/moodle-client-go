/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the MessagePopupGetPopupNotifications200ResponseNotificationsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessagePopupGetPopupNotifications200ResponseNotificationsInner{}

// MessagePopupGetPopupNotifications200ResponseNotificationsInner message
type MessagePopupGetPopupNotifications200ResponseNotificationsInner struct {
	// The component that generated the notification
	Component *string `json:"component,omitempty"`
	// Context URL
	Contexturl *string `json:"contexturl,omitempty"`
	// Context URL link name
	Contexturlname *string `json:"contexturlname,omitempty"`
	// Custom data to be passed to the message processor.                                 The data here is serialised using json_encode().
	Customdata *string `json:"customdata,omitempty"`
	// notification deletion status
	Deleted *bool `json:"deleted,omitempty"`
	// The type of notification
	Eventtype *string `json:"eventtype,omitempty"`
	// The message
	Fullmessage *string `json:"fullmessage,omitempty"`
	// fullmessage format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Fullmessageformat *int32 `json:"fullmessageformat,omitempty"`
	// The message in html
	Fullmessagehtml *string `json:"fullmessagehtml,omitempty"`
	// URL for notification icon
	Iconurl *string `json:"iconurl,omitempty"`
	// Notification id (this is not guaranteed to be unique                                 within this result set)
	Id *int32 `json:"id,omitempty"`
	// notification read status
	Read *bool `json:"read,omitempty"`
	// The notification subject shortened                                 with ellipsis
	Shortenedsubject *string `json:"shortenedsubject,omitempty"`
	// The shorten message
	Smallmessage *string `json:"smallmessage,omitempty"`
	// The notification subject
	Subject *string `json:"subject,omitempty"`
	// The message text formated
	Text *string `json:"text,omitempty"`
	// Time created
	Timecreated *int32 `json:"timecreated,omitempty"`
	// Time created in a pretty format
	Timecreatedpretty *string `json:"timecreatedpretty,omitempty"`
	// Time read
	Timeread *int32 `json:"timeread,omitempty"`
	// User from id
	Useridfrom *int32 `json:"useridfrom,omitempty"`
	// User to id
	Useridto *int32 `json:"useridto,omitempty"`
}

// NewMessagePopupGetPopupNotifications200ResponseNotificationsInner instantiates a new MessagePopupGetPopupNotifications200ResponseNotificationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessagePopupGetPopupNotifications200ResponseNotificationsInner() *MessagePopupGetPopupNotifications200ResponseNotificationsInner {
	this := MessagePopupGetPopupNotifications200ResponseNotificationsInner{}
	var deleted bool = null
	this.Deleted = &deleted
	var iconurl string = "null"
	this.Iconurl = &iconurl
	var id int32 = null
	this.Id = &id
	var read bool = null
	this.Read = &read
	var shortenedsubject string = "null"
	this.Shortenedsubject = &shortenedsubject
	var subject string = "null"
	this.Subject = &subject
	var timecreatedpretty string = "null"
	this.Timecreatedpretty = &timecreatedpretty
	return &this
}

// NewMessagePopupGetPopupNotifications200ResponseNotificationsInnerWithDefaults instantiates a new MessagePopupGetPopupNotifications200ResponseNotificationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessagePopupGetPopupNotifications200ResponseNotificationsInnerWithDefaults() *MessagePopupGetPopupNotifications200ResponseNotificationsInner {
	this := MessagePopupGetPopupNotifications200ResponseNotificationsInner{}
	var deleted bool = null
	this.Deleted = &deleted
	var iconurl string = "null"
	this.Iconurl = &iconurl
	var id int32 = null
	this.Id = &id
	var read bool = null
	this.Read = &read
	var shortenedsubject string = "null"
	this.Shortenedsubject = &shortenedsubject
	var subject string = "null"
	this.Subject = &subject
	var timecreatedpretty string = "null"
	this.Timecreatedpretty = &timecreatedpretty
	return &this
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetComponent() string {
	if o == nil || IsNil(o.Component) {
		var ret string
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetComponentOk() (*string, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given string and assigns it to the Component field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetComponent(v string) {
	o.Component = &v
}

// GetContexturl returns the Contexturl field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetContexturl() string {
	if o == nil || IsNil(o.Contexturl) {
		var ret string
		return ret
	}
	return *o.Contexturl
}

// GetContexturlOk returns a tuple with the Contexturl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetContexturlOk() (*string, bool) {
	if o == nil || IsNil(o.Contexturl) {
		return nil, false
	}
	return o.Contexturl, true
}

// HasContexturl returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasContexturl() bool {
	if o != nil && !IsNil(o.Contexturl) {
		return true
	}

	return false
}

// SetContexturl gets a reference to the given string and assigns it to the Contexturl field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetContexturl(v string) {
	o.Contexturl = &v
}

// GetContexturlname returns the Contexturlname field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetContexturlname() string {
	if o == nil || IsNil(o.Contexturlname) {
		var ret string
		return ret
	}
	return *o.Contexturlname
}

// GetContexturlnameOk returns a tuple with the Contexturlname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetContexturlnameOk() (*string, bool) {
	if o == nil || IsNil(o.Contexturlname) {
		return nil, false
	}
	return o.Contexturlname, true
}

// HasContexturlname returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasContexturlname() bool {
	if o != nil && !IsNil(o.Contexturlname) {
		return true
	}

	return false
}

// SetContexturlname gets a reference to the given string and assigns it to the Contexturlname field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetContexturlname(v string) {
	o.Contexturlname = &v
}

// GetCustomdata returns the Customdata field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetCustomdata() string {
	if o == nil || IsNil(o.Customdata) {
		var ret string
		return ret
	}
	return *o.Customdata
}

// GetCustomdataOk returns a tuple with the Customdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetCustomdataOk() (*string, bool) {
	if o == nil || IsNil(o.Customdata) {
		return nil, false
	}
	return o.Customdata, true
}

// HasCustomdata returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasCustomdata() bool {
	if o != nil && !IsNil(o.Customdata) {
		return true
	}

	return false
}

// SetCustomdata gets a reference to the given string and assigns it to the Customdata field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetCustomdata(v string) {
	o.Customdata = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetDeleted() bool {
	if o == nil || IsNil(o.Deleted) {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetEventtype returns the Eventtype field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetEventtype() string {
	if o == nil || IsNil(o.Eventtype) {
		var ret string
		return ret
	}
	return *o.Eventtype
}

// GetEventtypeOk returns a tuple with the Eventtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetEventtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Eventtype) {
		return nil, false
	}
	return o.Eventtype, true
}

// HasEventtype returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasEventtype() bool {
	if o != nil && !IsNil(o.Eventtype) {
		return true
	}

	return false
}

// SetEventtype gets a reference to the given string and assigns it to the Eventtype field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetEventtype(v string) {
	o.Eventtype = &v
}

// GetFullmessage returns the Fullmessage field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetFullmessage() string {
	if o == nil || IsNil(o.Fullmessage) {
		var ret string
		return ret
	}
	return *o.Fullmessage
}

// GetFullmessageOk returns a tuple with the Fullmessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetFullmessageOk() (*string, bool) {
	if o == nil || IsNil(o.Fullmessage) {
		return nil, false
	}
	return o.Fullmessage, true
}

// HasFullmessage returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasFullmessage() bool {
	if o != nil && !IsNil(o.Fullmessage) {
		return true
	}

	return false
}

// SetFullmessage gets a reference to the given string and assigns it to the Fullmessage field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetFullmessage(v string) {
	o.Fullmessage = &v
}

// GetFullmessageformat returns the Fullmessageformat field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetFullmessageformat() int32 {
	if o == nil || IsNil(o.Fullmessageformat) {
		var ret int32
		return ret
	}
	return *o.Fullmessageformat
}

// GetFullmessageformatOk returns a tuple with the Fullmessageformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetFullmessageformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Fullmessageformat) {
		return nil, false
	}
	return o.Fullmessageformat, true
}

// HasFullmessageformat returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasFullmessageformat() bool {
	if o != nil && !IsNil(o.Fullmessageformat) {
		return true
	}

	return false
}

// SetFullmessageformat gets a reference to the given int32 and assigns it to the Fullmessageformat field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetFullmessageformat(v int32) {
	o.Fullmessageformat = &v
}

// GetFullmessagehtml returns the Fullmessagehtml field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetFullmessagehtml() string {
	if o == nil || IsNil(o.Fullmessagehtml) {
		var ret string
		return ret
	}
	return *o.Fullmessagehtml
}

// GetFullmessagehtmlOk returns a tuple with the Fullmessagehtml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetFullmessagehtmlOk() (*string, bool) {
	if o == nil || IsNil(o.Fullmessagehtml) {
		return nil, false
	}
	return o.Fullmessagehtml, true
}

// HasFullmessagehtml returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasFullmessagehtml() bool {
	if o != nil && !IsNil(o.Fullmessagehtml) {
		return true
	}

	return false
}

// SetFullmessagehtml gets a reference to the given string and assigns it to the Fullmessagehtml field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetFullmessagehtml(v string) {
	o.Fullmessagehtml = &v
}

// GetIconurl returns the Iconurl field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetIconurl() string {
	if o == nil || IsNil(o.Iconurl) {
		var ret string
		return ret
	}
	return *o.Iconurl
}

// GetIconurlOk returns a tuple with the Iconurl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetIconurlOk() (*string, bool) {
	if o == nil || IsNil(o.Iconurl) {
		return nil, false
	}
	return o.Iconurl, true
}

// HasIconurl returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasIconurl() bool {
	if o != nil && !IsNil(o.Iconurl) {
		return true
	}

	return false
}

// SetIconurl gets a reference to the given string and assigns it to the Iconurl field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetIconurl(v string) {
	o.Iconurl = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetId(v int32) {
	o.Id = &v
}

// GetRead returns the Read field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetRead() bool {
	if o == nil || IsNil(o.Read) {
		var ret bool
		return ret
	}
	return *o.Read
}

// GetReadOk returns a tuple with the Read field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetReadOk() (*bool, bool) {
	if o == nil || IsNil(o.Read) {
		return nil, false
	}
	return o.Read, true
}

// HasRead returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasRead() bool {
	if o != nil && !IsNil(o.Read) {
		return true
	}

	return false
}

// SetRead gets a reference to the given bool and assigns it to the Read field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetRead(v bool) {
	o.Read = &v
}

// GetShortenedsubject returns the Shortenedsubject field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetShortenedsubject() string {
	if o == nil || IsNil(o.Shortenedsubject) {
		var ret string
		return ret
	}
	return *o.Shortenedsubject
}

// GetShortenedsubjectOk returns a tuple with the Shortenedsubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetShortenedsubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Shortenedsubject) {
		return nil, false
	}
	return o.Shortenedsubject, true
}

// HasShortenedsubject returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasShortenedsubject() bool {
	if o != nil && !IsNil(o.Shortenedsubject) {
		return true
	}

	return false
}

// SetShortenedsubject gets a reference to the given string and assigns it to the Shortenedsubject field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetShortenedsubject(v string) {
	o.Shortenedsubject = &v
}

// GetSmallmessage returns the Smallmessage field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetSmallmessage() string {
	if o == nil || IsNil(o.Smallmessage) {
		var ret string
		return ret
	}
	return *o.Smallmessage
}

// GetSmallmessageOk returns a tuple with the Smallmessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetSmallmessageOk() (*string, bool) {
	if o == nil || IsNil(o.Smallmessage) {
		return nil, false
	}
	return o.Smallmessage, true
}

// HasSmallmessage returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasSmallmessage() bool {
	if o != nil && !IsNil(o.Smallmessage) {
		return true
	}

	return false
}

// SetSmallmessage gets a reference to the given string and assigns it to the Smallmessage field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetSmallmessage(v string) {
	o.Smallmessage = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetSubject(v string) {
	o.Subject = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetText(v string) {
	o.Text = &v
}

// GetTimecreated returns the Timecreated field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetTimecreated() int32 {
	if o == nil || IsNil(o.Timecreated) {
		var ret int32
		return ret
	}
	return *o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetTimecreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecreated) {
		return nil, false
	}
	return o.Timecreated, true
}

// HasTimecreated returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasTimecreated() bool {
	if o != nil && !IsNil(o.Timecreated) {
		return true
	}

	return false
}

// SetTimecreated gets a reference to the given int32 and assigns it to the Timecreated field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetTimecreated(v int32) {
	o.Timecreated = &v
}

// GetTimecreatedpretty returns the Timecreatedpretty field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetTimecreatedpretty() string {
	if o == nil || IsNil(o.Timecreatedpretty) {
		var ret string
		return ret
	}
	return *o.Timecreatedpretty
}

// GetTimecreatedprettyOk returns a tuple with the Timecreatedpretty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetTimecreatedprettyOk() (*string, bool) {
	if o == nil || IsNil(o.Timecreatedpretty) {
		return nil, false
	}
	return o.Timecreatedpretty, true
}

// HasTimecreatedpretty returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasTimecreatedpretty() bool {
	if o != nil && !IsNil(o.Timecreatedpretty) {
		return true
	}

	return false
}

// SetTimecreatedpretty gets a reference to the given string and assigns it to the Timecreatedpretty field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetTimecreatedpretty(v string) {
	o.Timecreatedpretty = &v
}

// GetTimeread returns the Timeread field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetTimeread() int32 {
	if o == nil || IsNil(o.Timeread) {
		var ret int32
		return ret
	}
	return *o.Timeread
}

// GetTimereadOk returns a tuple with the Timeread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetTimereadOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeread) {
		return nil, false
	}
	return o.Timeread, true
}

// HasTimeread returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasTimeread() bool {
	if o != nil && !IsNil(o.Timeread) {
		return true
	}

	return false
}

// SetTimeread gets a reference to the given int32 and assigns it to the Timeread field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetTimeread(v int32) {
	o.Timeread = &v
}

// GetUseridfrom returns the Useridfrom field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetUseridfrom() int32 {
	if o == nil || IsNil(o.Useridfrom) {
		var ret int32
		return ret
	}
	return *o.Useridfrom
}

// GetUseridfromOk returns a tuple with the Useridfrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetUseridfromOk() (*int32, bool) {
	if o == nil || IsNil(o.Useridfrom) {
		return nil, false
	}
	return o.Useridfrom, true
}

// HasUseridfrom returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasUseridfrom() bool {
	if o != nil && !IsNil(o.Useridfrom) {
		return true
	}

	return false
}

// SetUseridfrom gets a reference to the given int32 and assigns it to the Useridfrom field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetUseridfrom(v int32) {
	o.Useridfrom = &v
}

// GetUseridto returns the Useridto field value if set, zero value otherwise.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetUseridto() int32 {
	if o == nil || IsNil(o.Useridto) {
		var ret int32
		return ret
	}
	return *o.Useridto
}

// GetUseridtoOk returns a tuple with the Useridto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) GetUseridtoOk() (*int32, bool) {
	if o == nil || IsNil(o.Useridto) {
		return nil, false
	}
	return o.Useridto, true
}

// HasUseridto returns a boolean if a field has been set.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) HasUseridto() bool {
	if o != nil && !IsNil(o.Useridto) {
		return true
	}

	return false
}

// SetUseridto gets a reference to the given int32 and assigns it to the Useridto field.
func (o *MessagePopupGetPopupNotifications200ResponseNotificationsInner) SetUseridto(v int32) {
	o.Useridto = &v
}

func (o MessagePopupGetPopupNotifications200ResponseNotificationsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessagePopupGetPopupNotifications200ResponseNotificationsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Component) {
		toSerialize["component"] = o.Component
	}
	if !IsNil(o.Contexturl) {
		toSerialize["contexturl"] = o.Contexturl
	}
	if !IsNil(o.Contexturlname) {
		toSerialize["contexturlname"] = o.Contexturlname
	}
	if !IsNil(o.Customdata) {
		toSerialize["customdata"] = o.Customdata
	}
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !IsNil(o.Eventtype) {
		toSerialize["eventtype"] = o.Eventtype
	}
	if !IsNil(o.Fullmessage) {
		toSerialize["fullmessage"] = o.Fullmessage
	}
	if !IsNil(o.Fullmessageformat) {
		toSerialize["fullmessageformat"] = o.Fullmessageformat
	}
	if !IsNil(o.Fullmessagehtml) {
		toSerialize["fullmessagehtml"] = o.Fullmessagehtml
	}
	if !IsNil(o.Iconurl) {
		toSerialize["iconurl"] = o.Iconurl
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Read) {
		toSerialize["read"] = o.Read
	}
	if !IsNil(o.Shortenedsubject) {
		toSerialize["shortenedsubject"] = o.Shortenedsubject
	}
	if !IsNil(o.Smallmessage) {
		toSerialize["smallmessage"] = o.Smallmessage
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Timecreated) {
		toSerialize["timecreated"] = o.Timecreated
	}
	if !IsNil(o.Timecreatedpretty) {
		toSerialize["timecreatedpretty"] = o.Timecreatedpretty
	}
	if !IsNil(o.Timeread) {
		toSerialize["timeread"] = o.Timeread
	}
	if !IsNil(o.Useridfrom) {
		toSerialize["useridfrom"] = o.Useridfrom
	}
	if !IsNil(o.Useridto) {
		toSerialize["useridto"] = o.Useridto
	}
	return toSerialize, nil
}

type NullableMessagePopupGetPopupNotifications200ResponseNotificationsInner struct {
	value *MessagePopupGetPopupNotifications200ResponseNotificationsInner
	isSet bool
}

func (v NullableMessagePopupGetPopupNotifications200ResponseNotificationsInner) Get() *MessagePopupGetPopupNotifications200ResponseNotificationsInner {
	return v.value
}

func (v *NullableMessagePopupGetPopupNotifications200ResponseNotificationsInner) Set(val *MessagePopupGetPopupNotifications200ResponseNotificationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMessagePopupGetPopupNotifications200ResponseNotificationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMessagePopupGetPopupNotifications200ResponseNotificationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessagePopupGetPopupNotifications200ResponseNotificationsInner(val *MessagePopupGetPopupNotifications200ResponseNotificationsInner) *NullableMessagePopupGetPopupNotifications200ResponseNotificationsInner {
	return &NullableMessagePopupGetPopupNotifications200ResponseNotificationsInner{value: val, isSet: true}
}

func (v NullableMessagePopupGetPopupNotifications200ResponseNotificationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessagePopupGetPopupNotifications200ResponseNotificationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


