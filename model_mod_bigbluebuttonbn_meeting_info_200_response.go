/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModBigbluebuttonbnMeetingInfo200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModBigbluebuttonbnMeetingInfo200Response{}

// ModBigbluebuttonbnMeetingInfo200Response struct for ModBigbluebuttonbnMeetingInfo200Response
type ModBigbluebuttonbnMeetingInfo200Response struct {
	// bigbluebuttonbn instance id
	Bigbluebuttonbnid string `json:"bigbluebuttonbnid"`
	// Can join
	Canjoin bool `json:"canjoin"`
	// Closing time
	Closingtime *int32 `json:"closingtime,omitempty"`
	// CM id
	Cmid int32 `json:"cmid"`
	Features []ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner `json:"features,omitempty"`
	// bigbluebuttonbn group id
	Groupid *int32 `json:"groupid,omitempty"`
	// Guest access enabled
	Guestaccessenabled *bool `json:"guestaccessenabled,omitempty"`
	// Guest URL
	Guestjoinurl *string `json:"guestjoinurl,omitempty"`
	// Guest join password
	Guestpassword *string `json:"guestpassword,omitempty"`
	// Is moderator
	Ismoderator bool `json:"ismoderator"`
	// Join URL
	Joinurl string `json:"joinurl"`
	// Meeting id
	Meetingid string `json:"meetingid"`
	// Moderator count
	Moderatorcount *int32 `json:"moderatorcount,omitempty"`
	// Several moderators ?
	Moderatorplural *bool `json:"moderatorplural,omitempty"`
	// Opening time
	Openingtime *int32 `json:"openingtime,omitempty"`
	// Participant count
	Participantcount *int32 `json:"participantcount,omitempty"`
	// Several participants ?
	Participantplural *bool `json:"participantplural,omitempty"`
	Presentations []ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner `json:"presentations"`
	// Started at
	Startedat *int32 `json:"startedat,omitempty"`
	// Status closed
	Statusclosed *bool `json:"statusclosed,omitempty"`
	// Status message
	Statusmessage *string `json:"statusmessage,omitempty"`
	// Status open
	Statusopen *bool `json:"statusopen,omitempty"`
	// Status running
	Statusrunning *bool `json:"statusrunning,omitempty"`
	// User limit
	Userlimit int32 `json:"userlimit"`
}

type _ModBigbluebuttonbnMeetingInfo200Response ModBigbluebuttonbnMeetingInfo200Response

// NewModBigbluebuttonbnMeetingInfo200Response instantiates a new ModBigbluebuttonbnMeetingInfo200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModBigbluebuttonbnMeetingInfo200Response(bigbluebuttonbnid string, canjoin bool, cmid int32, ismoderator bool, joinurl string, meetingid string, presentations []ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner, userlimit int32) *ModBigbluebuttonbnMeetingInfo200Response {
	this := ModBigbluebuttonbnMeetingInfo200Response{}
	this.Bigbluebuttonbnid = bigbluebuttonbnid
	this.Canjoin = canjoin
	var closingtime int32 = null
	this.Closingtime = &closingtime
	this.Cmid = cmid
	var groupid int32 = 0
	this.Groupid = &groupid
	var guestaccessenabled bool = null
	this.Guestaccessenabled = &guestaccessenabled
	var guestjoinurl string = "null"
	this.Guestjoinurl = &guestjoinurl
	var guestpassword string = "null"
	this.Guestpassword = &guestpassword
	this.Ismoderator = ismoderator
	this.Joinurl = joinurl
	this.Meetingid = meetingid
	var moderatorcount int32 = null
	this.Moderatorcount = &moderatorcount
	var moderatorplural bool = null
	this.Moderatorplural = &moderatorplural
	var openingtime int32 = null
	this.Openingtime = &openingtime
	var participantcount int32 = null
	this.Participantcount = &participantcount
	var participantplural bool = null
	this.Participantplural = &participantplural
	this.Presentations = presentations
	var startedat int32 = null
	this.Startedat = &startedat
	var statusclosed bool = null
	this.Statusclosed = &statusclosed
	var statusmessage string = "null"
	this.Statusmessage = &statusmessage
	var statusopen bool = null
	this.Statusopen = &statusopen
	var statusrunning bool = null
	this.Statusrunning = &statusrunning
	this.Userlimit = userlimit
	return &this
}

// NewModBigbluebuttonbnMeetingInfo200ResponseWithDefaults instantiates a new ModBigbluebuttonbnMeetingInfo200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModBigbluebuttonbnMeetingInfo200ResponseWithDefaults() *ModBigbluebuttonbnMeetingInfo200Response {
	this := ModBigbluebuttonbnMeetingInfo200Response{}
	var bigbluebuttonbnid string = "null"
	this.Bigbluebuttonbnid = bigbluebuttonbnid
	var canjoin bool = null
	this.Canjoin = canjoin
	var closingtime int32 = null
	this.Closingtime = &closingtime
	var cmid int32 = null
	this.Cmid = cmid
	var groupid int32 = 0
	this.Groupid = &groupid
	var guestaccessenabled bool = null
	this.Guestaccessenabled = &guestaccessenabled
	var guestjoinurl string = "null"
	this.Guestjoinurl = &guestjoinurl
	var guestpassword string = "null"
	this.Guestpassword = &guestpassword
	var ismoderator bool = null
	this.Ismoderator = ismoderator
	var joinurl string = "null"
	this.Joinurl = joinurl
	var moderatorcount int32 = null
	this.Moderatorcount = &moderatorcount
	var moderatorplural bool = null
	this.Moderatorplural = &moderatorplural
	var openingtime int32 = null
	this.Openingtime = &openingtime
	var participantcount int32 = null
	this.Participantcount = &participantcount
	var participantplural bool = null
	this.Participantplural = &participantplural
	var startedat int32 = null
	this.Startedat = &startedat
	var statusclosed bool = null
	this.Statusclosed = &statusclosed
	var statusmessage string = "null"
	this.Statusmessage = &statusmessage
	var statusopen bool = null
	this.Statusopen = &statusopen
	var statusrunning bool = null
	this.Statusrunning = &statusrunning
	var userlimit int32 = null
	this.Userlimit = userlimit
	return &this
}

// GetBigbluebuttonbnid returns the Bigbluebuttonbnid field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetBigbluebuttonbnid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bigbluebuttonbnid
}

// GetBigbluebuttonbnidOk returns a tuple with the Bigbluebuttonbnid field value
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetBigbluebuttonbnidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bigbluebuttonbnid, true
}

// SetBigbluebuttonbnid sets field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetBigbluebuttonbnid(v string) {
	o.Bigbluebuttonbnid = v
}

// GetCanjoin returns the Canjoin field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetCanjoin() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canjoin
}

// GetCanjoinOk returns a tuple with the Canjoin field value
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetCanjoinOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canjoin, true
}

// SetCanjoin sets field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetCanjoin(v bool) {
	o.Canjoin = v
}

// GetClosingtime returns the Closingtime field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetClosingtime() int32 {
	if o == nil || IsNil(o.Closingtime) {
		var ret int32
		return ret
	}
	return *o.Closingtime
}

// GetClosingtimeOk returns a tuple with the Closingtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetClosingtimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Closingtime) {
		return nil, false
	}
	return o.Closingtime, true
}

// HasClosingtime returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasClosingtime() bool {
	if o != nil && !IsNil(o.Closingtime) {
		return true
	}

	return false
}

// SetClosingtime gets a reference to the given int32 and assigns it to the Closingtime field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetClosingtime(v int32) {
	o.Closingtime = &v
}

// GetCmid returns the Cmid field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetCmid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cmid
}

// GetCmidOk returns a tuple with the Cmid field value
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetCmidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cmid, true
}

// SetCmid sets field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetCmid(v int32) {
	o.Cmid = v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetFeatures() []ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner {
	if o == nil || IsNil(o.Features) {
		var ret []ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetFeaturesOk() ([]ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner and assigns it to the Features field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetFeatures(v []ModBigbluebuttonbnMeetingInfo200ResponseFeaturesInner) {
	o.Features = v
}

// GetGroupid returns the Groupid field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetGroupid() int32 {
	if o == nil || IsNil(o.Groupid) {
		var ret int32
		return ret
	}
	return *o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetGroupidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupid) {
		return nil, false
	}
	return o.Groupid, true
}

// HasGroupid returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasGroupid() bool {
	if o != nil && !IsNil(o.Groupid) {
		return true
	}

	return false
}

// SetGroupid gets a reference to the given int32 and assigns it to the Groupid field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetGroupid(v int32) {
	o.Groupid = &v
}

// GetGuestaccessenabled returns the Guestaccessenabled field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetGuestaccessenabled() bool {
	if o == nil || IsNil(o.Guestaccessenabled) {
		var ret bool
		return ret
	}
	return *o.Guestaccessenabled
}

// GetGuestaccessenabledOk returns a tuple with the Guestaccessenabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetGuestaccessenabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Guestaccessenabled) {
		return nil, false
	}
	return o.Guestaccessenabled, true
}

// HasGuestaccessenabled returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasGuestaccessenabled() bool {
	if o != nil && !IsNil(o.Guestaccessenabled) {
		return true
	}

	return false
}

// SetGuestaccessenabled gets a reference to the given bool and assigns it to the Guestaccessenabled field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetGuestaccessenabled(v bool) {
	o.Guestaccessenabled = &v
}

// GetGuestjoinurl returns the Guestjoinurl field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetGuestjoinurl() string {
	if o == nil || IsNil(o.Guestjoinurl) {
		var ret string
		return ret
	}
	return *o.Guestjoinurl
}

// GetGuestjoinurlOk returns a tuple with the Guestjoinurl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetGuestjoinurlOk() (*string, bool) {
	if o == nil || IsNil(o.Guestjoinurl) {
		return nil, false
	}
	return o.Guestjoinurl, true
}

// HasGuestjoinurl returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasGuestjoinurl() bool {
	if o != nil && !IsNil(o.Guestjoinurl) {
		return true
	}

	return false
}

// SetGuestjoinurl gets a reference to the given string and assigns it to the Guestjoinurl field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetGuestjoinurl(v string) {
	o.Guestjoinurl = &v
}

// GetGuestpassword returns the Guestpassword field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetGuestpassword() string {
	if o == nil || IsNil(o.Guestpassword) {
		var ret string
		return ret
	}
	return *o.Guestpassword
}

// GetGuestpasswordOk returns a tuple with the Guestpassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetGuestpasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Guestpassword) {
		return nil, false
	}
	return o.Guestpassword, true
}

// HasGuestpassword returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasGuestpassword() bool {
	if o != nil && !IsNil(o.Guestpassword) {
		return true
	}

	return false
}

// SetGuestpassword gets a reference to the given string and assigns it to the Guestpassword field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetGuestpassword(v string) {
	o.Guestpassword = &v
}

// GetIsmoderator returns the Ismoderator field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetIsmoderator() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Ismoderator
}

// GetIsmoderatorOk returns a tuple with the Ismoderator field value
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetIsmoderatorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ismoderator, true
}

// SetIsmoderator sets field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetIsmoderator(v bool) {
	o.Ismoderator = v
}

// GetJoinurl returns the Joinurl field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetJoinurl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Joinurl
}

// GetJoinurlOk returns a tuple with the Joinurl field value
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetJoinurlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Joinurl, true
}

// SetJoinurl sets field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetJoinurl(v string) {
	o.Joinurl = v
}

// GetMeetingid returns the Meetingid field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetMeetingid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Meetingid
}

// GetMeetingidOk returns a tuple with the Meetingid field value
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetMeetingidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Meetingid, true
}

// SetMeetingid sets field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetMeetingid(v string) {
	o.Meetingid = v
}

// GetModeratorcount returns the Moderatorcount field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetModeratorcount() int32 {
	if o == nil || IsNil(o.Moderatorcount) {
		var ret int32
		return ret
	}
	return *o.Moderatorcount
}

// GetModeratorcountOk returns a tuple with the Moderatorcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetModeratorcountOk() (*int32, bool) {
	if o == nil || IsNil(o.Moderatorcount) {
		return nil, false
	}
	return o.Moderatorcount, true
}

// HasModeratorcount returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasModeratorcount() bool {
	if o != nil && !IsNil(o.Moderatorcount) {
		return true
	}

	return false
}

// SetModeratorcount gets a reference to the given int32 and assigns it to the Moderatorcount field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetModeratorcount(v int32) {
	o.Moderatorcount = &v
}

// GetModeratorplural returns the Moderatorplural field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetModeratorplural() bool {
	if o == nil || IsNil(o.Moderatorplural) {
		var ret bool
		return ret
	}
	return *o.Moderatorplural
}

// GetModeratorpluralOk returns a tuple with the Moderatorplural field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetModeratorpluralOk() (*bool, bool) {
	if o == nil || IsNil(o.Moderatorplural) {
		return nil, false
	}
	return o.Moderatorplural, true
}

// HasModeratorplural returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasModeratorplural() bool {
	if o != nil && !IsNil(o.Moderatorplural) {
		return true
	}

	return false
}

// SetModeratorplural gets a reference to the given bool and assigns it to the Moderatorplural field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetModeratorplural(v bool) {
	o.Moderatorplural = &v
}

// GetOpeningtime returns the Openingtime field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetOpeningtime() int32 {
	if o == nil || IsNil(o.Openingtime) {
		var ret int32
		return ret
	}
	return *o.Openingtime
}

// GetOpeningtimeOk returns a tuple with the Openingtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetOpeningtimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Openingtime) {
		return nil, false
	}
	return o.Openingtime, true
}

// HasOpeningtime returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasOpeningtime() bool {
	if o != nil && !IsNil(o.Openingtime) {
		return true
	}

	return false
}

// SetOpeningtime gets a reference to the given int32 and assigns it to the Openingtime field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetOpeningtime(v int32) {
	o.Openingtime = &v
}

// GetParticipantcount returns the Participantcount field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetParticipantcount() int32 {
	if o == nil || IsNil(o.Participantcount) {
		var ret int32
		return ret
	}
	return *o.Participantcount
}

// GetParticipantcountOk returns a tuple with the Participantcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetParticipantcountOk() (*int32, bool) {
	if o == nil || IsNil(o.Participantcount) {
		return nil, false
	}
	return o.Participantcount, true
}

// HasParticipantcount returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasParticipantcount() bool {
	if o != nil && !IsNil(o.Participantcount) {
		return true
	}

	return false
}

// SetParticipantcount gets a reference to the given int32 and assigns it to the Participantcount field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetParticipantcount(v int32) {
	o.Participantcount = &v
}

// GetParticipantplural returns the Participantplural field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetParticipantplural() bool {
	if o == nil || IsNil(o.Participantplural) {
		var ret bool
		return ret
	}
	return *o.Participantplural
}

// GetParticipantpluralOk returns a tuple with the Participantplural field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetParticipantpluralOk() (*bool, bool) {
	if o == nil || IsNil(o.Participantplural) {
		return nil, false
	}
	return o.Participantplural, true
}

// HasParticipantplural returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasParticipantplural() bool {
	if o != nil && !IsNil(o.Participantplural) {
		return true
	}

	return false
}

// SetParticipantplural gets a reference to the given bool and assigns it to the Participantplural field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetParticipantplural(v bool) {
	o.Participantplural = &v
}

// GetPresentations returns the Presentations field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetPresentations() []ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner {
	if o == nil {
		var ret []ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner
		return ret
	}

	return o.Presentations
}

// GetPresentationsOk returns a tuple with the Presentations field value
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetPresentationsOk() ([]ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Presentations, true
}

// SetPresentations sets field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetPresentations(v []ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) {
	o.Presentations = v
}

// GetStartedat returns the Startedat field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetStartedat() int32 {
	if o == nil || IsNil(o.Startedat) {
		var ret int32
		return ret
	}
	return *o.Startedat
}

// GetStartedatOk returns a tuple with the Startedat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetStartedatOk() (*int32, bool) {
	if o == nil || IsNil(o.Startedat) {
		return nil, false
	}
	return o.Startedat, true
}

// HasStartedat returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasStartedat() bool {
	if o != nil && !IsNil(o.Startedat) {
		return true
	}

	return false
}

// SetStartedat gets a reference to the given int32 and assigns it to the Startedat field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetStartedat(v int32) {
	o.Startedat = &v
}

// GetStatusclosed returns the Statusclosed field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetStatusclosed() bool {
	if o == nil || IsNil(o.Statusclosed) {
		var ret bool
		return ret
	}
	return *o.Statusclosed
}

// GetStatusclosedOk returns a tuple with the Statusclosed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetStatusclosedOk() (*bool, bool) {
	if o == nil || IsNil(o.Statusclosed) {
		return nil, false
	}
	return o.Statusclosed, true
}

// HasStatusclosed returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasStatusclosed() bool {
	if o != nil && !IsNil(o.Statusclosed) {
		return true
	}

	return false
}

// SetStatusclosed gets a reference to the given bool and assigns it to the Statusclosed field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetStatusclosed(v bool) {
	o.Statusclosed = &v
}

// GetStatusmessage returns the Statusmessage field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetStatusmessage() string {
	if o == nil || IsNil(o.Statusmessage) {
		var ret string
		return ret
	}
	return *o.Statusmessage
}

// GetStatusmessageOk returns a tuple with the Statusmessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetStatusmessageOk() (*string, bool) {
	if o == nil || IsNil(o.Statusmessage) {
		return nil, false
	}
	return o.Statusmessage, true
}

// HasStatusmessage returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasStatusmessage() bool {
	if o != nil && !IsNil(o.Statusmessage) {
		return true
	}

	return false
}

// SetStatusmessage gets a reference to the given string and assigns it to the Statusmessage field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetStatusmessage(v string) {
	o.Statusmessage = &v
}

// GetStatusopen returns the Statusopen field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetStatusopen() bool {
	if o == nil || IsNil(o.Statusopen) {
		var ret bool
		return ret
	}
	return *o.Statusopen
}

// GetStatusopenOk returns a tuple with the Statusopen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetStatusopenOk() (*bool, bool) {
	if o == nil || IsNil(o.Statusopen) {
		return nil, false
	}
	return o.Statusopen, true
}

// HasStatusopen returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasStatusopen() bool {
	if o != nil && !IsNil(o.Statusopen) {
		return true
	}

	return false
}

// SetStatusopen gets a reference to the given bool and assigns it to the Statusopen field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetStatusopen(v bool) {
	o.Statusopen = &v
}

// GetStatusrunning returns the Statusrunning field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetStatusrunning() bool {
	if o == nil || IsNil(o.Statusrunning) {
		var ret bool
		return ret
	}
	return *o.Statusrunning
}

// GetStatusrunningOk returns a tuple with the Statusrunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetStatusrunningOk() (*bool, bool) {
	if o == nil || IsNil(o.Statusrunning) {
		return nil, false
	}
	return o.Statusrunning, true
}

// HasStatusrunning returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) HasStatusrunning() bool {
	if o != nil && !IsNil(o.Statusrunning) {
		return true
	}

	return false
}

// SetStatusrunning gets a reference to the given bool and assigns it to the Statusrunning field.
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetStatusrunning(v bool) {
	o.Statusrunning = &v
}

// GetUserlimit returns the Userlimit field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetUserlimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userlimit
}

// GetUserlimitOk returns a tuple with the Userlimit field value
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200Response) GetUserlimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userlimit, true
}

// SetUserlimit sets field value
func (o *ModBigbluebuttonbnMeetingInfo200Response) SetUserlimit(v int32) {
	o.Userlimit = v
}

func (o ModBigbluebuttonbnMeetingInfo200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModBigbluebuttonbnMeetingInfo200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bigbluebuttonbnid"] = o.Bigbluebuttonbnid
	toSerialize["canjoin"] = o.Canjoin
	if !IsNil(o.Closingtime) {
		toSerialize["closingtime"] = o.Closingtime
	}
	toSerialize["cmid"] = o.Cmid
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.Groupid) {
		toSerialize["groupid"] = o.Groupid
	}
	if !IsNil(o.Guestaccessenabled) {
		toSerialize["guestaccessenabled"] = o.Guestaccessenabled
	}
	if !IsNil(o.Guestjoinurl) {
		toSerialize["guestjoinurl"] = o.Guestjoinurl
	}
	if !IsNil(o.Guestpassword) {
		toSerialize["guestpassword"] = o.Guestpassword
	}
	toSerialize["ismoderator"] = o.Ismoderator
	toSerialize["joinurl"] = o.Joinurl
	toSerialize["meetingid"] = o.Meetingid
	if !IsNil(o.Moderatorcount) {
		toSerialize["moderatorcount"] = o.Moderatorcount
	}
	if !IsNil(o.Moderatorplural) {
		toSerialize["moderatorplural"] = o.Moderatorplural
	}
	if !IsNil(o.Openingtime) {
		toSerialize["openingtime"] = o.Openingtime
	}
	if !IsNil(o.Participantcount) {
		toSerialize["participantcount"] = o.Participantcount
	}
	if !IsNil(o.Participantplural) {
		toSerialize["participantplural"] = o.Participantplural
	}
	toSerialize["presentations"] = o.Presentations
	if !IsNil(o.Startedat) {
		toSerialize["startedat"] = o.Startedat
	}
	if !IsNil(o.Statusclosed) {
		toSerialize["statusclosed"] = o.Statusclosed
	}
	if !IsNil(o.Statusmessage) {
		toSerialize["statusmessage"] = o.Statusmessage
	}
	if !IsNil(o.Statusopen) {
		toSerialize["statusopen"] = o.Statusopen
	}
	if !IsNil(o.Statusrunning) {
		toSerialize["statusrunning"] = o.Statusrunning
	}
	toSerialize["userlimit"] = o.Userlimit
	return toSerialize, nil
}

func (o *ModBigbluebuttonbnMeetingInfo200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bigbluebuttonbnid",
		"canjoin",
		"cmid",
		"ismoderator",
		"joinurl",
		"meetingid",
		"presentations",
		"userlimit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModBigbluebuttonbnMeetingInfo200Response := _ModBigbluebuttonbnMeetingInfo200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModBigbluebuttonbnMeetingInfo200Response)

	if err != nil {
		return err
	}

	*o = ModBigbluebuttonbnMeetingInfo200Response(varModBigbluebuttonbnMeetingInfo200Response)

	return err
}

type NullableModBigbluebuttonbnMeetingInfo200Response struct {
	value *ModBigbluebuttonbnMeetingInfo200Response
	isSet bool
}

func (v NullableModBigbluebuttonbnMeetingInfo200Response) Get() *ModBigbluebuttonbnMeetingInfo200Response {
	return v.value
}

func (v *NullableModBigbluebuttonbnMeetingInfo200Response) Set(val *ModBigbluebuttonbnMeetingInfo200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableModBigbluebuttonbnMeetingInfo200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableModBigbluebuttonbnMeetingInfo200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModBigbluebuttonbnMeetingInfo200Response(val *ModBigbluebuttonbnMeetingInfo200Response) *NullableModBigbluebuttonbnMeetingInfo200Response {
	return &NullableModBigbluebuttonbnMeetingInfo200Response{value: val, isSet: true}
}

func (v NullableModBigbluebuttonbnMeetingInfo200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModBigbluebuttonbnMeetingInfo200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


