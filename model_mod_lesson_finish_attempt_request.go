/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModLessonFinishAttemptRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModLessonFinishAttemptRequest{}

// ModLessonFinishAttemptRequest struct for ModLessonFinishAttemptRequest
type ModLessonFinishAttemptRequest struct {
	// Lesson instance id.
	Lessonid int32 `json:"lessonid"`
	// If the user run out of time.
	Outoftime *bool `json:"outoftime,omitempty"`
	// Optional password (the lesson may be protected).
	Password *string `json:"password,omitempty"`
	// If we want to review just after finishing (1 hour margin).
	Review *bool `json:"review,omitempty"`
}

type _ModLessonFinishAttemptRequest ModLessonFinishAttemptRequest

// NewModLessonFinishAttemptRequest instantiates a new ModLessonFinishAttemptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModLessonFinishAttemptRequest(lessonid int32) *ModLessonFinishAttemptRequest {
	this := ModLessonFinishAttemptRequest{}
	this.Lessonid = lessonid
	var outoftime bool = false
	this.Outoftime = &outoftime
	var password string = ""
	this.Password = &password
	var review bool = false
	this.Review = &review
	return &this
}

// NewModLessonFinishAttemptRequestWithDefaults instantiates a new ModLessonFinishAttemptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModLessonFinishAttemptRequestWithDefaults() *ModLessonFinishAttemptRequest {
	this := ModLessonFinishAttemptRequest{}
	var lessonid int32 = null
	this.Lessonid = lessonid
	var outoftime bool = false
	this.Outoftime = &outoftime
	var password string = ""
	this.Password = &password
	var review bool = false
	this.Review = &review
	return &this
}

// GetLessonid returns the Lessonid field value
func (o *ModLessonFinishAttemptRequest) GetLessonid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Lessonid
}

// GetLessonidOk returns a tuple with the Lessonid field value
// and a boolean to check if the value has been set.
func (o *ModLessonFinishAttemptRequest) GetLessonidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lessonid, true
}

// SetLessonid sets field value
func (o *ModLessonFinishAttemptRequest) SetLessonid(v int32) {
	o.Lessonid = v
}

// GetOutoftime returns the Outoftime field value if set, zero value otherwise.
func (o *ModLessonFinishAttemptRequest) GetOutoftime() bool {
	if o == nil || IsNil(o.Outoftime) {
		var ret bool
		return ret
	}
	return *o.Outoftime
}

// GetOutoftimeOk returns a tuple with the Outoftime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLessonFinishAttemptRequest) GetOutoftimeOk() (*bool, bool) {
	if o == nil || IsNil(o.Outoftime) {
		return nil, false
	}
	return o.Outoftime, true
}

// HasOutoftime returns a boolean if a field has been set.
func (o *ModLessonFinishAttemptRequest) HasOutoftime() bool {
	if o != nil && !IsNil(o.Outoftime) {
		return true
	}

	return false
}

// SetOutoftime gets a reference to the given bool and assigns it to the Outoftime field.
func (o *ModLessonFinishAttemptRequest) SetOutoftime(v bool) {
	o.Outoftime = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ModLessonFinishAttemptRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLessonFinishAttemptRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ModLessonFinishAttemptRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ModLessonFinishAttemptRequest) SetPassword(v string) {
	o.Password = &v
}

// GetReview returns the Review field value if set, zero value otherwise.
func (o *ModLessonFinishAttemptRequest) GetReview() bool {
	if o == nil || IsNil(o.Review) {
		var ret bool
		return ret
	}
	return *o.Review
}

// GetReviewOk returns a tuple with the Review field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLessonFinishAttemptRequest) GetReviewOk() (*bool, bool) {
	if o == nil || IsNil(o.Review) {
		return nil, false
	}
	return o.Review, true
}

// HasReview returns a boolean if a field has been set.
func (o *ModLessonFinishAttemptRequest) HasReview() bool {
	if o != nil && !IsNil(o.Review) {
		return true
	}

	return false
}

// SetReview gets a reference to the given bool and assigns it to the Review field.
func (o *ModLessonFinishAttemptRequest) SetReview(v bool) {
	o.Review = &v
}

func (o ModLessonFinishAttemptRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModLessonFinishAttemptRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lessonid"] = o.Lessonid
	if !IsNil(o.Outoftime) {
		toSerialize["outoftime"] = o.Outoftime
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Review) {
		toSerialize["review"] = o.Review
	}
	return toSerialize, nil
}

func (o *ModLessonFinishAttemptRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lessonid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModLessonFinishAttemptRequest := _ModLessonFinishAttemptRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModLessonFinishAttemptRequest)

	if err != nil {
		return err
	}

	*o = ModLessonFinishAttemptRequest(varModLessonFinishAttemptRequest)

	return err
}

type NullableModLessonFinishAttemptRequest struct {
	value *ModLessonFinishAttemptRequest
	isSet bool
}

func (v NullableModLessonFinishAttemptRequest) Get() *ModLessonFinishAttemptRequest {
	return v.value
}

func (v *NullableModLessonFinishAttemptRequest) Set(val *ModLessonFinishAttemptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModLessonFinishAttemptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModLessonFinishAttemptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModLessonFinishAttemptRequest(val *ModLessonFinishAttemptRequest) *NullableModLessonFinishAttemptRequest {
	return &NullableModLessonFinishAttemptRequest{value: val, isSet: true}
}

func (v NullableModLessonFinishAttemptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModLessonFinishAttemptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


