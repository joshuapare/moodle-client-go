/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ToolDataprivacySetContextDefaultsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolDataprivacySetContextDefaultsRequest{}

// ToolDataprivacySetContextDefaultsRequest struct for ToolDataprivacySetContextDefaultsRequest
type ToolDataprivacySetContextDefaultsRequest struct {
	// The plugin name of the activity
	Activity *string `json:"activity,omitempty"`
	// The default category for the given context level
	Category int32 `json:"category"`
	// The context level
	Contextlevel int32 `json:"contextlevel"`
	// Whether to override existing instances with the defaults
	Override *bool `json:"override,omitempty"`
	// The default purpose for the given context level
	Purpose int32 `json:"purpose"`
}

type _ToolDataprivacySetContextDefaultsRequest ToolDataprivacySetContextDefaultsRequest

// NewToolDataprivacySetContextDefaultsRequest instantiates a new ToolDataprivacySetContextDefaultsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolDataprivacySetContextDefaultsRequest(category int32, contextlevel int32, purpose int32) *ToolDataprivacySetContextDefaultsRequest {
	this := ToolDataprivacySetContextDefaultsRequest{}
	this.Category = category
	this.Contextlevel = contextlevel
	var override bool = false
	this.Override = &override
	this.Purpose = purpose
	return &this
}

// NewToolDataprivacySetContextDefaultsRequestWithDefaults instantiates a new ToolDataprivacySetContextDefaultsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolDataprivacySetContextDefaultsRequestWithDefaults() *ToolDataprivacySetContextDefaultsRequest {
	this := ToolDataprivacySetContextDefaultsRequest{}
	var category int32 = null
	this.Category = category
	var contextlevel int32 = null
	this.Contextlevel = contextlevel
	var override bool = false
	this.Override = &override
	var purpose int32 = null
	this.Purpose = purpose
	return &this
}

// GetActivity returns the Activity field value if set, zero value otherwise.
func (o *ToolDataprivacySetContextDefaultsRequest) GetActivity() string {
	if o == nil || IsNil(o.Activity) {
		var ret string
		return ret
	}
	return *o.Activity
}

// GetActivityOk returns a tuple with the Activity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolDataprivacySetContextDefaultsRequest) GetActivityOk() (*string, bool) {
	if o == nil || IsNil(o.Activity) {
		return nil, false
	}
	return o.Activity, true
}

// HasActivity returns a boolean if a field has been set.
func (o *ToolDataprivacySetContextDefaultsRequest) HasActivity() bool {
	if o != nil && !IsNil(o.Activity) {
		return true
	}

	return false
}

// SetActivity gets a reference to the given string and assigns it to the Activity field.
func (o *ToolDataprivacySetContextDefaultsRequest) SetActivity(v string) {
	o.Activity = &v
}

// GetCategory returns the Category field value
func (o *ToolDataprivacySetContextDefaultsRequest) GetCategory() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *ToolDataprivacySetContextDefaultsRequest) GetCategoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *ToolDataprivacySetContextDefaultsRequest) SetCategory(v int32) {
	o.Category = v
}

// GetContextlevel returns the Contextlevel field value
func (o *ToolDataprivacySetContextDefaultsRequest) GetContextlevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Contextlevel
}

// GetContextlevelOk returns a tuple with the Contextlevel field value
// and a boolean to check if the value has been set.
func (o *ToolDataprivacySetContextDefaultsRequest) GetContextlevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contextlevel, true
}

// SetContextlevel sets field value
func (o *ToolDataprivacySetContextDefaultsRequest) SetContextlevel(v int32) {
	o.Contextlevel = v
}

// GetOverride returns the Override field value if set, zero value otherwise.
func (o *ToolDataprivacySetContextDefaultsRequest) GetOverride() bool {
	if o == nil || IsNil(o.Override) {
		var ret bool
		return ret
	}
	return *o.Override
}

// GetOverrideOk returns a tuple with the Override field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolDataprivacySetContextDefaultsRequest) GetOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.Override) {
		return nil, false
	}
	return o.Override, true
}

// HasOverride returns a boolean if a field has been set.
func (o *ToolDataprivacySetContextDefaultsRequest) HasOverride() bool {
	if o != nil && !IsNil(o.Override) {
		return true
	}

	return false
}

// SetOverride gets a reference to the given bool and assigns it to the Override field.
func (o *ToolDataprivacySetContextDefaultsRequest) SetOverride(v bool) {
	o.Override = &v
}

// GetPurpose returns the Purpose field value
func (o *ToolDataprivacySetContextDefaultsRequest) GetPurpose() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value
// and a boolean to check if the value has been set.
func (o *ToolDataprivacySetContextDefaultsRequest) GetPurposeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Purpose, true
}

// SetPurpose sets field value
func (o *ToolDataprivacySetContextDefaultsRequest) SetPurpose(v int32) {
	o.Purpose = v
}

func (o ToolDataprivacySetContextDefaultsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolDataprivacySetContextDefaultsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Activity) {
		toSerialize["activity"] = o.Activity
	}
	toSerialize["category"] = o.Category
	toSerialize["contextlevel"] = o.Contextlevel
	if !IsNil(o.Override) {
		toSerialize["override"] = o.Override
	}
	toSerialize["purpose"] = o.Purpose
	return toSerialize, nil
}

func (o *ToolDataprivacySetContextDefaultsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"category",
		"contextlevel",
		"purpose",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varToolDataprivacySetContextDefaultsRequest := _ToolDataprivacySetContextDefaultsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varToolDataprivacySetContextDefaultsRequest)

	if err != nil {
		return err
	}

	*o = ToolDataprivacySetContextDefaultsRequest(varToolDataprivacySetContextDefaultsRequest)

	return err
}

type NullableToolDataprivacySetContextDefaultsRequest struct {
	value *ToolDataprivacySetContextDefaultsRequest
	isSet bool
}

func (v NullableToolDataprivacySetContextDefaultsRequest) Get() *ToolDataprivacySetContextDefaultsRequest {
	return v.value
}

func (v *NullableToolDataprivacySetContextDefaultsRequest) Set(val *ToolDataprivacySetContextDefaultsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableToolDataprivacySetContextDefaultsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableToolDataprivacySetContextDefaultsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolDataprivacySetContextDefaultsRequest(val *ToolDataprivacySetContextDefaultsRequest) *NullableToolDataprivacySetContextDefaultsRequest {
	return &NullableToolDataprivacySetContextDefaultsRequest{value: val, isSet: true}
}

func (v NullableToolDataprivacySetContextDefaultsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolDataprivacySetContextDefaultsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


