/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCalendarGetActionEventsByTimesort200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCalendarGetActionEventsByTimesort200Response{}

// CoreCalendarGetActionEventsByTimesort200Response struct for CoreCalendarGetActionEventsByTimesort200Response
type CoreCalendarGetActionEventsByTimesort200Response struct {
	Events []CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInner `json:"events"`
	// firstid
	Firstid int32 `json:"firstid"`
	// lastid
	Lastid int32 `json:"lastid"`
}

type _CoreCalendarGetActionEventsByTimesort200Response CoreCalendarGetActionEventsByTimesort200Response

// NewCoreCalendarGetActionEventsByTimesort200Response instantiates a new CoreCalendarGetActionEventsByTimesort200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCalendarGetActionEventsByTimesort200Response(events []CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInner, firstid int32, lastid int32) *CoreCalendarGetActionEventsByTimesort200Response {
	this := CoreCalendarGetActionEventsByTimesort200Response{}
	this.Events = events
	this.Firstid = firstid
	this.Lastid = lastid
	return &this
}

// NewCoreCalendarGetActionEventsByTimesort200ResponseWithDefaults instantiates a new CoreCalendarGetActionEventsByTimesort200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCalendarGetActionEventsByTimesort200ResponseWithDefaults() *CoreCalendarGetActionEventsByTimesort200Response {
	this := CoreCalendarGetActionEventsByTimesort200Response{}
	return &this
}

// GetEvents returns the Events field value
func (o *CoreCalendarGetActionEventsByTimesort200Response) GetEvents() []CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInner {
	if o == nil {
		var ret []CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInner
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByTimesort200Response) GetEventsOk() ([]CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Events, true
}

// SetEvents sets field value
func (o *CoreCalendarGetActionEventsByTimesort200Response) SetEvents(v []CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInner) {
	o.Events = v
}

// GetFirstid returns the Firstid field value
func (o *CoreCalendarGetActionEventsByTimesort200Response) GetFirstid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Firstid
}

// GetFirstidOk returns a tuple with the Firstid field value
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByTimesort200Response) GetFirstidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Firstid, true
}

// SetFirstid sets field value
func (o *CoreCalendarGetActionEventsByTimesort200Response) SetFirstid(v int32) {
	o.Firstid = v
}

// GetLastid returns the Lastid field value
func (o *CoreCalendarGetActionEventsByTimesort200Response) GetLastid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Lastid
}

// GetLastidOk returns a tuple with the Lastid field value
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByTimesort200Response) GetLastidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lastid, true
}

// SetLastid sets field value
func (o *CoreCalendarGetActionEventsByTimesort200Response) SetLastid(v int32) {
	o.Lastid = v
}

func (o CoreCalendarGetActionEventsByTimesort200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCalendarGetActionEventsByTimesort200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["events"] = o.Events
	toSerialize["firstid"] = o.Firstid
	toSerialize["lastid"] = o.Lastid
	return toSerialize, nil
}

func (o *CoreCalendarGetActionEventsByTimesort200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"events",
		"firstid",
		"lastid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCalendarGetActionEventsByTimesort200Response := _CoreCalendarGetActionEventsByTimesort200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCalendarGetActionEventsByTimesort200Response)

	if err != nil {
		return err
	}

	*o = CoreCalendarGetActionEventsByTimesort200Response(varCoreCalendarGetActionEventsByTimesort200Response)

	return err
}

type NullableCoreCalendarGetActionEventsByTimesort200Response struct {
	value *CoreCalendarGetActionEventsByTimesort200Response
	isSet bool
}

func (v NullableCoreCalendarGetActionEventsByTimesort200Response) Get() *CoreCalendarGetActionEventsByTimesort200Response {
	return v.value
}

func (v *NullableCoreCalendarGetActionEventsByTimesort200Response) Set(val *CoreCalendarGetActionEventsByTimesort200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCalendarGetActionEventsByTimesort200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCalendarGetActionEventsByTimesort200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCalendarGetActionEventsByTimesort200Response(val *CoreCalendarGetActionEventsByTimesort200Response) *NullableCoreCalendarGetActionEventsByTimesort200Response {
	return &NullableCoreCalendarGetActionEventsByTimesort200Response{value: val, isSet: true}
}

func (v NullableCoreCalendarGetActionEventsByTimesort200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCalendarGetActionEventsByTimesort200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


