/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModForumAddDiscussionPost200ResponsePostTagsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumAddDiscussionPost200ResponsePostTagsInner{}

// ModForumAddDiscussionPost200ResponsePostTagsInner struct for ModForumAddDiscussionPost200ResponsePostTagsInner
type ModForumAddDiscussionPost200ResponsePostTagsInner struct {
	// The display name of the tag
	Displayname *string `json:"displayname,omitempty"`
	// Wehther this tag is flagged
	Flag *bool `json:"flag,omitempty"`
	// The ID of the Tag
	Id *int32 `json:"id,omitempty"`
	// Whether this is a standard tag
	Isstandard *bool `json:"isstandard,omitempty"`
	// The tagid
	Tagid *int32 `json:"tagid,omitempty"`
	Urls *ModForumAddDiscussionPost200ResponsePostTagsInnerUrls `json:"urls,omitempty"`
}

// NewModForumAddDiscussionPost200ResponsePostTagsInner instantiates a new ModForumAddDiscussionPost200ResponsePostTagsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumAddDiscussionPost200ResponsePostTagsInner() *ModForumAddDiscussionPost200ResponsePostTagsInner {
	this := ModForumAddDiscussionPost200ResponsePostTagsInner{}
	var displayname string = "null"
	this.Displayname = &displayname
	var flag bool = null
	this.Flag = &flag
	var id int32 = null
	this.Id = &id
	var isstandard bool = null
	this.Isstandard = &isstandard
	var tagid int32 = null
	this.Tagid = &tagid
	return &this
}

// NewModForumAddDiscussionPost200ResponsePostTagsInnerWithDefaults instantiates a new ModForumAddDiscussionPost200ResponsePostTagsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumAddDiscussionPost200ResponsePostTagsInnerWithDefaults() *ModForumAddDiscussionPost200ResponsePostTagsInner {
	this := ModForumAddDiscussionPost200ResponsePostTagsInner{}
	var displayname string = "null"
	this.Displayname = &displayname
	var flag bool = null
	this.Flag = &flag
	var id int32 = null
	this.Id = &id
	var isstandard bool = null
	this.Isstandard = &isstandard
	var tagid int32 = null
	this.Tagid = &tagid
	return &this
}

// GetDisplayname returns the Displayname field value if set, zero value otherwise.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) GetDisplayname() string {
	if o == nil || IsNil(o.Displayname) {
		var ret string
		return ret
	}
	return *o.Displayname
}

// GetDisplaynameOk returns a tuple with the Displayname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) GetDisplaynameOk() (*string, bool) {
	if o == nil || IsNil(o.Displayname) {
		return nil, false
	}
	return o.Displayname, true
}

// HasDisplayname returns a boolean if a field has been set.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) HasDisplayname() bool {
	if o != nil && !IsNil(o.Displayname) {
		return true
	}

	return false
}

// SetDisplayname gets a reference to the given string and assigns it to the Displayname field.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) SetDisplayname(v string) {
	o.Displayname = &v
}

// GetFlag returns the Flag field value if set, zero value otherwise.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) GetFlag() bool {
	if o == nil || IsNil(o.Flag) {
		var ret bool
		return ret
	}
	return *o.Flag
}

// GetFlagOk returns a tuple with the Flag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) GetFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.Flag) {
		return nil, false
	}
	return o.Flag, true
}

// HasFlag returns a boolean if a field has been set.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) HasFlag() bool {
	if o != nil && !IsNil(o.Flag) {
		return true
	}

	return false
}

// SetFlag gets a reference to the given bool and assigns it to the Flag field.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) SetFlag(v bool) {
	o.Flag = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) SetId(v int32) {
	o.Id = &v
}

// GetIsstandard returns the Isstandard field value if set, zero value otherwise.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) GetIsstandard() bool {
	if o == nil || IsNil(o.Isstandard) {
		var ret bool
		return ret
	}
	return *o.Isstandard
}

// GetIsstandardOk returns a tuple with the Isstandard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) GetIsstandardOk() (*bool, bool) {
	if o == nil || IsNil(o.Isstandard) {
		return nil, false
	}
	return o.Isstandard, true
}

// HasIsstandard returns a boolean if a field has been set.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) HasIsstandard() bool {
	if o != nil && !IsNil(o.Isstandard) {
		return true
	}

	return false
}

// SetIsstandard gets a reference to the given bool and assigns it to the Isstandard field.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) SetIsstandard(v bool) {
	o.Isstandard = &v
}

// GetTagid returns the Tagid field value if set, zero value otherwise.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) GetTagid() int32 {
	if o == nil || IsNil(o.Tagid) {
		var ret int32
		return ret
	}
	return *o.Tagid
}

// GetTagidOk returns a tuple with the Tagid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) GetTagidOk() (*int32, bool) {
	if o == nil || IsNil(o.Tagid) {
		return nil, false
	}
	return o.Tagid, true
}

// HasTagid returns a boolean if a field has been set.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) HasTagid() bool {
	if o != nil && !IsNil(o.Tagid) {
		return true
	}

	return false
}

// SetTagid gets a reference to the given int32 and assigns it to the Tagid field.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) SetTagid(v int32) {
	o.Tagid = &v
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) GetUrls() ModForumAddDiscussionPost200ResponsePostTagsInnerUrls {
	if o == nil || IsNil(o.Urls) {
		var ret ModForumAddDiscussionPost200ResponsePostTagsInnerUrls
		return ret
	}
	return *o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) GetUrlsOk() (*ModForumAddDiscussionPost200ResponsePostTagsInnerUrls, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) HasUrls() bool {
	if o != nil && !IsNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given ModForumAddDiscussionPost200ResponsePostTagsInnerUrls and assigns it to the Urls field.
func (o *ModForumAddDiscussionPost200ResponsePostTagsInner) SetUrls(v ModForumAddDiscussionPost200ResponsePostTagsInnerUrls) {
	o.Urls = &v
}

func (o ModForumAddDiscussionPost200ResponsePostTagsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumAddDiscussionPost200ResponsePostTagsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Displayname) {
		toSerialize["displayname"] = o.Displayname
	}
	if !IsNil(o.Flag) {
		toSerialize["flag"] = o.Flag
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Isstandard) {
		toSerialize["isstandard"] = o.Isstandard
	}
	if !IsNil(o.Tagid) {
		toSerialize["tagid"] = o.Tagid
	}
	if !IsNil(o.Urls) {
		toSerialize["urls"] = o.Urls
	}
	return toSerialize, nil
}

type NullableModForumAddDiscussionPost200ResponsePostTagsInner struct {
	value *ModForumAddDiscussionPost200ResponsePostTagsInner
	isSet bool
}

func (v NullableModForumAddDiscussionPost200ResponsePostTagsInner) Get() *ModForumAddDiscussionPost200ResponsePostTagsInner {
	return v.value
}

func (v *NullableModForumAddDiscussionPost200ResponsePostTagsInner) Set(val *ModForumAddDiscussionPost200ResponsePostTagsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumAddDiscussionPost200ResponsePostTagsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumAddDiscussionPost200ResponsePostTagsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumAddDiscussionPost200ResponsePostTagsInner(val *ModForumAddDiscussionPost200ResponsePostTagsInner) *NullableModForumAddDiscussionPost200ResponsePostTagsInner {
	return &NullableModForumAddDiscussionPost200ResponsePostTagsInner{value: val, isSet: true}
}

func (v NullableModForumAddDiscussionPost200ResponsePostTagsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumAddDiscussionPost200ResponsePostTagsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


