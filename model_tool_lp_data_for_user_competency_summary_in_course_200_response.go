/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ToolLpDataForUserCompetencySummaryInCourse200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolLpDataForUserCompetencySummaryInCourse200Response{}

// ToolLpDataForUserCompetencySummaryInCourse200Response struct for ToolLpDataForUserCompetencySummaryInCourse200Response
type ToolLpDataForUserCompetencySummaryInCourse200Response struct {
	Course CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse `json:"course"`
	Coursemodules []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerCoursemodulesInner `json:"coursemodules"`
	Plans []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner `json:"plans"`
	// pluginbaseurl
	Pluginbaseurl string `json:"pluginbaseurl"`
	Usercompetencysummary ToolLpDataForUserCompetencySummaryInCourse200ResponseUsercompetencysummary `json:"usercompetencysummary"`
}

type _ToolLpDataForUserCompetencySummaryInCourse200Response ToolLpDataForUserCompetencySummaryInCourse200Response

// NewToolLpDataForUserCompetencySummaryInCourse200Response instantiates a new ToolLpDataForUserCompetencySummaryInCourse200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolLpDataForUserCompetencySummaryInCourse200Response(course CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse, coursemodules []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerCoursemodulesInner, plans []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner, pluginbaseurl string, usercompetencysummary ToolLpDataForUserCompetencySummaryInCourse200ResponseUsercompetencysummary) *ToolLpDataForUserCompetencySummaryInCourse200Response {
	this := ToolLpDataForUserCompetencySummaryInCourse200Response{}
	this.Course = course
	this.Coursemodules = coursemodules
	this.Plans = plans
	this.Pluginbaseurl = pluginbaseurl
	this.Usercompetencysummary = usercompetencysummary
	return &this
}

// NewToolLpDataForUserCompetencySummaryInCourse200ResponseWithDefaults instantiates a new ToolLpDataForUserCompetencySummaryInCourse200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolLpDataForUserCompetencySummaryInCourse200ResponseWithDefaults() *ToolLpDataForUserCompetencySummaryInCourse200Response {
	this := ToolLpDataForUserCompetencySummaryInCourse200Response{}
	return &this
}

// GetCourse returns the Course field value
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) GetCourse() CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse {
	if o == nil {
		var ret CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse
		return ret
	}

	return o.Course
}

// GetCourseOk returns a tuple with the Course field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) GetCourseOk() (*CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Course, true
}

// SetCourse sets field value
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) SetCourse(v CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerCourse) {
	o.Course = v
}

// GetCoursemodules returns the Coursemodules field value
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) GetCoursemodules() []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerCoursemodulesInner {
	if o == nil {
		var ret []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerCoursemodulesInner
		return ret
	}

	return o.Coursemodules
}

// GetCoursemodulesOk returns a tuple with the Coursemodules field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) GetCoursemodulesOk() ([]ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerCoursemodulesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Coursemodules, true
}

// SetCoursemodules sets field value
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) SetCoursemodules(v []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerCoursemodulesInner) {
	o.Coursemodules = v
}

// GetPlans returns the Plans field value
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) GetPlans() []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner {
	if o == nil {
		var ret []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner
		return ret
	}

	return o.Plans
}

// GetPlansOk returns a tuple with the Plans field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) GetPlansOk() ([]ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Plans, true
}

// SetPlans sets field value
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) SetPlans(v []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInnerPlansInner) {
	o.Plans = v
}

// GetPluginbaseurl returns the Pluginbaseurl field value
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) GetPluginbaseurl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pluginbaseurl
}

// GetPluginbaseurlOk returns a tuple with the Pluginbaseurl field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) GetPluginbaseurlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pluginbaseurl, true
}

// SetPluginbaseurl sets field value
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) SetPluginbaseurl(v string) {
	o.Pluginbaseurl = v
}

// GetUsercompetencysummary returns the Usercompetencysummary field value
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) GetUsercompetencysummary() ToolLpDataForUserCompetencySummaryInCourse200ResponseUsercompetencysummary {
	if o == nil {
		var ret ToolLpDataForUserCompetencySummaryInCourse200ResponseUsercompetencysummary
		return ret
	}

	return o.Usercompetencysummary
}

// GetUsercompetencysummaryOk returns a tuple with the Usercompetencysummary field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) GetUsercompetencysummaryOk() (*ToolLpDataForUserCompetencySummaryInCourse200ResponseUsercompetencysummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Usercompetencysummary, true
}

// SetUsercompetencysummary sets field value
func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) SetUsercompetencysummary(v ToolLpDataForUserCompetencySummaryInCourse200ResponseUsercompetencysummary) {
	o.Usercompetencysummary = v
}

func (o ToolLpDataForUserCompetencySummaryInCourse200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolLpDataForUserCompetencySummaryInCourse200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["course"] = o.Course
	toSerialize["coursemodules"] = o.Coursemodules
	toSerialize["plans"] = o.Plans
	toSerialize["pluginbaseurl"] = o.Pluginbaseurl
	toSerialize["usercompetencysummary"] = o.Usercompetencysummary
	return toSerialize, nil
}

func (o *ToolLpDataForUserCompetencySummaryInCourse200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"course",
		"coursemodules",
		"plans",
		"pluginbaseurl",
		"usercompetencysummary",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varToolLpDataForUserCompetencySummaryInCourse200Response := _ToolLpDataForUserCompetencySummaryInCourse200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varToolLpDataForUserCompetencySummaryInCourse200Response)

	if err != nil {
		return err
	}

	*o = ToolLpDataForUserCompetencySummaryInCourse200Response(varToolLpDataForUserCompetencySummaryInCourse200Response)

	return err
}

type NullableToolLpDataForUserCompetencySummaryInCourse200Response struct {
	value *ToolLpDataForUserCompetencySummaryInCourse200Response
	isSet bool
}

func (v NullableToolLpDataForUserCompetencySummaryInCourse200Response) Get() *ToolLpDataForUserCompetencySummaryInCourse200Response {
	return v.value
}

func (v *NullableToolLpDataForUserCompetencySummaryInCourse200Response) Set(val *ToolLpDataForUserCompetencySummaryInCourse200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableToolLpDataForUserCompetencySummaryInCourse200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableToolLpDataForUserCompetencySummaryInCourse200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolLpDataForUserCompetencySummaryInCourse200Response(val *ToolLpDataForUserCompetencySummaryInCourse200Response) *NullableToolLpDataForUserCompetencySummaryInCourse200Response {
	return &NullableToolLpDataForUserCompetencySummaryInCourse200Response{value: val, isSet: true}
}

func (v NullableToolLpDataForUserCompetencySummaryInCourse200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolLpDataForUserCompetencySummaryInCourse200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


