/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModWorkshopEvaluateAssessmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModWorkshopEvaluateAssessmentRequest{}

// ModWorkshopEvaluateAssessmentRequest struct for ModWorkshopEvaluateAssessmentRequest
type ModWorkshopEvaluateAssessmentRequest struct {
	// Assessment id.
	Assessmentid int32 `json:"assessmentid"`
	// The feedback format for text.
	Feedbackformat *int32 `json:"feedbackformat,omitempty"`
	// The feedback for the reviewer.
	Feedbacktext *string `json:"feedbacktext,omitempty"`
	// The new grading grade.
	Gradinggradeover *string `json:"gradinggradeover,omitempty"`
	// The new weight for the assessment.
	Weight *int32 `json:"weight,omitempty"`
}

type _ModWorkshopEvaluateAssessmentRequest ModWorkshopEvaluateAssessmentRequest

// NewModWorkshopEvaluateAssessmentRequest instantiates a new ModWorkshopEvaluateAssessmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModWorkshopEvaluateAssessmentRequest(assessmentid int32) *ModWorkshopEvaluateAssessmentRequest {
	this := ModWorkshopEvaluateAssessmentRequest{}
	this.Assessmentid = assessmentid
	var feedbackformat int32 = 0
	this.Feedbackformat = &feedbackformat
	var feedbacktext string = ""
	this.Feedbacktext = &feedbacktext
	var gradinggradeover string = ""
	this.Gradinggradeover = &gradinggradeover
	var weight int32 = 1
	this.Weight = &weight
	return &this
}

// NewModWorkshopEvaluateAssessmentRequestWithDefaults instantiates a new ModWorkshopEvaluateAssessmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModWorkshopEvaluateAssessmentRequestWithDefaults() *ModWorkshopEvaluateAssessmentRequest {
	this := ModWorkshopEvaluateAssessmentRequest{}
	var assessmentid int32 = null
	this.Assessmentid = assessmentid
	var feedbackformat int32 = 0
	this.Feedbackformat = &feedbackformat
	var feedbacktext string = ""
	this.Feedbacktext = &feedbacktext
	var gradinggradeover string = ""
	this.Gradinggradeover = &gradinggradeover
	var weight int32 = 1
	this.Weight = &weight
	return &this
}

// GetAssessmentid returns the Assessmentid field value
func (o *ModWorkshopEvaluateAssessmentRequest) GetAssessmentid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Assessmentid
}

// GetAssessmentidOk returns a tuple with the Assessmentid field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopEvaluateAssessmentRequest) GetAssessmentidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assessmentid, true
}

// SetAssessmentid sets field value
func (o *ModWorkshopEvaluateAssessmentRequest) SetAssessmentid(v int32) {
	o.Assessmentid = v
}

// GetFeedbackformat returns the Feedbackformat field value if set, zero value otherwise.
func (o *ModWorkshopEvaluateAssessmentRequest) GetFeedbackformat() int32 {
	if o == nil || IsNil(o.Feedbackformat) {
		var ret int32
		return ret
	}
	return *o.Feedbackformat
}

// GetFeedbackformatOk returns a tuple with the Feedbackformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopEvaluateAssessmentRequest) GetFeedbackformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Feedbackformat) {
		return nil, false
	}
	return o.Feedbackformat, true
}

// HasFeedbackformat returns a boolean if a field has been set.
func (o *ModWorkshopEvaluateAssessmentRequest) HasFeedbackformat() bool {
	if o != nil && !IsNil(o.Feedbackformat) {
		return true
	}

	return false
}

// SetFeedbackformat gets a reference to the given int32 and assigns it to the Feedbackformat field.
func (o *ModWorkshopEvaluateAssessmentRequest) SetFeedbackformat(v int32) {
	o.Feedbackformat = &v
}

// GetFeedbacktext returns the Feedbacktext field value if set, zero value otherwise.
func (o *ModWorkshopEvaluateAssessmentRequest) GetFeedbacktext() string {
	if o == nil || IsNil(o.Feedbacktext) {
		var ret string
		return ret
	}
	return *o.Feedbacktext
}

// GetFeedbacktextOk returns a tuple with the Feedbacktext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopEvaluateAssessmentRequest) GetFeedbacktextOk() (*string, bool) {
	if o == nil || IsNil(o.Feedbacktext) {
		return nil, false
	}
	return o.Feedbacktext, true
}

// HasFeedbacktext returns a boolean if a field has been set.
func (o *ModWorkshopEvaluateAssessmentRequest) HasFeedbacktext() bool {
	if o != nil && !IsNil(o.Feedbacktext) {
		return true
	}

	return false
}

// SetFeedbacktext gets a reference to the given string and assigns it to the Feedbacktext field.
func (o *ModWorkshopEvaluateAssessmentRequest) SetFeedbacktext(v string) {
	o.Feedbacktext = &v
}

// GetGradinggradeover returns the Gradinggradeover field value if set, zero value otherwise.
func (o *ModWorkshopEvaluateAssessmentRequest) GetGradinggradeover() string {
	if o == nil || IsNil(o.Gradinggradeover) {
		var ret string
		return ret
	}
	return *o.Gradinggradeover
}

// GetGradinggradeoverOk returns a tuple with the Gradinggradeover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopEvaluateAssessmentRequest) GetGradinggradeoverOk() (*string, bool) {
	if o == nil || IsNil(o.Gradinggradeover) {
		return nil, false
	}
	return o.Gradinggradeover, true
}

// HasGradinggradeover returns a boolean if a field has been set.
func (o *ModWorkshopEvaluateAssessmentRequest) HasGradinggradeover() bool {
	if o != nil && !IsNil(o.Gradinggradeover) {
		return true
	}

	return false
}

// SetGradinggradeover gets a reference to the given string and assigns it to the Gradinggradeover field.
func (o *ModWorkshopEvaluateAssessmentRequest) SetGradinggradeover(v string) {
	o.Gradinggradeover = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *ModWorkshopEvaluateAssessmentRequest) GetWeight() int32 {
	if o == nil || IsNil(o.Weight) {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopEvaluateAssessmentRequest) GetWeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *ModWorkshopEvaluateAssessmentRequest) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *ModWorkshopEvaluateAssessmentRequest) SetWeight(v int32) {
	o.Weight = &v
}

func (o ModWorkshopEvaluateAssessmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModWorkshopEvaluateAssessmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["assessmentid"] = o.Assessmentid
	if !IsNil(o.Feedbackformat) {
		toSerialize["feedbackformat"] = o.Feedbackformat
	}
	if !IsNil(o.Feedbacktext) {
		toSerialize["feedbacktext"] = o.Feedbacktext
	}
	if !IsNil(o.Gradinggradeover) {
		toSerialize["gradinggradeover"] = o.Gradinggradeover
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	return toSerialize, nil
}

func (o *ModWorkshopEvaluateAssessmentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"assessmentid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModWorkshopEvaluateAssessmentRequest := _ModWorkshopEvaluateAssessmentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModWorkshopEvaluateAssessmentRequest)

	if err != nil {
		return err
	}

	*o = ModWorkshopEvaluateAssessmentRequest(varModWorkshopEvaluateAssessmentRequest)

	return err
}

type NullableModWorkshopEvaluateAssessmentRequest struct {
	value *ModWorkshopEvaluateAssessmentRequest
	isSet bool
}

func (v NullableModWorkshopEvaluateAssessmentRequest) Get() *ModWorkshopEvaluateAssessmentRequest {
	return v.value
}

func (v *NullableModWorkshopEvaluateAssessmentRequest) Set(val *ModWorkshopEvaluateAssessmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModWorkshopEvaluateAssessmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModWorkshopEvaluateAssessmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModWorkshopEvaluateAssessmentRequest(val *ModWorkshopEvaluateAssessmentRequest) *NullableModWorkshopEvaluateAssessmentRequest {
	return &NullableModWorkshopEvaluateAssessmentRequest{value: val, isSet: true}
}

func (v NullableModWorkshopEvaluateAssessmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModWorkshopEvaluateAssessmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


