/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModScormGetScormScoTracksRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModScormGetScormScoTracksRequest{}

// ModScormGetScormScoTracksRequest struct for ModScormGetScormScoTracksRequest
type ModScormGetScormScoTracksRequest struct {
	// attempt number (0 for last attempt)
	Attempt *int32 `json:"attempt,omitempty"`
	// sco id
	Scoid int32 `json:"scoid"`
	// user id
	Userid int32 `json:"userid"`
}

type _ModScormGetScormScoTracksRequest ModScormGetScormScoTracksRequest

// NewModScormGetScormScoTracksRequest instantiates a new ModScormGetScormScoTracksRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModScormGetScormScoTracksRequest(scoid int32, userid int32) *ModScormGetScormScoTracksRequest {
	this := ModScormGetScormScoTracksRequest{}
	var attempt int32 = 0
	this.Attempt = &attempt
	this.Scoid = scoid
	this.Userid = userid
	return &this
}

// NewModScormGetScormScoTracksRequestWithDefaults instantiates a new ModScormGetScormScoTracksRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModScormGetScormScoTracksRequestWithDefaults() *ModScormGetScormScoTracksRequest {
	this := ModScormGetScormScoTracksRequest{}
	var attempt int32 = 0
	this.Attempt = &attempt
	var scoid int32 = null
	this.Scoid = scoid
	return &this
}

// GetAttempt returns the Attempt field value if set, zero value otherwise.
func (o *ModScormGetScormScoTracksRequest) GetAttempt() int32 {
	if o == nil || IsNil(o.Attempt) {
		var ret int32
		return ret
	}
	return *o.Attempt
}

// GetAttemptOk returns a tuple with the Attempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModScormGetScormScoTracksRequest) GetAttemptOk() (*int32, bool) {
	if o == nil || IsNil(o.Attempt) {
		return nil, false
	}
	return o.Attempt, true
}

// HasAttempt returns a boolean if a field has been set.
func (o *ModScormGetScormScoTracksRequest) HasAttempt() bool {
	if o != nil && !IsNil(o.Attempt) {
		return true
	}

	return false
}

// SetAttempt gets a reference to the given int32 and assigns it to the Attempt field.
func (o *ModScormGetScormScoTracksRequest) SetAttempt(v int32) {
	o.Attempt = &v
}

// GetScoid returns the Scoid field value
func (o *ModScormGetScormScoTracksRequest) GetScoid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Scoid
}

// GetScoidOk returns a tuple with the Scoid field value
// and a boolean to check if the value has been set.
func (o *ModScormGetScormScoTracksRequest) GetScoidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scoid, true
}

// SetScoid sets field value
func (o *ModScormGetScormScoTracksRequest) SetScoid(v int32) {
	o.Scoid = v
}

// GetUserid returns the Userid field value
func (o *ModScormGetScormScoTracksRequest) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *ModScormGetScormScoTracksRequest) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *ModScormGetScormScoTracksRequest) SetUserid(v int32) {
	o.Userid = v
}

func (o ModScormGetScormScoTracksRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModScormGetScormScoTracksRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attempt) {
		toSerialize["attempt"] = o.Attempt
	}
	toSerialize["scoid"] = o.Scoid
	toSerialize["userid"] = o.Userid
	return toSerialize, nil
}

func (o *ModScormGetScormScoTracksRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"scoid",
		"userid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModScormGetScormScoTracksRequest := _ModScormGetScormScoTracksRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModScormGetScormScoTracksRequest)

	if err != nil {
		return err
	}

	*o = ModScormGetScormScoTracksRequest(varModScormGetScormScoTracksRequest)

	return err
}

type NullableModScormGetScormScoTracksRequest struct {
	value *ModScormGetScormScoTracksRequest
	isSet bool
}

func (v NullableModScormGetScormScoTracksRequest) Get() *ModScormGetScormScoTracksRequest {
	return v.value
}

func (v *NullableModScormGetScormScoTracksRequest) Set(val *ModScormGetScormScoTracksRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModScormGetScormScoTracksRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModScormGetScormScoTracksRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModScormGetScormScoTracksRequest(val *ModScormGetScormScoTracksRequest) *NullableModScormGetScormScoTracksRequest {
	return &NullableModScormGetScormScoTracksRequest{value: val, isSet: true}
}

func (v NullableModScormGetScormScoTracksRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModScormGetScormScoTracksRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


