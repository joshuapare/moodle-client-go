/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner{}

// ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner submission info
type ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner struct {
	// assignment id
	Assignment *int32 `json:"assignment,omitempty"`
	// attempt number
	Attemptnumber *int32 `json:"attemptnumber,omitempty"`
	// Grading status.
	Gradingstatus *string `json:"gradingstatus,omitempty"`
	// group id
	Groupid *int32 `json:"groupid,omitempty"`
	// submission id
	Id *int32 `json:"id,omitempty"`
	// latest attempt
	Latest *int32 `json:"latest,omitempty"`
	Plugins []ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner `json:"plugins,omitempty"`
	// submission status
	Status *string `json:"status,omitempty"`
	// submission creation time
	Timecreated *int32 `json:"timecreated,omitempty"`
	// submission last modified time
	Timemodified *int32 `json:"timemodified,omitempty"`
	// submission start time
	Timestarted *int32 `json:"timestarted,omitempty"`
	// student id
	Userid *int32 `json:"userid,omitempty"`
}

// NewModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner instantiates a new ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner() *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner {
	this := ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner{}
	return &this
}

// NewModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInnerWithDefaults instantiates a new ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInnerWithDefaults() *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner {
	this := ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner{}
	return &this
}

// GetAssignment returns the Assignment field value if set, zero value otherwise.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetAssignment() int32 {
	if o == nil || IsNil(o.Assignment) {
		var ret int32
		return ret
	}
	return *o.Assignment
}

// GetAssignmentOk returns a tuple with the Assignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetAssignmentOk() (*int32, bool) {
	if o == nil || IsNil(o.Assignment) {
		return nil, false
	}
	return o.Assignment, true
}

// HasAssignment returns a boolean if a field has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) HasAssignment() bool {
	if o != nil && !IsNil(o.Assignment) {
		return true
	}

	return false
}

// SetAssignment gets a reference to the given int32 and assigns it to the Assignment field.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) SetAssignment(v int32) {
	o.Assignment = &v
}

// GetAttemptnumber returns the Attemptnumber field value if set, zero value otherwise.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetAttemptnumber() int32 {
	if o == nil || IsNil(o.Attemptnumber) {
		var ret int32
		return ret
	}
	return *o.Attemptnumber
}

// GetAttemptnumberOk returns a tuple with the Attemptnumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetAttemptnumberOk() (*int32, bool) {
	if o == nil || IsNil(o.Attemptnumber) {
		return nil, false
	}
	return o.Attemptnumber, true
}

// HasAttemptnumber returns a boolean if a field has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) HasAttemptnumber() bool {
	if o != nil && !IsNil(o.Attemptnumber) {
		return true
	}

	return false
}

// SetAttemptnumber gets a reference to the given int32 and assigns it to the Attemptnumber field.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) SetAttemptnumber(v int32) {
	o.Attemptnumber = &v
}

// GetGradingstatus returns the Gradingstatus field value if set, zero value otherwise.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetGradingstatus() string {
	if o == nil || IsNil(o.Gradingstatus) {
		var ret string
		return ret
	}
	return *o.Gradingstatus
}

// GetGradingstatusOk returns a tuple with the Gradingstatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetGradingstatusOk() (*string, bool) {
	if o == nil || IsNil(o.Gradingstatus) {
		return nil, false
	}
	return o.Gradingstatus, true
}

// HasGradingstatus returns a boolean if a field has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) HasGradingstatus() bool {
	if o != nil && !IsNil(o.Gradingstatus) {
		return true
	}

	return false
}

// SetGradingstatus gets a reference to the given string and assigns it to the Gradingstatus field.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) SetGradingstatus(v string) {
	o.Gradingstatus = &v
}

// GetGroupid returns the Groupid field value if set, zero value otherwise.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetGroupid() int32 {
	if o == nil || IsNil(o.Groupid) {
		var ret int32
		return ret
	}
	return *o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetGroupidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupid) {
		return nil, false
	}
	return o.Groupid, true
}

// HasGroupid returns a boolean if a field has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) HasGroupid() bool {
	if o != nil && !IsNil(o.Groupid) {
		return true
	}

	return false
}

// SetGroupid gets a reference to the given int32 and assigns it to the Groupid field.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) SetGroupid(v int32) {
	o.Groupid = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) SetId(v int32) {
	o.Id = &v
}

// GetLatest returns the Latest field value if set, zero value otherwise.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetLatest() int32 {
	if o == nil || IsNil(o.Latest) {
		var ret int32
		return ret
	}
	return *o.Latest
}

// GetLatestOk returns a tuple with the Latest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetLatestOk() (*int32, bool) {
	if o == nil || IsNil(o.Latest) {
		return nil, false
	}
	return o.Latest, true
}

// HasLatest returns a boolean if a field has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) HasLatest() bool {
	if o != nil && !IsNil(o.Latest) {
		return true
	}

	return false
}

// SetLatest gets a reference to the given int32 and assigns it to the Latest field.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) SetLatest(v int32) {
	o.Latest = &v
}

// GetPlugins returns the Plugins field value if set, zero value otherwise.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetPlugins() []ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner {
	if o == nil || IsNil(o.Plugins) {
		var ret []ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner
		return ret
	}
	return o.Plugins
}

// GetPluginsOk returns a tuple with the Plugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetPluginsOk() ([]ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner, bool) {
	if o == nil || IsNil(o.Plugins) {
		return nil, false
	}
	return o.Plugins, true
}

// HasPlugins returns a boolean if a field has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) HasPlugins() bool {
	if o != nil && !IsNil(o.Plugins) {
		return true
	}

	return false
}

// SetPlugins gets a reference to the given []ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner and assigns it to the Plugins field.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) SetPlugins(v []ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner) {
	o.Plugins = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) SetStatus(v string) {
	o.Status = &v
}

// GetTimecreated returns the Timecreated field value if set, zero value otherwise.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetTimecreated() int32 {
	if o == nil || IsNil(o.Timecreated) {
		var ret int32
		return ret
	}
	return *o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetTimecreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecreated) {
		return nil, false
	}
	return o.Timecreated, true
}

// HasTimecreated returns a boolean if a field has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) HasTimecreated() bool {
	if o != nil && !IsNil(o.Timecreated) {
		return true
	}

	return false
}

// SetTimecreated gets a reference to the given int32 and assigns it to the Timecreated field.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) SetTimecreated(v int32) {
	o.Timecreated = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetTimestarted returns the Timestarted field value if set, zero value otherwise.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetTimestarted() int32 {
	if o == nil || IsNil(o.Timestarted) {
		var ret int32
		return ret
	}
	return *o.Timestarted
}

// GetTimestartedOk returns a tuple with the Timestarted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetTimestartedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestarted) {
		return nil, false
	}
	return o.Timestarted, true
}

// HasTimestarted returns a boolean if a field has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) HasTimestarted() bool {
	if o != nil && !IsNil(o.Timestarted) {
		return true
	}

	return false
}

// SetTimestarted gets a reference to the given int32 and assigns it to the Timestarted field.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) SetTimestarted(v int32) {
	o.Timestarted = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) SetUserid(v int32) {
	o.Userid = &v
}

func (o ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Assignment) {
		toSerialize["assignment"] = o.Assignment
	}
	if !IsNil(o.Attemptnumber) {
		toSerialize["attemptnumber"] = o.Attemptnumber
	}
	if !IsNil(o.Gradingstatus) {
		toSerialize["gradingstatus"] = o.Gradingstatus
	}
	if !IsNil(o.Groupid) {
		toSerialize["groupid"] = o.Groupid
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Latest) {
		toSerialize["latest"] = o.Latest
	}
	if !IsNil(o.Plugins) {
		toSerialize["plugins"] = o.Plugins
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Timecreated) {
		toSerialize["timecreated"] = o.Timecreated
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Timestarted) {
		toSerialize["timestarted"] = o.Timestarted
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

type NullableModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner struct {
	value *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner
	isSet bool
}

func (v NullableModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) Get() *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner {
	return v.value
}

func (v *NullableModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) Set(val *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner(val *ModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) *NullableModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner {
	return &NullableModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner{value: val, isSet: true}
}

func (v NullableModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModAssignGetSubmissions200ResponseAssignmentsInnerSubmissionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


