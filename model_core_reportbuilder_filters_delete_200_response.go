/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreReportbuilderFiltersDelete200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreReportbuilderFiltersDelete200Response{}

// CoreReportbuilderFiltersDelete200Response struct for CoreReportbuilderFiltersDelete200Response
type CoreReportbuilderFiltersDelete200Response struct {
	Activefilters []CoreReportbuilderFiltersDelete200ResponseActivefiltersInner `json:"activefilters"`
	Availablefilters []CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInner `json:"availablefilters"`
	// hasactivefilters
	Hasactivefilters bool `json:"hasactivefilters"`
	// hasavailablefilters
	Hasavailablefilters bool `json:"hasavailablefilters"`
	// helpicon
	Helpicon string `json:"helpicon"`
}

type _CoreReportbuilderFiltersDelete200Response CoreReportbuilderFiltersDelete200Response

// NewCoreReportbuilderFiltersDelete200Response instantiates a new CoreReportbuilderFiltersDelete200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreReportbuilderFiltersDelete200Response(activefilters []CoreReportbuilderFiltersDelete200ResponseActivefiltersInner, availablefilters []CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInner, hasactivefilters bool, hasavailablefilters bool, helpicon string) *CoreReportbuilderFiltersDelete200Response {
	this := CoreReportbuilderFiltersDelete200Response{}
	this.Activefilters = activefilters
	this.Availablefilters = availablefilters
	this.Hasactivefilters = hasactivefilters
	this.Hasavailablefilters = hasavailablefilters
	this.Helpicon = helpicon
	return &this
}

// NewCoreReportbuilderFiltersDelete200ResponseWithDefaults instantiates a new CoreReportbuilderFiltersDelete200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreReportbuilderFiltersDelete200ResponseWithDefaults() *CoreReportbuilderFiltersDelete200Response {
	this := CoreReportbuilderFiltersDelete200Response{}
	return &this
}

// GetActivefilters returns the Activefilters field value
func (o *CoreReportbuilderFiltersDelete200Response) GetActivefilters() []CoreReportbuilderFiltersDelete200ResponseActivefiltersInner {
	if o == nil {
		var ret []CoreReportbuilderFiltersDelete200ResponseActivefiltersInner
		return ret
	}

	return o.Activefilters
}

// GetActivefiltersOk returns a tuple with the Activefilters field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderFiltersDelete200Response) GetActivefiltersOk() ([]CoreReportbuilderFiltersDelete200ResponseActivefiltersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Activefilters, true
}

// SetActivefilters sets field value
func (o *CoreReportbuilderFiltersDelete200Response) SetActivefilters(v []CoreReportbuilderFiltersDelete200ResponseActivefiltersInner) {
	o.Activefilters = v
}

// GetAvailablefilters returns the Availablefilters field value
func (o *CoreReportbuilderFiltersDelete200Response) GetAvailablefilters() []CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInner {
	if o == nil {
		var ret []CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInner
		return ret
	}

	return o.Availablefilters
}

// GetAvailablefiltersOk returns a tuple with the Availablefilters field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderFiltersDelete200Response) GetAvailablefiltersOk() ([]CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Availablefilters, true
}

// SetAvailablefilters sets field value
func (o *CoreReportbuilderFiltersDelete200Response) SetAvailablefilters(v []CoreReportbuilderConditionsDelete200ResponseAvailableconditionsInner) {
	o.Availablefilters = v
}

// GetHasactivefilters returns the Hasactivefilters field value
func (o *CoreReportbuilderFiltersDelete200Response) GetHasactivefilters() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hasactivefilters
}

// GetHasactivefiltersOk returns a tuple with the Hasactivefilters field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderFiltersDelete200Response) GetHasactivefiltersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hasactivefilters, true
}

// SetHasactivefilters sets field value
func (o *CoreReportbuilderFiltersDelete200Response) SetHasactivefilters(v bool) {
	o.Hasactivefilters = v
}

// GetHasavailablefilters returns the Hasavailablefilters field value
func (o *CoreReportbuilderFiltersDelete200Response) GetHasavailablefilters() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hasavailablefilters
}

// GetHasavailablefiltersOk returns a tuple with the Hasavailablefilters field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderFiltersDelete200Response) GetHasavailablefiltersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hasavailablefilters, true
}

// SetHasavailablefilters sets field value
func (o *CoreReportbuilderFiltersDelete200Response) SetHasavailablefilters(v bool) {
	o.Hasavailablefilters = v
}

// GetHelpicon returns the Helpicon field value
func (o *CoreReportbuilderFiltersDelete200Response) GetHelpicon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Helpicon
}

// GetHelpiconOk returns a tuple with the Helpicon field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderFiltersDelete200Response) GetHelpiconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Helpicon, true
}

// SetHelpicon sets field value
func (o *CoreReportbuilderFiltersDelete200Response) SetHelpicon(v string) {
	o.Helpicon = v
}

func (o CoreReportbuilderFiltersDelete200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreReportbuilderFiltersDelete200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["activefilters"] = o.Activefilters
	toSerialize["availablefilters"] = o.Availablefilters
	toSerialize["hasactivefilters"] = o.Hasactivefilters
	toSerialize["hasavailablefilters"] = o.Hasavailablefilters
	toSerialize["helpicon"] = o.Helpicon
	return toSerialize, nil
}

func (o *CoreReportbuilderFiltersDelete200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"activefilters",
		"availablefilters",
		"hasactivefilters",
		"hasavailablefilters",
		"helpicon",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreReportbuilderFiltersDelete200Response := _CoreReportbuilderFiltersDelete200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreReportbuilderFiltersDelete200Response)

	if err != nil {
		return err
	}

	*o = CoreReportbuilderFiltersDelete200Response(varCoreReportbuilderFiltersDelete200Response)

	return err
}

type NullableCoreReportbuilderFiltersDelete200Response struct {
	value *CoreReportbuilderFiltersDelete200Response
	isSet bool
}

func (v NullableCoreReportbuilderFiltersDelete200Response) Get() *CoreReportbuilderFiltersDelete200Response {
	return v.value
}

func (v *NullableCoreReportbuilderFiltersDelete200Response) Set(val *CoreReportbuilderFiltersDelete200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreReportbuilderFiltersDelete200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreReportbuilderFiltersDelete200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreReportbuilderFiltersDelete200Response(val *CoreReportbuilderFiltersDelete200Response) *NullableCoreReportbuilderFiltersDelete200Response {
	return &NullableCoreReportbuilderFiltersDelete200Response{value: val, isSet: true}
}

func (v NullableCoreReportbuilderFiltersDelete200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreReportbuilderFiltersDelete200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


