/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCustomfieldMoveFieldRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCustomfieldMoveFieldRequest{}

// CoreCustomfieldMoveFieldRequest struct for CoreCustomfieldMoveFieldRequest
type CoreCustomfieldMoveFieldRequest struct {
	// Id of the field before which it needs to be moved
	Beforeid *int32 `json:"beforeid,omitempty"`
	// New parent category id
	Categoryid int32 `json:"categoryid"`
	// Id of the field to move
	Id int32 `json:"id"`
}

type _CoreCustomfieldMoveFieldRequest CoreCustomfieldMoveFieldRequest

// NewCoreCustomfieldMoveFieldRequest instantiates a new CoreCustomfieldMoveFieldRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCustomfieldMoveFieldRequest(categoryid int32, id int32) *CoreCustomfieldMoveFieldRequest {
	this := CoreCustomfieldMoveFieldRequest{}
	var beforeid int32 = 0
	this.Beforeid = &beforeid
	this.Categoryid = categoryid
	this.Id = id
	return &this
}

// NewCoreCustomfieldMoveFieldRequestWithDefaults instantiates a new CoreCustomfieldMoveFieldRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCustomfieldMoveFieldRequestWithDefaults() *CoreCustomfieldMoveFieldRequest {
	this := CoreCustomfieldMoveFieldRequest{}
	var beforeid int32 = 0
	this.Beforeid = &beforeid
	var categoryid int32 = null
	this.Categoryid = categoryid
	var id int32 = null
	this.Id = id
	return &this
}

// GetBeforeid returns the Beforeid field value if set, zero value otherwise.
func (o *CoreCustomfieldMoveFieldRequest) GetBeforeid() int32 {
	if o == nil || IsNil(o.Beforeid) {
		var ret int32
		return ret
	}
	return *o.Beforeid
}

// GetBeforeidOk returns a tuple with the Beforeid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCustomfieldMoveFieldRequest) GetBeforeidOk() (*int32, bool) {
	if o == nil || IsNil(o.Beforeid) {
		return nil, false
	}
	return o.Beforeid, true
}

// HasBeforeid returns a boolean if a field has been set.
func (o *CoreCustomfieldMoveFieldRequest) HasBeforeid() bool {
	if o != nil && !IsNil(o.Beforeid) {
		return true
	}

	return false
}

// SetBeforeid gets a reference to the given int32 and assigns it to the Beforeid field.
func (o *CoreCustomfieldMoveFieldRequest) SetBeforeid(v int32) {
	o.Beforeid = &v
}

// GetCategoryid returns the Categoryid field value
func (o *CoreCustomfieldMoveFieldRequest) GetCategoryid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Categoryid
}

// GetCategoryidOk returns a tuple with the Categoryid field value
// and a boolean to check if the value has been set.
func (o *CoreCustomfieldMoveFieldRequest) GetCategoryidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Categoryid, true
}

// SetCategoryid sets field value
func (o *CoreCustomfieldMoveFieldRequest) SetCategoryid(v int32) {
	o.Categoryid = v
}

// GetId returns the Id field value
func (o *CoreCustomfieldMoveFieldRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CoreCustomfieldMoveFieldRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CoreCustomfieldMoveFieldRequest) SetId(v int32) {
	o.Id = v
}

func (o CoreCustomfieldMoveFieldRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCustomfieldMoveFieldRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Beforeid) {
		toSerialize["beforeid"] = o.Beforeid
	}
	toSerialize["categoryid"] = o.Categoryid
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *CoreCustomfieldMoveFieldRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"categoryid",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCustomfieldMoveFieldRequest := _CoreCustomfieldMoveFieldRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCustomfieldMoveFieldRequest)

	if err != nil {
		return err
	}

	*o = CoreCustomfieldMoveFieldRequest(varCoreCustomfieldMoveFieldRequest)

	return err
}

type NullableCoreCustomfieldMoveFieldRequest struct {
	value *CoreCustomfieldMoveFieldRequest
	isSet bool
}

func (v NullableCoreCustomfieldMoveFieldRequest) Get() *CoreCustomfieldMoveFieldRequest {
	return v.value
}

func (v *NullableCoreCustomfieldMoveFieldRequest) Set(val *CoreCustomfieldMoveFieldRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCustomfieldMoveFieldRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCustomfieldMoveFieldRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCustomfieldMoveFieldRequest(val *CoreCustomfieldMoveFieldRequest) *NullableCoreCustomfieldMoveFieldRequest {
	return &NullableCoreCustomfieldMoveFieldRequest{value: val, isSet: true}
}

func (v NullableCoreCustomfieldMoveFieldRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCustomfieldMoveFieldRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


