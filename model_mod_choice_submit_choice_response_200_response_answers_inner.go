/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModChoiceSubmitChoiceResponse200ResponseAnswersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModChoiceSubmitChoiceResponse200ResponseAnswersInner{}

// ModChoiceSubmitChoiceResponse200ResponseAnswersInner Answers
type ModChoiceSubmitChoiceResponse200ResponseAnswersInner struct {
	// choiceid
	Choiceid *int32 `json:"choiceid,omitempty"`
	// answer id
	Id *int32 `json:"id,omitempty"`
	// optionid
	Optionid *int32 `json:"optionid,omitempty"`
	// time of last modification
	Timemodified *int32 `json:"timemodified,omitempty"`
	// user id
	Userid *int32 `json:"userid,omitempty"`
}

// NewModChoiceSubmitChoiceResponse200ResponseAnswersInner instantiates a new ModChoiceSubmitChoiceResponse200ResponseAnswersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModChoiceSubmitChoiceResponse200ResponseAnswersInner() *ModChoiceSubmitChoiceResponse200ResponseAnswersInner {
	this := ModChoiceSubmitChoiceResponse200ResponseAnswersInner{}
	var choiceid int32 = null
	this.Choiceid = &choiceid
	var optionid int32 = null
	this.Optionid = &optionid
	return &this
}

// NewModChoiceSubmitChoiceResponse200ResponseAnswersInnerWithDefaults instantiates a new ModChoiceSubmitChoiceResponse200ResponseAnswersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModChoiceSubmitChoiceResponse200ResponseAnswersInnerWithDefaults() *ModChoiceSubmitChoiceResponse200ResponseAnswersInner {
	this := ModChoiceSubmitChoiceResponse200ResponseAnswersInner{}
	var choiceid int32 = null
	this.Choiceid = &choiceid
	var optionid int32 = null
	this.Optionid = &optionid
	return &this
}

// GetChoiceid returns the Choiceid field value if set, zero value otherwise.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) GetChoiceid() int32 {
	if o == nil || IsNil(o.Choiceid) {
		var ret int32
		return ret
	}
	return *o.Choiceid
}

// GetChoiceidOk returns a tuple with the Choiceid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) GetChoiceidOk() (*int32, bool) {
	if o == nil || IsNil(o.Choiceid) {
		return nil, false
	}
	return o.Choiceid, true
}

// HasChoiceid returns a boolean if a field has been set.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) HasChoiceid() bool {
	if o != nil && !IsNil(o.Choiceid) {
		return true
	}

	return false
}

// SetChoiceid gets a reference to the given int32 and assigns it to the Choiceid field.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) SetChoiceid(v int32) {
	o.Choiceid = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) SetId(v int32) {
	o.Id = &v
}

// GetOptionid returns the Optionid field value if set, zero value otherwise.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) GetOptionid() int32 {
	if o == nil || IsNil(o.Optionid) {
		var ret int32
		return ret
	}
	return *o.Optionid
}

// GetOptionidOk returns a tuple with the Optionid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) GetOptionidOk() (*int32, bool) {
	if o == nil || IsNil(o.Optionid) {
		return nil, false
	}
	return o.Optionid, true
}

// HasOptionid returns a boolean if a field has been set.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) HasOptionid() bool {
	if o != nil && !IsNil(o.Optionid) {
		return true
	}

	return false
}

// SetOptionid gets a reference to the given int32 and assigns it to the Optionid field.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) SetOptionid(v int32) {
	o.Optionid = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) SetUserid(v int32) {
	o.Userid = &v
}

func (o ModChoiceSubmitChoiceResponse200ResponseAnswersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModChoiceSubmitChoiceResponse200ResponseAnswersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Choiceid) {
		toSerialize["choiceid"] = o.Choiceid
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Optionid) {
		toSerialize["optionid"] = o.Optionid
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

type NullableModChoiceSubmitChoiceResponse200ResponseAnswersInner struct {
	value *ModChoiceSubmitChoiceResponse200ResponseAnswersInner
	isSet bool
}

func (v NullableModChoiceSubmitChoiceResponse200ResponseAnswersInner) Get() *ModChoiceSubmitChoiceResponse200ResponseAnswersInner {
	return v.value
}

func (v *NullableModChoiceSubmitChoiceResponse200ResponseAnswersInner) Set(val *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModChoiceSubmitChoiceResponse200ResponseAnswersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModChoiceSubmitChoiceResponse200ResponseAnswersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModChoiceSubmitChoiceResponse200ResponseAnswersInner(val *ModChoiceSubmitChoiceResponse200ResponseAnswersInner) *NullableModChoiceSubmitChoiceResponse200ResponseAnswersInner {
	return &NullableModChoiceSubmitChoiceResponse200ResponseAnswersInner{value: val, isSet: true}
}

func (v NullableModChoiceSubmitChoiceResponse200ResponseAnswersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModChoiceSubmitChoiceResponse200ResponseAnswersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


