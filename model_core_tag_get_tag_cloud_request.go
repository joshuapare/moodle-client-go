/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreTagGetTagCloudRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreTagGetTagCloudRequest{}

// CoreTagGetTagCloudRequest struct for CoreTagGetTagCloudRequest
type CoreTagGetTagCloudRequest struct {
	// Only retrieve tag instances in this context.
	Ctx *int32 `json:"ctx,omitempty"`
	// Context id where this tag cloud is displayed.
	Fromctx *int32 `json:"fromctx,omitempty"`
	// Whether to return only standard tags.
	Isstandard *bool `json:"isstandard,omitempty"`
	// Maximum number of tags to retrieve.
	Limit *int32 `json:"limit,omitempty"`
	// Retrieve tag instances in the $ctx context and it's children.
	Rec *int32 `json:"rec,omitempty"`
	// Search string.
	Search *string `json:"search,omitempty"`
	// Sort order for display                     (id, name, rawname, count, flag, isstandard, tagcollid).
	Sort *string `json:"sort,omitempty"`
	// Tag collection id.
	Tagcollid *int32 `json:"tagcollid,omitempty"`
}

// NewCoreTagGetTagCloudRequest instantiates a new CoreTagGetTagCloudRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreTagGetTagCloudRequest() *CoreTagGetTagCloudRequest {
	this := CoreTagGetTagCloudRequest{}
	var ctx int32 = 0
	this.Ctx = &ctx
	var fromctx int32 = 0
	this.Fromctx = &fromctx
	var isstandard bool = false
	this.Isstandard = &isstandard
	var limit int32 = 150
	this.Limit = &limit
	var rec int32 = 1
	this.Rec = &rec
	var search string = ""
	this.Search = &search
	var sort string = "name"
	this.Sort = &sort
	var tagcollid int32 = 0
	this.Tagcollid = &tagcollid
	return &this
}

// NewCoreTagGetTagCloudRequestWithDefaults instantiates a new CoreTagGetTagCloudRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreTagGetTagCloudRequestWithDefaults() *CoreTagGetTagCloudRequest {
	this := CoreTagGetTagCloudRequest{}
	var ctx int32 = 0
	this.Ctx = &ctx
	var fromctx int32 = 0
	this.Fromctx = &fromctx
	var isstandard bool = false
	this.Isstandard = &isstandard
	var limit int32 = 150
	this.Limit = &limit
	var rec int32 = 1
	this.Rec = &rec
	var search string = ""
	this.Search = &search
	var sort string = "name"
	this.Sort = &sort
	var tagcollid int32 = 0
	this.Tagcollid = &tagcollid
	return &this
}

// GetCtx returns the Ctx field value if set, zero value otherwise.
func (o *CoreTagGetTagCloudRequest) GetCtx() int32 {
	if o == nil || IsNil(o.Ctx) {
		var ret int32
		return ret
	}
	return *o.Ctx
}

// GetCtxOk returns a tuple with the Ctx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagCloudRequest) GetCtxOk() (*int32, bool) {
	if o == nil || IsNil(o.Ctx) {
		return nil, false
	}
	return o.Ctx, true
}

// HasCtx returns a boolean if a field has been set.
func (o *CoreTagGetTagCloudRequest) HasCtx() bool {
	if o != nil && !IsNil(o.Ctx) {
		return true
	}

	return false
}

// SetCtx gets a reference to the given int32 and assigns it to the Ctx field.
func (o *CoreTagGetTagCloudRequest) SetCtx(v int32) {
	o.Ctx = &v
}

// GetFromctx returns the Fromctx field value if set, zero value otherwise.
func (o *CoreTagGetTagCloudRequest) GetFromctx() int32 {
	if o == nil || IsNil(o.Fromctx) {
		var ret int32
		return ret
	}
	return *o.Fromctx
}

// GetFromctxOk returns a tuple with the Fromctx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagCloudRequest) GetFromctxOk() (*int32, bool) {
	if o == nil || IsNil(o.Fromctx) {
		return nil, false
	}
	return o.Fromctx, true
}

// HasFromctx returns a boolean if a field has been set.
func (o *CoreTagGetTagCloudRequest) HasFromctx() bool {
	if o != nil && !IsNil(o.Fromctx) {
		return true
	}

	return false
}

// SetFromctx gets a reference to the given int32 and assigns it to the Fromctx field.
func (o *CoreTagGetTagCloudRequest) SetFromctx(v int32) {
	o.Fromctx = &v
}

// GetIsstandard returns the Isstandard field value if set, zero value otherwise.
func (o *CoreTagGetTagCloudRequest) GetIsstandard() bool {
	if o == nil || IsNil(o.Isstandard) {
		var ret bool
		return ret
	}
	return *o.Isstandard
}

// GetIsstandardOk returns a tuple with the Isstandard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagCloudRequest) GetIsstandardOk() (*bool, bool) {
	if o == nil || IsNil(o.Isstandard) {
		return nil, false
	}
	return o.Isstandard, true
}

// HasIsstandard returns a boolean if a field has been set.
func (o *CoreTagGetTagCloudRequest) HasIsstandard() bool {
	if o != nil && !IsNil(o.Isstandard) {
		return true
	}

	return false
}

// SetIsstandard gets a reference to the given bool and assigns it to the Isstandard field.
func (o *CoreTagGetTagCloudRequest) SetIsstandard(v bool) {
	o.Isstandard = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *CoreTagGetTagCloudRequest) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagCloudRequest) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *CoreTagGetTagCloudRequest) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *CoreTagGetTagCloudRequest) SetLimit(v int32) {
	o.Limit = &v
}

// GetRec returns the Rec field value if set, zero value otherwise.
func (o *CoreTagGetTagCloudRequest) GetRec() int32 {
	if o == nil || IsNil(o.Rec) {
		var ret int32
		return ret
	}
	return *o.Rec
}

// GetRecOk returns a tuple with the Rec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagCloudRequest) GetRecOk() (*int32, bool) {
	if o == nil || IsNil(o.Rec) {
		return nil, false
	}
	return o.Rec, true
}

// HasRec returns a boolean if a field has been set.
func (o *CoreTagGetTagCloudRequest) HasRec() bool {
	if o != nil && !IsNil(o.Rec) {
		return true
	}

	return false
}

// SetRec gets a reference to the given int32 and assigns it to the Rec field.
func (o *CoreTagGetTagCloudRequest) SetRec(v int32) {
	o.Rec = &v
}

// GetSearch returns the Search field value if set, zero value otherwise.
func (o *CoreTagGetTagCloudRequest) GetSearch() string {
	if o == nil || IsNil(o.Search) {
		var ret string
		return ret
	}
	return *o.Search
}

// GetSearchOk returns a tuple with the Search field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagCloudRequest) GetSearchOk() (*string, bool) {
	if o == nil || IsNil(o.Search) {
		return nil, false
	}
	return o.Search, true
}

// HasSearch returns a boolean if a field has been set.
func (o *CoreTagGetTagCloudRequest) HasSearch() bool {
	if o != nil && !IsNil(o.Search) {
		return true
	}

	return false
}

// SetSearch gets a reference to the given string and assigns it to the Search field.
func (o *CoreTagGetTagCloudRequest) SetSearch(v string) {
	o.Search = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *CoreTagGetTagCloudRequest) GetSort() string {
	if o == nil || IsNil(o.Sort) {
		var ret string
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagCloudRequest) GetSortOk() (*string, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *CoreTagGetTagCloudRequest) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given string and assigns it to the Sort field.
func (o *CoreTagGetTagCloudRequest) SetSort(v string) {
	o.Sort = &v
}

// GetTagcollid returns the Tagcollid field value if set, zero value otherwise.
func (o *CoreTagGetTagCloudRequest) GetTagcollid() int32 {
	if o == nil || IsNil(o.Tagcollid) {
		var ret int32
		return ret
	}
	return *o.Tagcollid
}

// GetTagcollidOk returns a tuple with the Tagcollid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreTagGetTagCloudRequest) GetTagcollidOk() (*int32, bool) {
	if o == nil || IsNil(o.Tagcollid) {
		return nil, false
	}
	return o.Tagcollid, true
}

// HasTagcollid returns a boolean if a field has been set.
func (o *CoreTagGetTagCloudRequest) HasTagcollid() bool {
	if o != nil && !IsNil(o.Tagcollid) {
		return true
	}

	return false
}

// SetTagcollid gets a reference to the given int32 and assigns it to the Tagcollid field.
func (o *CoreTagGetTagCloudRequest) SetTagcollid(v int32) {
	o.Tagcollid = &v
}

func (o CoreTagGetTagCloudRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreTagGetTagCloudRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ctx) {
		toSerialize["ctx"] = o.Ctx
	}
	if !IsNil(o.Fromctx) {
		toSerialize["fromctx"] = o.Fromctx
	}
	if !IsNil(o.Isstandard) {
		toSerialize["isstandard"] = o.Isstandard
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Rec) {
		toSerialize["rec"] = o.Rec
	}
	if !IsNil(o.Search) {
		toSerialize["search"] = o.Search
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.Tagcollid) {
		toSerialize["tagcollid"] = o.Tagcollid
	}
	return toSerialize, nil
}

type NullableCoreTagGetTagCloudRequest struct {
	value *CoreTagGetTagCloudRequest
	isSet bool
}

func (v NullableCoreTagGetTagCloudRequest) Get() *CoreTagGetTagCloudRequest {
	return v.value
}

func (v *NullableCoreTagGetTagCloudRequest) Set(val *CoreTagGetTagCloudRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreTagGetTagCloudRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreTagGetTagCloudRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreTagGetTagCloudRequest(val *CoreTagGetTagCloudRequest) *NullableCoreTagGetTagCloudRequest {
	return &NullableCoreTagGetTagCloudRequest{value: val, isSet: true}
}

func (v NullableCoreTagGetTagCloudRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreTagGetTagCloudRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


