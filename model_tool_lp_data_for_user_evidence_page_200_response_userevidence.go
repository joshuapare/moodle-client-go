/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ToolLpDataForUserEvidencePage200ResponseUserevidence type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolLpDataForUserEvidencePage200ResponseUserevidence{}

// ToolLpDataForUserEvidencePage200ResponseUserevidence struct for ToolLpDataForUserEvidencePage200ResponseUserevidence
type ToolLpDataForUserEvidencePage200ResponseUserevidence struct {
	// canmanage
	Canmanage bool `json:"canmanage"`
	// competencycount
	Competencycount int32 `json:"competencycount"`
	// description
	Description string `json:"description"`
	// description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Descriptionformat *int32 `json:"descriptionformat,omitempty"`
	// filecount
	Filecount int32 `json:"filecount"`
	Files []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner `json:"files"`
	// hasurlorfiles
	Hasurlorfiles bool `json:"hasurlorfiles"`
	// id
	Id int32 `json:"id"`
	// name
	Name string `json:"name"`
	// timecreated
	Timecreated int32 `json:"timecreated"`
	// timemodified
	Timemodified int32 `json:"timemodified"`
	// url
	Url string `json:"url"`
	// urlshort
	Urlshort string `json:"urlshort"`
	Usercompetencies []ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner `json:"usercompetencies,omitempty"`
	// userhasplan
	Userhasplan bool `json:"userhasplan"`
	// userid
	Userid int32 `json:"userid"`
	// usermodified
	Usermodified int32 `json:"usermodified"`
}

type _ToolLpDataForUserEvidencePage200ResponseUserevidence ToolLpDataForUserEvidencePage200ResponseUserevidence

// NewToolLpDataForUserEvidencePage200ResponseUserevidence instantiates a new ToolLpDataForUserEvidencePage200ResponseUserevidence object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolLpDataForUserEvidencePage200ResponseUserevidence(canmanage bool, competencycount int32, description string, filecount int32, files []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner, hasurlorfiles bool, id int32, name string, timecreated int32, timemodified int32, url string, urlshort string, userhasplan bool, userid int32, usermodified int32) *ToolLpDataForUserEvidencePage200ResponseUserevidence {
	this := ToolLpDataForUserEvidencePage200ResponseUserevidence{}
	this.Canmanage = canmanage
	this.Competencycount = competencycount
	this.Description = description
	var descriptionformat int32 = 1
	this.Descriptionformat = &descriptionformat
	this.Filecount = filecount
	this.Files = files
	this.Hasurlorfiles = hasurlorfiles
	this.Id = id
	this.Name = name
	this.Timecreated = timecreated
	this.Timemodified = timemodified
	this.Url = url
	this.Urlshort = urlshort
	this.Userhasplan = userhasplan
	this.Userid = userid
	this.Usermodified = usermodified
	return &this
}

// NewToolLpDataForUserEvidencePage200ResponseUserevidenceWithDefaults instantiates a new ToolLpDataForUserEvidencePage200ResponseUserevidence object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolLpDataForUserEvidencePage200ResponseUserevidenceWithDefaults() *ToolLpDataForUserEvidencePage200ResponseUserevidence {
	this := ToolLpDataForUserEvidencePage200ResponseUserevidence{}
	var description string = ""
	this.Description = description
	var descriptionformat int32 = 1
	this.Descriptionformat = &descriptionformat
	var id int32 = 0
	this.Id = id
	var timecreated int32 = 0
	this.Timecreated = timecreated
	var timemodified int32 = 0
	this.Timemodified = timemodified
	var url string = ""
	this.Url = url
	var usermodified int32 = 0
	this.Usermodified = usermodified
	return &this
}

// GetCanmanage returns the Canmanage field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetCanmanage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canmanage
}

// GetCanmanageOk returns a tuple with the Canmanage field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetCanmanageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canmanage, true
}

// SetCanmanage sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetCanmanage(v bool) {
	o.Canmanage = v
}

// GetCompetencycount returns the Competencycount field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetCompetencycount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Competencycount
}

// GetCompetencycountOk returns a tuple with the Competencycount field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetCompetencycountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Competencycount, true
}

// SetCompetencycount sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetCompetencycount(v int32) {
	o.Competencycount = v
}

// GetDescription returns the Description field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetDescription(v string) {
	o.Description = v
}

// GetDescriptionformat returns the Descriptionformat field value if set, zero value otherwise.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetDescriptionformat() int32 {
	if o == nil || IsNil(o.Descriptionformat) {
		var ret int32
		return ret
	}
	return *o.Descriptionformat
}

// GetDescriptionformatOk returns a tuple with the Descriptionformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetDescriptionformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Descriptionformat) {
		return nil, false
	}
	return o.Descriptionformat, true
}

// HasDescriptionformat returns a boolean if a field has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) HasDescriptionformat() bool {
	if o != nil && !IsNil(o.Descriptionformat) {
		return true
	}

	return false
}

// SetDescriptionformat gets a reference to the given int32 and assigns it to the Descriptionformat field.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetDescriptionformat(v int32) {
	o.Descriptionformat = &v
}

// GetFilecount returns the Filecount field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetFilecount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Filecount
}

// GetFilecountOk returns a tuple with the Filecount field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetFilecountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filecount, true
}

// SetFilecount sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetFilecount(v int32) {
	o.Filecount = v
}

// GetFiles returns the Files field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetFiles() []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner {
	if o == nil {
		var ret []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner
		return ret
	}

	return o.Files
}

// GetFilesOk returns a tuple with the Files field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetFilesOk() ([]ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Files, true
}

// SetFiles sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetFiles(v []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner) {
	o.Files = v
}

// GetHasurlorfiles returns the Hasurlorfiles field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetHasurlorfiles() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hasurlorfiles
}

// GetHasurlorfilesOk returns a tuple with the Hasurlorfiles field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetHasurlorfilesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hasurlorfiles, true
}

// SetHasurlorfiles sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetHasurlorfiles(v bool) {
	o.Hasurlorfiles = v
}

// GetId returns the Id field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetName(v string) {
	o.Name = v
}

// GetTimecreated returns the Timecreated field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetTimecreated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetTimecreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timecreated, true
}

// SetTimecreated sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetTimecreated(v int32) {
	o.Timecreated = v
}

// GetTimemodified returns the Timemodified field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetTimemodified() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetTimemodifiedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timemodified, true
}

// SetTimemodified sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetTimemodified(v int32) {
	o.Timemodified = v
}

// GetUrl returns the Url field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetUrl(v string) {
	o.Url = v
}

// GetUrlshort returns the Urlshort field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetUrlshort() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Urlshort
}

// GetUrlshortOk returns a tuple with the Urlshort field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetUrlshortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Urlshort, true
}

// SetUrlshort sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetUrlshort(v string) {
	o.Urlshort = v
}

// GetUsercompetencies returns the Usercompetencies field value if set, zero value otherwise.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetUsercompetencies() []ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner {
	if o == nil || IsNil(o.Usercompetencies) {
		var ret []ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner
		return ret
	}
	return o.Usercompetencies
}

// GetUsercompetenciesOk returns a tuple with the Usercompetencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetUsercompetenciesOk() ([]ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner, bool) {
	if o == nil || IsNil(o.Usercompetencies) {
		return nil, false
	}
	return o.Usercompetencies, true
}

// HasUsercompetencies returns a boolean if a field has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) HasUsercompetencies() bool {
	if o != nil && !IsNil(o.Usercompetencies) {
		return true
	}

	return false
}

// SetUsercompetencies gets a reference to the given []ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner and assigns it to the Usercompetencies field.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetUsercompetencies(v []ToolLpDataForUserEvidenceListPage200ResponseEvidenceInnerUsercompetenciesInner) {
	o.Usercompetencies = v
}

// GetUserhasplan returns the Userhasplan field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetUserhasplan() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Userhasplan
}

// GetUserhasplanOk returns a tuple with the Userhasplan field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetUserhasplanOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userhasplan, true
}

// SetUserhasplan sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetUserhasplan(v bool) {
	o.Userhasplan = v
}

// GetUserid returns the Userid field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetUserid(v int32) {
	o.Userid = v
}

// GetUsermodified returns the Usermodified field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetUsermodified() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Usermodified
}

// GetUsermodifiedOk returns a tuple with the Usermodified field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) GetUsermodifiedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Usermodified, true
}

// SetUsermodified sets field value
func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) SetUsermodified(v int32) {
	o.Usermodified = v
}

func (o ToolLpDataForUserEvidencePage200ResponseUserevidence) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolLpDataForUserEvidencePage200ResponseUserevidence) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["canmanage"] = o.Canmanage
	toSerialize["competencycount"] = o.Competencycount
	toSerialize["description"] = o.Description
	if !IsNil(o.Descriptionformat) {
		toSerialize["descriptionformat"] = o.Descriptionformat
	}
	toSerialize["filecount"] = o.Filecount
	toSerialize["files"] = o.Files
	toSerialize["hasurlorfiles"] = o.Hasurlorfiles
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["timecreated"] = o.Timecreated
	toSerialize["timemodified"] = o.Timemodified
	toSerialize["url"] = o.Url
	toSerialize["urlshort"] = o.Urlshort
	if !IsNil(o.Usercompetencies) {
		toSerialize["usercompetencies"] = o.Usercompetencies
	}
	toSerialize["userhasplan"] = o.Userhasplan
	toSerialize["userid"] = o.Userid
	toSerialize["usermodified"] = o.Usermodified
	return toSerialize, nil
}

func (o *ToolLpDataForUserEvidencePage200ResponseUserevidence) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"canmanage",
		"competencycount",
		"description",
		"filecount",
		"files",
		"hasurlorfiles",
		"id",
		"name",
		"timecreated",
		"timemodified",
		"url",
		"urlshort",
		"userhasplan",
		"userid",
		"usermodified",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varToolLpDataForUserEvidencePage200ResponseUserevidence := _ToolLpDataForUserEvidencePage200ResponseUserevidence{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varToolLpDataForUserEvidencePage200ResponseUserevidence)

	if err != nil {
		return err
	}

	*o = ToolLpDataForUserEvidencePage200ResponseUserevidence(varToolLpDataForUserEvidencePage200ResponseUserevidence)

	return err
}

type NullableToolLpDataForUserEvidencePage200ResponseUserevidence struct {
	value *ToolLpDataForUserEvidencePage200ResponseUserevidence
	isSet bool
}

func (v NullableToolLpDataForUserEvidencePage200ResponseUserevidence) Get() *ToolLpDataForUserEvidencePage200ResponseUserevidence {
	return v.value
}

func (v *NullableToolLpDataForUserEvidencePage200ResponseUserevidence) Set(val *ToolLpDataForUserEvidencePage200ResponseUserevidence) {
	v.value = val
	v.isSet = true
}

func (v NullableToolLpDataForUserEvidencePage200ResponseUserevidence) IsSet() bool {
	return v.isSet
}

func (v *NullableToolLpDataForUserEvidencePage200ResponseUserevidence) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolLpDataForUserEvidencePage200ResponseUserevidence(val *ToolLpDataForUserEvidencePage200ResponseUserevidence) *NullableToolLpDataForUserEvidencePage200ResponseUserevidence {
	return &NullableToolLpDataForUserEvidencePage200ResponseUserevidence{value: val, isSet: true}
}

func (v NullableToolLpDataForUserEvidencePage200ResponseUserevidence) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolLpDataForUserEvidencePage200ResponseUserevidence) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


