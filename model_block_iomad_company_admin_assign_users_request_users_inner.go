/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the BlockIomadCompanyAdminAssignUsersRequestUsersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockIomadCompanyAdminAssignUsersRequestUsersInner{}

// BlockIomadCompanyAdminAssignUsersRequestUsersInner struct for BlockIomadCompanyAdminAssignUsersRequestUsersInner
type BlockIomadCompanyAdminAssignUsersRequestUsersInner struct {
	// User company ID
	Companyid *int32 `json:"companyid,omitempty"`
	// User company department ID
	Departmentid *int32 `json:"departmentid,omitempty"`
	// User educator 0 => No, 1 => Yes
	Educator *int32 `json:"educator,omitempty"`
	// User manager type 0 => User, 1 => company manager 2 => department manager, 3 => report only
	Managertype *int32 `json:"managertype,omitempty"`
	// User ID
	Userid *int32 `json:"userid,omitempty"`
}

// NewBlockIomadCompanyAdminAssignUsersRequestUsersInner instantiates a new BlockIomadCompanyAdminAssignUsersRequestUsersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockIomadCompanyAdminAssignUsersRequestUsersInner() *BlockIomadCompanyAdminAssignUsersRequestUsersInner {
	this := BlockIomadCompanyAdminAssignUsersRequestUsersInner{}
	var companyid int32 = 0
	this.Companyid = &companyid
	var departmentid int32 = 0
	this.Departmentid = &departmentid
	var educator int32 = 0
	this.Educator = &educator
	var managertype int32 = 0
	this.Managertype = &managertype
	var userid int32 = 0
	this.Userid = &userid
	return &this
}

// NewBlockIomadCompanyAdminAssignUsersRequestUsersInnerWithDefaults instantiates a new BlockIomadCompanyAdminAssignUsersRequestUsersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockIomadCompanyAdminAssignUsersRequestUsersInnerWithDefaults() *BlockIomadCompanyAdminAssignUsersRequestUsersInner {
	this := BlockIomadCompanyAdminAssignUsersRequestUsersInner{}
	var companyid int32 = 0
	this.Companyid = &companyid
	var departmentid int32 = 0
	this.Departmentid = &departmentid
	var educator int32 = 0
	this.Educator = &educator
	var managertype int32 = 0
	this.Managertype = &managertype
	var userid int32 = 0
	this.Userid = &userid
	return &this
}

// GetCompanyid returns the Companyid field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) GetCompanyid() int32 {
	if o == nil || IsNil(o.Companyid) {
		var ret int32
		return ret
	}
	return *o.Companyid
}

// GetCompanyidOk returns a tuple with the Companyid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) GetCompanyidOk() (*int32, bool) {
	if o == nil || IsNil(o.Companyid) {
		return nil, false
	}
	return o.Companyid, true
}

// HasCompanyid returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) HasCompanyid() bool {
	if o != nil && !IsNil(o.Companyid) {
		return true
	}

	return false
}

// SetCompanyid gets a reference to the given int32 and assigns it to the Companyid field.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) SetCompanyid(v int32) {
	o.Companyid = &v
}

// GetDepartmentid returns the Departmentid field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) GetDepartmentid() int32 {
	if o == nil || IsNil(o.Departmentid) {
		var ret int32
		return ret
	}
	return *o.Departmentid
}

// GetDepartmentidOk returns a tuple with the Departmentid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) GetDepartmentidOk() (*int32, bool) {
	if o == nil || IsNil(o.Departmentid) {
		return nil, false
	}
	return o.Departmentid, true
}

// HasDepartmentid returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) HasDepartmentid() bool {
	if o != nil && !IsNil(o.Departmentid) {
		return true
	}

	return false
}

// SetDepartmentid gets a reference to the given int32 and assigns it to the Departmentid field.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) SetDepartmentid(v int32) {
	o.Departmentid = &v
}

// GetEducator returns the Educator field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) GetEducator() int32 {
	if o == nil || IsNil(o.Educator) {
		var ret int32
		return ret
	}
	return *o.Educator
}

// GetEducatorOk returns a tuple with the Educator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) GetEducatorOk() (*int32, bool) {
	if o == nil || IsNil(o.Educator) {
		return nil, false
	}
	return o.Educator, true
}

// HasEducator returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) HasEducator() bool {
	if o != nil && !IsNil(o.Educator) {
		return true
	}

	return false
}

// SetEducator gets a reference to the given int32 and assigns it to the Educator field.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) SetEducator(v int32) {
	o.Educator = &v
}

// GetManagertype returns the Managertype field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) GetManagertype() int32 {
	if o == nil || IsNil(o.Managertype) {
		var ret int32
		return ret
	}
	return *o.Managertype
}

// GetManagertypeOk returns a tuple with the Managertype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) GetManagertypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Managertype) {
		return nil, false
	}
	return o.Managertype, true
}

// HasManagertype returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) HasManagertype() bool {
	if o != nil && !IsNil(o.Managertype) {
		return true
	}

	return false
}

// SetManagertype gets a reference to the given int32 and assigns it to the Managertype field.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) SetManagertype(v int32) {
	o.Managertype = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *BlockIomadCompanyAdminAssignUsersRequestUsersInner) SetUserid(v int32) {
	o.Userid = &v
}

func (o BlockIomadCompanyAdminAssignUsersRequestUsersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockIomadCompanyAdminAssignUsersRequestUsersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Companyid) {
		toSerialize["companyid"] = o.Companyid
	}
	if !IsNil(o.Departmentid) {
		toSerialize["departmentid"] = o.Departmentid
	}
	if !IsNil(o.Educator) {
		toSerialize["educator"] = o.Educator
	}
	if !IsNil(o.Managertype) {
		toSerialize["managertype"] = o.Managertype
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

type NullableBlockIomadCompanyAdminAssignUsersRequestUsersInner struct {
	value *BlockIomadCompanyAdminAssignUsersRequestUsersInner
	isSet bool
}

func (v NullableBlockIomadCompanyAdminAssignUsersRequestUsersInner) Get() *BlockIomadCompanyAdminAssignUsersRequestUsersInner {
	return v.value
}

func (v *NullableBlockIomadCompanyAdminAssignUsersRequestUsersInner) Set(val *BlockIomadCompanyAdminAssignUsersRequestUsersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockIomadCompanyAdminAssignUsersRequestUsersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockIomadCompanyAdminAssignUsersRequestUsersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockIomadCompanyAdminAssignUsersRequestUsersInner(val *BlockIomadCompanyAdminAssignUsersRequestUsersInner) *NullableBlockIomadCompanyAdminAssignUsersRequestUsersInner {
	return &NullableBlockIomadCompanyAdminAssignUsersRequestUsersInner{value: val, isSet: true}
}

func (v NullableBlockIomadCompanyAdminAssignUsersRequestUsersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockIomadCompanyAdminAssignUsersRequestUsersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


