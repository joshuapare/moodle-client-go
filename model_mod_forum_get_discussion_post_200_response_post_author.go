/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModForumGetDiscussionPost200ResponsePostAuthor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumGetDiscussionPost200ResponsePostAuthor{}

// ModForumGetDiscussionPost200ResponsePostAuthor struct for ModForumGetDiscussionPost200ResponsePostAuthor
type ModForumGetDiscussionPost200ResponsePostAuthor struct {
	// fullname
	Fullname *string `json:"fullname,omitempty"`
	Groups []ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner `json:"groups,omitempty"`
	// id
	Id *int32 `json:"id,omitempty"`
	// isdeleted
	Isdeleted *bool `json:"isdeleted,omitempty"`
	Urls ModForumGetDiscussionPost200ResponsePostAuthorUrls `json:"urls"`
}

type _ModForumGetDiscussionPost200ResponsePostAuthor ModForumGetDiscussionPost200ResponsePostAuthor

// NewModForumGetDiscussionPost200ResponsePostAuthor instantiates a new ModForumGetDiscussionPost200ResponsePostAuthor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumGetDiscussionPost200ResponsePostAuthor(urls ModForumGetDiscussionPost200ResponsePostAuthorUrls) *ModForumGetDiscussionPost200ResponsePostAuthor {
	this := ModForumGetDiscussionPost200ResponsePostAuthor{}
	this.Urls = urls
	return &this
}

// NewModForumGetDiscussionPost200ResponsePostAuthorWithDefaults instantiates a new ModForumGetDiscussionPost200ResponsePostAuthor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumGetDiscussionPost200ResponsePostAuthorWithDefaults() *ModForumGetDiscussionPost200ResponsePostAuthor {
	this := ModForumGetDiscussionPost200ResponsePostAuthor{}
	return &this
}

// GetFullname returns the Fullname field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) GetFullname() string {
	if o == nil || IsNil(o.Fullname) {
		var ret string
		return ret
	}
	return *o.Fullname
}

// GetFullnameOk returns a tuple with the Fullname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) GetFullnameOk() (*string, bool) {
	if o == nil || IsNil(o.Fullname) {
		return nil, false
	}
	return o.Fullname, true
}

// HasFullname returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) HasFullname() bool {
	if o != nil && !IsNil(o.Fullname) {
		return true
	}

	return false
}

// SetFullname gets a reference to the given string and assigns it to the Fullname field.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) SetFullname(v string) {
	o.Fullname = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) GetGroups() []ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner {
	if o == nil || IsNil(o.Groups) {
		var ret []ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) GetGroupsOk() ([]ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner and assigns it to the Groups field.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) SetGroups(v []ModForumGetDiscussionPost200ResponsePostAuthorGroupsInner) {
	o.Groups = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) SetId(v int32) {
	o.Id = &v
}

// GetIsdeleted returns the Isdeleted field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) GetIsdeleted() bool {
	if o == nil || IsNil(o.Isdeleted) {
		var ret bool
		return ret
	}
	return *o.Isdeleted
}

// GetIsdeletedOk returns a tuple with the Isdeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) GetIsdeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Isdeleted) {
		return nil, false
	}
	return o.Isdeleted, true
}

// HasIsdeleted returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) HasIsdeleted() bool {
	if o != nil && !IsNil(o.Isdeleted) {
		return true
	}

	return false
}

// SetIsdeleted gets a reference to the given bool and assigns it to the Isdeleted field.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) SetIsdeleted(v bool) {
	o.Isdeleted = &v
}

// GetUrls returns the Urls field value
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) GetUrls() ModForumGetDiscussionPost200ResponsePostAuthorUrls {
	if o == nil {
		var ret ModForumGetDiscussionPost200ResponsePostAuthorUrls
		return ret
	}

	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) GetUrlsOk() (*ModForumGetDiscussionPost200ResponsePostAuthorUrls, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Urls, true
}

// SetUrls sets field value
func (o *ModForumGetDiscussionPost200ResponsePostAuthor) SetUrls(v ModForumGetDiscussionPost200ResponsePostAuthorUrls) {
	o.Urls = v
}

func (o ModForumGetDiscussionPost200ResponsePostAuthor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumGetDiscussionPost200ResponsePostAuthor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fullname) {
		toSerialize["fullname"] = o.Fullname
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Isdeleted) {
		toSerialize["isdeleted"] = o.Isdeleted
	}
	toSerialize["urls"] = o.Urls
	return toSerialize, nil
}

func (o *ModForumGetDiscussionPost200ResponsePostAuthor) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"urls",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModForumGetDiscussionPost200ResponsePostAuthor := _ModForumGetDiscussionPost200ResponsePostAuthor{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModForumGetDiscussionPost200ResponsePostAuthor)

	if err != nil {
		return err
	}

	*o = ModForumGetDiscussionPost200ResponsePostAuthor(varModForumGetDiscussionPost200ResponsePostAuthor)

	return err
}

type NullableModForumGetDiscussionPost200ResponsePostAuthor struct {
	value *ModForumGetDiscussionPost200ResponsePostAuthor
	isSet bool
}

func (v NullableModForumGetDiscussionPost200ResponsePostAuthor) Get() *ModForumGetDiscussionPost200ResponsePostAuthor {
	return v.value
}

func (v *NullableModForumGetDiscussionPost200ResponsePostAuthor) Set(val *ModForumGetDiscussionPost200ResponsePostAuthor) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumGetDiscussionPost200ResponsePostAuthor) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumGetDiscussionPost200ResponsePostAuthor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumGetDiscussionPost200ResponsePostAuthor(val *ModForumGetDiscussionPost200ResponsePostAuthor) *NullableModForumGetDiscussionPost200ResponsePostAuthor {
	return &NullableModForumGetDiscussionPost200ResponsePostAuthor{value: val, isSet: true}
}

func (v NullableModForumGetDiscussionPost200ResponsePostAuthor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumGetDiscussionPost200ResponsePostAuthor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


