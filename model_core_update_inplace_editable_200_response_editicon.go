/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreUpdateInplaceEditable200ResponseEditicon type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreUpdateInplaceEditable200ResponseEditicon{}

// CoreUpdateInplaceEditable200ResponseEditicon struct for CoreUpdateInplaceEditable200ResponseEditicon
type CoreUpdateInplaceEditable200ResponseEditicon struct {
	// Edit icon component
	Component *string `json:"component,omitempty"`
	// Edit icon key
	Key *string `json:"key,omitempty"`
	// Edit icon title
	Title *string `json:"title,omitempty"`
}

// NewCoreUpdateInplaceEditable200ResponseEditicon instantiates a new CoreUpdateInplaceEditable200ResponseEditicon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreUpdateInplaceEditable200ResponseEditicon() *CoreUpdateInplaceEditable200ResponseEditicon {
	this := CoreUpdateInplaceEditable200ResponseEditicon{}
	var component string = "null"
	this.Component = &component
	var key string = "null"
	this.Key = &key
	var title string = "null"
	this.Title = &title
	return &this
}

// NewCoreUpdateInplaceEditable200ResponseEditiconWithDefaults instantiates a new CoreUpdateInplaceEditable200ResponseEditicon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreUpdateInplaceEditable200ResponseEditiconWithDefaults() *CoreUpdateInplaceEditable200ResponseEditicon {
	this := CoreUpdateInplaceEditable200ResponseEditicon{}
	var component string = "null"
	this.Component = &component
	var key string = "null"
	this.Key = &key
	var title string = "null"
	this.Title = &title
	return &this
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *CoreUpdateInplaceEditable200ResponseEditicon) GetComponent() string {
	if o == nil || IsNil(o.Component) {
		var ret string
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateInplaceEditable200ResponseEditicon) GetComponentOk() (*string, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *CoreUpdateInplaceEditable200ResponseEditicon) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given string and assigns it to the Component field.
func (o *CoreUpdateInplaceEditable200ResponseEditicon) SetComponent(v string) {
	o.Component = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *CoreUpdateInplaceEditable200ResponseEditicon) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateInplaceEditable200ResponseEditicon) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *CoreUpdateInplaceEditable200ResponseEditicon) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *CoreUpdateInplaceEditable200ResponseEditicon) SetKey(v string) {
	o.Key = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CoreUpdateInplaceEditable200ResponseEditicon) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateInplaceEditable200ResponseEditicon) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CoreUpdateInplaceEditable200ResponseEditicon) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CoreUpdateInplaceEditable200ResponseEditicon) SetTitle(v string) {
	o.Title = &v
}

func (o CoreUpdateInplaceEditable200ResponseEditicon) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreUpdateInplaceEditable200ResponseEditicon) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Component) {
		toSerialize["component"] = o.Component
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableCoreUpdateInplaceEditable200ResponseEditicon struct {
	value *CoreUpdateInplaceEditable200ResponseEditicon
	isSet bool
}

func (v NullableCoreUpdateInplaceEditable200ResponseEditicon) Get() *CoreUpdateInplaceEditable200ResponseEditicon {
	return v.value
}

func (v *NullableCoreUpdateInplaceEditable200ResponseEditicon) Set(val *CoreUpdateInplaceEditable200ResponseEditicon) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreUpdateInplaceEditable200ResponseEditicon) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreUpdateInplaceEditable200ResponseEditicon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreUpdateInplaceEditable200ResponseEditicon(val *CoreUpdateInplaceEditable200ResponseEditicon) *NullableCoreUpdateInplaceEditable200ResponseEditicon {
	return &NullableCoreUpdateInplaceEditable200ResponseEditicon{value: val, isSet: true}
}

func (v NullableCoreUpdateInplaceEditable200ResponseEditicon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreUpdateInplaceEditable200ResponseEditicon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


