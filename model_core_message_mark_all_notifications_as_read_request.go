/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreMessageMarkAllNotificationsAsReadRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreMessageMarkAllNotificationsAsReadRequest{}

// CoreMessageMarkAllNotificationsAsReadRequest struct for CoreMessageMarkAllNotificationsAsReadRequest
type CoreMessageMarkAllNotificationsAsReadRequest struct {
	// mark messages created before this time as read, 0 for all messages
	Timecreatedto *int32 `json:"timecreatedto,omitempty"`
	// the user id who send the message, 0 for any user. -10 or -20 for no-reply or support user
	Useridfrom *int32 `json:"useridfrom,omitempty"`
	// the user id who received the message, 0 for any user
	Useridto int32 `json:"useridto"`
}

type _CoreMessageMarkAllNotificationsAsReadRequest CoreMessageMarkAllNotificationsAsReadRequest

// NewCoreMessageMarkAllNotificationsAsReadRequest instantiates a new CoreMessageMarkAllNotificationsAsReadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreMessageMarkAllNotificationsAsReadRequest(useridto int32) *CoreMessageMarkAllNotificationsAsReadRequest {
	this := CoreMessageMarkAllNotificationsAsReadRequest{}
	var timecreatedto int32 = 0
	this.Timecreatedto = &timecreatedto
	var useridfrom int32 = 0
	this.Useridfrom = &useridfrom
	this.Useridto = useridto
	return &this
}

// NewCoreMessageMarkAllNotificationsAsReadRequestWithDefaults instantiates a new CoreMessageMarkAllNotificationsAsReadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreMessageMarkAllNotificationsAsReadRequestWithDefaults() *CoreMessageMarkAllNotificationsAsReadRequest {
	this := CoreMessageMarkAllNotificationsAsReadRequest{}
	var timecreatedto int32 = 0
	this.Timecreatedto = &timecreatedto
	var useridfrom int32 = 0
	this.Useridfrom = &useridfrom
	return &this
}

// GetTimecreatedto returns the Timecreatedto field value if set, zero value otherwise.
func (o *CoreMessageMarkAllNotificationsAsReadRequest) GetTimecreatedto() int32 {
	if o == nil || IsNil(o.Timecreatedto) {
		var ret int32
		return ret
	}
	return *o.Timecreatedto
}

// GetTimecreatedtoOk returns a tuple with the Timecreatedto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageMarkAllNotificationsAsReadRequest) GetTimecreatedtoOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecreatedto) {
		return nil, false
	}
	return o.Timecreatedto, true
}

// HasTimecreatedto returns a boolean if a field has been set.
func (o *CoreMessageMarkAllNotificationsAsReadRequest) HasTimecreatedto() bool {
	if o != nil && !IsNil(o.Timecreatedto) {
		return true
	}

	return false
}

// SetTimecreatedto gets a reference to the given int32 and assigns it to the Timecreatedto field.
func (o *CoreMessageMarkAllNotificationsAsReadRequest) SetTimecreatedto(v int32) {
	o.Timecreatedto = &v
}

// GetUseridfrom returns the Useridfrom field value if set, zero value otherwise.
func (o *CoreMessageMarkAllNotificationsAsReadRequest) GetUseridfrom() int32 {
	if o == nil || IsNil(o.Useridfrom) {
		var ret int32
		return ret
	}
	return *o.Useridfrom
}

// GetUseridfromOk returns a tuple with the Useridfrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageMarkAllNotificationsAsReadRequest) GetUseridfromOk() (*int32, bool) {
	if o == nil || IsNil(o.Useridfrom) {
		return nil, false
	}
	return o.Useridfrom, true
}

// HasUseridfrom returns a boolean if a field has been set.
func (o *CoreMessageMarkAllNotificationsAsReadRequest) HasUseridfrom() bool {
	if o != nil && !IsNil(o.Useridfrom) {
		return true
	}

	return false
}

// SetUseridfrom gets a reference to the given int32 and assigns it to the Useridfrom field.
func (o *CoreMessageMarkAllNotificationsAsReadRequest) SetUseridfrom(v int32) {
	o.Useridfrom = &v
}

// GetUseridto returns the Useridto field value
func (o *CoreMessageMarkAllNotificationsAsReadRequest) GetUseridto() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Useridto
}

// GetUseridtoOk returns a tuple with the Useridto field value
// and a boolean to check if the value has been set.
func (o *CoreMessageMarkAllNotificationsAsReadRequest) GetUseridtoOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Useridto, true
}

// SetUseridto sets field value
func (o *CoreMessageMarkAllNotificationsAsReadRequest) SetUseridto(v int32) {
	o.Useridto = v
}

func (o CoreMessageMarkAllNotificationsAsReadRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreMessageMarkAllNotificationsAsReadRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timecreatedto) {
		toSerialize["timecreatedto"] = o.Timecreatedto
	}
	if !IsNil(o.Useridfrom) {
		toSerialize["useridfrom"] = o.Useridfrom
	}
	toSerialize["useridto"] = o.Useridto
	return toSerialize, nil
}

func (o *CoreMessageMarkAllNotificationsAsReadRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"useridto",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreMessageMarkAllNotificationsAsReadRequest := _CoreMessageMarkAllNotificationsAsReadRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreMessageMarkAllNotificationsAsReadRequest)

	if err != nil {
		return err
	}

	*o = CoreMessageMarkAllNotificationsAsReadRequest(varCoreMessageMarkAllNotificationsAsReadRequest)

	return err
}

type NullableCoreMessageMarkAllNotificationsAsReadRequest struct {
	value *CoreMessageMarkAllNotificationsAsReadRequest
	isSet bool
}

func (v NullableCoreMessageMarkAllNotificationsAsReadRequest) Get() *CoreMessageMarkAllNotificationsAsReadRequest {
	return v.value
}

func (v *NullableCoreMessageMarkAllNotificationsAsReadRequest) Set(val *CoreMessageMarkAllNotificationsAsReadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreMessageMarkAllNotificationsAsReadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreMessageMarkAllNotificationsAsReadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreMessageMarkAllNotificationsAsReadRequest(val *CoreMessageMarkAllNotificationsAsReadRequest) *NullableCoreMessageMarkAllNotificationsAsReadRequest {
	return &NullableCoreMessageMarkAllNotificationsAsReadRequest{value: val, isSet: true}
}

func (v NullableCoreMessageMarkAllNotificationsAsReadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreMessageMarkAllNotificationsAsReadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


