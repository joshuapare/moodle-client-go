/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreRatingAddRating200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreRatingAddRating200Response{}

// CoreRatingAddRating200Response struct for CoreRatingAddRating200Response
type CoreRatingAddRating200Response struct {
	// New aggregate
	Aggregate *string `json:"aggregate,omitempty"`
	// Ratings count
	Count *int32 `json:"count,omitempty"`
	// Rating item id
	Itemid *int32 `json:"itemid,omitempty"`
	// Whether the rate was successfully created
	Success bool `json:"success"`
	Warnings []AuthEmailSignupUser200ResponseWarningsInner `json:"warnings,omitempty"`
}

type _CoreRatingAddRating200Response CoreRatingAddRating200Response

// NewCoreRatingAddRating200Response instantiates a new CoreRatingAddRating200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreRatingAddRating200Response(success bool) *CoreRatingAddRating200Response {
	this := CoreRatingAddRating200Response{}
	var aggregate string = "null"
	this.Aggregate = &aggregate
	var count int32 = null
	this.Count = &count
	var itemid int32 = null
	this.Itemid = &itemid
	this.Success = success
	return &this
}

// NewCoreRatingAddRating200ResponseWithDefaults instantiates a new CoreRatingAddRating200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreRatingAddRating200ResponseWithDefaults() *CoreRatingAddRating200Response {
	this := CoreRatingAddRating200Response{}
	var aggregate string = "null"
	this.Aggregate = &aggregate
	var count int32 = null
	this.Count = &count
	var itemid int32 = null
	this.Itemid = &itemid
	var success bool = null
	this.Success = success
	return &this
}

// GetAggregate returns the Aggregate field value if set, zero value otherwise.
func (o *CoreRatingAddRating200Response) GetAggregate() string {
	if o == nil || IsNil(o.Aggregate) {
		var ret string
		return ret
	}
	return *o.Aggregate
}

// GetAggregateOk returns a tuple with the Aggregate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreRatingAddRating200Response) GetAggregateOk() (*string, bool) {
	if o == nil || IsNil(o.Aggregate) {
		return nil, false
	}
	return o.Aggregate, true
}

// HasAggregate returns a boolean if a field has been set.
func (o *CoreRatingAddRating200Response) HasAggregate() bool {
	if o != nil && !IsNil(o.Aggregate) {
		return true
	}

	return false
}

// SetAggregate gets a reference to the given string and assigns it to the Aggregate field.
func (o *CoreRatingAddRating200Response) SetAggregate(v string) {
	o.Aggregate = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *CoreRatingAddRating200Response) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreRatingAddRating200Response) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *CoreRatingAddRating200Response) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *CoreRatingAddRating200Response) SetCount(v int32) {
	o.Count = &v
}

// GetItemid returns the Itemid field value if set, zero value otherwise.
func (o *CoreRatingAddRating200Response) GetItemid() int32 {
	if o == nil || IsNil(o.Itemid) {
		var ret int32
		return ret
	}
	return *o.Itemid
}

// GetItemidOk returns a tuple with the Itemid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreRatingAddRating200Response) GetItemidOk() (*int32, bool) {
	if o == nil || IsNil(o.Itemid) {
		return nil, false
	}
	return o.Itemid, true
}

// HasItemid returns a boolean if a field has been set.
func (o *CoreRatingAddRating200Response) HasItemid() bool {
	if o != nil && !IsNil(o.Itemid) {
		return true
	}

	return false
}

// SetItemid gets a reference to the given int32 and assigns it to the Itemid field.
func (o *CoreRatingAddRating200Response) SetItemid(v int32) {
	o.Itemid = &v
}

// GetSuccess returns the Success field value
func (o *CoreRatingAddRating200Response) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *CoreRatingAddRating200Response) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *CoreRatingAddRating200Response) SetSuccess(v bool) {
	o.Success = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CoreRatingAddRating200Response) GetWarnings() []AuthEmailSignupUser200ResponseWarningsInner {
	if o == nil || IsNil(o.Warnings) {
		var ret []AuthEmailSignupUser200ResponseWarningsInner
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreRatingAddRating200Response) GetWarningsOk() ([]AuthEmailSignupUser200ResponseWarningsInner, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CoreRatingAddRating200Response) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []AuthEmailSignupUser200ResponseWarningsInner and assigns it to the Warnings field.
func (o *CoreRatingAddRating200Response) SetWarnings(v []AuthEmailSignupUser200ResponseWarningsInner) {
	o.Warnings = v
}

func (o CoreRatingAddRating200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreRatingAddRating200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aggregate) {
		toSerialize["aggregate"] = o.Aggregate
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Itemid) {
		toSerialize["itemid"] = o.Itemid
	}
	toSerialize["success"] = o.Success
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

func (o *CoreRatingAddRating200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"success",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreRatingAddRating200Response := _CoreRatingAddRating200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreRatingAddRating200Response)

	if err != nil {
		return err
	}

	*o = CoreRatingAddRating200Response(varCoreRatingAddRating200Response)

	return err
}

type NullableCoreRatingAddRating200Response struct {
	value *CoreRatingAddRating200Response
	isSet bool
}

func (v NullableCoreRatingAddRating200Response) Get() *CoreRatingAddRating200Response {
	return v.value
}

func (v *NullableCoreRatingAddRating200Response) Set(val *CoreRatingAddRating200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreRatingAddRating200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreRatingAddRating200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreRatingAddRating200Response(val *CoreRatingAddRating200Response) *NullableCoreRatingAddRating200Response {
	return &NullableCoreRatingAddRating200Response{value: val, isSet: true}
}

func (v NullableCoreRatingAddRating200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreRatingAddRating200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


