/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ToolXmldbInvokeMoveActionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolXmldbInvokeMoveActionRequest{}

// ToolXmldbInvokeMoveActionRequest struct for ToolXmldbInvokeMoveActionRequest
type ToolXmldbInvokeMoveActionRequest struct {
	// Action
	Action string `json:"action"`
	// Plugin that is being edited
	Dir string `json:"dir"`
	// Field name
	Field *string `json:"field,omitempty"`
	// Index name
	Index *string `json:"index,omitempty"`
	// Key name
	Key *string `json:"key,omitempty"`
	// How many positions to move by (negative - up, positive - down)
	Position int32 `json:"position"`
	// Table name
	Table string `json:"table"`
}

type _ToolXmldbInvokeMoveActionRequest ToolXmldbInvokeMoveActionRequest

// NewToolXmldbInvokeMoveActionRequest instantiates a new ToolXmldbInvokeMoveActionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolXmldbInvokeMoveActionRequest(action string, dir string, position int32, table string) *ToolXmldbInvokeMoveActionRequest {
	this := ToolXmldbInvokeMoveActionRequest{}
	this.Action = action
	this.Dir = dir
	var field string = ""
	this.Field = &field
	var index string = ""
	this.Index = &index
	var key string = ""
	this.Key = &key
	this.Position = position
	this.Table = table
	return &this
}

// NewToolXmldbInvokeMoveActionRequestWithDefaults instantiates a new ToolXmldbInvokeMoveActionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolXmldbInvokeMoveActionRequestWithDefaults() *ToolXmldbInvokeMoveActionRequest {
	this := ToolXmldbInvokeMoveActionRequest{}
	var action string = "null"
	this.Action = action
	var dir string = "null"
	this.Dir = dir
	var field string = ""
	this.Field = &field
	var index string = ""
	this.Index = &index
	var key string = ""
	this.Key = &key
	var position int32 = null
	this.Position = position
	var table string = "null"
	this.Table = table
	return &this
}

// GetAction returns the Action field value
func (o *ToolXmldbInvokeMoveActionRequest) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ToolXmldbInvokeMoveActionRequest) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ToolXmldbInvokeMoveActionRequest) SetAction(v string) {
	o.Action = v
}

// GetDir returns the Dir field value
func (o *ToolXmldbInvokeMoveActionRequest) GetDir() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Dir
}

// GetDirOk returns a tuple with the Dir field value
// and a boolean to check if the value has been set.
func (o *ToolXmldbInvokeMoveActionRequest) GetDirOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dir, true
}

// SetDir sets field value
func (o *ToolXmldbInvokeMoveActionRequest) SetDir(v string) {
	o.Dir = v
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *ToolXmldbInvokeMoveActionRequest) GetField() string {
	if o == nil || IsNil(o.Field) {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolXmldbInvokeMoveActionRequest) GetFieldOk() (*string, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *ToolXmldbInvokeMoveActionRequest) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *ToolXmldbInvokeMoveActionRequest) SetField(v string) {
	o.Field = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *ToolXmldbInvokeMoveActionRequest) GetIndex() string {
	if o == nil || IsNil(o.Index) {
		var ret string
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolXmldbInvokeMoveActionRequest) GetIndexOk() (*string, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *ToolXmldbInvokeMoveActionRequest) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given string and assigns it to the Index field.
func (o *ToolXmldbInvokeMoveActionRequest) SetIndex(v string) {
	o.Index = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ToolXmldbInvokeMoveActionRequest) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolXmldbInvokeMoveActionRequest) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ToolXmldbInvokeMoveActionRequest) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ToolXmldbInvokeMoveActionRequest) SetKey(v string) {
	o.Key = &v
}

// GetPosition returns the Position field value
func (o *ToolXmldbInvokeMoveActionRequest) GetPosition() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *ToolXmldbInvokeMoveActionRequest) GetPositionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *ToolXmldbInvokeMoveActionRequest) SetPosition(v int32) {
	o.Position = v
}

// GetTable returns the Table field value
func (o *ToolXmldbInvokeMoveActionRequest) GetTable() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Table
}

// GetTableOk returns a tuple with the Table field value
// and a boolean to check if the value has been set.
func (o *ToolXmldbInvokeMoveActionRequest) GetTableOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Table, true
}

// SetTable sets field value
func (o *ToolXmldbInvokeMoveActionRequest) SetTable(v string) {
	o.Table = v
}

func (o ToolXmldbInvokeMoveActionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolXmldbInvokeMoveActionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	toSerialize["dir"] = o.Dir
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	toSerialize["position"] = o.Position
	toSerialize["table"] = o.Table
	return toSerialize, nil
}

func (o *ToolXmldbInvokeMoveActionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"dir",
		"position",
		"table",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varToolXmldbInvokeMoveActionRequest := _ToolXmldbInvokeMoveActionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varToolXmldbInvokeMoveActionRequest)

	if err != nil {
		return err
	}

	*o = ToolXmldbInvokeMoveActionRequest(varToolXmldbInvokeMoveActionRequest)

	return err
}

type NullableToolXmldbInvokeMoveActionRequest struct {
	value *ToolXmldbInvokeMoveActionRequest
	isSet bool
}

func (v NullableToolXmldbInvokeMoveActionRequest) Get() *ToolXmldbInvokeMoveActionRequest {
	return v.value
}

func (v *NullableToolXmldbInvokeMoveActionRequest) Set(val *ToolXmldbInvokeMoveActionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableToolXmldbInvokeMoveActionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableToolXmldbInvokeMoveActionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolXmldbInvokeMoveActionRequest(val *ToolXmldbInvokeMoveActionRequest) *NullableToolXmldbInvokeMoveActionRequest {
	return &NullableToolXmldbInvokeMoveActionRequest{value: val, isSet: true}
}

func (v NullableToolXmldbInvokeMoveActionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolXmldbInvokeMoveActionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


