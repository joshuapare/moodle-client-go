/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModGlossaryGetEntryById200ResponseEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModGlossaryGetEntryById200ResponseEntry{}

// ModGlossaryGetEntryById200ResponseEntry struct for ModGlossaryGetEntryById200ResponseEntry
type ModGlossaryGetEntryById200ResponseEntry struct {
	// Whether the entry was approved
	Approved bool `json:"approved"`
	// Whether or not the entry has attachments
	Attachment bool `json:"attachment"`
	Attachments []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner `json:"attachments,omitempty"`
	// When true, the matching is case sensitive
	Casesensitive bool `json:"casesensitive"`
	// The concept
	Concept string `json:"concept"`
	// The definition
	Definition string `json:"definition"`
	// definition format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Definitionformat int32 `json:"definitionformat"`
	Definitioninlinefiles []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner `json:"definitioninlinefiles,omitempty"`
	// The definition trust flag
	Definitiontrust bool `json:"definitiontrust"`
	// When true, the matching is done on full words only
	Fullmatch bool `json:"fullmatch"`
	// The glossary ID
	Glossaryid int32 `json:"glossaryid"`
	// The entry ID
	Id int32 `json:"id"`
	// The source glossary ID
	Sourceglossaryid int32 `json:"sourceglossaryid"`
	Tags []ModDataGetEntries200ResponseEntriesInnerTagsInner `json:"tags,omitempty"`
	// The entry was created by a teacher, or equivalent.
	Teacherentry bool `json:"teacherentry"`
	// Time created
	Timecreated int32 `json:"timecreated"`
	// Time modified
	Timemodified int32 `json:"timemodified"`
	// Whether the concept should be automatically linked
	Usedynalink bool `json:"usedynalink"`
	// Author full name
	Userfullname string `json:"userfullname"`
	// Author ID
	Userid int32 `json:"userid"`
	// Author picture
	Userpictureurl string `json:"userpictureurl"`
}

type _ModGlossaryGetEntryById200ResponseEntry ModGlossaryGetEntryById200ResponseEntry

// NewModGlossaryGetEntryById200ResponseEntry instantiates a new ModGlossaryGetEntryById200ResponseEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModGlossaryGetEntryById200ResponseEntry(approved bool, attachment bool, casesensitive bool, concept string, definition string, definitionformat int32, definitiontrust bool, fullmatch bool, glossaryid int32, id int32, sourceglossaryid int32, teacherentry bool, timecreated int32, timemodified int32, usedynalink bool, userfullname string, userid int32, userpictureurl string) *ModGlossaryGetEntryById200ResponseEntry {
	this := ModGlossaryGetEntryById200ResponseEntry{}
	this.Approved = approved
	this.Attachment = attachment
	this.Casesensitive = casesensitive
	this.Concept = concept
	this.Definition = definition
	this.Definitionformat = definitionformat
	this.Definitiontrust = definitiontrust
	this.Fullmatch = fullmatch
	this.Glossaryid = glossaryid
	this.Id = id
	this.Sourceglossaryid = sourceglossaryid
	this.Teacherentry = teacherentry
	this.Timecreated = timecreated
	this.Timemodified = timemodified
	this.Usedynalink = usedynalink
	this.Userfullname = userfullname
	this.Userid = userid
	this.Userpictureurl = userpictureurl
	return &this
}

// NewModGlossaryGetEntryById200ResponseEntryWithDefaults instantiates a new ModGlossaryGetEntryById200ResponseEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModGlossaryGetEntryById200ResponseEntryWithDefaults() *ModGlossaryGetEntryById200ResponseEntry {
	this := ModGlossaryGetEntryById200ResponseEntry{}
	return &this
}

// GetApproved returns the Approved field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetApproved() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Approved
}

// GetApprovedOk returns a tuple with the Approved field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetApprovedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Approved, true
}

// SetApproved sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetApproved(v bool) {
	o.Approved = v
}

// GetAttachment returns the Attachment field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetAttachment() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Attachment
}

// GetAttachmentOk returns a tuple with the Attachment field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetAttachmentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attachment, true
}

// SetAttachment sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetAttachment(v bool) {
	o.Attachment = v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetAttachments() []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner {
	if o == nil || IsNil(o.Attachments) {
		var ret []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetAttachmentsOk() ([]CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner and assigns it to the Attachments field.
func (o *ModGlossaryGetEntryById200ResponseEntry) SetAttachments(v []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner) {
	o.Attachments = v
}

// GetCasesensitive returns the Casesensitive field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetCasesensitive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Casesensitive
}

// GetCasesensitiveOk returns a tuple with the Casesensitive field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetCasesensitiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Casesensitive, true
}

// SetCasesensitive sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetCasesensitive(v bool) {
	o.Casesensitive = v
}

// GetConcept returns the Concept field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetConcept() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Concept
}

// GetConceptOk returns a tuple with the Concept field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetConceptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Concept, true
}

// SetConcept sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetConcept(v string) {
	o.Concept = v
}

// GetDefinition returns the Definition field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetDefinition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetDefinitionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Definition, true
}

// SetDefinition sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetDefinition(v string) {
	o.Definition = v
}

// GetDefinitionformat returns the Definitionformat field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetDefinitionformat() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Definitionformat
}

// GetDefinitionformatOk returns a tuple with the Definitionformat field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetDefinitionformatOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Definitionformat, true
}

// SetDefinitionformat sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetDefinitionformat(v int32) {
	o.Definitionformat = v
}

// GetDefinitioninlinefiles returns the Definitioninlinefiles field value if set, zero value otherwise.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetDefinitioninlinefiles() []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner {
	if o == nil || IsNil(o.Definitioninlinefiles) {
		var ret []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner
		return ret
	}
	return o.Definitioninlinefiles
}

// GetDefinitioninlinefilesOk returns a tuple with the Definitioninlinefiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetDefinitioninlinefilesOk() ([]CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner, bool) {
	if o == nil || IsNil(o.Definitioninlinefiles) {
		return nil, false
	}
	return o.Definitioninlinefiles, true
}

// HasDefinitioninlinefiles returns a boolean if a field has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) HasDefinitioninlinefiles() bool {
	if o != nil && !IsNil(o.Definitioninlinefiles) {
		return true
	}

	return false
}

// SetDefinitioninlinefiles gets a reference to the given []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner and assigns it to the Definitioninlinefiles field.
func (o *ModGlossaryGetEntryById200ResponseEntry) SetDefinitioninlinefiles(v []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner) {
	o.Definitioninlinefiles = v
}

// GetDefinitiontrust returns the Definitiontrust field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetDefinitiontrust() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Definitiontrust
}

// GetDefinitiontrustOk returns a tuple with the Definitiontrust field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetDefinitiontrustOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Definitiontrust, true
}

// SetDefinitiontrust sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetDefinitiontrust(v bool) {
	o.Definitiontrust = v
}

// GetFullmatch returns the Fullmatch field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetFullmatch() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Fullmatch
}

// GetFullmatchOk returns a tuple with the Fullmatch field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetFullmatchOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fullmatch, true
}

// SetFullmatch sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetFullmatch(v bool) {
	o.Fullmatch = v
}

// GetGlossaryid returns the Glossaryid field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetGlossaryid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Glossaryid
}

// GetGlossaryidOk returns a tuple with the Glossaryid field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetGlossaryidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Glossaryid, true
}

// SetGlossaryid sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetGlossaryid(v int32) {
	o.Glossaryid = v
}

// GetId returns the Id field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetId(v int32) {
	o.Id = v
}

// GetSourceglossaryid returns the Sourceglossaryid field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetSourceglossaryid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Sourceglossaryid
}

// GetSourceglossaryidOk returns a tuple with the Sourceglossaryid field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetSourceglossaryidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sourceglossaryid, true
}

// SetSourceglossaryid sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetSourceglossaryid(v int32) {
	o.Sourceglossaryid = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetTags() []ModDataGetEntries200ResponseEntriesInnerTagsInner {
	if o == nil || IsNil(o.Tags) {
		var ret []ModDataGetEntries200ResponseEntriesInnerTagsInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetTagsOk() ([]ModDataGetEntries200ResponseEntriesInnerTagsInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ModDataGetEntries200ResponseEntriesInnerTagsInner and assigns it to the Tags field.
func (o *ModGlossaryGetEntryById200ResponseEntry) SetTags(v []ModDataGetEntries200ResponseEntriesInnerTagsInner) {
	o.Tags = v
}

// GetTeacherentry returns the Teacherentry field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetTeacherentry() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Teacherentry
}

// GetTeacherentryOk returns a tuple with the Teacherentry field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetTeacherentryOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Teacherentry, true
}

// SetTeacherentry sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetTeacherentry(v bool) {
	o.Teacherentry = v
}

// GetTimecreated returns the Timecreated field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetTimecreated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetTimecreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timecreated, true
}

// SetTimecreated sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetTimecreated(v int32) {
	o.Timecreated = v
}

// GetTimemodified returns the Timemodified field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetTimemodified() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetTimemodifiedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timemodified, true
}

// SetTimemodified sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetTimemodified(v int32) {
	o.Timemodified = v
}

// GetUsedynalink returns the Usedynalink field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetUsedynalink() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Usedynalink
}

// GetUsedynalinkOk returns a tuple with the Usedynalink field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetUsedynalinkOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Usedynalink, true
}

// SetUsedynalink sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetUsedynalink(v bool) {
	o.Usedynalink = v
}

// GetUserfullname returns the Userfullname field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetUserfullname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Userfullname
}

// GetUserfullnameOk returns a tuple with the Userfullname field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetUserfullnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userfullname, true
}

// SetUserfullname sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetUserfullname(v string) {
	o.Userfullname = v
}

// GetUserid returns the Userid field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetUserid(v int32) {
	o.Userid = v
}

// GetUserpictureurl returns the Userpictureurl field value
func (o *ModGlossaryGetEntryById200ResponseEntry) GetUserpictureurl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Userpictureurl
}

// GetUserpictureurlOk returns a tuple with the Userpictureurl field value
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetEntryById200ResponseEntry) GetUserpictureurlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userpictureurl, true
}

// SetUserpictureurl sets field value
func (o *ModGlossaryGetEntryById200ResponseEntry) SetUserpictureurl(v string) {
	o.Userpictureurl = v
}

func (o ModGlossaryGetEntryById200ResponseEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModGlossaryGetEntryById200ResponseEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["approved"] = o.Approved
	toSerialize["attachment"] = o.Attachment
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	toSerialize["casesensitive"] = o.Casesensitive
	toSerialize["concept"] = o.Concept
	toSerialize["definition"] = o.Definition
	toSerialize["definitionformat"] = o.Definitionformat
	if !IsNil(o.Definitioninlinefiles) {
		toSerialize["definitioninlinefiles"] = o.Definitioninlinefiles
	}
	toSerialize["definitiontrust"] = o.Definitiontrust
	toSerialize["fullmatch"] = o.Fullmatch
	toSerialize["glossaryid"] = o.Glossaryid
	toSerialize["id"] = o.Id
	toSerialize["sourceglossaryid"] = o.Sourceglossaryid
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["teacherentry"] = o.Teacherentry
	toSerialize["timecreated"] = o.Timecreated
	toSerialize["timemodified"] = o.Timemodified
	toSerialize["usedynalink"] = o.Usedynalink
	toSerialize["userfullname"] = o.Userfullname
	toSerialize["userid"] = o.Userid
	toSerialize["userpictureurl"] = o.Userpictureurl
	return toSerialize, nil
}

func (o *ModGlossaryGetEntryById200ResponseEntry) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"approved",
		"attachment",
		"casesensitive",
		"concept",
		"definition",
		"definitionformat",
		"definitiontrust",
		"fullmatch",
		"glossaryid",
		"id",
		"sourceglossaryid",
		"teacherentry",
		"timecreated",
		"timemodified",
		"usedynalink",
		"userfullname",
		"userid",
		"userpictureurl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModGlossaryGetEntryById200ResponseEntry := _ModGlossaryGetEntryById200ResponseEntry{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModGlossaryGetEntryById200ResponseEntry)

	if err != nil {
		return err
	}

	*o = ModGlossaryGetEntryById200ResponseEntry(varModGlossaryGetEntryById200ResponseEntry)

	return err
}

type NullableModGlossaryGetEntryById200ResponseEntry struct {
	value *ModGlossaryGetEntryById200ResponseEntry
	isSet bool
}

func (v NullableModGlossaryGetEntryById200ResponseEntry) Get() *ModGlossaryGetEntryById200ResponseEntry {
	return v.value
}

func (v *NullableModGlossaryGetEntryById200ResponseEntry) Set(val *ModGlossaryGetEntryById200ResponseEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableModGlossaryGetEntryById200ResponseEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableModGlossaryGetEntryById200ResponseEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModGlossaryGetEntryById200ResponseEntry(val *ModGlossaryGetEntryById200ResponseEntry) *NullableModGlossaryGetEntryById200ResponseEntry {
	return &NullableModGlossaryGetEntryById200ResponseEntry{value: val, isSet: true}
}

func (v NullableModGlossaryGetEntryById200ResponseEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModGlossaryGetEntryById200ResponseEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


