/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModForumGetDiscussionPost200ResponsePostAuthorUrls type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumGetDiscussionPost200ResponsePostAuthorUrls{}

// ModForumGetDiscussionPost200ResponsePostAuthorUrls struct for ModForumGetDiscussionPost200ResponsePostAuthorUrls
type ModForumGetDiscussionPost200ResponsePostAuthorUrls struct {
	// The URL for the use profile page
	Profile *string `json:"profile,omitempty"`
	// The URL for the use profile image
	Profileimage *string `json:"profileimage,omitempty"`
}

// NewModForumGetDiscussionPost200ResponsePostAuthorUrls instantiates a new ModForumGetDiscussionPost200ResponsePostAuthorUrls object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumGetDiscussionPost200ResponsePostAuthorUrls() *ModForumGetDiscussionPost200ResponsePostAuthorUrls {
	this := ModForumGetDiscussionPost200ResponsePostAuthorUrls{}
	return &this
}

// NewModForumGetDiscussionPost200ResponsePostAuthorUrlsWithDefaults instantiates a new ModForumGetDiscussionPost200ResponsePostAuthorUrls object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumGetDiscussionPost200ResponsePostAuthorUrlsWithDefaults() *ModForumGetDiscussionPost200ResponsePostAuthorUrls {
	this := ModForumGetDiscussionPost200ResponsePostAuthorUrls{}
	return &this
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorUrls) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorUrls) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorUrls) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorUrls) SetProfile(v string) {
	o.Profile = &v
}

// GetProfileimage returns the Profileimage field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorUrls) GetProfileimage() string {
	if o == nil || IsNil(o.Profileimage) {
		var ret string
		return ret
	}
	return *o.Profileimage
}

// GetProfileimageOk returns a tuple with the Profileimage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorUrls) GetProfileimageOk() (*string, bool) {
	if o == nil || IsNil(o.Profileimage) {
		return nil, false
	}
	return o.Profileimage, true
}

// HasProfileimage returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorUrls) HasProfileimage() bool {
	if o != nil && !IsNil(o.Profileimage) {
		return true
	}

	return false
}

// SetProfileimage gets a reference to the given string and assigns it to the Profileimage field.
func (o *ModForumGetDiscussionPost200ResponsePostAuthorUrls) SetProfileimage(v string) {
	o.Profileimage = &v
}

func (o ModForumGetDiscussionPost200ResponsePostAuthorUrls) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumGetDiscussionPost200ResponsePostAuthorUrls) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.Profileimage) {
		toSerialize["profileimage"] = o.Profileimage
	}
	return toSerialize, nil
}

type NullableModForumGetDiscussionPost200ResponsePostAuthorUrls struct {
	value *ModForumGetDiscussionPost200ResponsePostAuthorUrls
	isSet bool
}

func (v NullableModForumGetDiscussionPost200ResponsePostAuthorUrls) Get() *ModForumGetDiscussionPost200ResponsePostAuthorUrls {
	return v.value
}

func (v *NullableModForumGetDiscussionPost200ResponsePostAuthorUrls) Set(val *ModForumGetDiscussionPost200ResponsePostAuthorUrls) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumGetDiscussionPost200ResponsePostAuthorUrls) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumGetDiscussionPost200ResponsePostAuthorUrls) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumGetDiscussionPost200ResponsePostAuthorUrls(val *ModForumGetDiscussionPost200ResponsePostAuthorUrls) *NullableModForumGetDiscussionPost200ResponsePostAuthorUrls {
	return &NullableModForumGetDiscussionPost200ResponsePostAuthorUrls{value: val, isSet: true}
}

func (v NullableModForumGetDiscussionPost200ResponsePostAuthorUrls) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumGetDiscussionPost200ResponsePostAuthorUrls) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


