/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreUserAddUserDeviceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreUserAddUserDeviceRequest{}

// CoreUserAddUserDeviceRequest struct for CoreUserAddUserDeviceRequest
type CoreUserAddUserDeviceRequest struct {
	// the app id, usually something like com.moodle.moodlemobile
	Appid string `json:"appid"`
	// the device model 'Nexus4' or 'iPad1,1' etc.
	Model string `json:"model"`
	// the device name, 'occam' or 'iPhone' etc.
	Name string `json:"name"`
	// the device platform 'iOS' or 'Android' etc.
	Platform string `json:"platform"`
	// the app generated public key
	Publickey *string `json:"publickey,omitempty"`
	// the device PUSH token/key/identifier/registration id
	Pushid string `json:"pushid"`
	// the device UUID
	Uuid string `json:"uuid"`
	// the device version '6.1.2' or '4.2.2' etc.
	Version string `json:"version"`
}

type _CoreUserAddUserDeviceRequest CoreUserAddUserDeviceRequest

// NewCoreUserAddUserDeviceRequest instantiates a new CoreUserAddUserDeviceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreUserAddUserDeviceRequest(appid string, model string, name string, platform string, pushid string, uuid string, version string) *CoreUserAddUserDeviceRequest {
	this := CoreUserAddUserDeviceRequest{}
	this.Appid = appid
	this.Model = model
	this.Name = name
	this.Platform = platform
	var publickey string = "null"
	this.Publickey = &publickey
	this.Pushid = pushid
	this.Uuid = uuid
	this.Version = version
	return &this
}

// NewCoreUserAddUserDeviceRequestWithDefaults instantiates a new CoreUserAddUserDeviceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreUserAddUserDeviceRequestWithDefaults() *CoreUserAddUserDeviceRequest {
	this := CoreUserAddUserDeviceRequest{}
	var appid string = "null"
	this.Appid = appid
	var model string = "null"
	this.Model = model
	var name string = "null"
	this.Name = name
	var platform string = "null"
	this.Platform = platform
	var publickey string = "null"
	this.Publickey = &publickey
	var pushid string = "null"
	this.Pushid = pushid
	var uuid string = "null"
	this.Uuid = uuid
	var version string = "null"
	this.Version = version
	return &this
}

// GetAppid returns the Appid field value
func (o *CoreUserAddUserDeviceRequest) GetAppid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Appid
}

// GetAppidOk returns a tuple with the Appid field value
// and a boolean to check if the value has been set.
func (o *CoreUserAddUserDeviceRequest) GetAppidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Appid, true
}

// SetAppid sets field value
func (o *CoreUserAddUserDeviceRequest) SetAppid(v string) {
	o.Appid = v
}

// GetModel returns the Model field value
func (o *CoreUserAddUserDeviceRequest) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *CoreUserAddUserDeviceRequest) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *CoreUserAddUserDeviceRequest) SetModel(v string) {
	o.Model = v
}

// GetName returns the Name field value
func (o *CoreUserAddUserDeviceRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CoreUserAddUserDeviceRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CoreUserAddUserDeviceRequest) SetName(v string) {
	o.Name = v
}

// GetPlatform returns the Platform field value
func (o *CoreUserAddUserDeviceRequest) GetPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *CoreUserAddUserDeviceRequest) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *CoreUserAddUserDeviceRequest) SetPlatform(v string) {
	o.Platform = v
}

// GetPublickey returns the Publickey field value if set, zero value otherwise.
func (o *CoreUserAddUserDeviceRequest) GetPublickey() string {
	if o == nil || IsNil(o.Publickey) {
		var ret string
		return ret
	}
	return *o.Publickey
}

// GetPublickeyOk returns a tuple with the Publickey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUserAddUserDeviceRequest) GetPublickeyOk() (*string, bool) {
	if o == nil || IsNil(o.Publickey) {
		return nil, false
	}
	return o.Publickey, true
}

// HasPublickey returns a boolean if a field has been set.
func (o *CoreUserAddUserDeviceRequest) HasPublickey() bool {
	if o != nil && !IsNil(o.Publickey) {
		return true
	}

	return false
}

// SetPublickey gets a reference to the given string and assigns it to the Publickey field.
func (o *CoreUserAddUserDeviceRequest) SetPublickey(v string) {
	o.Publickey = &v
}

// GetPushid returns the Pushid field value
func (o *CoreUserAddUserDeviceRequest) GetPushid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pushid
}

// GetPushidOk returns a tuple with the Pushid field value
// and a boolean to check if the value has been set.
func (o *CoreUserAddUserDeviceRequest) GetPushidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pushid, true
}

// SetPushid sets field value
func (o *CoreUserAddUserDeviceRequest) SetPushid(v string) {
	o.Pushid = v
}

// GetUuid returns the Uuid field value
func (o *CoreUserAddUserDeviceRequest) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *CoreUserAddUserDeviceRequest) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *CoreUserAddUserDeviceRequest) SetUuid(v string) {
	o.Uuid = v
}

// GetVersion returns the Version field value
func (o *CoreUserAddUserDeviceRequest) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *CoreUserAddUserDeviceRequest) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *CoreUserAddUserDeviceRequest) SetVersion(v string) {
	o.Version = v
}

func (o CoreUserAddUserDeviceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreUserAddUserDeviceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["appid"] = o.Appid
	toSerialize["model"] = o.Model
	toSerialize["name"] = o.Name
	toSerialize["platform"] = o.Platform
	if !IsNil(o.Publickey) {
		toSerialize["publickey"] = o.Publickey
	}
	toSerialize["pushid"] = o.Pushid
	toSerialize["uuid"] = o.Uuid
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

func (o *CoreUserAddUserDeviceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"appid",
		"model",
		"name",
		"platform",
		"pushid",
		"uuid",
		"version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreUserAddUserDeviceRequest := _CoreUserAddUserDeviceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreUserAddUserDeviceRequest)

	if err != nil {
		return err
	}

	*o = CoreUserAddUserDeviceRequest(varCoreUserAddUserDeviceRequest)

	return err
}

type NullableCoreUserAddUserDeviceRequest struct {
	value *CoreUserAddUserDeviceRequest
	isSet bool
}

func (v NullableCoreUserAddUserDeviceRequest) Get() *CoreUserAddUserDeviceRequest {
	return v.value
}

func (v *NullableCoreUserAddUserDeviceRequest) Set(val *CoreUserAddUserDeviceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreUserAddUserDeviceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreUserAddUserDeviceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreUserAddUserDeviceRequest(val *CoreUserAddUserDeviceRequest) *NullableCoreUserAddUserDeviceRequest {
	return &NullableCoreUserAddUserDeviceRequest{value: val, isSet: true}
}

func (v NullableCoreUserAddUserDeviceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreUserAddUserDeviceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


