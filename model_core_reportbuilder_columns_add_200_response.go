/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreReportbuilderColumnsAdd200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreReportbuilderColumnsAdd200Response{}

// CoreReportbuilderColumnsAdd200Response struct for CoreReportbuilderColumnsAdd200Response
type CoreReportbuilderColumnsAdd200Response struct {
	// hassortablecolumns
	Hassortablecolumns bool `json:"hassortablecolumns"`
	// helpicon
	Helpicon string `json:"helpicon"`
	Sortablecolumns []CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInner `json:"sortablecolumns"`
}

type _CoreReportbuilderColumnsAdd200Response CoreReportbuilderColumnsAdd200Response

// NewCoreReportbuilderColumnsAdd200Response instantiates a new CoreReportbuilderColumnsAdd200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreReportbuilderColumnsAdd200Response(hassortablecolumns bool, helpicon string, sortablecolumns []CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInner) *CoreReportbuilderColumnsAdd200Response {
	this := CoreReportbuilderColumnsAdd200Response{}
	this.Hassortablecolumns = hassortablecolumns
	this.Helpicon = helpicon
	this.Sortablecolumns = sortablecolumns
	return &this
}

// NewCoreReportbuilderColumnsAdd200ResponseWithDefaults instantiates a new CoreReportbuilderColumnsAdd200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreReportbuilderColumnsAdd200ResponseWithDefaults() *CoreReportbuilderColumnsAdd200Response {
	this := CoreReportbuilderColumnsAdd200Response{}
	var hassortablecolumns bool = null
	this.Hassortablecolumns = hassortablecolumns
	var helpicon string = "null"
	this.Helpicon = helpicon
	return &this
}

// GetHassortablecolumns returns the Hassortablecolumns field value
func (o *CoreReportbuilderColumnsAdd200Response) GetHassortablecolumns() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hassortablecolumns
}

// GetHassortablecolumnsOk returns a tuple with the Hassortablecolumns field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderColumnsAdd200Response) GetHassortablecolumnsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hassortablecolumns, true
}

// SetHassortablecolumns sets field value
func (o *CoreReportbuilderColumnsAdd200Response) SetHassortablecolumns(v bool) {
	o.Hassortablecolumns = v
}

// GetHelpicon returns the Helpicon field value
func (o *CoreReportbuilderColumnsAdd200Response) GetHelpicon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Helpicon
}

// GetHelpiconOk returns a tuple with the Helpicon field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderColumnsAdd200Response) GetHelpiconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Helpicon, true
}

// SetHelpicon sets field value
func (o *CoreReportbuilderColumnsAdd200Response) SetHelpicon(v string) {
	o.Helpicon = v
}

// GetSortablecolumns returns the Sortablecolumns field value
func (o *CoreReportbuilderColumnsAdd200Response) GetSortablecolumns() []CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInner {
	if o == nil {
		var ret []CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInner
		return ret
	}

	return o.Sortablecolumns
}

// GetSortablecolumnsOk returns a tuple with the Sortablecolumns field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderColumnsAdd200Response) GetSortablecolumnsOk() ([]CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sortablecolumns, true
}

// SetSortablecolumns sets field value
func (o *CoreReportbuilderColumnsAdd200Response) SetSortablecolumns(v []CoreReportbuilderColumnsAdd200ResponseSortablecolumnsInner) {
	o.Sortablecolumns = v
}

func (o CoreReportbuilderColumnsAdd200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreReportbuilderColumnsAdd200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hassortablecolumns"] = o.Hassortablecolumns
	toSerialize["helpicon"] = o.Helpicon
	toSerialize["sortablecolumns"] = o.Sortablecolumns
	return toSerialize, nil
}

func (o *CoreReportbuilderColumnsAdd200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hassortablecolumns",
		"helpicon",
		"sortablecolumns",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreReportbuilderColumnsAdd200Response := _CoreReportbuilderColumnsAdd200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreReportbuilderColumnsAdd200Response)

	if err != nil {
		return err
	}

	*o = CoreReportbuilderColumnsAdd200Response(varCoreReportbuilderColumnsAdd200Response)

	return err
}

type NullableCoreReportbuilderColumnsAdd200Response struct {
	value *CoreReportbuilderColumnsAdd200Response
	isSet bool
}

func (v NullableCoreReportbuilderColumnsAdd200Response) Get() *CoreReportbuilderColumnsAdd200Response {
	return v.value
}

func (v *NullableCoreReportbuilderColumnsAdd200Response) Set(val *CoreReportbuilderColumnsAdd200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreReportbuilderColumnsAdd200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreReportbuilderColumnsAdd200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreReportbuilderColumnsAdd200Response(val *CoreReportbuilderColumnsAdd200Response) *NullableCoreReportbuilderColumnsAdd200Response {
	return &NullableCoreReportbuilderColumnsAdd200Response{value: val, isSet: true}
}

func (v NullableCoreReportbuilderColumnsAdd200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreReportbuilderColumnsAdd200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


