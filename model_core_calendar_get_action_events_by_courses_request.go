/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCalendarGetActionEventsByCoursesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCalendarGetActionEventsByCoursesRequest{}

// CoreCalendarGetActionEventsByCoursesRequest struct for CoreCalendarGetActionEventsByCoursesRequest
type CoreCalendarGetActionEventsByCoursesRequest struct {
	Courseids []map[string]interface{} `json:"courseids"`
	// Limit number
	Limitnum *int32 `json:"limitnum,omitempty"`
	// The value a user wishes to search against
	Searchvalue *string `json:"searchvalue,omitempty"`
	// Time sort from
	Timesortfrom *int32 `json:"timesortfrom,omitempty"`
	// Time sort to
	Timesortto *int32 `json:"timesortto,omitempty"`
}

type _CoreCalendarGetActionEventsByCoursesRequest CoreCalendarGetActionEventsByCoursesRequest

// NewCoreCalendarGetActionEventsByCoursesRequest instantiates a new CoreCalendarGetActionEventsByCoursesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCalendarGetActionEventsByCoursesRequest(courseids []map[string]interface{}) *CoreCalendarGetActionEventsByCoursesRequest {
	this := CoreCalendarGetActionEventsByCoursesRequest{}
	this.Courseids = courseids
	var limitnum int32 = 10
	this.Limitnum = &limitnum
	return &this
}

// NewCoreCalendarGetActionEventsByCoursesRequestWithDefaults instantiates a new CoreCalendarGetActionEventsByCoursesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCalendarGetActionEventsByCoursesRequestWithDefaults() *CoreCalendarGetActionEventsByCoursesRequest {
	this := CoreCalendarGetActionEventsByCoursesRequest{}
	var limitnum int32 = 10
	this.Limitnum = &limitnum
	return &this
}

// GetCourseids returns the Courseids field value
func (o *CoreCalendarGetActionEventsByCoursesRequest) GetCourseids() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Courseids
}

// GetCourseidsOk returns a tuple with the Courseids field value
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCoursesRequest) GetCourseidsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Courseids, true
}

// SetCourseids sets field value
func (o *CoreCalendarGetActionEventsByCoursesRequest) SetCourseids(v []map[string]interface{}) {
	o.Courseids = v
}

// GetLimitnum returns the Limitnum field value if set, zero value otherwise.
func (o *CoreCalendarGetActionEventsByCoursesRequest) GetLimitnum() int32 {
	if o == nil || IsNil(o.Limitnum) {
		var ret int32
		return ret
	}
	return *o.Limitnum
}

// GetLimitnumOk returns a tuple with the Limitnum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCoursesRequest) GetLimitnumOk() (*int32, bool) {
	if o == nil || IsNil(o.Limitnum) {
		return nil, false
	}
	return o.Limitnum, true
}

// HasLimitnum returns a boolean if a field has been set.
func (o *CoreCalendarGetActionEventsByCoursesRequest) HasLimitnum() bool {
	if o != nil && !IsNil(o.Limitnum) {
		return true
	}

	return false
}

// SetLimitnum gets a reference to the given int32 and assigns it to the Limitnum field.
func (o *CoreCalendarGetActionEventsByCoursesRequest) SetLimitnum(v int32) {
	o.Limitnum = &v
}

// GetSearchvalue returns the Searchvalue field value if set, zero value otherwise.
func (o *CoreCalendarGetActionEventsByCoursesRequest) GetSearchvalue() string {
	if o == nil || IsNil(o.Searchvalue) {
		var ret string
		return ret
	}
	return *o.Searchvalue
}

// GetSearchvalueOk returns a tuple with the Searchvalue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCoursesRequest) GetSearchvalueOk() (*string, bool) {
	if o == nil || IsNil(o.Searchvalue) {
		return nil, false
	}
	return o.Searchvalue, true
}

// HasSearchvalue returns a boolean if a field has been set.
func (o *CoreCalendarGetActionEventsByCoursesRequest) HasSearchvalue() bool {
	if o != nil && !IsNil(o.Searchvalue) {
		return true
	}

	return false
}

// SetSearchvalue gets a reference to the given string and assigns it to the Searchvalue field.
func (o *CoreCalendarGetActionEventsByCoursesRequest) SetSearchvalue(v string) {
	o.Searchvalue = &v
}

// GetTimesortfrom returns the Timesortfrom field value if set, zero value otherwise.
func (o *CoreCalendarGetActionEventsByCoursesRequest) GetTimesortfrom() int32 {
	if o == nil || IsNil(o.Timesortfrom) {
		var ret int32
		return ret
	}
	return *o.Timesortfrom
}

// GetTimesortfromOk returns a tuple with the Timesortfrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCoursesRequest) GetTimesortfromOk() (*int32, bool) {
	if o == nil || IsNil(o.Timesortfrom) {
		return nil, false
	}
	return o.Timesortfrom, true
}

// HasTimesortfrom returns a boolean if a field has been set.
func (o *CoreCalendarGetActionEventsByCoursesRequest) HasTimesortfrom() bool {
	if o != nil && !IsNil(o.Timesortfrom) {
		return true
	}

	return false
}

// SetTimesortfrom gets a reference to the given int32 and assigns it to the Timesortfrom field.
func (o *CoreCalendarGetActionEventsByCoursesRequest) SetTimesortfrom(v int32) {
	o.Timesortfrom = &v
}

// GetTimesortto returns the Timesortto field value if set, zero value otherwise.
func (o *CoreCalendarGetActionEventsByCoursesRequest) GetTimesortto() int32 {
	if o == nil || IsNil(o.Timesortto) {
		var ret int32
		return ret
	}
	return *o.Timesortto
}

// GetTimesorttoOk returns a tuple with the Timesortto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCoursesRequest) GetTimesorttoOk() (*int32, bool) {
	if o == nil || IsNil(o.Timesortto) {
		return nil, false
	}
	return o.Timesortto, true
}

// HasTimesortto returns a boolean if a field has been set.
func (o *CoreCalendarGetActionEventsByCoursesRequest) HasTimesortto() bool {
	if o != nil && !IsNil(o.Timesortto) {
		return true
	}

	return false
}

// SetTimesortto gets a reference to the given int32 and assigns it to the Timesortto field.
func (o *CoreCalendarGetActionEventsByCoursesRequest) SetTimesortto(v int32) {
	o.Timesortto = &v
}

func (o CoreCalendarGetActionEventsByCoursesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCalendarGetActionEventsByCoursesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["courseids"] = o.Courseids
	if !IsNil(o.Limitnum) {
		toSerialize["limitnum"] = o.Limitnum
	}
	if !IsNil(o.Searchvalue) {
		toSerialize["searchvalue"] = o.Searchvalue
	}
	if !IsNil(o.Timesortfrom) {
		toSerialize["timesortfrom"] = o.Timesortfrom
	}
	if !IsNil(o.Timesortto) {
		toSerialize["timesortto"] = o.Timesortto
	}
	return toSerialize, nil
}

func (o *CoreCalendarGetActionEventsByCoursesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"courseids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCalendarGetActionEventsByCoursesRequest := _CoreCalendarGetActionEventsByCoursesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCalendarGetActionEventsByCoursesRequest)

	if err != nil {
		return err
	}

	*o = CoreCalendarGetActionEventsByCoursesRequest(varCoreCalendarGetActionEventsByCoursesRequest)

	return err
}

type NullableCoreCalendarGetActionEventsByCoursesRequest struct {
	value *CoreCalendarGetActionEventsByCoursesRequest
	isSet bool
}

func (v NullableCoreCalendarGetActionEventsByCoursesRequest) Get() *CoreCalendarGetActionEventsByCoursesRequest {
	return v.value
}

func (v *NullableCoreCalendarGetActionEventsByCoursesRequest) Set(val *CoreCalendarGetActionEventsByCoursesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCalendarGetActionEventsByCoursesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCalendarGetActionEventsByCoursesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCalendarGetActionEventsByCoursesRequest(val *CoreCalendarGetActionEventsByCoursesRequest) *NullableCoreCalendarGetActionEventsByCoursesRequest {
	return &NullableCoreCalendarGetActionEventsByCoursesRequest{value: val, isSet: true}
}

func (v NullableCoreCalendarGetActionEventsByCoursesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCalendarGetActionEventsByCoursesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


