/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCourseGetUserNavigationOptionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCourseGetUserNavigationOptionsRequest{}

// CoreCourseGetUserNavigationOptionsRequest struct for CoreCourseGetUserNavigationOptionsRequest
type CoreCourseGetUserNavigationOptionsRequest struct {
	Courseids []map[string]interface{} `json:"courseids"`
}

type _CoreCourseGetUserNavigationOptionsRequest CoreCourseGetUserNavigationOptionsRequest

// NewCoreCourseGetUserNavigationOptionsRequest instantiates a new CoreCourseGetUserNavigationOptionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCourseGetUserNavigationOptionsRequest(courseids []map[string]interface{}) *CoreCourseGetUserNavigationOptionsRequest {
	this := CoreCourseGetUserNavigationOptionsRequest{}
	this.Courseids = courseids
	return &this
}

// NewCoreCourseGetUserNavigationOptionsRequestWithDefaults instantiates a new CoreCourseGetUserNavigationOptionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCourseGetUserNavigationOptionsRequestWithDefaults() *CoreCourseGetUserNavigationOptionsRequest {
	this := CoreCourseGetUserNavigationOptionsRequest{}
	return &this
}

// GetCourseids returns the Courseids field value
func (o *CoreCourseGetUserNavigationOptionsRequest) GetCourseids() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Courseids
}

// GetCourseidsOk returns a tuple with the Courseids field value
// and a boolean to check if the value has been set.
func (o *CoreCourseGetUserNavigationOptionsRequest) GetCourseidsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Courseids, true
}

// SetCourseids sets field value
func (o *CoreCourseGetUserNavigationOptionsRequest) SetCourseids(v []map[string]interface{}) {
	o.Courseids = v
}

func (o CoreCourseGetUserNavigationOptionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCourseGetUserNavigationOptionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["courseids"] = o.Courseids
	return toSerialize, nil
}

func (o *CoreCourseGetUserNavigationOptionsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"courseids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCourseGetUserNavigationOptionsRequest := _CoreCourseGetUserNavigationOptionsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCourseGetUserNavigationOptionsRequest)

	if err != nil {
		return err
	}

	*o = CoreCourseGetUserNavigationOptionsRequest(varCoreCourseGetUserNavigationOptionsRequest)

	return err
}

type NullableCoreCourseGetUserNavigationOptionsRequest struct {
	value *CoreCourseGetUserNavigationOptionsRequest
	isSet bool
}

func (v NullableCoreCourseGetUserNavigationOptionsRequest) Get() *CoreCourseGetUserNavigationOptionsRequest {
	return v.value
}

func (v *NullableCoreCourseGetUserNavigationOptionsRequest) Set(val *CoreCourseGetUserNavigationOptionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCourseGetUserNavigationOptionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCourseGetUserNavigationOptionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCourseGetUserNavigationOptionsRequest(val *CoreCourseGetUserNavigationOptionsRequest) *NullableCoreCourseGetUserNavigationOptionsRequest {
	return &NullableCoreCourseGetUserNavigationOptionsRequest{value: val, isSet: true}
}

func (v NullableCoreCourseGetUserNavigationOptionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCourseGetUserNavigationOptionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


