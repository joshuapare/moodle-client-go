/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the BlockIomadCompanyAdminUnassignUsersRequestUsersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockIomadCompanyAdminUnassignUsersRequestUsersInner{}

// BlockIomadCompanyAdminUnassignUsersRequestUsersInner struct for BlockIomadCompanyAdminUnassignUsersRequestUsersInner
type BlockIomadCompanyAdminUnassignUsersRequestUsersInner struct {
	// User company ID
	Companyid *int32 `json:"companyid,omitempty"`
	// User ID
	Userid *int32 `json:"userid,omitempty"`
	// Old user manager type
	Usertype *int32 `json:"usertype,omitempty"`
}

// NewBlockIomadCompanyAdminUnassignUsersRequestUsersInner instantiates a new BlockIomadCompanyAdminUnassignUsersRequestUsersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockIomadCompanyAdminUnassignUsersRequestUsersInner() *BlockIomadCompanyAdminUnassignUsersRequestUsersInner {
	this := BlockIomadCompanyAdminUnassignUsersRequestUsersInner{}
	var companyid int32 = 0
	this.Companyid = &companyid
	var userid int32 = 0
	this.Userid = &userid
	var usertype int32 = 0
	this.Usertype = &usertype
	return &this
}

// NewBlockIomadCompanyAdminUnassignUsersRequestUsersInnerWithDefaults instantiates a new BlockIomadCompanyAdminUnassignUsersRequestUsersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockIomadCompanyAdminUnassignUsersRequestUsersInnerWithDefaults() *BlockIomadCompanyAdminUnassignUsersRequestUsersInner {
	this := BlockIomadCompanyAdminUnassignUsersRequestUsersInner{}
	var companyid int32 = 0
	this.Companyid = &companyid
	var userid int32 = 0
	this.Userid = &userid
	var usertype int32 = 0
	this.Usertype = &usertype
	return &this
}

// GetCompanyid returns the Companyid field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) GetCompanyid() int32 {
	if o == nil || IsNil(o.Companyid) {
		var ret int32
		return ret
	}
	return *o.Companyid
}

// GetCompanyidOk returns a tuple with the Companyid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) GetCompanyidOk() (*int32, bool) {
	if o == nil || IsNil(o.Companyid) {
		return nil, false
	}
	return o.Companyid, true
}

// HasCompanyid returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) HasCompanyid() bool {
	if o != nil && !IsNil(o.Companyid) {
		return true
	}

	return false
}

// SetCompanyid gets a reference to the given int32 and assigns it to the Companyid field.
func (o *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) SetCompanyid(v int32) {
	o.Companyid = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) SetUserid(v int32) {
	o.Userid = &v
}

// GetUsertype returns the Usertype field value if set, zero value otherwise.
func (o *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) GetUsertype() int32 {
	if o == nil || IsNil(o.Usertype) {
		var ret int32
		return ret
	}
	return *o.Usertype
}

// GetUsertypeOk returns a tuple with the Usertype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) GetUsertypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Usertype) {
		return nil, false
	}
	return o.Usertype, true
}

// HasUsertype returns a boolean if a field has been set.
func (o *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) HasUsertype() bool {
	if o != nil && !IsNil(o.Usertype) {
		return true
	}

	return false
}

// SetUsertype gets a reference to the given int32 and assigns it to the Usertype field.
func (o *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) SetUsertype(v int32) {
	o.Usertype = &v
}

func (o BlockIomadCompanyAdminUnassignUsersRequestUsersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockIomadCompanyAdminUnassignUsersRequestUsersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Companyid) {
		toSerialize["companyid"] = o.Companyid
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	if !IsNil(o.Usertype) {
		toSerialize["usertype"] = o.Usertype
	}
	return toSerialize, nil
}

type NullableBlockIomadCompanyAdminUnassignUsersRequestUsersInner struct {
	value *BlockIomadCompanyAdminUnassignUsersRequestUsersInner
	isSet bool
}

func (v NullableBlockIomadCompanyAdminUnassignUsersRequestUsersInner) Get() *BlockIomadCompanyAdminUnassignUsersRequestUsersInner {
	return v.value
}

func (v *NullableBlockIomadCompanyAdminUnassignUsersRequestUsersInner) Set(val *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockIomadCompanyAdminUnassignUsersRequestUsersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockIomadCompanyAdminUnassignUsersRequestUsersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockIomadCompanyAdminUnassignUsersRequestUsersInner(val *BlockIomadCompanyAdminUnassignUsersRequestUsersInner) *NullableBlockIomadCompanyAdminUnassignUsersRequestUsersInner {
	return &NullableBlockIomadCompanyAdminUnassignUsersRequestUsersInner{value: val, isSet: true}
}

func (v NullableBlockIomadCompanyAdminUnassignUsersRequestUsersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockIomadCompanyAdminUnassignUsersRequestUsersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


