/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreFormGetFiletypesBrowserData200ResponseGroupsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreFormGetFiletypesBrowserData200ResponseGroupsInner{}

// CoreFormGetFiletypesBrowserData200ResponseGroupsInner struct for CoreFormGetFiletypesBrowserData200ResponseGroupsInner
type CoreFormGetFiletypesBrowserData200ResponseGroupsInner struct {
	// Should the group start as expanded or collapsed
	Expanded *bool `json:"expanded,omitempty"`
	// The list of file extensions associated with the group
	Ext *string `json:"ext,omitempty"`
	// The file type group identifier
	Key *string `json:"key,omitempty"`
	// The file type group name
	Name *string `json:"name,omitempty"`
	// Can it be marked as selected
	Selectable *bool `json:"selectable,omitempty"`
	// Should it be marked as selected
	Selected *bool `json:"selected,omitempty"`
	Types []CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInner `json:"types,omitempty"`
}

// NewCoreFormGetFiletypesBrowserData200ResponseGroupsInner instantiates a new CoreFormGetFiletypesBrowserData200ResponseGroupsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreFormGetFiletypesBrowserData200ResponseGroupsInner() *CoreFormGetFiletypesBrowserData200ResponseGroupsInner {
	this := CoreFormGetFiletypesBrowserData200ResponseGroupsInner{}
	var expanded bool = null
	this.Expanded = &expanded
	var ext string = "null"
	this.Ext = &ext
	var key string = "null"
	this.Key = &key
	var name string = "null"
	this.Name = &name
	var selectable bool = null
	this.Selectable = &selectable
	var selected bool = null
	this.Selected = &selected
	return &this
}

// NewCoreFormGetFiletypesBrowserData200ResponseGroupsInnerWithDefaults instantiates a new CoreFormGetFiletypesBrowserData200ResponseGroupsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreFormGetFiletypesBrowserData200ResponseGroupsInnerWithDefaults() *CoreFormGetFiletypesBrowserData200ResponseGroupsInner {
	this := CoreFormGetFiletypesBrowserData200ResponseGroupsInner{}
	var expanded bool = null
	this.Expanded = &expanded
	var ext string = "null"
	this.Ext = &ext
	var key string = "null"
	this.Key = &key
	var name string = "null"
	this.Name = &name
	var selectable bool = null
	this.Selectable = &selectable
	var selected bool = null
	this.Selected = &selected
	return &this
}

// GetExpanded returns the Expanded field value if set, zero value otherwise.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetExpanded() bool {
	if o == nil || IsNil(o.Expanded) {
		var ret bool
		return ret
	}
	return *o.Expanded
}

// GetExpandedOk returns a tuple with the Expanded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetExpandedOk() (*bool, bool) {
	if o == nil || IsNil(o.Expanded) {
		return nil, false
	}
	return o.Expanded, true
}

// HasExpanded returns a boolean if a field has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) HasExpanded() bool {
	if o != nil && !IsNil(o.Expanded) {
		return true
	}

	return false
}

// SetExpanded gets a reference to the given bool and assigns it to the Expanded field.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) SetExpanded(v bool) {
	o.Expanded = &v
}

// GetExt returns the Ext field value if set, zero value otherwise.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetExt() string {
	if o == nil || IsNil(o.Ext) {
		var ret string
		return ret
	}
	return *o.Ext
}

// GetExtOk returns a tuple with the Ext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetExtOk() (*string, bool) {
	if o == nil || IsNil(o.Ext) {
		return nil, false
	}
	return o.Ext, true
}

// HasExt returns a boolean if a field has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) HasExt() bool {
	if o != nil && !IsNil(o.Ext) {
		return true
	}

	return false
}

// SetExt gets a reference to the given string and assigns it to the Ext field.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) SetExt(v string) {
	o.Ext = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) SetName(v string) {
	o.Name = &v
}

// GetSelectable returns the Selectable field value if set, zero value otherwise.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetSelectable() bool {
	if o == nil || IsNil(o.Selectable) {
		var ret bool
		return ret
	}
	return *o.Selectable
}

// GetSelectableOk returns a tuple with the Selectable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetSelectableOk() (*bool, bool) {
	if o == nil || IsNil(o.Selectable) {
		return nil, false
	}
	return o.Selectable, true
}

// HasSelectable returns a boolean if a field has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) HasSelectable() bool {
	if o != nil && !IsNil(o.Selectable) {
		return true
	}

	return false
}

// SetSelectable gets a reference to the given bool and assigns it to the Selectable field.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) SetSelectable(v bool) {
	o.Selectable = &v
}

// GetSelected returns the Selected field value if set, zero value otherwise.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetSelected() bool {
	if o == nil || IsNil(o.Selected) {
		var ret bool
		return ret
	}
	return *o.Selected
}

// GetSelectedOk returns a tuple with the Selected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetSelectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Selected) {
		return nil, false
	}
	return o.Selected, true
}

// HasSelected returns a boolean if a field has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) HasSelected() bool {
	if o != nil && !IsNil(o.Selected) {
		return true
	}

	return false
}

// SetSelected gets a reference to the given bool and assigns it to the Selected field.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) SetSelected(v bool) {
	o.Selected = &v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetTypes() []CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInner {
	if o == nil || IsNil(o.Types) {
		var ret []CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInner
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) GetTypesOk() ([]CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInner, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInner and assigns it to the Types field.
func (o *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) SetTypes(v []CoreFormGetFiletypesBrowserData200ResponseGroupsInnerTypesInner) {
	o.Types = v
}

func (o CoreFormGetFiletypesBrowserData200ResponseGroupsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreFormGetFiletypesBrowserData200ResponseGroupsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Expanded) {
		toSerialize["expanded"] = o.Expanded
	}
	if !IsNil(o.Ext) {
		toSerialize["ext"] = o.Ext
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Selectable) {
		toSerialize["selectable"] = o.Selectable
	}
	if !IsNil(o.Selected) {
		toSerialize["selected"] = o.Selected
	}
	if !IsNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	return toSerialize, nil
}

type NullableCoreFormGetFiletypesBrowserData200ResponseGroupsInner struct {
	value *CoreFormGetFiletypesBrowserData200ResponseGroupsInner
	isSet bool
}

func (v NullableCoreFormGetFiletypesBrowserData200ResponseGroupsInner) Get() *CoreFormGetFiletypesBrowserData200ResponseGroupsInner {
	return v.value
}

func (v *NullableCoreFormGetFiletypesBrowserData200ResponseGroupsInner) Set(val *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreFormGetFiletypesBrowserData200ResponseGroupsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreFormGetFiletypesBrowserData200ResponseGroupsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreFormGetFiletypesBrowserData200ResponseGroupsInner(val *CoreFormGetFiletypesBrowserData200ResponseGroupsInner) *NullableCoreFormGetFiletypesBrowserData200ResponseGroupsInner {
	return &NullableCoreFormGetFiletypesBrowserData200ResponseGroupsInner{value: val, isSet: true}
}

func (v NullableCoreFormGetFiletypesBrowserData200ResponseGroupsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreFormGetFiletypesBrowserData200ResponseGroupsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


