/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreReportbuilderColumnsSortReorderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreReportbuilderColumnsSortReorderRequest{}

// CoreReportbuilderColumnsSortReorderRequest struct for CoreReportbuilderColumnsSortReorderRequest
type CoreReportbuilderColumnsSortReorderRequest struct {
	// Column ID
	Columnid int32 `json:"columnid"`
	// New column sort position
	Position int32 `json:"position"`
	// Report ID
	Reportid int32 `json:"reportid"`
}

type _CoreReportbuilderColumnsSortReorderRequest CoreReportbuilderColumnsSortReorderRequest

// NewCoreReportbuilderColumnsSortReorderRequest instantiates a new CoreReportbuilderColumnsSortReorderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreReportbuilderColumnsSortReorderRequest(columnid int32, position int32, reportid int32) *CoreReportbuilderColumnsSortReorderRequest {
	this := CoreReportbuilderColumnsSortReorderRequest{}
	this.Columnid = columnid
	this.Position = position
	this.Reportid = reportid
	return &this
}

// NewCoreReportbuilderColumnsSortReorderRequestWithDefaults instantiates a new CoreReportbuilderColumnsSortReorderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreReportbuilderColumnsSortReorderRequestWithDefaults() *CoreReportbuilderColumnsSortReorderRequest {
	this := CoreReportbuilderColumnsSortReorderRequest{}
	var position int32 = null
	this.Position = position
	return &this
}

// GetColumnid returns the Columnid field value
func (o *CoreReportbuilderColumnsSortReorderRequest) GetColumnid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Columnid
}

// GetColumnidOk returns a tuple with the Columnid field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderColumnsSortReorderRequest) GetColumnidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Columnid, true
}

// SetColumnid sets field value
func (o *CoreReportbuilderColumnsSortReorderRequest) SetColumnid(v int32) {
	o.Columnid = v
}

// GetPosition returns the Position field value
func (o *CoreReportbuilderColumnsSortReorderRequest) GetPosition() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderColumnsSortReorderRequest) GetPositionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *CoreReportbuilderColumnsSortReorderRequest) SetPosition(v int32) {
	o.Position = v
}

// GetReportid returns the Reportid field value
func (o *CoreReportbuilderColumnsSortReorderRequest) GetReportid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Reportid
}

// GetReportidOk returns a tuple with the Reportid field value
// and a boolean to check if the value has been set.
func (o *CoreReportbuilderColumnsSortReorderRequest) GetReportidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reportid, true
}

// SetReportid sets field value
func (o *CoreReportbuilderColumnsSortReorderRequest) SetReportid(v int32) {
	o.Reportid = v
}

func (o CoreReportbuilderColumnsSortReorderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreReportbuilderColumnsSortReorderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["columnid"] = o.Columnid
	toSerialize["position"] = o.Position
	toSerialize["reportid"] = o.Reportid
	return toSerialize, nil
}

func (o *CoreReportbuilderColumnsSortReorderRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"columnid",
		"position",
		"reportid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreReportbuilderColumnsSortReorderRequest := _CoreReportbuilderColumnsSortReorderRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreReportbuilderColumnsSortReorderRequest)

	if err != nil {
		return err
	}

	*o = CoreReportbuilderColumnsSortReorderRequest(varCoreReportbuilderColumnsSortReorderRequest)

	return err
}

type NullableCoreReportbuilderColumnsSortReorderRequest struct {
	value *CoreReportbuilderColumnsSortReorderRequest
	isSet bool
}

func (v NullableCoreReportbuilderColumnsSortReorderRequest) Get() *CoreReportbuilderColumnsSortReorderRequest {
	return v.value
}

func (v *NullableCoreReportbuilderColumnsSortReorderRequest) Set(val *CoreReportbuilderColumnsSortReorderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreReportbuilderColumnsSortReorderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreReportbuilderColumnsSortReorderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreReportbuilderColumnsSortReorderRequest(val *CoreReportbuilderColumnsSortReorderRequest) *NullableCoreReportbuilderColumnsSortReorderRequest {
	return &NullableCoreReportbuilderColumnsSortReorderRequest{value: val, isSet: true}
}

func (v NullableCoreReportbuilderColumnsSortReorderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreReportbuilderColumnsSortReorderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


