/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreBlogViewEntriesRequestFiltersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreBlogViewEntriesRequestFiltersInner{}

// CoreBlogViewEntriesRequestFiltersInner struct for CoreBlogViewEntriesRequestFiltersInner
type CoreBlogViewEntriesRequestFiltersInner struct {
	// The expected keys (value format) are:                                 tag      PARAM_NOTAGS blog tag                                 tagid    PARAM_INT    blog tag id                                 userid   PARAM_INT    blog author (userid)                                 cmid     PARAM_INT    course module id                                 entryid  PARAM_INT    entry id                                 groupid  PARAM_INT    group id                                 courseid PARAM_INT    course id                                 search   PARAM_RAW    search term                                 
	Name *string `json:"name,omitempty"`
	// The value of the filter.
	Value *string `json:"value,omitempty"`
}

// NewCoreBlogViewEntriesRequestFiltersInner instantiates a new CoreBlogViewEntriesRequestFiltersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreBlogViewEntriesRequestFiltersInner() *CoreBlogViewEntriesRequestFiltersInner {
	this := CoreBlogViewEntriesRequestFiltersInner{}
	var name string = "null"
	this.Name = &name
	return &this
}

// NewCoreBlogViewEntriesRequestFiltersInnerWithDefaults instantiates a new CoreBlogViewEntriesRequestFiltersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreBlogViewEntriesRequestFiltersInnerWithDefaults() *CoreBlogViewEntriesRequestFiltersInner {
	this := CoreBlogViewEntriesRequestFiltersInner{}
	var name string = "null"
	this.Name = &name
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreBlogViewEntriesRequestFiltersInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreBlogViewEntriesRequestFiltersInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreBlogViewEntriesRequestFiltersInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreBlogViewEntriesRequestFiltersInner) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CoreBlogViewEntriesRequestFiltersInner) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreBlogViewEntriesRequestFiltersInner) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CoreBlogViewEntriesRequestFiltersInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *CoreBlogViewEntriesRequestFiltersInner) SetValue(v string) {
	o.Value = &v
}

func (o CoreBlogViewEntriesRequestFiltersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreBlogViewEntriesRequestFiltersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableCoreBlogViewEntriesRequestFiltersInner struct {
	value *CoreBlogViewEntriesRequestFiltersInner
	isSet bool
}

func (v NullableCoreBlogViewEntriesRequestFiltersInner) Get() *CoreBlogViewEntriesRequestFiltersInner {
	return v.value
}

func (v *NullableCoreBlogViewEntriesRequestFiltersInner) Set(val *CoreBlogViewEntriesRequestFiltersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreBlogViewEntriesRequestFiltersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreBlogViewEntriesRequestFiltersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreBlogViewEntriesRequestFiltersInner(val *CoreBlogViewEntriesRequestFiltersInner) *NullableCoreBlogViewEntriesRequestFiltersInner {
	return &NullableCoreBlogViewEntriesRequestFiltersInner{value: val, isSet: true}
}

func (v NullableCoreBlogViewEntriesRequestFiltersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreBlogViewEntriesRequestFiltersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


