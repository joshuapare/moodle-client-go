/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCourseDuplicateCourseRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCourseDuplicateCourseRequest{}

// CoreCourseDuplicateCourseRequest struct for CoreCourseDuplicateCourseRequest
type CoreCourseDuplicateCourseRequest struct {
	// duplicated course category parent
	Categoryid int32 `json:"categoryid"`
	// course to duplicate id
	Courseid int32 `json:"courseid"`
	// duplicated course full name
	Fullname string `json:"fullname"`
	Options []CoreCourseDuplicateCourseRequestOptionsInner `json:"options,omitempty"`
	// duplicated course short name
	Shortname string `json:"shortname"`
	// duplicated course visible, default to yes
	Visible *int32 `json:"visible,omitempty"`
}

type _CoreCourseDuplicateCourseRequest CoreCourseDuplicateCourseRequest

// NewCoreCourseDuplicateCourseRequest instantiates a new CoreCourseDuplicateCourseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCourseDuplicateCourseRequest(categoryid int32, courseid int32, fullname string, shortname string) *CoreCourseDuplicateCourseRequest {
	this := CoreCourseDuplicateCourseRequest{}
	this.Categoryid = categoryid
	this.Courseid = courseid
	this.Fullname = fullname
	this.Shortname = shortname
	var visible int32 = 1
	this.Visible = &visible
	return &this
}

// NewCoreCourseDuplicateCourseRequestWithDefaults instantiates a new CoreCourseDuplicateCourseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCourseDuplicateCourseRequestWithDefaults() *CoreCourseDuplicateCourseRequest {
	this := CoreCourseDuplicateCourseRequest{}
	var categoryid int32 = null
	this.Categoryid = categoryid
	var courseid int32 = null
	this.Courseid = courseid
	var fullname string = "null"
	this.Fullname = fullname
	var shortname string = "null"
	this.Shortname = shortname
	var visible int32 = 1
	this.Visible = &visible
	return &this
}

// GetCategoryid returns the Categoryid field value
func (o *CoreCourseDuplicateCourseRequest) GetCategoryid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Categoryid
}

// GetCategoryidOk returns a tuple with the Categoryid field value
// and a boolean to check if the value has been set.
func (o *CoreCourseDuplicateCourseRequest) GetCategoryidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Categoryid, true
}

// SetCategoryid sets field value
func (o *CoreCourseDuplicateCourseRequest) SetCategoryid(v int32) {
	o.Categoryid = v
}

// GetCourseid returns the Courseid field value
func (o *CoreCourseDuplicateCourseRequest) GetCourseid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Courseid
}

// GetCourseidOk returns a tuple with the Courseid field value
// and a boolean to check if the value has been set.
func (o *CoreCourseDuplicateCourseRequest) GetCourseidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Courseid, true
}

// SetCourseid sets field value
func (o *CoreCourseDuplicateCourseRequest) SetCourseid(v int32) {
	o.Courseid = v
}

// GetFullname returns the Fullname field value
func (o *CoreCourseDuplicateCourseRequest) GetFullname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Fullname
}

// GetFullnameOk returns a tuple with the Fullname field value
// and a boolean to check if the value has been set.
func (o *CoreCourseDuplicateCourseRequest) GetFullnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fullname, true
}

// SetFullname sets field value
func (o *CoreCourseDuplicateCourseRequest) SetFullname(v string) {
	o.Fullname = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CoreCourseDuplicateCourseRequest) GetOptions() []CoreCourseDuplicateCourseRequestOptionsInner {
	if o == nil || IsNil(o.Options) {
		var ret []CoreCourseDuplicateCourseRequestOptionsInner
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseDuplicateCourseRequest) GetOptionsOk() ([]CoreCourseDuplicateCourseRequestOptionsInner, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *CoreCourseDuplicateCourseRequest) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []CoreCourseDuplicateCourseRequestOptionsInner and assigns it to the Options field.
func (o *CoreCourseDuplicateCourseRequest) SetOptions(v []CoreCourseDuplicateCourseRequestOptionsInner) {
	o.Options = v
}

// GetShortname returns the Shortname field value
func (o *CoreCourseDuplicateCourseRequest) GetShortname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Shortname
}

// GetShortnameOk returns a tuple with the Shortname field value
// and a boolean to check if the value has been set.
func (o *CoreCourseDuplicateCourseRequest) GetShortnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Shortname, true
}

// SetShortname sets field value
func (o *CoreCourseDuplicateCourseRequest) SetShortname(v string) {
	o.Shortname = v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *CoreCourseDuplicateCourseRequest) GetVisible() int32 {
	if o == nil || IsNil(o.Visible) {
		var ret int32
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseDuplicateCourseRequest) GetVisibleOk() (*int32, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *CoreCourseDuplicateCourseRequest) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given int32 and assigns it to the Visible field.
func (o *CoreCourseDuplicateCourseRequest) SetVisible(v int32) {
	o.Visible = &v
}

func (o CoreCourseDuplicateCourseRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCourseDuplicateCourseRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["categoryid"] = o.Categoryid
	toSerialize["courseid"] = o.Courseid
	toSerialize["fullname"] = o.Fullname
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	toSerialize["shortname"] = o.Shortname
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	return toSerialize, nil
}

func (o *CoreCourseDuplicateCourseRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"categoryid",
		"courseid",
		"fullname",
		"shortname",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCourseDuplicateCourseRequest := _CoreCourseDuplicateCourseRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCourseDuplicateCourseRequest)

	if err != nil {
		return err
	}

	*o = CoreCourseDuplicateCourseRequest(varCoreCourseDuplicateCourseRequest)

	return err
}

type NullableCoreCourseDuplicateCourseRequest struct {
	value *CoreCourseDuplicateCourseRequest
	isSet bool
}

func (v NullableCoreCourseDuplicateCourseRequest) Get() *CoreCourseDuplicateCourseRequest {
	return v.value
}

func (v *NullableCoreCourseDuplicateCourseRequest) Set(val *CoreCourseDuplicateCourseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCourseDuplicateCourseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCourseDuplicateCourseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCourseDuplicateCourseRequest(val *CoreCourseDuplicateCourseRequest) *NullableCoreCourseDuplicateCourseRequest {
	return &NullableCoreCourseDuplicateCourseRequest{value: val, isSet: true}
}

func (v NullableCoreCourseDuplicateCourseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCourseDuplicateCourseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


