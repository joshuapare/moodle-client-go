/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModWorkshopUpdateAssessmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModWorkshopUpdateAssessmentRequest{}

// ModWorkshopUpdateAssessmentRequest struct for ModWorkshopUpdateAssessmentRequest
type ModWorkshopUpdateAssessmentRequest struct {
	// Assessment id.
	Assessmentid int32 `json:"assessmentid"`
	Data []ModWorkshopUpdateAssessmentRequestDataInner `json:"data"`
}

type _ModWorkshopUpdateAssessmentRequest ModWorkshopUpdateAssessmentRequest

// NewModWorkshopUpdateAssessmentRequest instantiates a new ModWorkshopUpdateAssessmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModWorkshopUpdateAssessmentRequest(assessmentid int32, data []ModWorkshopUpdateAssessmentRequestDataInner) *ModWorkshopUpdateAssessmentRequest {
	this := ModWorkshopUpdateAssessmentRequest{}
	this.Assessmentid = assessmentid
	this.Data = data
	return &this
}

// NewModWorkshopUpdateAssessmentRequestWithDefaults instantiates a new ModWorkshopUpdateAssessmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModWorkshopUpdateAssessmentRequestWithDefaults() *ModWorkshopUpdateAssessmentRequest {
	this := ModWorkshopUpdateAssessmentRequest{}
	return &this
}

// GetAssessmentid returns the Assessmentid field value
func (o *ModWorkshopUpdateAssessmentRequest) GetAssessmentid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Assessmentid
}

// GetAssessmentidOk returns a tuple with the Assessmentid field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopUpdateAssessmentRequest) GetAssessmentidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assessmentid, true
}

// SetAssessmentid sets field value
func (o *ModWorkshopUpdateAssessmentRequest) SetAssessmentid(v int32) {
	o.Assessmentid = v
}

// GetData returns the Data field value
func (o *ModWorkshopUpdateAssessmentRequest) GetData() []ModWorkshopUpdateAssessmentRequestDataInner {
	if o == nil {
		var ret []ModWorkshopUpdateAssessmentRequestDataInner
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopUpdateAssessmentRequest) GetDataOk() ([]ModWorkshopUpdateAssessmentRequestDataInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ModWorkshopUpdateAssessmentRequest) SetData(v []ModWorkshopUpdateAssessmentRequestDataInner) {
	o.Data = v
}

func (o ModWorkshopUpdateAssessmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModWorkshopUpdateAssessmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["assessmentid"] = o.Assessmentid
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

func (o *ModWorkshopUpdateAssessmentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"assessmentid",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModWorkshopUpdateAssessmentRequest := _ModWorkshopUpdateAssessmentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModWorkshopUpdateAssessmentRequest)

	if err != nil {
		return err
	}

	*o = ModWorkshopUpdateAssessmentRequest(varModWorkshopUpdateAssessmentRequest)

	return err
}

type NullableModWorkshopUpdateAssessmentRequest struct {
	value *ModWorkshopUpdateAssessmentRequest
	isSet bool
}

func (v NullableModWorkshopUpdateAssessmentRequest) Get() *ModWorkshopUpdateAssessmentRequest {
	return v.value
}

func (v *NullableModWorkshopUpdateAssessmentRequest) Set(val *ModWorkshopUpdateAssessmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModWorkshopUpdateAssessmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModWorkshopUpdateAssessmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModWorkshopUpdateAssessmentRequest(val *ModWorkshopUpdateAssessmentRequest) *NullableModWorkshopUpdateAssessmentRequest {
	return &NullableModWorkshopUpdateAssessmentRequest{value: val, isSet: true}
}

func (v NullableModWorkshopUpdateAssessmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModWorkshopUpdateAssessmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


