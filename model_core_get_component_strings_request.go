/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreGetComponentStringsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreGetComponentStringsRequest{}

// CoreGetComponentStringsRequest struct for CoreGetComponentStringsRequest
type CoreGetComponentStringsRequest struct {
	// component
	Component string `json:"component"`
	// lang
	Lang *string `json:"lang,omitempty"`
}

type _CoreGetComponentStringsRequest CoreGetComponentStringsRequest

// NewCoreGetComponentStringsRequest instantiates a new CoreGetComponentStringsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreGetComponentStringsRequest(component string) *CoreGetComponentStringsRequest {
	this := CoreGetComponentStringsRequest{}
	this.Component = component
	var lang string = "null"
	this.Lang = &lang
	return &this
}

// NewCoreGetComponentStringsRequestWithDefaults instantiates a new CoreGetComponentStringsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreGetComponentStringsRequestWithDefaults() *CoreGetComponentStringsRequest {
	this := CoreGetComponentStringsRequest{}
	var lang string = "null"
	this.Lang = &lang
	return &this
}

// GetComponent returns the Component field value
func (o *CoreGetComponentStringsRequest) GetComponent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Component
}

// GetComponentOk returns a tuple with the Component field value
// and a boolean to check if the value has been set.
func (o *CoreGetComponentStringsRequest) GetComponentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Component, true
}

// SetComponent sets field value
func (o *CoreGetComponentStringsRequest) SetComponent(v string) {
	o.Component = v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *CoreGetComponentStringsRequest) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGetComponentStringsRequest) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *CoreGetComponentStringsRequest) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *CoreGetComponentStringsRequest) SetLang(v string) {
	o.Lang = &v
}

func (o CoreGetComponentStringsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreGetComponentStringsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["component"] = o.Component
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	return toSerialize, nil
}

func (o *CoreGetComponentStringsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"component",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreGetComponentStringsRequest := _CoreGetComponentStringsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreGetComponentStringsRequest)

	if err != nil {
		return err
	}

	*o = CoreGetComponentStringsRequest(varCoreGetComponentStringsRequest)

	return err
}

type NullableCoreGetComponentStringsRequest struct {
	value *CoreGetComponentStringsRequest
	isSet bool
}

func (v NullableCoreGetComponentStringsRequest) Get() *CoreGetComponentStringsRequest {
	return v.value
}

func (v *NullableCoreGetComponentStringsRequest) Set(val *CoreGetComponentStringsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreGetComponentStringsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreGetComponentStringsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreGetComponentStringsRequest(val *CoreGetComponentStringsRequest) *NullableCoreGetComponentStringsRequest {
	return &NullableCoreGetComponentStringsRequest{value: val, isSet: true}
}

func (v NullableCoreGetComponentStringsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreGetComponentStringsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


