/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModQuizGetAttemptData200ResponseAttempt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModQuizGetAttemptData200ResponseAttempt{}

// ModQuizGetAttemptData200ResponseAttempt struct for ModQuizGetAttemptData200ResponseAttempt
type ModQuizGetAttemptData200ResponseAttempt struct {
	// Sequentially numbers this students attempts at this quiz.
	Attempt *int32 `json:"attempt,omitempty"`
	// Attempt current page.
	Currentpage *int32 `json:"currentpage,omitempty"`
	// Time when the student was notified that manual grading of their attempt was complete.
	Gradednotificationsenttime *int32 `json:"gradednotificationsenttime,omitempty"`
	// Attempt id.
	Id *int32 `json:"id,omitempty"`
	// Attempt layout.
	Layout *string `json:"layout,omitempty"`
	// Whether is a preview attempt or not.
	Preview *int32 `json:"preview,omitempty"`
	// Foreign key reference to the quiz that was attempted.
	Quiz *int32 `json:"quiz,omitempty"`
	// The current state of the attempts. 'inprogress',                                                 'overdue', 'finished' or 'abandoned'.
	State *string `json:"state,omitempty"`
	// Total marks for this attempt.
	Sumgrades *float32 `json:"sumgrades,omitempty"`
	// Next time quiz cron should check attempt for                                                         state changes.  NULL means never check.
	Timecheckstate *int32 `json:"timecheckstate,omitempty"`
	// Time when the attempt was submitted.                                                     0 if the attempt has not been submitted yet.
	Timefinish *int32 `json:"timefinish,omitempty"`
	// Last modified time.
	Timemodified *int32 `json:"timemodified,omitempty"`
	// Last modified time via webservices.
	Timemodifiedoffline *int32 `json:"timemodifiedoffline,omitempty"`
	// Time when the attempt was started.
	Timestart *int32 `json:"timestart,omitempty"`
	// Foreign key reference to the question_usage that holds the                                                     details of the the question_attempts that make up this quiz                                                     attempt.
	Uniqueid *int32 `json:"uniqueid,omitempty"`
	// Foreign key reference to the user whose attempt this is.
	Userid *int32 `json:"userid,omitempty"`
}

// NewModQuizGetAttemptData200ResponseAttempt instantiates a new ModQuizGetAttemptData200ResponseAttempt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModQuizGetAttemptData200ResponseAttempt() *ModQuizGetAttemptData200ResponseAttempt {
	this := ModQuizGetAttemptData200ResponseAttempt{}
	var attempt int32 = null
	this.Attempt = &attempt
	var currentpage int32 = null
	this.Currentpage = &currentpage
	var gradednotificationsenttime int32 = null
	this.Gradednotificationsenttime = &gradednotificationsenttime
	var id int32 = null
	this.Id = &id
	var layout string = "null"
	this.Layout = &layout
	var preview int32 = null
	this.Preview = &preview
	var quiz int32 = null
	this.Quiz = &quiz
	var state string = "null"
	this.State = &state
	var sumgrades float32 = null
	this.Sumgrades = &sumgrades
	var timecheckstate int32 = null
	this.Timecheckstate = &timecheckstate
	var timefinish int32 = null
	this.Timefinish = &timefinish
	var timemodified int32 = null
	this.Timemodified = &timemodified
	var timestart int32 = null
	this.Timestart = &timestart
	var uniqueid int32 = null
	this.Uniqueid = &uniqueid
	var userid int32 = null
	this.Userid = &userid
	return &this
}

// NewModQuizGetAttemptData200ResponseAttemptWithDefaults instantiates a new ModQuizGetAttemptData200ResponseAttempt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModQuizGetAttemptData200ResponseAttemptWithDefaults() *ModQuizGetAttemptData200ResponseAttempt {
	this := ModQuizGetAttemptData200ResponseAttempt{}
	var attempt int32 = null
	this.Attempt = &attempt
	var currentpage int32 = null
	this.Currentpage = &currentpage
	var gradednotificationsenttime int32 = null
	this.Gradednotificationsenttime = &gradednotificationsenttime
	var id int32 = null
	this.Id = &id
	var layout string = "null"
	this.Layout = &layout
	var preview int32 = null
	this.Preview = &preview
	var quiz int32 = null
	this.Quiz = &quiz
	var state string = "null"
	this.State = &state
	var sumgrades float32 = null
	this.Sumgrades = &sumgrades
	var timecheckstate int32 = null
	this.Timecheckstate = &timecheckstate
	var timefinish int32 = null
	this.Timefinish = &timefinish
	var timemodified int32 = null
	this.Timemodified = &timemodified
	var timestart int32 = null
	this.Timestart = &timestart
	var uniqueid int32 = null
	this.Uniqueid = &uniqueid
	var userid int32 = null
	this.Userid = &userid
	return &this
}

// GetAttempt returns the Attempt field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetAttempt() int32 {
	if o == nil || IsNil(o.Attempt) {
		var ret int32
		return ret
	}
	return *o.Attempt
}

// GetAttemptOk returns a tuple with the Attempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetAttemptOk() (*int32, bool) {
	if o == nil || IsNil(o.Attempt) {
		return nil, false
	}
	return o.Attempt, true
}

// HasAttempt returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasAttempt() bool {
	if o != nil && !IsNil(o.Attempt) {
		return true
	}

	return false
}

// SetAttempt gets a reference to the given int32 and assigns it to the Attempt field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetAttempt(v int32) {
	o.Attempt = &v
}

// GetCurrentpage returns the Currentpage field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetCurrentpage() int32 {
	if o == nil || IsNil(o.Currentpage) {
		var ret int32
		return ret
	}
	return *o.Currentpage
}

// GetCurrentpageOk returns a tuple with the Currentpage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetCurrentpageOk() (*int32, bool) {
	if o == nil || IsNil(o.Currentpage) {
		return nil, false
	}
	return o.Currentpage, true
}

// HasCurrentpage returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasCurrentpage() bool {
	if o != nil && !IsNil(o.Currentpage) {
		return true
	}

	return false
}

// SetCurrentpage gets a reference to the given int32 and assigns it to the Currentpage field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetCurrentpage(v int32) {
	o.Currentpage = &v
}

// GetGradednotificationsenttime returns the Gradednotificationsenttime field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetGradednotificationsenttime() int32 {
	if o == nil || IsNil(o.Gradednotificationsenttime) {
		var ret int32
		return ret
	}
	return *o.Gradednotificationsenttime
}

// GetGradednotificationsenttimeOk returns a tuple with the Gradednotificationsenttime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetGradednotificationsenttimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Gradednotificationsenttime) {
		return nil, false
	}
	return o.Gradednotificationsenttime, true
}

// HasGradednotificationsenttime returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasGradednotificationsenttime() bool {
	if o != nil && !IsNil(o.Gradednotificationsenttime) {
		return true
	}

	return false
}

// SetGradednotificationsenttime gets a reference to the given int32 and assigns it to the Gradednotificationsenttime field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetGradednotificationsenttime(v int32) {
	o.Gradednotificationsenttime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetId(v int32) {
	o.Id = &v
}

// GetLayout returns the Layout field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetLayout() string {
	if o == nil || IsNil(o.Layout) {
		var ret string
		return ret
	}
	return *o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetLayoutOk() (*string, bool) {
	if o == nil || IsNil(o.Layout) {
		return nil, false
	}
	return o.Layout, true
}

// HasLayout returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasLayout() bool {
	if o != nil && !IsNil(o.Layout) {
		return true
	}

	return false
}

// SetLayout gets a reference to the given string and assigns it to the Layout field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetLayout(v string) {
	o.Layout = &v
}

// GetPreview returns the Preview field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetPreview() int32 {
	if o == nil || IsNil(o.Preview) {
		var ret int32
		return ret
	}
	return *o.Preview
}

// GetPreviewOk returns a tuple with the Preview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetPreviewOk() (*int32, bool) {
	if o == nil || IsNil(o.Preview) {
		return nil, false
	}
	return o.Preview, true
}

// HasPreview returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasPreview() bool {
	if o != nil && !IsNil(o.Preview) {
		return true
	}

	return false
}

// SetPreview gets a reference to the given int32 and assigns it to the Preview field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetPreview(v int32) {
	o.Preview = &v
}

// GetQuiz returns the Quiz field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetQuiz() int32 {
	if o == nil || IsNil(o.Quiz) {
		var ret int32
		return ret
	}
	return *o.Quiz
}

// GetQuizOk returns a tuple with the Quiz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetQuizOk() (*int32, bool) {
	if o == nil || IsNil(o.Quiz) {
		return nil, false
	}
	return o.Quiz, true
}

// HasQuiz returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasQuiz() bool {
	if o != nil && !IsNil(o.Quiz) {
		return true
	}

	return false
}

// SetQuiz gets a reference to the given int32 and assigns it to the Quiz field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetQuiz(v int32) {
	o.Quiz = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetState(v string) {
	o.State = &v
}

// GetSumgrades returns the Sumgrades field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetSumgrades() float32 {
	if o == nil || IsNil(o.Sumgrades) {
		var ret float32
		return ret
	}
	return *o.Sumgrades
}

// GetSumgradesOk returns a tuple with the Sumgrades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetSumgradesOk() (*float32, bool) {
	if o == nil || IsNil(o.Sumgrades) {
		return nil, false
	}
	return o.Sumgrades, true
}

// HasSumgrades returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasSumgrades() bool {
	if o != nil && !IsNil(o.Sumgrades) {
		return true
	}

	return false
}

// SetSumgrades gets a reference to the given float32 and assigns it to the Sumgrades field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetSumgrades(v float32) {
	o.Sumgrades = &v
}

// GetTimecheckstate returns the Timecheckstate field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetTimecheckstate() int32 {
	if o == nil || IsNil(o.Timecheckstate) {
		var ret int32
		return ret
	}
	return *o.Timecheckstate
}

// GetTimecheckstateOk returns a tuple with the Timecheckstate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetTimecheckstateOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecheckstate) {
		return nil, false
	}
	return o.Timecheckstate, true
}

// HasTimecheckstate returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasTimecheckstate() bool {
	if o != nil && !IsNil(o.Timecheckstate) {
		return true
	}

	return false
}

// SetTimecheckstate gets a reference to the given int32 and assigns it to the Timecheckstate field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetTimecheckstate(v int32) {
	o.Timecheckstate = &v
}

// GetTimefinish returns the Timefinish field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetTimefinish() int32 {
	if o == nil || IsNil(o.Timefinish) {
		var ret int32
		return ret
	}
	return *o.Timefinish
}

// GetTimefinishOk returns a tuple with the Timefinish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetTimefinishOk() (*int32, bool) {
	if o == nil || IsNil(o.Timefinish) {
		return nil, false
	}
	return o.Timefinish, true
}

// HasTimefinish returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasTimefinish() bool {
	if o != nil && !IsNil(o.Timefinish) {
		return true
	}

	return false
}

// SetTimefinish gets a reference to the given int32 and assigns it to the Timefinish field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetTimefinish(v int32) {
	o.Timefinish = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetTimemodifiedoffline returns the Timemodifiedoffline field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetTimemodifiedoffline() int32 {
	if o == nil || IsNil(o.Timemodifiedoffline) {
		var ret int32
		return ret
	}
	return *o.Timemodifiedoffline
}

// GetTimemodifiedofflineOk returns a tuple with the Timemodifiedoffline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetTimemodifiedofflineOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodifiedoffline) {
		return nil, false
	}
	return o.Timemodifiedoffline, true
}

// HasTimemodifiedoffline returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasTimemodifiedoffline() bool {
	if o != nil && !IsNil(o.Timemodifiedoffline) {
		return true
	}

	return false
}

// SetTimemodifiedoffline gets a reference to the given int32 and assigns it to the Timemodifiedoffline field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetTimemodifiedoffline(v int32) {
	o.Timemodifiedoffline = &v
}

// GetTimestart returns the Timestart field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetTimestart() int32 {
	if o == nil || IsNil(o.Timestart) {
		var ret int32
		return ret
	}
	return *o.Timestart
}

// GetTimestartOk returns a tuple with the Timestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetTimestartOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestart) {
		return nil, false
	}
	return o.Timestart, true
}

// HasTimestart returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasTimestart() bool {
	if o != nil && !IsNil(o.Timestart) {
		return true
	}

	return false
}

// SetTimestart gets a reference to the given int32 and assigns it to the Timestart field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetTimestart(v int32) {
	o.Timestart = &v
}

// GetUniqueid returns the Uniqueid field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetUniqueid() int32 {
	if o == nil || IsNil(o.Uniqueid) {
		var ret int32
		return ret
	}
	return *o.Uniqueid
}

// GetUniqueidOk returns a tuple with the Uniqueid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetUniqueidOk() (*int32, bool) {
	if o == nil || IsNil(o.Uniqueid) {
		return nil, false
	}
	return o.Uniqueid, true
}

// HasUniqueid returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasUniqueid() bool {
	if o != nil && !IsNil(o.Uniqueid) {
		return true
	}

	return false
}

// SetUniqueid gets a reference to the given int32 and assigns it to the Uniqueid field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetUniqueid(v int32) {
	o.Uniqueid = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *ModQuizGetAttemptData200ResponseAttempt) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *ModQuizGetAttemptData200ResponseAttempt) SetUserid(v int32) {
	o.Userid = &v
}

func (o ModQuizGetAttemptData200ResponseAttempt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModQuizGetAttemptData200ResponseAttempt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attempt) {
		toSerialize["attempt"] = o.Attempt
	}
	if !IsNil(o.Currentpage) {
		toSerialize["currentpage"] = o.Currentpage
	}
	if !IsNil(o.Gradednotificationsenttime) {
		toSerialize["gradednotificationsenttime"] = o.Gradednotificationsenttime
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Layout) {
		toSerialize["layout"] = o.Layout
	}
	if !IsNil(o.Preview) {
		toSerialize["preview"] = o.Preview
	}
	if !IsNil(o.Quiz) {
		toSerialize["quiz"] = o.Quiz
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Sumgrades) {
		toSerialize["sumgrades"] = o.Sumgrades
	}
	if !IsNil(o.Timecheckstate) {
		toSerialize["timecheckstate"] = o.Timecheckstate
	}
	if !IsNil(o.Timefinish) {
		toSerialize["timefinish"] = o.Timefinish
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Timemodifiedoffline) {
		toSerialize["timemodifiedoffline"] = o.Timemodifiedoffline
	}
	if !IsNil(o.Timestart) {
		toSerialize["timestart"] = o.Timestart
	}
	if !IsNil(o.Uniqueid) {
		toSerialize["uniqueid"] = o.Uniqueid
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

type NullableModQuizGetAttemptData200ResponseAttempt struct {
	value *ModQuizGetAttemptData200ResponseAttempt
	isSet bool
}

func (v NullableModQuizGetAttemptData200ResponseAttempt) Get() *ModQuizGetAttemptData200ResponseAttempt {
	return v.value
}

func (v *NullableModQuizGetAttemptData200ResponseAttempt) Set(val *ModQuizGetAttemptData200ResponseAttempt) {
	v.value = val
	v.isSet = true
}

func (v NullableModQuizGetAttemptData200ResponseAttempt) IsSet() bool {
	return v.isSet
}

func (v *NullableModQuizGetAttemptData200ResponseAttempt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModQuizGetAttemptData200ResponseAttempt(val *ModQuizGetAttemptData200ResponseAttempt) *NullableModQuizGetAttemptData200ResponseAttempt {
	return &NullableModQuizGetAttemptData200ResponseAttempt{value: val, isSet: true}
}

func (v NullableModQuizGetAttemptData200ResponseAttempt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModQuizGetAttemptData200ResponseAttempt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


