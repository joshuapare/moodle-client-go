/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModWorkshopGetUserPlan200ResponseUserplan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModWorkshopGetUserPlan200ResponseUserplan{}

// ModWorkshopGetUserPlan200ResponseUserplan struct for ModWorkshopGetUserPlan200ResponseUserplan
type ModWorkshopGetUserPlan200ResponseUserplan struct {
	Examples []ModWorkshopGetUserPlan200ResponseUserplanExamplesInner `json:"examples"`
	Phases []ModWorkshopGetUserPlan200ResponseUserplanPhasesInner `json:"phases"`
}

type _ModWorkshopGetUserPlan200ResponseUserplan ModWorkshopGetUserPlan200ResponseUserplan

// NewModWorkshopGetUserPlan200ResponseUserplan instantiates a new ModWorkshopGetUserPlan200ResponseUserplan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModWorkshopGetUserPlan200ResponseUserplan(examples []ModWorkshopGetUserPlan200ResponseUserplanExamplesInner, phases []ModWorkshopGetUserPlan200ResponseUserplanPhasesInner) *ModWorkshopGetUserPlan200ResponseUserplan {
	this := ModWorkshopGetUserPlan200ResponseUserplan{}
	this.Examples = examples
	this.Phases = phases
	return &this
}

// NewModWorkshopGetUserPlan200ResponseUserplanWithDefaults instantiates a new ModWorkshopGetUserPlan200ResponseUserplan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModWorkshopGetUserPlan200ResponseUserplanWithDefaults() *ModWorkshopGetUserPlan200ResponseUserplan {
	this := ModWorkshopGetUserPlan200ResponseUserplan{}
	return &this
}

// GetExamples returns the Examples field value
func (o *ModWorkshopGetUserPlan200ResponseUserplan) GetExamples() []ModWorkshopGetUserPlan200ResponseUserplanExamplesInner {
	if o == nil {
		var ret []ModWorkshopGetUserPlan200ResponseUserplanExamplesInner
		return ret
	}

	return o.Examples
}

// GetExamplesOk returns a tuple with the Examples field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetUserPlan200ResponseUserplan) GetExamplesOk() ([]ModWorkshopGetUserPlan200ResponseUserplanExamplesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Examples, true
}

// SetExamples sets field value
func (o *ModWorkshopGetUserPlan200ResponseUserplan) SetExamples(v []ModWorkshopGetUserPlan200ResponseUserplanExamplesInner) {
	o.Examples = v
}

// GetPhases returns the Phases field value
func (o *ModWorkshopGetUserPlan200ResponseUserplan) GetPhases() []ModWorkshopGetUserPlan200ResponseUserplanPhasesInner {
	if o == nil {
		var ret []ModWorkshopGetUserPlan200ResponseUserplanPhasesInner
		return ret
	}

	return o.Phases
}

// GetPhasesOk returns a tuple with the Phases field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopGetUserPlan200ResponseUserplan) GetPhasesOk() ([]ModWorkshopGetUserPlan200ResponseUserplanPhasesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phases, true
}

// SetPhases sets field value
func (o *ModWorkshopGetUserPlan200ResponseUserplan) SetPhases(v []ModWorkshopGetUserPlan200ResponseUserplanPhasesInner) {
	o.Phases = v
}

func (o ModWorkshopGetUserPlan200ResponseUserplan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModWorkshopGetUserPlan200ResponseUserplan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["examples"] = o.Examples
	toSerialize["phases"] = o.Phases
	return toSerialize, nil
}

func (o *ModWorkshopGetUserPlan200ResponseUserplan) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"examples",
		"phases",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModWorkshopGetUserPlan200ResponseUserplan := _ModWorkshopGetUserPlan200ResponseUserplan{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModWorkshopGetUserPlan200ResponseUserplan)

	if err != nil {
		return err
	}

	*o = ModWorkshopGetUserPlan200ResponseUserplan(varModWorkshopGetUserPlan200ResponseUserplan)

	return err
}

type NullableModWorkshopGetUserPlan200ResponseUserplan struct {
	value *ModWorkshopGetUserPlan200ResponseUserplan
	isSet bool
}

func (v NullableModWorkshopGetUserPlan200ResponseUserplan) Get() *ModWorkshopGetUserPlan200ResponseUserplan {
	return v.value
}

func (v *NullableModWorkshopGetUserPlan200ResponseUserplan) Set(val *ModWorkshopGetUserPlan200ResponseUserplan) {
	v.value = val
	v.isSet = true
}

func (v NullableModWorkshopGetUserPlan200ResponseUserplan) IsSet() bool {
	return v.isSet
}

func (v *NullableModWorkshopGetUserPlan200ResponseUserplan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModWorkshopGetUserPlan200ResponseUserplan(val *ModWorkshopGetUserPlan200ResponseUserplan) *NullableModWorkshopGetUserPlan200ResponseUserplan {
	return &NullableModWorkshopGetUserPlan200ResponseUserplan{value: val, isSet: true}
}

func (v NullableModWorkshopGetUserPlan200ResponseUserplan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModWorkshopGetUserPlan200ResponseUserplan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


