/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreGetFragmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreGetFragmentRequest{}

// CoreGetFragmentRequest struct for CoreGetFragmentRequest
type CoreGetFragmentRequest struct {
	Args []CoreGetFragmentRequestArgsInner `json:"args,omitempty"`
	// Name of the callback to execute
	Callback string `json:"callback"`
	// Component for the callback e.g. mod_assign
	Component string `json:"component"`
	// Context ID that the fragment is from
	Contextid int32 `json:"contextid"`
}

type _CoreGetFragmentRequest CoreGetFragmentRequest

// NewCoreGetFragmentRequest instantiates a new CoreGetFragmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreGetFragmentRequest(callback string, component string, contextid int32) *CoreGetFragmentRequest {
	this := CoreGetFragmentRequest{}
	this.Callback = callback
	this.Component = component
	this.Contextid = contextid
	return &this
}

// NewCoreGetFragmentRequestWithDefaults instantiates a new CoreGetFragmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreGetFragmentRequestWithDefaults() *CoreGetFragmentRequest {
	this := CoreGetFragmentRequest{}
	var callback string = "null"
	this.Callback = callback
	var component string = "null"
	this.Component = component
	var contextid int32 = null
	this.Contextid = contextid
	return &this
}

// GetArgs returns the Args field value if set, zero value otherwise.
func (o *CoreGetFragmentRequest) GetArgs() []CoreGetFragmentRequestArgsInner {
	if o == nil || IsNil(o.Args) {
		var ret []CoreGetFragmentRequestArgsInner
		return ret
	}
	return o.Args
}

// GetArgsOk returns a tuple with the Args field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGetFragmentRequest) GetArgsOk() ([]CoreGetFragmentRequestArgsInner, bool) {
	if o == nil || IsNil(o.Args) {
		return nil, false
	}
	return o.Args, true
}

// HasArgs returns a boolean if a field has been set.
func (o *CoreGetFragmentRequest) HasArgs() bool {
	if o != nil && !IsNil(o.Args) {
		return true
	}

	return false
}

// SetArgs gets a reference to the given []CoreGetFragmentRequestArgsInner and assigns it to the Args field.
func (o *CoreGetFragmentRequest) SetArgs(v []CoreGetFragmentRequestArgsInner) {
	o.Args = v
}

// GetCallback returns the Callback field value
func (o *CoreGetFragmentRequest) GetCallback() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Callback
}

// GetCallbackOk returns a tuple with the Callback field value
// and a boolean to check if the value has been set.
func (o *CoreGetFragmentRequest) GetCallbackOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Callback, true
}

// SetCallback sets field value
func (o *CoreGetFragmentRequest) SetCallback(v string) {
	o.Callback = v
}

// GetComponent returns the Component field value
func (o *CoreGetFragmentRequest) GetComponent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Component
}

// GetComponentOk returns a tuple with the Component field value
// and a boolean to check if the value has been set.
func (o *CoreGetFragmentRequest) GetComponentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Component, true
}

// SetComponent sets field value
func (o *CoreGetFragmentRequest) SetComponent(v string) {
	o.Component = v
}

// GetContextid returns the Contextid field value
func (o *CoreGetFragmentRequest) GetContextid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Contextid
}

// GetContextidOk returns a tuple with the Contextid field value
// and a boolean to check if the value has been set.
func (o *CoreGetFragmentRequest) GetContextidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contextid, true
}

// SetContextid sets field value
func (o *CoreGetFragmentRequest) SetContextid(v int32) {
	o.Contextid = v
}

func (o CoreGetFragmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreGetFragmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Args) {
		toSerialize["args"] = o.Args
	}
	toSerialize["callback"] = o.Callback
	toSerialize["component"] = o.Component
	toSerialize["contextid"] = o.Contextid
	return toSerialize, nil
}

func (o *CoreGetFragmentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"callback",
		"component",
		"contextid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreGetFragmentRequest := _CoreGetFragmentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreGetFragmentRequest)

	if err != nil {
		return err
	}

	*o = CoreGetFragmentRequest(varCoreGetFragmentRequest)

	return err
}

type NullableCoreGetFragmentRequest struct {
	value *CoreGetFragmentRequest
	isSet bool
}

func (v NullableCoreGetFragmentRequest) Get() *CoreGetFragmentRequest {
	return v.value
}

func (v *NullableCoreGetFragmentRequest) Set(val *CoreGetFragmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreGetFragmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreGetFragmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreGetFragmentRequest(val *CoreGetFragmentRequest) *NullableCoreGetFragmentRequest {
	return &NullableCoreGetFragmentRequest{value: val, isSet: true}
}

func (v NullableCoreGetFragmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreGetFragmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


