/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner{}

// CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner struct for CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner
type CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner struct {
	Days []CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInner `json:"days,omitempty"`
	Postpadding []map[string]interface{} `json:"postpadding,omitempty"`
	Prepadding []map[string]interface{} `json:"prepadding,omitempty"`
}

// NewCoreCalendarGetCalendarMonthlyView200ResponseWeeksInner instantiates a new CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCalendarGetCalendarMonthlyView200ResponseWeeksInner() *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner {
	this := CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner{}
	return &this
}

// NewCoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerWithDefaults instantiates a new CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerWithDefaults() *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner {
	this := CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner{}
	return &this
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) GetDays() []CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInner {
	if o == nil || IsNil(o.Days) {
		var ret []CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInner
		return ret
	}
	return o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) GetDaysOk() ([]CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInner, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given []CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInner and assigns it to the Days field.
func (o *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) SetDays(v []CoreCalendarGetCalendarMonthlyView200ResponseWeeksInnerDaysInner) {
	o.Days = v
}

// GetPostpadding returns the Postpadding field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) GetPostpadding() []map[string]interface{} {
	if o == nil || IsNil(o.Postpadding) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Postpadding
}

// GetPostpaddingOk returns a tuple with the Postpadding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) GetPostpaddingOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Postpadding) {
		return nil, false
	}
	return o.Postpadding, true
}

// HasPostpadding returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) HasPostpadding() bool {
	if o != nil && !IsNil(o.Postpadding) {
		return true
	}

	return false
}

// SetPostpadding gets a reference to the given []map[string]interface{} and assigns it to the Postpadding field.
func (o *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) SetPostpadding(v []map[string]interface{}) {
	o.Postpadding = v
}

// GetPrepadding returns the Prepadding field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) GetPrepadding() []map[string]interface{} {
	if o == nil || IsNil(o.Prepadding) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Prepadding
}

// GetPrepaddingOk returns a tuple with the Prepadding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) GetPrepaddingOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Prepadding) {
		return nil, false
	}
	return o.Prepadding, true
}

// HasPrepadding returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) HasPrepadding() bool {
	if o != nil && !IsNil(o.Prepadding) {
		return true
	}

	return false
}

// SetPrepadding gets a reference to the given []map[string]interface{} and assigns it to the Prepadding field.
func (o *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) SetPrepadding(v []map[string]interface{}) {
	o.Prepadding = v
}

func (o CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	if !IsNil(o.Postpadding) {
		toSerialize["postpadding"] = o.Postpadding
	}
	if !IsNil(o.Prepadding) {
		toSerialize["prepadding"] = o.Prepadding
	}
	return toSerialize, nil
}

type NullableCoreCalendarGetCalendarMonthlyView200ResponseWeeksInner struct {
	value *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner
	isSet bool
}

func (v NullableCoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) Get() *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner {
	return v.value
}

func (v *NullableCoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) Set(val *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCalendarGetCalendarMonthlyView200ResponseWeeksInner(val *CoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) *NullableCoreCalendarGetCalendarMonthlyView200ResponseWeeksInner {
	return &NullableCoreCalendarGetCalendarMonthlyView200ResponseWeeksInner{value: val, isSet: true}
}

func (v NullableCoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCalendarGetCalendarMonthlyView200ResponseWeeksInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


