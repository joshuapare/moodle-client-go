/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BlockIomadCompanyAdminDeleteLicensesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockIomadCompanyAdminDeleteLicensesRequest{}

// BlockIomadCompanyAdminDeleteLicensesRequest struct for BlockIomadCompanyAdminDeleteLicensesRequest
type BlockIomadCompanyAdminDeleteLicensesRequest struct {
	Licenses []BlockIomadCompanyAdminDeleteLicensesRequestLicensesInner `json:"licenses"`
}

type _BlockIomadCompanyAdminDeleteLicensesRequest BlockIomadCompanyAdminDeleteLicensesRequest

// NewBlockIomadCompanyAdminDeleteLicensesRequest instantiates a new BlockIomadCompanyAdminDeleteLicensesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockIomadCompanyAdminDeleteLicensesRequest(licenses []BlockIomadCompanyAdminDeleteLicensesRequestLicensesInner) *BlockIomadCompanyAdminDeleteLicensesRequest {
	this := BlockIomadCompanyAdminDeleteLicensesRequest{}
	this.Licenses = licenses
	return &this
}

// NewBlockIomadCompanyAdminDeleteLicensesRequestWithDefaults instantiates a new BlockIomadCompanyAdminDeleteLicensesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockIomadCompanyAdminDeleteLicensesRequestWithDefaults() *BlockIomadCompanyAdminDeleteLicensesRequest {
	this := BlockIomadCompanyAdminDeleteLicensesRequest{}
	return &this
}

// GetLicenses returns the Licenses field value
func (o *BlockIomadCompanyAdminDeleteLicensesRequest) GetLicenses() []BlockIomadCompanyAdminDeleteLicensesRequestLicensesInner {
	if o == nil {
		var ret []BlockIomadCompanyAdminDeleteLicensesRequestLicensesInner
		return ret
	}

	return o.Licenses
}

// GetLicensesOk returns a tuple with the Licenses field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminDeleteLicensesRequest) GetLicensesOk() ([]BlockIomadCompanyAdminDeleteLicensesRequestLicensesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Licenses, true
}

// SetLicenses sets field value
func (o *BlockIomadCompanyAdminDeleteLicensesRequest) SetLicenses(v []BlockIomadCompanyAdminDeleteLicensesRequestLicensesInner) {
	o.Licenses = v
}

func (o BlockIomadCompanyAdminDeleteLicensesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockIomadCompanyAdminDeleteLicensesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["licenses"] = o.Licenses
	return toSerialize, nil
}

func (o *BlockIomadCompanyAdminDeleteLicensesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"licenses",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlockIomadCompanyAdminDeleteLicensesRequest := _BlockIomadCompanyAdminDeleteLicensesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBlockIomadCompanyAdminDeleteLicensesRequest)

	if err != nil {
		return err
	}

	*o = BlockIomadCompanyAdminDeleteLicensesRequest(varBlockIomadCompanyAdminDeleteLicensesRequest)

	return err
}

type NullableBlockIomadCompanyAdminDeleteLicensesRequest struct {
	value *BlockIomadCompanyAdminDeleteLicensesRequest
	isSet bool
}

func (v NullableBlockIomadCompanyAdminDeleteLicensesRequest) Get() *BlockIomadCompanyAdminDeleteLicensesRequest {
	return v.value
}

func (v *NullableBlockIomadCompanyAdminDeleteLicensesRequest) Set(val *BlockIomadCompanyAdminDeleteLicensesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockIomadCompanyAdminDeleteLicensesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockIomadCompanyAdminDeleteLicensesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockIomadCompanyAdminDeleteLicensesRequest(val *BlockIomadCompanyAdminDeleteLicensesRequest) *NullableBlockIomadCompanyAdminDeleteLicensesRequest {
	return &NullableBlockIomadCompanyAdminDeleteLicensesRequest{value: val, isSet: true}
}

func (v NullableBlockIomadCompanyAdminDeleteLicensesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockIomadCompanyAdminDeleteLicensesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


