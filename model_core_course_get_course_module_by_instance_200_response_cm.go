/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCourseGetCourseModuleByInstance200ResponseCm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCourseGetCourseModuleByInstance200ResponseCm{}

// CoreCourseGetCourseModuleByInstance200ResponseCm struct for CoreCourseGetCourseModuleByInstance200ResponseCm
type CoreCourseGetCourseModuleByInstance200ResponseCm struct {
	// Time added
	Added *int32 `json:"added,omitempty"`
	Advancedgrading []CoreCourseGetCourseModuleByInstance200ResponseCmAdvancedgradingInner `json:"advancedgrading,omitempty"`
	// Availability settings
	Availability *string `json:"availability,omitempty"`
	// If completion is enabled
	Completion int32 `json:"completion"`
	// Completion time expected
	Completionexpected *int32 `json:"completionexpected,omitempty"`
	// Completion grade item
	Completiongradeitemnumber *int32 `json:"completiongradeitemnumber,omitempty"`
	// Completion pass grade setting
	Completionpassgrade *int32 `json:"completionpassgrade,omitempty"`
	// Completion view setting
	Completionview *int32 `json:"completionview,omitempty"`
	// The course id
	Course int32 `json:"course"`
	// The download content value
	Downloadcontent *int32 `json:"downloadcontent,omitempty"`
	// Grade (max value or scale id)
	Grade *float32 `json:"grade,omitempty"`
	// Grade category
	Gradecat *int32 `json:"gradecat,omitempty"`
	// Grade to pass (float)
	Gradepass *string `json:"gradepass,omitempty"`
	// Grouping id
	Groupingid int32 `json:"groupingid"`
	// Group mode
	Groupmode int32 `json:"groupmode"`
	// The course module id
	Id int32 `json:"id"`
	// Module id number
	Idnumber *string `json:"idnumber,omitempty"`
	// Indentation
	Indent *int32 `json:"indent,omitempty"`
	// The activity instance id
	Instance int32 `json:"instance"`
	// The module component name (forum, assign, etc..)
	Modname string `json:"modname"`
	// The module type id
	Module int32 `json:"module"`
	// The activity name
	Name string `json:"name"`
	Outcomes []CoreCourseGetCourseModuleByInstance200ResponseCmOutcomesInner `json:"outcomes,omitempty"`
	// Scale items (if used)
	Scale *string `json:"scale,omitempty"`
	// Score
	Score *int32 `json:"score,omitempty"`
	// The module section id
	Section int32 `json:"section"`
	// The module section number
	Sectionnum int32 `json:"sectionnum"`
	// If the description is showed
	Showdescription *int32 `json:"showdescription,omitempty"`
	// If visible
	Visible *int32 `json:"visible,omitempty"`
	// Visible old
	Visibleold *int32 `json:"visibleold,omitempty"`
	// If visible on course page
	Visibleoncoursepage *int32 `json:"visibleoncoursepage,omitempty"`
}

type _CoreCourseGetCourseModuleByInstance200ResponseCm CoreCourseGetCourseModuleByInstance200ResponseCm

// NewCoreCourseGetCourseModuleByInstance200ResponseCm instantiates a new CoreCourseGetCourseModuleByInstance200ResponseCm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCourseGetCourseModuleByInstance200ResponseCm(completion int32, course int32, groupingid int32, groupmode int32, id int32, instance int32, modname string, module int32, name string, section int32, sectionnum int32) *CoreCourseGetCourseModuleByInstance200ResponseCm {
	this := CoreCourseGetCourseModuleByInstance200ResponseCm{}
	this.Completion = completion
	this.Course = course
	this.Groupingid = groupingid
	this.Groupmode = groupmode
	this.Id = id
	this.Instance = instance
	this.Modname = modname
	this.Module = module
	this.Name = name
	this.Section = section
	this.Sectionnum = sectionnum
	return &this
}

// NewCoreCourseGetCourseModuleByInstance200ResponseCmWithDefaults instantiates a new CoreCourseGetCourseModuleByInstance200ResponseCm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCourseGetCourseModuleByInstance200ResponseCmWithDefaults() *CoreCourseGetCourseModuleByInstance200ResponseCm {
	this := CoreCourseGetCourseModuleByInstance200ResponseCm{}
	return &this
}

// GetAdded returns the Added field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetAdded() int32 {
	if o == nil || IsNil(o.Added) {
		var ret int32
		return ret
	}
	return *o.Added
}

// GetAddedOk returns a tuple with the Added field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetAddedOk() (*int32, bool) {
	if o == nil || IsNil(o.Added) {
		return nil, false
	}
	return o.Added, true
}

// HasAdded returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasAdded() bool {
	if o != nil && !IsNil(o.Added) {
		return true
	}

	return false
}

// SetAdded gets a reference to the given int32 and assigns it to the Added field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetAdded(v int32) {
	o.Added = &v
}

// GetAdvancedgrading returns the Advancedgrading field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetAdvancedgrading() []CoreCourseGetCourseModuleByInstance200ResponseCmAdvancedgradingInner {
	if o == nil || IsNil(o.Advancedgrading) {
		var ret []CoreCourseGetCourseModuleByInstance200ResponseCmAdvancedgradingInner
		return ret
	}
	return o.Advancedgrading
}

// GetAdvancedgradingOk returns a tuple with the Advancedgrading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetAdvancedgradingOk() ([]CoreCourseGetCourseModuleByInstance200ResponseCmAdvancedgradingInner, bool) {
	if o == nil || IsNil(o.Advancedgrading) {
		return nil, false
	}
	return o.Advancedgrading, true
}

// HasAdvancedgrading returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasAdvancedgrading() bool {
	if o != nil && !IsNil(o.Advancedgrading) {
		return true
	}

	return false
}

// SetAdvancedgrading gets a reference to the given []CoreCourseGetCourseModuleByInstance200ResponseCmAdvancedgradingInner and assigns it to the Advancedgrading field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetAdvancedgrading(v []CoreCourseGetCourseModuleByInstance200ResponseCmAdvancedgradingInner) {
	o.Advancedgrading = v
}

// GetAvailability returns the Availability field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetAvailability() string {
	if o == nil || IsNil(o.Availability) {
		var ret string
		return ret
	}
	return *o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetAvailabilityOk() (*string, bool) {
	if o == nil || IsNil(o.Availability) {
		return nil, false
	}
	return o.Availability, true
}

// HasAvailability returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasAvailability() bool {
	if o != nil && !IsNil(o.Availability) {
		return true
	}

	return false
}

// SetAvailability gets a reference to the given string and assigns it to the Availability field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetAvailability(v string) {
	o.Availability = &v
}

// GetCompletion returns the Completion field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetCompletion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Completion
}

// GetCompletionOk returns a tuple with the Completion field value
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetCompletionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Completion, true
}

// SetCompletion sets field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetCompletion(v int32) {
	o.Completion = v
}

// GetCompletionexpected returns the Completionexpected field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetCompletionexpected() int32 {
	if o == nil || IsNil(o.Completionexpected) {
		var ret int32
		return ret
	}
	return *o.Completionexpected
}

// GetCompletionexpectedOk returns a tuple with the Completionexpected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetCompletionexpectedOk() (*int32, bool) {
	if o == nil || IsNil(o.Completionexpected) {
		return nil, false
	}
	return o.Completionexpected, true
}

// HasCompletionexpected returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasCompletionexpected() bool {
	if o != nil && !IsNil(o.Completionexpected) {
		return true
	}

	return false
}

// SetCompletionexpected gets a reference to the given int32 and assigns it to the Completionexpected field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetCompletionexpected(v int32) {
	o.Completionexpected = &v
}

// GetCompletiongradeitemnumber returns the Completiongradeitemnumber field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetCompletiongradeitemnumber() int32 {
	if o == nil || IsNil(o.Completiongradeitemnumber) {
		var ret int32
		return ret
	}
	return *o.Completiongradeitemnumber
}

// GetCompletiongradeitemnumberOk returns a tuple with the Completiongradeitemnumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetCompletiongradeitemnumberOk() (*int32, bool) {
	if o == nil || IsNil(o.Completiongradeitemnumber) {
		return nil, false
	}
	return o.Completiongradeitemnumber, true
}

// HasCompletiongradeitemnumber returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasCompletiongradeitemnumber() bool {
	if o != nil && !IsNil(o.Completiongradeitemnumber) {
		return true
	}

	return false
}

// SetCompletiongradeitemnumber gets a reference to the given int32 and assigns it to the Completiongradeitemnumber field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetCompletiongradeitemnumber(v int32) {
	o.Completiongradeitemnumber = &v
}

// GetCompletionpassgrade returns the Completionpassgrade field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetCompletionpassgrade() int32 {
	if o == nil || IsNil(o.Completionpassgrade) {
		var ret int32
		return ret
	}
	return *o.Completionpassgrade
}

// GetCompletionpassgradeOk returns a tuple with the Completionpassgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetCompletionpassgradeOk() (*int32, bool) {
	if o == nil || IsNil(o.Completionpassgrade) {
		return nil, false
	}
	return o.Completionpassgrade, true
}

// HasCompletionpassgrade returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasCompletionpassgrade() bool {
	if o != nil && !IsNil(o.Completionpassgrade) {
		return true
	}

	return false
}

// SetCompletionpassgrade gets a reference to the given int32 and assigns it to the Completionpassgrade field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetCompletionpassgrade(v int32) {
	o.Completionpassgrade = &v
}

// GetCompletionview returns the Completionview field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetCompletionview() int32 {
	if o == nil || IsNil(o.Completionview) {
		var ret int32
		return ret
	}
	return *o.Completionview
}

// GetCompletionviewOk returns a tuple with the Completionview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetCompletionviewOk() (*int32, bool) {
	if o == nil || IsNil(o.Completionview) {
		return nil, false
	}
	return o.Completionview, true
}

// HasCompletionview returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasCompletionview() bool {
	if o != nil && !IsNil(o.Completionview) {
		return true
	}

	return false
}

// SetCompletionview gets a reference to the given int32 and assigns it to the Completionview field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetCompletionview(v int32) {
	o.Completionview = &v
}

// GetCourse returns the Course field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetCourse() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Course
}

// GetCourseOk returns a tuple with the Course field value
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetCourseOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Course, true
}

// SetCourse sets field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetCourse(v int32) {
	o.Course = v
}

// GetDownloadcontent returns the Downloadcontent field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetDownloadcontent() int32 {
	if o == nil || IsNil(o.Downloadcontent) {
		var ret int32
		return ret
	}
	return *o.Downloadcontent
}

// GetDownloadcontentOk returns a tuple with the Downloadcontent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetDownloadcontentOk() (*int32, bool) {
	if o == nil || IsNil(o.Downloadcontent) {
		return nil, false
	}
	return o.Downloadcontent, true
}

// HasDownloadcontent returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasDownloadcontent() bool {
	if o != nil && !IsNil(o.Downloadcontent) {
		return true
	}

	return false
}

// SetDownloadcontent gets a reference to the given int32 and assigns it to the Downloadcontent field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetDownloadcontent(v int32) {
	o.Downloadcontent = &v
}

// GetGrade returns the Grade field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetGrade() float32 {
	if o == nil || IsNil(o.Grade) {
		var ret float32
		return ret
	}
	return *o.Grade
}

// GetGradeOk returns a tuple with the Grade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetGradeOk() (*float32, bool) {
	if o == nil || IsNil(o.Grade) {
		return nil, false
	}
	return o.Grade, true
}

// HasGrade returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasGrade() bool {
	if o != nil && !IsNil(o.Grade) {
		return true
	}

	return false
}

// SetGrade gets a reference to the given float32 and assigns it to the Grade field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetGrade(v float32) {
	o.Grade = &v
}

// GetGradecat returns the Gradecat field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetGradecat() int32 {
	if o == nil || IsNil(o.Gradecat) {
		var ret int32
		return ret
	}
	return *o.Gradecat
}

// GetGradecatOk returns a tuple with the Gradecat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetGradecatOk() (*int32, bool) {
	if o == nil || IsNil(o.Gradecat) {
		return nil, false
	}
	return o.Gradecat, true
}

// HasGradecat returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasGradecat() bool {
	if o != nil && !IsNil(o.Gradecat) {
		return true
	}

	return false
}

// SetGradecat gets a reference to the given int32 and assigns it to the Gradecat field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetGradecat(v int32) {
	o.Gradecat = &v
}

// GetGradepass returns the Gradepass field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetGradepass() string {
	if o == nil || IsNil(o.Gradepass) {
		var ret string
		return ret
	}
	return *o.Gradepass
}

// GetGradepassOk returns a tuple with the Gradepass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetGradepassOk() (*string, bool) {
	if o == nil || IsNil(o.Gradepass) {
		return nil, false
	}
	return o.Gradepass, true
}

// HasGradepass returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasGradepass() bool {
	if o != nil && !IsNil(o.Gradepass) {
		return true
	}

	return false
}

// SetGradepass gets a reference to the given string and assigns it to the Gradepass field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetGradepass(v string) {
	o.Gradepass = &v
}

// GetGroupingid returns the Groupingid field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetGroupingid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Groupingid
}

// GetGroupingidOk returns a tuple with the Groupingid field value
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetGroupingidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Groupingid, true
}

// SetGroupingid sets field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetGroupingid(v int32) {
	o.Groupingid = v
}

// GetGroupmode returns the Groupmode field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetGroupmode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Groupmode
}

// GetGroupmodeOk returns a tuple with the Groupmode field value
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetGroupmodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Groupmode, true
}

// SetGroupmode sets field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetGroupmode(v int32) {
	o.Groupmode = v
}

// GetId returns the Id field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetId(v int32) {
	o.Id = v
}

// GetIdnumber returns the Idnumber field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetIdnumber() string {
	if o == nil || IsNil(o.Idnumber) {
		var ret string
		return ret
	}
	return *o.Idnumber
}

// GetIdnumberOk returns a tuple with the Idnumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetIdnumberOk() (*string, bool) {
	if o == nil || IsNil(o.Idnumber) {
		return nil, false
	}
	return o.Idnumber, true
}

// HasIdnumber returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasIdnumber() bool {
	if o != nil && !IsNil(o.Idnumber) {
		return true
	}

	return false
}

// SetIdnumber gets a reference to the given string and assigns it to the Idnumber field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetIdnumber(v string) {
	o.Idnumber = &v
}

// GetIndent returns the Indent field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetIndent() int32 {
	if o == nil || IsNil(o.Indent) {
		var ret int32
		return ret
	}
	return *o.Indent
}

// GetIndentOk returns a tuple with the Indent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetIndentOk() (*int32, bool) {
	if o == nil || IsNil(o.Indent) {
		return nil, false
	}
	return o.Indent, true
}

// HasIndent returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasIndent() bool {
	if o != nil && !IsNil(o.Indent) {
		return true
	}

	return false
}

// SetIndent gets a reference to the given int32 and assigns it to the Indent field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetIndent(v int32) {
	o.Indent = &v
}

// GetInstance returns the Instance field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetInstance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetInstanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instance, true
}

// SetInstance sets field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetInstance(v int32) {
	o.Instance = v
}

// GetModname returns the Modname field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetModname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Modname
}

// GetModnameOk returns a tuple with the Modname field value
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetModnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modname, true
}

// SetModname sets field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetModname(v string) {
	o.Modname = v
}

// GetModule returns the Module field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetModule() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Module
}

// GetModuleOk returns a tuple with the Module field value
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetModuleOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Module, true
}

// SetModule sets field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetModule(v int32) {
	o.Module = v
}

// GetName returns the Name field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetName(v string) {
	o.Name = v
}

// GetOutcomes returns the Outcomes field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetOutcomes() []CoreCourseGetCourseModuleByInstance200ResponseCmOutcomesInner {
	if o == nil || IsNil(o.Outcomes) {
		var ret []CoreCourseGetCourseModuleByInstance200ResponseCmOutcomesInner
		return ret
	}
	return o.Outcomes
}

// GetOutcomesOk returns a tuple with the Outcomes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetOutcomesOk() ([]CoreCourseGetCourseModuleByInstance200ResponseCmOutcomesInner, bool) {
	if o == nil || IsNil(o.Outcomes) {
		return nil, false
	}
	return o.Outcomes, true
}

// HasOutcomes returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasOutcomes() bool {
	if o != nil && !IsNil(o.Outcomes) {
		return true
	}

	return false
}

// SetOutcomes gets a reference to the given []CoreCourseGetCourseModuleByInstance200ResponseCmOutcomesInner and assigns it to the Outcomes field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetOutcomes(v []CoreCourseGetCourseModuleByInstance200ResponseCmOutcomesInner) {
	o.Outcomes = v
}

// GetScale returns the Scale field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetScale() string {
	if o == nil || IsNil(o.Scale) {
		var ret string
		return ret
	}
	return *o.Scale
}

// GetScaleOk returns a tuple with the Scale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetScaleOk() (*string, bool) {
	if o == nil || IsNil(o.Scale) {
		return nil, false
	}
	return o.Scale, true
}

// HasScale returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasScale() bool {
	if o != nil && !IsNil(o.Scale) {
		return true
	}

	return false
}

// SetScale gets a reference to the given string and assigns it to the Scale field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetScale(v string) {
	o.Scale = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetScore() int32 {
	if o == nil || IsNil(o.Score) {
		var ret int32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given int32 and assigns it to the Score field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetScore(v int32) {
	o.Score = &v
}

// GetSection returns the Section field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetSection() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Section
}

// GetSectionOk returns a tuple with the Section field value
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetSectionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Section, true
}

// SetSection sets field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetSection(v int32) {
	o.Section = v
}

// GetSectionnum returns the Sectionnum field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetSectionnum() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Sectionnum
}

// GetSectionnumOk returns a tuple with the Sectionnum field value
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetSectionnumOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sectionnum, true
}

// SetSectionnum sets field value
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetSectionnum(v int32) {
	o.Sectionnum = v
}

// GetShowdescription returns the Showdescription field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetShowdescription() int32 {
	if o == nil || IsNil(o.Showdescription) {
		var ret int32
		return ret
	}
	return *o.Showdescription
}

// GetShowdescriptionOk returns a tuple with the Showdescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetShowdescriptionOk() (*int32, bool) {
	if o == nil || IsNil(o.Showdescription) {
		return nil, false
	}
	return o.Showdescription, true
}

// HasShowdescription returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasShowdescription() bool {
	if o != nil && !IsNil(o.Showdescription) {
		return true
	}

	return false
}

// SetShowdescription gets a reference to the given int32 and assigns it to the Showdescription field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetShowdescription(v int32) {
	o.Showdescription = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetVisible() int32 {
	if o == nil || IsNil(o.Visible) {
		var ret int32
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetVisibleOk() (*int32, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given int32 and assigns it to the Visible field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetVisible(v int32) {
	o.Visible = &v
}

// GetVisibleold returns the Visibleold field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetVisibleold() int32 {
	if o == nil || IsNil(o.Visibleold) {
		var ret int32
		return ret
	}
	return *o.Visibleold
}

// GetVisibleoldOk returns a tuple with the Visibleold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetVisibleoldOk() (*int32, bool) {
	if o == nil || IsNil(o.Visibleold) {
		return nil, false
	}
	return o.Visibleold, true
}

// HasVisibleold returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasVisibleold() bool {
	if o != nil && !IsNil(o.Visibleold) {
		return true
	}

	return false
}

// SetVisibleold gets a reference to the given int32 and assigns it to the Visibleold field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetVisibleold(v int32) {
	o.Visibleold = &v
}

// GetVisibleoncoursepage returns the Visibleoncoursepage field value if set, zero value otherwise.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetVisibleoncoursepage() int32 {
	if o == nil || IsNil(o.Visibleoncoursepage) {
		var ret int32
		return ret
	}
	return *o.Visibleoncoursepage
}

// GetVisibleoncoursepageOk returns a tuple with the Visibleoncoursepage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) GetVisibleoncoursepageOk() (*int32, bool) {
	if o == nil || IsNil(o.Visibleoncoursepage) {
		return nil, false
	}
	return o.Visibleoncoursepage, true
}

// HasVisibleoncoursepage returns a boolean if a field has been set.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) HasVisibleoncoursepage() bool {
	if o != nil && !IsNil(o.Visibleoncoursepage) {
		return true
	}

	return false
}

// SetVisibleoncoursepage gets a reference to the given int32 and assigns it to the Visibleoncoursepage field.
func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) SetVisibleoncoursepage(v int32) {
	o.Visibleoncoursepage = &v
}

func (o CoreCourseGetCourseModuleByInstance200ResponseCm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCourseGetCourseModuleByInstance200ResponseCm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Added) {
		toSerialize["added"] = o.Added
	}
	if !IsNil(o.Advancedgrading) {
		toSerialize["advancedgrading"] = o.Advancedgrading
	}
	if !IsNil(o.Availability) {
		toSerialize["availability"] = o.Availability
	}
	toSerialize["completion"] = o.Completion
	if !IsNil(o.Completionexpected) {
		toSerialize["completionexpected"] = o.Completionexpected
	}
	if !IsNil(o.Completiongradeitemnumber) {
		toSerialize["completiongradeitemnumber"] = o.Completiongradeitemnumber
	}
	if !IsNil(o.Completionpassgrade) {
		toSerialize["completionpassgrade"] = o.Completionpassgrade
	}
	if !IsNil(o.Completionview) {
		toSerialize["completionview"] = o.Completionview
	}
	toSerialize["course"] = o.Course
	if !IsNil(o.Downloadcontent) {
		toSerialize["downloadcontent"] = o.Downloadcontent
	}
	if !IsNil(o.Grade) {
		toSerialize["grade"] = o.Grade
	}
	if !IsNil(o.Gradecat) {
		toSerialize["gradecat"] = o.Gradecat
	}
	if !IsNil(o.Gradepass) {
		toSerialize["gradepass"] = o.Gradepass
	}
	toSerialize["groupingid"] = o.Groupingid
	toSerialize["groupmode"] = o.Groupmode
	toSerialize["id"] = o.Id
	if !IsNil(o.Idnumber) {
		toSerialize["idnumber"] = o.Idnumber
	}
	if !IsNil(o.Indent) {
		toSerialize["indent"] = o.Indent
	}
	toSerialize["instance"] = o.Instance
	toSerialize["modname"] = o.Modname
	toSerialize["module"] = o.Module
	toSerialize["name"] = o.Name
	if !IsNil(o.Outcomes) {
		toSerialize["outcomes"] = o.Outcomes
	}
	if !IsNil(o.Scale) {
		toSerialize["scale"] = o.Scale
	}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	toSerialize["section"] = o.Section
	toSerialize["sectionnum"] = o.Sectionnum
	if !IsNil(o.Showdescription) {
		toSerialize["showdescription"] = o.Showdescription
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	if !IsNil(o.Visibleold) {
		toSerialize["visibleold"] = o.Visibleold
	}
	if !IsNil(o.Visibleoncoursepage) {
		toSerialize["visibleoncoursepage"] = o.Visibleoncoursepage
	}
	return toSerialize, nil
}

func (o *CoreCourseGetCourseModuleByInstance200ResponseCm) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"completion",
		"course",
		"groupingid",
		"groupmode",
		"id",
		"instance",
		"modname",
		"module",
		"name",
		"section",
		"sectionnum",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCourseGetCourseModuleByInstance200ResponseCm := _CoreCourseGetCourseModuleByInstance200ResponseCm{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCourseGetCourseModuleByInstance200ResponseCm)

	if err != nil {
		return err
	}

	*o = CoreCourseGetCourseModuleByInstance200ResponseCm(varCoreCourseGetCourseModuleByInstance200ResponseCm)

	return err
}

type NullableCoreCourseGetCourseModuleByInstance200ResponseCm struct {
	value *CoreCourseGetCourseModuleByInstance200ResponseCm
	isSet bool
}

func (v NullableCoreCourseGetCourseModuleByInstance200ResponseCm) Get() *CoreCourseGetCourseModuleByInstance200ResponseCm {
	return v.value
}

func (v *NullableCoreCourseGetCourseModuleByInstance200ResponseCm) Set(val *CoreCourseGetCourseModuleByInstance200ResponseCm) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCourseGetCourseModuleByInstance200ResponseCm) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCourseGetCourseModuleByInstance200ResponseCm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCourseGetCourseModuleByInstance200ResponseCm(val *CoreCourseGetCourseModuleByInstance200ResponseCm) *NullableCoreCourseGetCourseModuleByInstance200ResponseCm {
	return &NullableCoreCourseGetCourseModuleByInstance200ResponseCm{value: val, isSet: true}
}

func (v NullableCoreCourseGetCourseModuleByInstance200ResponseCm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCourseGetCourseModuleByInstance200ResponseCm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


