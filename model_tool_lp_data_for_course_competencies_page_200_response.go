/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ToolLpDataForCourseCompetenciesPage200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolLpDataForCourseCompetenciesPage200Response{}

// ToolLpDataForCourseCompetenciesPage200Response struct for ToolLpDataForCourseCompetenciesPage200Response
type ToolLpDataForCourseCompetenciesPage200Response struct {
	// User can configure course competency settings
	Canconfigurecoursecompetencies bool `json:"canconfigurecoursecompetencies"`
	// User can grade competencies.
	Cangradecompetencies bool `json:"cangradecompetencies"`
	// User can manage competency frameworks
	Canmanagecompetencyframeworks bool `json:"canmanagecompetencyframeworks"`
	// User can manage linked course competencies
	Canmanagecoursecompetencies bool `json:"canmanagecoursecompetencies"`
	Competencies []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInner `json:"competencies"`
	// The current course id
	Courseid int32 `json:"courseid"`
	// Current user id, if the user is a gradable user.
	Gradableuserid *int32 `json:"gradableuserid,omitempty"`
	// Url to the manage competencies page.
	Manageurl string `json:"manageurl"`
	// The current page context ID.
	Pagecontextid int32 `json:"pagecontextid"`
	// Url to the course competencies page.
	Pluginbaseurl string `json:"pluginbaseurl"`
	Settings ToolLpDataForCourseCompetenciesPage200ResponseSettings `json:"settings"`
	Statistics ToolLpDataForCourseCompetenciesPage200ResponseStatistics `json:"statistics"`
}

type _ToolLpDataForCourseCompetenciesPage200Response ToolLpDataForCourseCompetenciesPage200Response

// NewToolLpDataForCourseCompetenciesPage200Response instantiates a new ToolLpDataForCourseCompetenciesPage200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolLpDataForCourseCompetenciesPage200Response(canconfigurecoursecompetencies bool, cangradecompetencies bool, canmanagecompetencyframeworks bool, canmanagecoursecompetencies bool, competencies []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInner, courseid int32, manageurl string, pagecontextid int32, pluginbaseurl string, settings ToolLpDataForCourseCompetenciesPage200ResponseSettings, statistics ToolLpDataForCourseCompetenciesPage200ResponseStatistics) *ToolLpDataForCourseCompetenciesPage200Response {
	this := ToolLpDataForCourseCompetenciesPage200Response{}
	this.Canconfigurecoursecompetencies = canconfigurecoursecompetencies
	this.Cangradecompetencies = cangradecompetencies
	this.Canmanagecompetencyframeworks = canmanagecompetencyframeworks
	this.Canmanagecoursecompetencies = canmanagecoursecompetencies
	this.Competencies = competencies
	this.Courseid = courseid
	var gradableuserid int32 = null
	this.Gradableuserid = &gradableuserid
	this.Manageurl = manageurl
	this.Pagecontextid = pagecontextid
	this.Pluginbaseurl = pluginbaseurl
	this.Settings = settings
	this.Statistics = statistics
	return &this
}

// NewToolLpDataForCourseCompetenciesPage200ResponseWithDefaults instantiates a new ToolLpDataForCourseCompetenciesPage200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolLpDataForCourseCompetenciesPage200ResponseWithDefaults() *ToolLpDataForCourseCompetenciesPage200Response {
	this := ToolLpDataForCourseCompetenciesPage200Response{}
	var canconfigurecoursecompetencies bool = null
	this.Canconfigurecoursecompetencies = canconfigurecoursecompetencies
	var cangradecompetencies bool = null
	this.Cangradecompetencies = cangradecompetencies
	var canmanagecompetencyframeworks bool = null
	this.Canmanagecompetencyframeworks = canmanagecompetencyframeworks
	var canmanagecoursecompetencies bool = null
	this.Canmanagecoursecompetencies = canmanagecoursecompetencies
	var courseid int32 = null
	this.Courseid = courseid
	var gradableuserid int32 = null
	this.Gradableuserid = &gradableuserid
	var manageurl string = "null"
	this.Manageurl = manageurl
	var pagecontextid int32 = null
	this.Pagecontextid = pagecontextid
	var pluginbaseurl string = "null"
	this.Pluginbaseurl = pluginbaseurl
	return &this
}

// GetCanconfigurecoursecompetencies returns the Canconfigurecoursecompetencies field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetCanconfigurecoursecompetencies() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canconfigurecoursecompetencies
}

// GetCanconfigurecoursecompetenciesOk returns a tuple with the Canconfigurecoursecompetencies field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetCanconfigurecoursecompetenciesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canconfigurecoursecompetencies, true
}

// SetCanconfigurecoursecompetencies sets field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) SetCanconfigurecoursecompetencies(v bool) {
	o.Canconfigurecoursecompetencies = v
}

// GetCangradecompetencies returns the Cangradecompetencies field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetCangradecompetencies() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Cangradecompetencies
}

// GetCangradecompetenciesOk returns a tuple with the Cangradecompetencies field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetCangradecompetenciesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cangradecompetencies, true
}

// SetCangradecompetencies sets field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) SetCangradecompetencies(v bool) {
	o.Cangradecompetencies = v
}

// GetCanmanagecompetencyframeworks returns the Canmanagecompetencyframeworks field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetCanmanagecompetencyframeworks() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canmanagecompetencyframeworks
}

// GetCanmanagecompetencyframeworksOk returns a tuple with the Canmanagecompetencyframeworks field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetCanmanagecompetencyframeworksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canmanagecompetencyframeworks, true
}

// SetCanmanagecompetencyframeworks sets field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) SetCanmanagecompetencyframeworks(v bool) {
	o.Canmanagecompetencyframeworks = v
}

// GetCanmanagecoursecompetencies returns the Canmanagecoursecompetencies field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetCanmanagecoursecompetencies() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canmanagecoursecompetencies
}

// GetCanmanagecoursecompetenciesOk returns a tuple with the Canmanagecoursecompetencies field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetCanmanagecoursecompetenciesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canmanagecoursecompetencies, true
}

// SetCanmanagecoursecompetencies sets field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) SetCanmanagecoursecompetencies(v bool) {
	o.Canmanagecoursecompetencies = v
}

// GetCompetencies returns the Competencies field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetCompetencies() []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInner {
	if o == nil {
		var ret []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInner
		return ret
	}

	return o.Competencies
}

// GetCompetenciesOk returns a tuple with the Competencies field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetCompetenciesOk() ([]ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Competencies, true
}

// SetCompetencies sets field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) SetCompetencies(v []ToolLpDataForCourseCompetenciesPage200ResponseCompetenciesInner) {
	o.Competencies = v
}

// GetCourseid returns the Courseid field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetCourseid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Courseid
}

// GetCourseidOk returns a tuple with the Courseid field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetCourseidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Courseid, true
}

// SetCourseid sets field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) SetCourseid(v int32) {
	o.Courseid = v
}

// GetGradableuserid returns the Gradableuserid field value if set, zero value otherwise.
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetGradableuserid() int32 {
	if o == nil || IsNil(o.Gradableuserid) {
		var ret int32
		return ret
	}
	return *o.Gradableuserid
}

// GetGradableuseridOk returns a tuple with the Gradableuserid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetGradableuseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Gradableuserid) {
		return nil, false
	}
	return o.Gradableuserid, true
}

// HasGradableuserid returns a boolean if a field has been set.
func (o *ToolLpDataForCourseCompetenciesPage200Response) HasGradableuserid() bool {
	if o != nil && !IsNil(o.Gradableuserid) {
		return true
	}

	return false
}

// SetGradableuserid gets a reference to the given int32 and assigns it to the Gradableuserid field.
func (o *ToolLpDataForCourseCompetenciesPage200Response) SetGradableuserid(v int32) {
	o.Gradableuserid = &v
}

// GetManageurl returns the Manageurl field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetManageurl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Manageurl
}

// GetManageurlOk returns a tuple with the Manageurl field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetManageurlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Manageurl, true
}

// SetManageurl sets field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) SetManageurl(v string) {
	o.Manageurl = v
}

// GetPagecontextid returns the Pagecontextid field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetPagecontextid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pagecontextid
}

// GetPagecontextidOk returns a tuple with the Pagecontextid field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetPagecontextidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagecontextid, true
}

// SetPagecontextid sets field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) SetPagecontextid(v int32) {
	o.Pagecontextid = v
}

// GetPluginbaseurl returns the Pluginbaseurl field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetPluginbaseurl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pluginbaseurl
}

// GetPluginbaseurlOk returns a tuple with the Pluginbaseurl field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetPluginbaseurlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pluginbaseurl, true
}

// SetPluginbaseurl sets field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) SetPluginbaseurl(v string) {
	o.Pluginbaseurl = v
}

// GetSettings returns the Settings field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetSettings() ToolLpDataForCourseCompetenciesPage200ResponseSettings {
	if o == nil {
		var ret ToolLpDataForCourseCompetenciesPage200ResponseSettings
		return ret
	}

	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetSettingsOk() (*ToolLpDataForCourseCompetenciesPage200ResponseSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Settings, true
}

// SetSettings sets field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) SetSettings(v ToolLpDataForCourseCompetenciesPage200ResponseSettings) {
	o.Settings = v
}

// GetStatistics returns the Statistics field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetStatistics() ToolLpDataForCourseCompetenciesPage200ResponseStatistics {
	if o == nil {
		var ret ToolLpDataForCourseCompetenciesPage200ResponseStatistics
		return ret
	}

	return o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value
// and a boolean to check if the value has been set.
func (o *ToolLpDataForCourseCompetenciesPage200Response) GetStatisticsOk() (*ToolLpDataForCourseCompetenciesPage200ResponseStatistics, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Statistics, true
}

// SetStatistics sets field value
func (o *ToolLpDataForCourseCompetenciesPage200Response) SetStatistics(v ToolLpDataForCourseCompetenciesPage200ResponseStatistics) {
	o.Statistics = v
}

func (o ToolLpDataForCourseCompetenciesPage200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolLpDataForCourseCompetenciesPage200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["canconfigurecoursecompetencies"] = o.Canconfigurecoursecompetencies
	toSerialize["cangradecompetencies"] = o.Cangradecompetencies
	toSerialize["canmanagecompetencyframeworks"] = o.Canmanagecompetencyframeworks
	toSerialize["canmanagecoursecompetencies"] = o.Canmanagecoursecompetencies
	toSerialize["competencies"] = o.Competencies
	toSerialize["courseid"] = o.Courseid
	if !IsNil(o.Gradableuserid) {
		toSerialize["gradableuserid"] = o.Gradableuserid
	}
	toSerialize["manageurl"] = o.Manageurl
	toSerialize["pagecontextid"] = o.Pagecontextid
	toSerialize["pluginbaseurl"] = o.Pluginbaseurl
	toSerialize["settings"] = o.Settings
	toSerialize["statistics"] = o.Statistics
	return toSerialize, nil
}

func (o *ToolLpDataForCourseCompetenciesPage200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"canconfigurecoursecompetencies",
		"cangradecompetencies",
		"canmanagecompetencyframeworks",
		"canmanagecoursecompetencies",
		"competencies",
		"courseid",
		"manageurl",
		"pagecontextid",
		"pluginbaseurl",
		"settings",
		"statistics",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varToolLpDataForCourseCompetenciesPage200Response := _ToolLpDataForCourseCompetenciesPage200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varToolLpDataForCourseCompetenciesPage200Response)

	if err != nil {
		return err
	}

	*o = ToolLpDataForCourseCompetenciesPage200Response(varToolLpDataForCourseCompetenciesPage200Response)

	return err
}

type NullableToolLpDataForCourseCompetenciesPage200Response struct {
	value *ToolLpDataForCourseCompetenciesPage200Response
	isSet bool
}

func (v NullableToolLpDataForCourseCompetenciesPage200Response) Get() *ToolLpDataForCourseCompetenciesPage200Response {
	return v.value
}

func (v *NullableToolLpDataForCourseCompetenciesPage200Response) Set(val *ToolLpDataForCourseCompetenciesPage200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableToolLpDataForCourseCompetenciesPage200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableToolLpDataForCourseCompetenciesPage200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolLpDataForCourseCompetenciesPage200Response(val *ToolLpDataForCourseCompetenciesPage200Response) *NullableToolLpDataForCourseCompetenciesPage200Response {
	return &NullableToolLpDataForCourseCompetenciesPage200Response{value: val, isSet: true}
}

func (v NullableToolLpDataForCourseCompetenciesPage200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolLpDataForCourseCompetenciesPage200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


