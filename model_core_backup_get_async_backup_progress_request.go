/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreBackupGetAsyncBackupProgressRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreBackupGetAsyncBackupProgressRequest{}

// CoreBackupGetAsyncBackupProgressRequest struct for CoreBackupGetAsyncBackupProgressRequest
type CoreBackupGetAsyncBackupProgressRequest struct {
	Backupids []map[string]interface{} `json:"backupids"`
	// Context id
	Contextid int32 `json:"contextid"`
}

type _CoreBackupGetAsyncBackupProgressRequest CoreBackupGetAsyncBackupProgressRequest

// NewCoreBackupGetAsyncBackupProgressRequest instantiates a new CoreBackupGetAsyncBackupProgressRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreBackupGetAsyncBackupProgressRequest(backupids []map[string]interface{}, contextid int32) *CoreBackupGetAsyncBackupProgressRequest {
	this := CoreBackupGetAsyncBackupProgressRequest{}
	this.Backupids = backupids
	this.Contextid = contextid
	return &this
}

// NewCoreBackupGetAsyncBackupProgressRequestWithDefaults instantiates a new CoreBackupGetAsyncBackupProgressRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreBackupGetAsyncBackupProgressRequestWithDefaults() *CoreBackupGetAsyncBackupProgressRequest {
	this := CoreBackupGetAsyncBackupProgressRequest{}
	return &this
}

// GetBackupids returns the Backupids field value
func (o *CoreBackupGetAsyncBackupProgressRequest) GetBackupids() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Backupids
}

// GetBackupidsOk returns a tuple with the Backupids field value
// and a boolean to check if the value has been set.
func (o *CoreBackupGetAsyncBackupProgressRequest) GetBackupidsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Backupids, true
}

// SetBackupids sets field value
func (o *CoreBackupGetAsyncBackupProgressRequest) SetBackupids(v []map[string]interface{}) {
	o.Backupids = v
}

// GetContextid returns the Contextid field value
func (o *CoreBackupGetAsyncBackupProgressRequest) GetContextid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Contextid
}

// GetContextidOk returns a tuple with the Contextid field value
// and a boolean to check if the value has been set.
func (o *CoreBackupGetAsyncBackupProgressRequest) GetContextidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contextid, true
}

// SetContextid sets field value
func (o *CoreBackupGetAsyncBackupProgressRequest) SetContextid(v int32) {
	o.Contextid = v
}

func (o CoreBackupGetAsyncBackupProgressRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreBackupGetAsyncBackupProgressRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["backupids"] = o.Backupids
	toSerialize["contextid"] = o.Contextid
	return toSerialize, nil
}

func (o *CoreBackupGetAsyncBackupProgressRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"backupids",
		"contextid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreBackupGetAsyncBackupProgressRequest := _CoreBackupGetAsyncBackupProgressRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreBackupGetAsyncBackupProgressRequest)

	if err != nil {
		return err
	}

	*o = CoreBackupGetAsyncBackupProgressRequest(varCoreBackupGetAsyncBackupProgressRequest)

	return err
}

type NullableCoreBackupGetAsyncBackupProgressRequest struct {
	value *CoreBackupGetAsyncBackupProgressRequest
	isSet bool
}

func (v NullableCoreBackupGetAsyncBackupProgressRequest) Get() *CoreBackupGetAsyncBackupProgressRequest {
	return v.value
}

func (v *NullableCoreBackupGetAsyncBackupProgressRequest) Set(val *CoreBackupGetAsyncBackupProgressRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreBackupGetAsyncBackupProgressRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreBackupGetAsyncBackupProgressRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreBackupGetAsyncBackupProgressRequest(val *CoreBackupGetAsyncBackupProgressRequest) *NullableCoreBackupGetAsyncBackupProgressRequest {
	return &NullableCoreBackupGetAsyncBackupProgressRequest{value: val, isSet: true}
}

func (v NullableCoreBackupGetAsyncBackupProgressRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreBackupGetAsyncBackupProgressRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


