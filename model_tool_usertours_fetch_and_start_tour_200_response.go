/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ToolUsertoursFetchAndStartTour200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolUsertoursFetchAndStartTour200Response{}

// ToolUsertoursFetchAndStartTour200Response struct for ToolUsertoursFetchAndStartTour200Response
type ToolUsertoursFetchAndStartTour200Response struct {
	Tourconfig *ToolUsertoursFetchAndStartTour200ResponseTourconfig `json:"tourconfig,omitempty"`
}

// NewToolUsertoursFetchAndStartTour200Response instantiates a new ToolUsertoursFetchAndStartTour200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolUsertoursFetchAndStartTour200Response() *ToolUsertoursFetchAndStartTour200Response {
	this := ToolUsertoursFetchAndStartTour200Response{}
	return &this
}

// NewToolUsertoursFetchAndStartTour200ResponseWithDefaults instantiates a new ToolUsertoursFetchAndStartTour200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolUsertoursFetchAndStartTour200ResponseWithDefaults() *ToolUsertoursFetchAndStartTour200Response {
	this := ToolUsertoursFetchAndStartTour200Response{}
	return &this
}

// GetTourconfig returns the Tourconfig field value if set, zero value otherwise.
func (o *ToolUsertoursFetchAndStartTour200Response) GetTourconfig() ToolUsertoursFetchAndStartTour200ResponseTourconfig {
	if o == nil || IsNil(o.Tourconfig) {
		var ret ToolUsertoursFetchAndStartTour200ResponseTourconfig
		return ret
	}
	return *o.Tourconfig
}

// GetTourconfigOk returns a tuple with the Tourconfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolUsertoursFetchAndStartTour200Response) GetTourconfigOk() (*ToolUsertoursFetchAndStartTour200ResponseTourconfig, bool) {
	if o == nil || IsNil(o.Tourconfig) {
		return nil, false
	}
	return o.Tourconfig, true
}

// HasTourconfig returns a boolean if a field has been set.
func (o *ToolUsertoursFetchAndStartTour200Response) HasTourconfig() bool {
	if o != nil && !IsNil(o.Tourconfig) {
		return true
	}

	return false
}

// SetTourconfig gets a reference to the given ToolUsertoursFetchAndStartTour200ResponseTourconfig and assigns it to the Tourconfig field.
func (o *ToolUsertoursFetchAndStartTour200Response) SetTourconfig(v ToolUsertoursFetchAndStartTour200ResponseTourconfig) {
	o.Tourconfig = &v
}

func (o ToolUsertoursFetchAndStartTour200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolUsertoursFetchAndStartTour200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tourconfig) {
		toSerialize["tourconfig"] = o.Tourconfig
	}
	return toSerialize, nil
}

type NullableToolUsertoursFetchAndStartTour200Response struct {
	value *ToolUsertoursFetchAndStartTour200Response
	isSet bool
}

func (v NullableToolUsertoursFetchAndStartTour200Response) Get() *ToolUsertoursFetchAndStartTour200Response {
	return v.value
}

func (v *NullableToolUsertoursFetchAndStartTour200Response) Set(val *ToolUsertoursFetchAndStartTour200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableToolUsertoursFetchAndStartTour200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableToolUsertoursFetchAndStartTour200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolUsertoursFetchAndStartTour200Response(val *ToolUsertoursFetchAndStartTour200Response) *NullableToolUsertoursFetchAndStartTour200Response {
	return &NullableToolUsertoursFetchAndStartTour200Response{value: val, isSet: true}
}

func (v NullableToolUsertoursFetchAndStartTour200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolUsertoursFetchAndStartTour200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


