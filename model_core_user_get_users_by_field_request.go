/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreUserGetUsersByFieldRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreUserGetUsersByFieldRequest{}

// CoreUserGetUsersByFieldRequest struct for CoreUserGetUsersByFieldRequest
type CoreUserGetUsersByFieldRequest struct {
	// the search field can be                     'id' or 'idnumber' or 'username' or 'email'
	Field string `json:"field"`
	Values []map[string]interface{} `json:"values"`
}

type _CoreUserGetUsersByFieldRequest CoreUserGetUsersByFieldRequest

// NewCoreUserGetUsersByFieldRequest instantiates a new CoreUserGetUsersByFieldRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreUserGetUsersByFieldRequest(field string, values []map[string]interface{}) *CoreUserGetUsersByFieldRequest {
	this := CoreUserGetUsersByFieldRequest{}
	this.Field = field
	this.Values = values
	return &this
}

// NewCoreUserGetUsersByFieldRequestWithDefaults instantiates a new CoreUserGetUsersByFieldRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreUserGetUsersByFieldRequestWithDefaults() *CoreUserGetUsersByFieldRequest {
	this := CoreUserGetUsersByFieldRequest{}
	var field string = "null"
	this.Field = field
	return &this
}

// GetField returns the Field field value
func (o *CoreUserGetUsersByFieldRequest) GetField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *CoreUserGetUsersByFieldRequest) GetFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *CoreUserGetUsersByFieldRequest) SetField(v string) {
	o.Field = v
}

// GetValues returns the Values field value
func (o *CoreUserGetUsersByFieldRequest) GetValues() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *CoreUserGetUsersByFieldRequest) GetValuesOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Values, true
}

// SetValues sets field value
func (o *CoreUserGetUsersByFieldRequest) SetValues(v []map[string]interface{}) {
	o.Values = v
}

func (o CoreUserGetUsersByFieldRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreUserGetUsersByFieldRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field"] = o.Field
	toSerialize["values"] = o.Values
	return toSerialize, nil
}

func (o *CoreUserGetUsersByFieldRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"field",
		"values",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreUserGetUsersByFieldRequest := _CoreUserGetUsersByFieldRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreUserGetUsersByFieldRequest)

	if err != nil {
		return err
	}

	*o = CoreUserGetUsersByFieldRequest(varCoreUserGetUsersByFieldRequest)

	return err
}

type NullableCoreUserGetUsersByFieldRequest struct {
	value *CoreUserGetUsersByFieldRequest
	isSet bool
}

func (v NullableCoreUserGetUsersByFieldRequest) Get() *CoreUserGetUsersByFieldRequest {
	return v.value
}

func (v *NullableCoreUserGetUsersByFieldRequest) Set(val *CoreUserGetUsersByFieldRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreUserGetUsersByFieldRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreUserGetUsersByFieldRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreUserGetUsersByFieldRequest(val *CoreUserGetUsersByFieldRequest) *NullableCoreUserGetUsersByFieldRequest {
	return &NullableCoreUserGetUsersByFieldRequest{value: val, isSet: true}
}

func (v NullableCoreUserGetUsersByFieldRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreUserGetUsersByFieldRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


