/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModLessonGetQuestionsAttemptsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModLessonGetQuestionsAttemptsRequest{}

// ModLessonGetQuestionsAttemptsRequest struct for ModLessonGetQuestionsAttemptsRequest
type ModLessonGetQuestionsAttemptsRequest struct {
	// lesson attempt number
	Attempt int32 `json:"attempt"`
	// only fetch correct attempts
	Correct *bool `json:"correct,omitempty"`
	// lesson instance id
	Lessonid int32 `json:"lessonid"`
	// only fetch attempts at the given page
	Pageid *int32 `json:"pageid,omitempty"`
	// only fetch attempts of the given user
	Userid *int32 `json:"userid,omitempty"`
}

type _ModLessonGetQuestionsAttemptsRequest ModLessonGetQuestionsAttemptsRequest

// NewModLessonGetQuestionsAttemptsRequest instantiates a new ModLessonGetQuestionsAttemptsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModLessonGetQuestionsAttemptsRequest(attempt int32, lessonid int32) *ModLessonGetQuestionsAttemptsRequest {
	this := ModLessonGetQuestionsAttemptsRequest{}
	this.Attempt = attempt
	var correct bool = false
	this.Correct = &correct
	this.Lessonid = lessonid
	var pageid int32 = null
	this.Pageid = &pageid
	var userid int32 = null
	this.Userid = &userid
	return &this
}

// NewModLessonGetQuestionsAttemptsRequestWithDefaults instantiates a new ModLessonGetQuestionsAttemptsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModLessonGetQuestionsAttemptsRequestWithDefaults() *ModLessonGetQuestionsAttemptsRequest {
	this := ModLessonGetQuestionsAttemptsRequest{}
	var correct bool = false
	this.Correct = &correct
	var pageid int32 = null
	this.Pageid = &pageid
	var userid int32 = null
	this.Userid = &userid
	return &this
}

// GetAttempt returns the Attempt field value
func (o *ModLessonGetQuestionsAttemptsRequest) GetAttempt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Attempt
}

// GetAttemptOk returns a tuple with the Attempt field value
// and a boolean to check if the value has been set.
func (o *ModLessonGetQuestionsAttemptsRequest) GetAttemptOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attempt, true
}

// SetAttempt sets field value
func (o *ModLessonGetQuestionsAttemptsRequest) SetAttempt(v int32) {
	o.Attempt = v
}

// GetCorrect returns the Correct field value if set, zero value otherwise.
func (o *ModLessonGetQuestionsAttemptsRequest) GetCorrect() bool {
	if o == nil || IsNil(o.Correct) {
		var ret bool
		return ret
	}
	return *o.Correct
}

// GetCorrectOk returns a tuple with the Correct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLessonGetQuestionsAttemptsRequest) GetCorrectOk() (*bool, bool) {
	if o == nil || IsNil(o.Correct) {
		return nil, false
	}
	return o.Correct, true
}

// HasCorrect returns a boolean if a field has been set.
func (o *ModLessonGetQuestionsAttemptsRequest) HasCorrect() bool {
	if o != nil && !IsNil(o.Correct) {
		return true
	}

	return false
}

// SetCorrect gets a reference to the given bool and assigns it to the Correct field.
func (o *ModLessonGetQuestionsAttemptsRequest) SetCorrect(v bool) {
	o.Correct = &v
}

// GetLessonid returns the Lessonid field value
func (o *ModLessonGetQuestionsAttemptsRequest) GetLessonid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Lessonid
}

// GetLessonidOk returns a tuple with the Lessonid field value
// and a boolean to check if the value has been set.
func (o *ModLessonGetQuestionsAttemptsRequest) GetLessonidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lessonid, true
}

// SetLessonid sets field value
func (o *ModLessonGetQuestionsAttemptsRequest) SetLessonid(v int32) {
	o.Lessonid = v
}

// GetPageid returns the Pageid field value if set, zero value otherwise.
func (o *ModLessonGetQuestionsAttemptsRequest) GetPageid() int32 {
	if o == nil || IsNil(o.Pageid) {
		var ret int32
		return ret
	}
	return *o.Pageid
}

// GetPageidOk returns a tuple with the Pageid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLessonGetQuestionsAttemptsRequest) GetPageidOk() (*int32, bool) {
	if o == nil || IsNil(o.Pageid) {
		return nil, false
	}
	return o.Pageid, true
}

// HasPageid returns a boolean if a field has been set.
func (o *ModLessonGetQuestionsAttemptsRequest) HasPageid() bool {
	if o != nil && !IsNil(o.Pageid) {
		return true
	}

	return false
}

// SetPageid gets a reference to the given int32 and assigns it to the Pageid field.
func (o *ModLessonGetQuestionsAttemptsRequest) SetPageid(v int32) {
	o.Pageid = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *ModLessonGetQuestionsAttemptsRequest) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModLessonGetQuestionsAttemptsRequest) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *ModLessonGetQuestionsAttemptsRequest) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *ModLessonGetQuestionsAttemptsRequest) SetUserid(v int32) {
	o.Userid = &v
}

func (o ModLessonGetQuestionsAttemptsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModLessonGetQuestionsAttemptsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attempt"] = o.Attempt
	if !IsNil(o.Correct) {
		toSerialize["correct"] = o.Correct
	}
	toSerialize["lessonid"] = o.Lessonid
	if !IsNil(o.Pageid) {
		toSerialize["pageid"] = o.Pageid
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

func (o *ModLessonGetQuestionsAttemptsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attempt",
		"lessonid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModLessonGetQuestionsAttemptsRequest := _ModLessonGetQuestionsAttemptsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModLessonGetQuestionsAttemptsRequest)

	if err != nil {
		return err
	}

	*o = ModLessonGetQuestionsAttemptsRequest(varModLessonGetQuestionsAttemptsRequest)

	return err
}

type NullableModLessonGetQuestionsAttemptsRequest struct {
	value *ModLessonGetQuestionsAttemptsRequest
	isSet bool
}

func (v NullableModLessonGetQuestionsAttemptsRequest) Get() *ModLessonGetQuestionsAttemptsRequest {
	return v.value
}

func (v *NullableModLessonGetQuestionsAttemptsRequest) Set(val *ModLessonGetQuestionsAttemptsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModLessonGetQuestionsAttemptsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModLessonGetQuestionsAttemptsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModLessonGetQuestionsAttemptsRequest(val *ModLessonGetQuestionsAttemptsRequest) *NullableModLessonGetQuestionsAttemptsRequest {
	return &NullableModLessonGetQuestionsAttemptsRequest{value: val, isSet: true}
}

func (v NullableModLessonGetQuestionsAttemptsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModLessonGetQuestionsAttemptsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


