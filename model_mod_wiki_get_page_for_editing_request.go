/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModWikiGetPageForEditingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModWikiGetPageForEditingRequest{}

// ModWikiGetPageForEditingRequest struct for ModWikiGetPageForEditingRequest
type ModWikiGetPageForEditingRequest struct {
	// Just renew lock and not return content.
	Lockonly *bool `json:"lockonly,omitempty"`
	// Page ID to edit.
	Pageid int32 `json:"pageid"`
	// Section page title.
	Section *string `json:"section,omitempty"`
}

type _ModWikiGetPageForEditingRequest ModWikiGetPageForEditingRequest

// NewModWikiGetPageForEditingRequest instantiates a new ModWikiGetPageForEditingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModWikiGetPageForEditingRequest(pageid int32) *ModWikiGetPageForEditingRequest {
	this := ModWikiGetPageForEditingRequest{}
	var lockonly bool = false
	this.Lockonly = &lockonly
	this.Pageid = pageid
	return &this
}

// NewModWikiGetPageForEditingRequestWithDefaults instantiates a new ModWikiGetPageForEditingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModWikiGetPageForEditingRequestWithDefaults() *ModWikiGetPageForEditingRequest {
	this := ModWikiGetPageForEditingRequest{}
	var lockonly bool = false
	this.Lockonly = &lockonly
	var pageid int32 = null
	this.Pageid = pageid
	return &this
}

// GetLockonly returns the Lockonly field value if set, zero value otherwise.
func (o *ModWikiGetPageForEditingRequest) GetLockonly() bool {
	if o == nil || IsNil(o.Lockonly) {
		var ret bool
		return ret
	}
	return *o.Lockonly
}

// GetLockonlyOk returns a tuple with the Lockonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetPageForEditingRequest) GetLockonlyOk() (*bool, bool) {
	if o == nil || IsNil(o.Lockonly) {
		return nil, false
	}
	return o.Lockonly, true
}

// HasLockonly returns a boolean if a field has been set.
func (o *ModWikiGetPageForEditingRequest) HasLockonly() bool {
	if o != nil && !IsNil(o.Lockonly) {
		return true
	}

	return false
}

// SetLockonly gets a reference to the given bool and assigns it to the Lockonly field.
func (o *ModWikiGetPageForEditingRequest) SetLockonly(v bool) {
	o.Lockonly = &v
}

// GetPageid returns the Pageid field value
func (o *ModWikiGetPageForEditingRequest) GetPageid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pageid
}

// GetPageidOk returns a tuple with the Pageid field value
// and a boolean to check if the value has been set.
func (o *ModWikiGetPageForEditingRequest) GetPageidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pageid, true
}

// SetPageid sets field value
func (o *ModWikiGetPageForEditingRequest) SetPageid(v int32) {
	o.Pageid = v
}

// GetSection returns the Section field value if set, zero value otherwise.
func (o *ModWikiGetPageForEditingRequest) GetSection() string {
	if o == nil || IsNil(o.Section) {
		var ret string
		return ret
	}
	return *o.Section
}

// GetSectionOk returns a tuple with the Section field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWikiGetPageForEditingRequest) GetSectionOk() (*string, bool) {
	if o == nil || IsNil(o.Section) {
		return nil, false
	}
	return o.Section, true
}

// HasSection returns a boolean if a field has been set.
func (o *ModWikiGetPageForEditingRequest) HasSection() bool {
	if o != nil && !IsNil(o.Section) {
		return true
	}

	return false
}

// SetSection gets a reference to the given string and assigns it to the Section field.
func (o *ModWikiGetPageForEditingRequest) SetSection(v string) {
	o.Section = &v
}

func (o ModWikiGetPageForEditingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModWikiGetPageForEditingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Lockonly) {
		toSerialize["lockonly"] = o.Lockonly
	}
	toSerialize["pageid"] = o.Pageid
	if !IsNil(o.Section) {
		toSerialize["section"] = o.Section
	}
	return toSerialize, nil
}

func (o *ModWikiGetPageForEditingRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pageid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModWikiGetPageForEditingRequest := _ModWikiGetPageForEditingRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModWikiGetPageForEditingRequest)

	if err != nil {
		return err
	}

	*o = ModWikiGetPageForEditingRequest(varModWikiGetPageForEditingRequest)

	return err
}

type NullableModWikiGetPageForEditingRequest struct {
	value *ModWikiGetPageForEditingRequest
	isSet bool
}

func (v NullableModWikiGetPageForEditingRequest) Get() *ModWikiGetPageForEditingRequest {
	return v.value
}

func (v *NullableModWikiGetPageForEditingRequest) Set(val *ModWikiGetPageForEditingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModWikiGetPageForEditingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModWikiGetPageForEditingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModWikiGetPageForEditingRequest(val *ModWikiGetPageForEditingRequest) *NullableModWikiGetPageForEditingRequest {
	return &NullableModWikiGetPageForEditingRequest{value: val, isSet: true}
}

func (v NullableModWikiGetPageForEditingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModWikiGetPageForEditingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


