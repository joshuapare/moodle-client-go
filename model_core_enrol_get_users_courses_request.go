/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreEnrolGetUsersCoursesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreEnrolGetUsersCoursesRequest{}

// CoreEnrolGetUsersCoursesRequest struct for CoreEnrolGetUsersCoursesRequest
type CoreEnrolGetUsersCoursesRequest struct {
	// Include count of enrolled users for each course? This can add several seconds to the response time if a user is on several large courses, so set this to false if the value will not be used to improve performance.
	Returnusercount *bool `json:"returnusercount,omitempty"`
	// user id
	Userid int32 `json:"userid"`
}

type _CoreEnrolGetUsersCoursesRequest CoreEnrolGetUsersCoursesRequest

// NewCoreEnrolGetUsersCoursesRequest instantiates a new CoreEnrolGetUsersCoursesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreEnrolGetUsersCoursesRequest(userid int32) *CoreEnrolGetUsersCoursesRequest {
	this := CoreEnrolGetUsersCoursesRequest{}
	var returnusercount bool = true
	this.Returnusercount = &returnusercount
	this.Userid = userid
	return &this
}

// NewCoreEnrolGetUsersCoursesRequestWithDefaults instantiates a new CoreEnrolGetUsersCoursesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreEnrolGetUsersCoursesRequestWithDefaults() *CoreEnrolGetUsersCoursesRequest {
	this := CoreEnrolGetUsersCoursesRequest{}
	var returnusercount bool = true
	this.Returnusercount = &returnusercount
	return &this
}

// GetReturnusercount returns the Returnusercount field value if set, zero value otherwise.
func (o *CoreEnrolGetUsersCoursesRequest) GetReturnusercount() bool {
	if o == nil || IsNil(o.Returnusercount) {
		var ret bool
		return ret
	}
	return *o.Returnusercount
}

// GetReturnusercountOk returns a tuple with the Returnusercount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreEnrolGetUsersCoursesRequest) GetReturnusercountOk() (*bool, bool) {
	if o == nil || IsNil(o.Returnusercount) {
		return nil, false
	}
	return o.Returnusercount, true
}

// HasReturnusercount returns a boolean if a field has been set.
func (o *CoreEnrolGetUsersCoursesRequest) HasReturnusercount() bool {
	if o != nil && !IsNil(o.Returnusercount) {
		return true
	}

	return false
}

// SetReturnusercount gets a reference to the given bool and assigns it to the Returnusercount field.
func (o *CoreEnrolGetUsersCoursesRequest) SetReturnusercount(v bool) {
	o.Returnusercount = &v
}

// GetUserid returns the Userid field value
func (o *CoreEnrolGetUsersCoursesRequest) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *CoreEnrolGetUsersCoursesRequest) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *CoreEnrolGetUsersCoursesRequest) SetUserid(v int32) {
	o.Userid = v
}

func (o CoreEnrolGetUsersCoursesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreEnrolGetUsersCoursesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Returnusercount) {
		toSerialize["returnusercount"] = o.Returnusercount
	}
	toSerialize["userid"] = o.Userid
	return toSerialize, nil
}

func (o *CoreEnrolGetUsersCoursesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"userid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreEnrolGetUsersCoursesRequest := _CoreEnrolGetUsersCoursesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreEnrolGetUsersCoursesRequest)

	if err != nil {
		return err
	}

	*o = CoreEnrolGetUsersCoursesRequest(varCoreEnrolGetUsersCoursesRequest)

	return err
}

type NullableCoreEnrolGetUsersCoursesRequest struct {
	value *CoreEnrolGetUsersCoursesRequest
	isSet bool
}

func (v NullableCoreEnrolGetUsersCoursesRequest) Get() *CoreEnrolGetUsersCoursesRequest {
	return v.value
}

func (v *NullableCoreEnrolGetUsersCoursesRequest) Set(val *CoreEnrolGetUsersCoursesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreEnrolGetUsersCoursesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreEnrolGetUsersCoursesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreEnrolGetUsersCoursesRequest(val *CoreEnrolGetUsersCoursesRequest) *NullableCoreEnrolGetUsersCoursesRequest {
	return &NullableCoreEnrolGetUsersCoursesRequest{value: val, isSet: true}
}

func (v NullableCoreEnrolGetUsersCoursesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreEnrolGetUsersCoursesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


