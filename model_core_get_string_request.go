/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreGetStringRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreGetStringRequest{}

// CoreGetStringRequest struct for CoreGetStringRequest
type CoreGetStringRequest struct {
	// component
	Component *string `json:"component,omitempty"`
	// lang
	Lang *string `json:"lang,omitempty"`
	// string identifier
	Stringid string `json:"stringid"`
	Stringparams []CoreGetStringRequestStringparamsInner `json:"stringparams,omitempty"`
}

type _CoreGetStringRequest CoreGetStringRequest

// NewCoreGetStringRequest instantiates a new CoreGetStringRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreGetStringRequest(stringid string) *CoreGetStringRequest {
	this := CoreGetStringRequest{}
	var component string = "moodle"
	this.Component = &component
	this.Stringid = stringid
	return &this
}

// NewCoreGetStringRequestWithDefaults instantiates a new CoreGetStringRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreGetStringRequestWithDefaults() *CoreGetStringRequest {
	this := CoreGetStringRequest{}
	var component string = "moodle"
	this.Component = &component
	var stringid string = "null"
	this.Stringid = stringid
	return &this
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *CoreGetStringRequest) GetComponent() string {
	if o == nil || IsNil(o.Component) {
		var ret string
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGetStringRequest) GetComponentOk() (*string, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *CoreGetStringRequest) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given string and assigns it to the Component field.
func (o *CoreGetStringRequest) SetComponent(v string) {
	o.Component = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *CoreGetStringRequest) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGetStringRequest) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *CoreGetStringRequest) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *CoreGetStringRequest) SetLang(v string) {
	o.Lang = &v
}

// GetStringid returns the Stringid field value
func (o *CoreGetStringRequest) GetStringid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Stringid
}

// GetStringidOk returns a tuple with the Stringid field value
// and a boolean to check if the value has been set.
func (o *CoreGetStringRequest) GetStringidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stringid, true
}

// SetStringid sets field value
func (o *CoreGetStringRequest) SetStringid(v string) {
	o.Stringid = v
}

// GetStringparams returns the Stringparams field value if set, zero value otherwise.
func (o *CoreGetStringRequest) GetStringparams() []CoreGetStringRequestStringparamsInner {
	if o == nil || IsNil(o.Stringparams) {
		var ret []CoreGetStringRequestStringparamsInner
		return ret
	}
	return o.Stringparams
}

// GetStringparamsOk returns a tuple with the Stringparams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGetStringRequest) GetStringparamsOk() ([]CoreGetStringRequestStringparamsInner, bool) {
	if o == nil || IsNil(o.Stringparams) {
		return nil, false
	}
	return o.Stringparams, true
}

// HasStringparams returns a boolean if a field has been set.
func (o *CoreGetStringRequest) HasStringparams() bool {
	if o != nil && !IsNil(o.Stringparams) {
		return true
	}

	return false
}

// SetStringparams gets a reference to the given []CoreGetStringRequestStringparamsInner and assigns it to the Stringparams field.
func (o *CoreGetStringRequest) SetStringparams(v []CoreGetStringRequestStringparamsInner) {
	o.Stringparams = v
}

func (o CoreGetStringRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreGetStringRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Component) {
		toSerialize["component"] = o.Component
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	toSerialize["stringid"] = o.Stringid
	if !IsNil(o.Stringparams) {
		toSerialize["stringparams"] = o.Stringparams
	}
	return toSerialize, nil
}

func (o *CoreGetStringRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"stringid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreGetStringRequest := _CoreGetStringRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreGetStringRequest)

	if err != nil {
		return err
	}

	*o = CoreGetStringRequest(varCoreGetStringRequest)

	return err
}

type NullableCoreGetStringRequest struct {
	value *CoreGetStringRequest
	isSet bool
}

func (v NullableCoreGetStringRequest) Get() *CoreGetStringRequest {
	return v.value
}

func (v *NullableCoreGetStringRequest) Set(val *CoreGetStringRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreGetStringRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreGetStringRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreGetStringRequest(val *CoreGetStringRequest) *NullableCoreGetStringRequest {
	return &NullableCoreGetStringRequest{value: val, isSet: true}
}

func (v NullableCoreGetStringRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreGetStringRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


