/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModQuizUpdateFilterConditionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModQuizUpdateFilterConditionRequest{}

// ModQuizUpdateFilterConditionRequest struct for ModQuizUpdateFilterConditionRequest
type ModQuizUpdateFilterConditionRequest struct {
	// The cmid of the quiz
	Cmid int32 `json:"cmid"`
	// Filter condition
	Filtercondition string `json:"filtercondition"`
	// The quiz slot ID for the random question.
	Slotid int32 `json:"slotid"`
}

type _ModQuizUpdateFilterConditionRequest ModQuizUpdateFilterConditionRequest

// NewModQuizUpdateFilterConditionRequest instantiates a new ModQuizUpdateFilterConditionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModQuizUpdateFilterConditionRequest(cmid int32, filtercondition string, slotid int32) *ModQuizUpdateFilterConditionRequest {
	this := ModQuizUpdateFilterConditionRequest{}
	this.Cmid = cmid
	this.Filtercondition = filtercondition
	this.Slotid = slotid
	return &this
}

// NewModQuizUpdateFilterConditionRequestWithDefaults instantiates a new ModQuizUpdateFilterConditionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModQuizUpdateFilterConditionRequestWithDefaults() *ModQuizUpdateFilterConditionRequest {
	this := ModQuizUpdateFilterConditionRequest{}
	var filtercondition string = "null"
	this.Filtercondition = filtercondition
	var slotid int32 = null
	this.Slotid = slotid
	return &this
}

// GetCmid returns the Cmid field value
func (o *ModQuizUpdateFilterConditionRequest) GetCmid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cmid
}

// GetCmidOk returns a tuple with the Cmid field value
// and a boolean to check if the value has been set.
func (o *ModQuizUpdateFilterConditionRequest) GetCmidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cmid, true
}

// SetCmid sets field value
func (o *ModQuizUpdateFilterConditionRequest) SetCmid(v int32) {
	o.Cmid = v
}

// GetFiltercondition returns the Filtercondition field value
func (o *ModQuizUpdateFilterConditionRequest) GetFiltercondition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Filtercondition
}

// GetFilterconditionOk returns a tuple with the Filtercondition field value
// and a boolean to check if the value has been set.
func (o *ModQuizUpdateFilterConditionRequest) GetFilterconditionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filtercondition, true
}

// SetFiltercondition sets field value
func (o *ModQuizUpdateFilterConditionRequest) SetFiltercondition(v string) {
	o.Filtercondition = v
}

// GetSlotid returns the Slotid field value
func (o *ModQuizUpdateFilterConditionRequest) GetSlotid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Slotid
}

// GetSlotidOk returns a tuple with the Slotid field value
// and a boolean to check if the value has been set.
func (o *ModQuizUpdateFilterConditionRequest) GetSlotidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slotid, true
}

// SetSlotid sets field value
func (o *ModQuizUpdateFilterConditionRequest) SetSlotid(v int32) {
	o.Slotid = v
}

func (o ModQuizUpdateFilterConditionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModQuizUpdateFilterConditionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cmid"] = o.Cmid
	toSerialize["filtercondition"] = o.Filtercondition
	toSerialize["slotid"] = o.Slotid
	return toSerialize, nil
}

func (o *ModQuizUpdateFilterConditionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cmid",
		"filtercondition",
		"slotid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModQuizUpdateFilterConditionRequest := _ModQuizUpdateFilterConditionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModQuizUpdateFilterConditionRequest)

	if err != nil {
		return err
	}

	*o = ModQuizUpdateFilterConditionRequest(varModQuizUpdateFilterConditionRequest)

	return err
}

type NullableModQuizUpdateFilterConditionRequest struct {
	value *ModQuizUpdateFilterConditionRequest
	isSet bool
}

func (v NullableModQuizUpdateFilterConditionRequest) Get() *ModQuizUpdateFilterConditionRequest {
	return v.value
}

func (v *NullableModQuizUpdateFilterConditionRequest) Set(val *ModQuizUpdateFilterConditionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModQuizUpdateFilterConditionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModQuizUpdateFilterConditionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModQuizUpdateFilterConditionRequest(val *ModQuizUpdateFilterConditionRequest) *NullableModQuizUpdateFilterConditionRequest {
	return &NullableModQuizUpdateFilterConditionRequest{value: val, isSet: true}
}

func (v NullableModQuizUpdateFilterConditionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModQuizUpdateFilterConditionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


