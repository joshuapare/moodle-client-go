/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCompetencyGradeCompetencyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCompetencyGradeCompetencyRequest{}

// CoreCompetencyGradeCompetencyRequest struct for CoreCompetencyGradeCompetencyRequest
type CoreCompetencyGradeCompetencyRequest struct {
	// Competency ID
	Competencyid int32 `json:"competencyid"`
	// New grade
	Grade int32 `json:"grade"`
	// A note to attach to the evidence
	Note *string `json:"note,omitempty"`
	// User ID
	Userid int32 `json:"userid"`
}

type _CoreCompetencyGradeCompetencyRequest CoreCompetencyGradeCompetencyRequest

// NewCoreCompetencyGradeCompetencyRequest instantiates a new CoreCompetencyGradeCompetencyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCompetencyGradeCompetencyRequest(competencyid int32, grade int32, userid int32) *CoreCompetencyGradeCompetencyRequest {
	this := CoreCompetencyGradeCompetencyRequest{}
	this.Competencyid = competencyid
	this.Grade = grade
	var note string = "null"
	this.Note = &note
	this.Userid = userid
	return &this
}

// NewCoreCompetencyGradeCompetencyRequestWithDefaults instantiates a new CoreCompetencyGradeCompetencyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCompetencyGradeCompetencyRequestWithDefaults() *CoreCompetencyGradeCompetencyRequest {
	this := CoreCompetencyGradeCompetencyRequest{}
	var competencyid int32 = null
	this.Competencyid = competencyid
	var grade int32 = null
	this.Grade = grade
	var note string = "null"
	this.Note = &note
	return &this
}

// GetCompetencyid returns the Competencyid field value
func (o *CoreCompetencyGradeCompetencyRequest) GetCompetencyid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Competencyid
}

// GetCompetencyidOk returns a tuple with the Competencyid field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyGradeCompetencyRequest) GetCompetencyidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Competencyid, true
}

// SetCompetencyid sets field value
func (o *CoreCompetencyGradeCompetencyRequest) SetCompetencyid(v int32) {
	o.Competencyid = v
}

// GetGrade returns the Grade field value
func (o *CoreCompetencyGradeCompetencyRequest) GetGrade() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Grade
}

// GetGradeOk returns a tuple with the Grade field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyGradeCompetencyRequest) GetGradeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Grade, true
}

// SetGrade sets field value
func (o *CoreCompetencyGradeCompetencyRequest) SetGrade(v int32) {
	o.Grade = v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *CoreCompetencyGradeCompetencyRequest) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyGradeCompetencyRequest) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *CoreCompetencyGradeCompetencyRequest) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *CoreCompetencyGradeCompetencyRequest) SetNote(v string) {
	o.Note = &v
}

// GetUserid returns the Userid field value
func (o *CoreCompetencyGradeCompetencyRequest) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyGradeCompetencyRequest) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *CoreCompetencyGradeCompetencyRequest) SetUserid(v int32) {
	o.Userid = v
}

func (o CoreCompetencyGradeCompetencyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCompetencyGradeCompetencyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["competencyid"] = o.Competencyid
	toSerialize["grade"] = o.Grade
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	toSerialize["userid"] = o.Userid
	return toSerialize, nil
}

func (o *CoreCompetencyGradeCompetencyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"competencyid",
		"grade",
		"userid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCompetencyGradeCompetencyRequest := _CoreCompetencyGradeCompetencyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCompetencyGradeCompetencyRequest)

	if err != nil {
		return err
	}

	*o = CoreCompetencyGradeCompetencyRequest(varCoreCompetencyGradeCompetencyRequest)

	return err
}

type NullableCoreCompetencyGradeCompetencyRequest struct {
	value *CoreCompetencyGradeCompetencyRequest
	isSet bool
}

func (v NullableCoreCompetencyGradeCompetencyRequest) Get() *CoreCompetencyGradeCompetencyRequest {
	return v.value
}

func (v *NullableCoreCompetencyGradeCompetencyRequest) Set(val *CoreCompetencyGradeCompetencyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCompetencyGradeCompetencyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCompetencyGradeCompetencyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCompetencyGradeCompetencyRequest(val *CoreCompetencyGradeCompetencyRequest) *NullableCoreCompetencyGradeCompetencyRequest {
	return &NullableCoreCompetencyGradeCompetencyRequest{value: val, isSet: true}
}

func (v NullableCoreCompetencyGradeCompetencyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCompetencyGradeCompetencyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


