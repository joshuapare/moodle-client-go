/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ToolLpDataForUserCompetencySummary200ResponseEvidenceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolLpDataForUserCompetencySummary200ResponseEvidenceInner{}

// ToolLpDataForUserCompetencySummary200ResponseEvidenceInner struct for ToolLpDataForUserCompetencySummary200ResponseEvidenceInner
type ToolLpDataForUserCompetencySummary200ResponseEvidenceInner struct {
	// action
	Action *int32 `json:"action,omitempty"`
	Actionuser *CoreCompetencyGradeCompetency200ResponseActionuser `json:"actionuser,omitempty"`
	// actionuserid
	Actionuserid *int32 `json:"actionuserid,omitempty"`
	// candelete
	Candelete *bool `json:"candelete,omitempty"`
	// contextid
	Contextid *int32 `json:"contextid,omitempty"`
	// desca
	Desca *string `json:"desca,omitempty"`
	// desccomponent
	Desccomponent *string `json:"desccomponent,omitempty"`
	// descidentifier
	Descidentifier *string `json:"descidentifier,omitempty"`
	// description
	Description *string `json:"description,omitempty"`
	// grade
	Grade *int32 `json:"grade,omitempty"`
	// gradename
	Gradename *string `json:"gradename,omitempty"`
	// id
	Id *int32 `json:"id,omitempty"`
	// note
	Note *string `json:"note,omitempty"`
	// timecreated
	Timecreated *int32 `json:"timecreated,omitempty"`
	// timemodified
	Timemodified *int32 `json:"timemodified,omitempty"`
	// url
	Url *string `json:"url,omitempty"`
	// usercompetencyid
	Usercompetencyid *int32 `json:"usercompetencyid,omitempty"`
	// userdate
	Userdate *string `json:"userdate,omitempty"`
	// usermodified
	Usermodified *int32 `json:"usermodified,omitempty"`
}

// NewToolLpDataForUserCompetencySummary200ResponseEvidenceInner instantiates a new ToolLpDataForUserCompetencySummary200ResponseEvidenceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolLpDataForUserCompetencySummary200ResponseEvidenceInner() *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner {
	this := ToolLpDataForUserCompetencySummary200ResponseEvidenceInner{}
	var id int32 = 0
	this.Id = &id
	var timecreated int32 = 0
	this.Timecreated = &timecreated
	var timemodified int32 = 0
	this.Timemodified = &timemodified
	var usermodified int32 = 0
	this.Usermodified = &usermodified
	return &this
}

// NewToolLpDataForUserCompetencySummary200ResponseEvidenceInnerWithDefaults instantiates a new ToolLpDataForUserCompetencySummary200ResponseEvidenceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolLpDataForUserCompetencySummary200ResponseEvidenceInnerWithDefaults() *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner {
	this := ToolLpDataForUserCompetencySummary200ResponseEvidenceInner{}
	var id int32 = 0
	this.Id = &id
	var timecreated int32 = 0
	this.Timecreated = &timecreated
	var timemodified int32 = 0
	this.Timemodified = &timemodified
	var usermodified int32 = 0
	this.Usermodified = &usermodified
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetAction() int32 {
	if o == nil || IsNil(o.Action) {
		var ret int32
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetActionOk() (*int32, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given int32 and assigns it to the Action field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetAction(v int32) {
	o.Action = &v
}

// GetActionuser returns the Actionuser field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetActionuser() CoreCompetencyGradeCompetency200ResponseActionuser {
	if o == nil || IsNil(o.Actionuser) {
		var ret CoreCompetencyGradeCompetency200ResponseActionuser
		return ret
	}
	return *o.Actionuser
}

// GetActionuserOk returns a tuple with the Actionuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetActionuserOk() (*CoreCompetencyGradeCompetency200ResponseActionuser, bool) {
	if o == nil || IsNil(o.Actionuser) {
		return nil, false
	}
	return o.Actionuser, true
}

// HasActionuser returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasActionuser() bool {
	if o != nil && !IsNil(o.Actionuser) {
		return true
	}

	return false
}

// SetActionuser gets a reference to the given CoreCompetencyGradeCompetency200ResponseActionuser and assigns it to the Actionuser field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetActionuser(v CoreCompetencyGradeCompetency200ResponseActionuser) {
	o.Actionuser = &v
}

// GetActionuserid returns the Actionuserid field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetActionuserid() int32 {
	if o == nil || IsNil(o.Actionuserid) {
		var ret int32
		return ret
	}
	return *o.Actionuserid
}

// GetActionuseridOk returns a tuple with the Actionuserid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetActionuseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Actionuserid) {
		return nil, false
	}
	return o.Actionuserid, true
}

// HasActionuserid returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasActionuserid() bool {
	if o != nil && !IsNil(o.Actionuserid) {
		return true
	}

	return false
}

// SetActionuserid gets a reference to the given int32 and assigns it to the Actionuserid field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetActionuserid(v int32) {
	o.Actionuserid = &v
}

// GetCandelete returns the Candelete field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetCandelete() bool {
	if o == nil || IsNil(o.Candelete) {
		var ret bool
		return ret
	}
	return *o.Candelete
}

// GetCandeleteOk returns a tuple with the Candelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetCandeleteOk() (*bool, bool) {
	if o == nil || IsNil(o.Candelete) {
		return nil, false
	}
	return o.Candelete, true
}

// HasCandelete returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasCandelete() bool {
	if o != nil && !IsNil(o.Candelete) {
		return true
	}

	return false
}

// SetCandelete gets a reference to the given bool and assigns it to the Candelete field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetCandelete(v bool) {
	o.Candelete = &v
}

// GetContextid returns the Contextid field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetContextid() int32 {
	if o == nil || IsNil(o.Contextid) {
		var ret int32
		return ret
	}
	return *o.Contextid
}

// GetContextidOk returns a tuple with the Contextid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetContextidOk() (*int32, bool) {
	if o == nil || IsNil(o.Contextid) {
		return nil, false
	}
	return o.Contextid, true
}

// HasContextid returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasContextid() bool {
	if o != nil && !IsNil(o.Contextid) {
		return true
	}

	return false
}

// SetContextid gets a reference to the given int32 and assigns it to the Contextid field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetContextid(v int32) {
	o.Contextid = &v
}

// GetDesca returns the Desca field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetDesca() string {
	if o == nil || IsNil(o.Desca) {
		var ret string
		return ret
	}
	return *o.Desca
}

// GetDescaOk returns a tuple with the Desca field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetDescaOk() (*string, bool) {
	if o == nil || IsNil(o.Desca) {
		return nil, false
	}
	return o.Desca, true
}

// HasDesca returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasDesca() bool {
	if o != nil && !IsNil(o.Desca) {
		return true
	}

	return false
}

// SetDesca gets a reference to the given string and assigns it to the Desca field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetDesca(v string) {
	o.Desca = &v
}

// GetDesccomponent returns the Desccomponent field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetDesccomponent() string {
	if o == nil || IsNil(o.Desccomponent) {
		var ret string
		return ret
	}
	return *o.Desccomponent
}

// GetDesccomponentOk returns a tuple with the Desccomponent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetDesccomponentOk() (*string, bool) {
	if o == nil || IsNil(o.Desccomponent) {
		return nil, false
	}
	return o.Desccomponent, true
}

// HasDesccomponent returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasDesccomponent() bool {
	if o != nil && !IsNil(o.Desccomponent) {
		return true
	}

	return false
}

// SetDesccomponent gets a reference to the given string and assigns it to the Desccomponent field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetDesccomponent(v string) {
	o.Desccomponent = &v
}

// GetDescidentifier returns the Descidentifier field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetDescidentifier() string {
	if o == nil || IsNil(o.Descidentifier) {
		var ret string
		return ret
	}
	return *o.Descidentifier
}

// GetDescidentifierOk returns a tuple with the Descidentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetDescidentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Descidentifier) {
		return nil, false
	}
	return o.Descidentifier, true
}

// HasDescidentifier returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasDescidentifier() bool {
	if o != nil && !IsNil(o.Descidentifier) {
		return true
	}

	return false
}

// SetDescidentifier gets a reference to the given string and assigns it to the Descidentifier field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetDescidentifier(v string) {
	o.Descidentifier = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetDescription(v string) {
	o.Description = &v
}

// GetGrade returns the Grade field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetGrade() int32 {
	if o == nil || IsNil(o.Grade) {
		var ret int32
		return ret
	}
	return *o.Grade
}

// GetGradeOk returns a tuple with the Grade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetGradeOk() (*int32, bool) {
	if o == nil || IsNil(o.Grade) {
		return nil, false
	}
	return o.Grade, true
}

// HasGrade returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasGrade() bool {
	if o != nil && !IsNil(o.Grade) {
		return true
	}

	return false
}

// SetGrade gets a reference to the given int32 and assigns it to the Grade field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetGrade(v int32) {
	o.Grade = &v
}

// GetGradename returns the Gradename field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetGradename() string {
	if o == nil || IsNil(o.Gradename) {
		var ret string
		return ret
	}
	return *o.Gradename
}

// GetGradenameOk returns a tuple with the Gradename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetGradenameOk() (*string, bool) {
	if o == nil || IsNil(o.Gradename) {
		return nil, false
	}
	return o.Gradename, true
}

// HasGradename returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasGradename() bool {
	if o != nil && !IsNil(o.Gradename) {
		return true
	}

	return false
}

// SetGradename gets a reference to the given string and assigns it to the Gradename field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetGradename(v string) {
	o.Gradename = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetId(v int32) {
	o.Id = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetNote(v string) {
	o.Note = &v
}

// GetTimecreated returns the Timecreated field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetTimecreated() int32 {
	if o == nil || IsNil(o.Timecreated) {
		var ret int32
		return ret
	}
	return *o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetTimecreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecreated) {
		return nil, false
	}
	return o.Timecreated, true
}

// HasTimecreated returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasTimecreated() bool {
	if o != nil && !IsNil(o.Timecreated) {
		return true
	}

	return false
}

// SetTimecreated gets a reference to the given int32 and assigns it to the Timecreated field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetTimecreated(v int32) {
	o.Timecreated = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetUrl(v string) {
	o.Url = &v
}

// GetUsercompetencyid returns the Usercompetencyid field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetUsercompetencyid() int32 {
	if o == nil || IsNil(o.Usercompetencyid) {
		var ret int32
		return ret
	}
	return *o.Usercompetencyid
}

// GetUsercompetencyidOk returns a tuple with the Usercompetencyid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetUsercompetencyidOk() (*int32, bool) {
	if o == nil || IsNil(o.Usercompetencyid) {
		return nil, false
	}
	return o.Usercompetencyid, true
}

// HasUsercompetencyid returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasUsercompetencyid() bool {
	if o != nil && !IsNil(o.Usercompetencyid) {
		return true
	}

	return false
}

// SetUsercompetencyid gets a reference to the given int32 and assigns it to the Usercompetencyid field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetUsercompetencyid(v int32) {
	o.Usercompetencyid = &v
}

// GetUserdate returns the Userdate field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetUserdate() string {
	if o == nil || IsNil(o.Userdate) {
		var ret string
		return ret
	}
	return *o.Userdate
}

// GetUserdateOk returns a tuple with the Userdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetUserdateOk() (*string, bool) {
	if o == nil || IsNil(o.Userdate) {
		return nil, false
	}
	return o.Userdate, true
}

// HasUserdate returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasUserdate() bool {
	if o != nil && !IsNil(o.Userdate) {
		return true
	}

	return false
}

// SetUserdate gets a reference to the given string and assigns it to the Userdate field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetUserdate(v string) {
	o.Userdate = &v
}

// GetUsermodified returns the Usermodified field value if set, zero value otherwise.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetUsermodified() int32 {
	if o == nil || IsNil(o.Usermodified) {
		var ret int32
		return ret
	}
	return *o.Usermodified
}

// GetUsermodifiedOk returns a tuple with the Usermodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) GetUsermodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Usermodified) {
		return nil, false
	}
	return o.Usermodified, true
}

// HasUsermodified returns a boolean if a field has been set.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) HasUsermodified() bool {
	if o != nil && !IsNil(o.Usermodified) {
		return true
	}

	return false
}

// SetUsermodified gets a reference to the given int32 and assigns it to the Usermodified field.
func (o *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) SetUsermodified(v int32) {
	o.Usermodified = &v
}

func (o ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Actionuser) {
		toSerialize["actionuser"] = o.Actionuser
	}
	if !IsNil(o.Actionuserid) {
		toSerialize["actionuserid"] = o.Actionuserid
	}
	if !IsNil(o.Candelete) {
		toSerialize["candelete"] = o.Candelete
	}
	if !IsNil(o.Contextid) {
		toSerialize["contextid"] = o.Contextid
	}
	if !IsNil(o.Desca) {
		toSerialize["desca"] = o.Desca
	}
	if !IsNil(o.Desccomponent) {
		toSerialize["desccomponent"] = o.Desccomponent
	}
	if !IsNil(o.Descidentifier) {
		toSerialize["descidentifier"] = o.Descidentifier
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Grade) {
		toSerialize["grade"] = o.Grade
	}
	if !IsNil(o.Gradename) {
		toSerialize["gradename"] = o.Gradename
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.Timecreated) {
		toSerialize["timecreated"] = o.Timecreated
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Usercompetencyid) {
		toSerialize["usercompetencyid"] = o.Usercompetencyid
	}
	if !IsNil(o.Userdate) {
		toSerialize["userdate"] = o.Userdate
	}
	if !IsNil(o.Usermodified) {
		toSerialize["usermodified"] = o.Usermodified
	}
	return toSerialize, nil
}

type NullableToolLpDataForUserCompetencySummary200ResponseEvidenceInner struct {
	value *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner
	isSet bool
}

func (v NullableToolLpDataForUserCompetencySummary200ResponseEvidenceInner) Get() *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner {
	return v.value
}

func (v *NullableToolLpDataForUserCompetencySummary200ResponseEvidenceInner) Set(val *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableToolLpDataForUserCompetencySummary200ResponseEvidenceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableToolLpDataForUserCompetencySummary200ResponseEvidenceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolLpDataForUserCompetencySummary200ResponseEvidenceInner(val *ToolLpDataForUserCompetencySummary200ResponseEvidenceInner) *NullableToolLpDataForUserCompetencySummary200ResponseEvidenceInner {
	return &NullableToolLpDataForUserCompetencySummary200ResponseEvidenceInner{value: val, isSet: true}
}

func (v NullableToolLpDataForUserCompetencySummary200ResponseEvidenceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolLpDataForUserCompetencySummary200ResponseEvidenceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


