/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModDataGetFieldsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModDataGetFieldsRequest{}

// ModDataGetFieldsRequest struct for ModDataGetFieldsRequest
type ModDataGetFieldsRequest struct {
	// Database instance id.
	Databaseid int32 `json:"databaseid"`
}

type _ModDataGetFieldsRequest ModDataGetFieldsRequest

// NewModDataGetFieldsRequest instantiates a new ModDataGetFieldsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModDataGetFieldsRequest(databaseid int32) *ModDataGetFieldsRequest {
	this := ModDataGetFieldsRequest{}
	this.Databaseid = databaseid
	return &this
}

// NewModDataGetFieldsRequestWithDefaults instantiates a new ModDataGetFieldsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModDataGetFieldsRequestWithDefaults() *ModDataGetFieldsRequest {
	this := ModDataGetFieldsRequest{}
	return &this
}

// GetDatabaseid returns the Databaseid field value
func (o *ModDataGetFieldsRequest) GetDatabaseid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Databaseid
}

// GetDatabaseidOk returns a tuple with the Databaseid field value
// and a boolean to check if the value has been set.
func (o *ModDataGetFieldsRequest) GetDatabaseidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Databaseid, true
}

// SetDatabaseid sets field value
func (o *ModDataGetFieldsRequest) SetDatabaseid(v int32) {
	o.Databaseid = v
}

func (o ModDataGetFieldsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModDataGetFieldsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["databaseid"] = o.Databaseid
	return toSerialize, nil
}

func (o *ModDataGetFieldsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"databaseid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModDataGetFieldsRequest := _ModDataGetFieldsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModDataGetFieldsRequest)

	if err != nil {
		return err
	}

	*o = ModDataGetFieldsRequest(varModDataGetFieldsRequest)

	return err
}

type NullableModDataGetFieldsRequest struct {
	value *ModDataGetFieldsRequest
	isSet bool
}

func (v NullableModDataGetFieldsRequest) Get() *ModDataGetFieldsRequest {
	return v.value
}

func (v *NullableModDataGetFieldsRequest) Set(val *ModDataGetFieldsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModDataGetFieldsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModDataGetFieldsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModDataGetFieldsRequest(val *ModDataGetFieldsRequest) *NullableModDataGetFieldsRequest {
	return &NullableModDataGetFieldsRequest{value: val, isSet: true}
}

func (v NullableModDataGetFieldsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModDataGetFieldsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


