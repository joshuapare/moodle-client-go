/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus{}

// CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus struct for CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus
type CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus struct {
	// aggregation method 1 means all, 2 means any
	Aggregation int32 `json:"aggregation"`
	// true if the course is complete, false otherwise
	Completed bool `json:"completed"`
	Completions []CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInner `json:"completions"`
}

type _CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus

// NewCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus instantiates a new CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus(aggregation int32, completed bool, completions []CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInner) *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus {
	this := CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus{}
	this.Aggregation = aggregation
	this.Completed = completed
	this.Completions = completions
	return &this
}

// NewCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusWithDefaults instantiates a new CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusWithDefaults() *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus {
	this := CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus{}
	var aggregation int32 = null
	this.Aggregation = aggregation
	var completed bool = null
	this.Completed = completed
	return &this
}

// GetAggregation returns the Aggregation field value
func (o *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) GetAggregation() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Aggregation
}

// GetAggregationOk returns a tuple with the Aggregation field value
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) GetAggregationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aggregation, true
}

// SetAggregation sets field value
func (o *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) SetAggregation(v int32) {
	o.Aggregation = v
}

// GetCompleted returns the Completed field value
func (o *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) GetCompleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) GetCompletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Completed, true
}

// SetCompleted sets field value
func (o *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) SetCompleted(v bool) {
	o.Completed = v
}

// GetCompletions returns the Completions field value
func (o *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) GetCompletions() []CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInner {
	if o == nil {
		var ret []CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInner
		return ret
	}

	return o.Completions
}

// GetCompletionsOk returns a tuple with the Completions field value
// and a boolean to check if the value has been set.
func (o *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) GetCompletionsOk() ([]CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Completions, true
}

// SetCompletions sets field value
func (o *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) SetCompletions(v []CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatusCompletionsInner) {
	o.Completions = v
}

func (o CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["aggregation"] = o.Aggregation
	toSerialize["completed"] = o.Completed
	toSerialize["completions"] = o.Completions
	return toSerialize, nil
}

func (o *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"aggregation",
		"completed",
		"completions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus := _CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus)

	if err != nil {
		return err
	}

	*o = CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus(varCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus)

	return err
}

type NullableCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus struct {
	value *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus
	isSet bool
}

func (v NullableCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) Get() *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus {
	return v.value
}

func (v *NullableCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) Set(val *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus(val *CoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) *NullableCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus {
	return &NullableCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus{value: val, isSet: true}
}

func (v NullableCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCompletionGetCourseCompletionStatus200ResponseCompletionstatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


