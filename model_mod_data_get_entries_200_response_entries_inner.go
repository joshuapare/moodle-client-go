/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModDataGetEntries200ResponseEntriesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModDataGetEntries200ResponseEntriesInner{}

// ModDataGetEntries200ResponseEntriesInner struct for ModDataGetEntries200ResponseEntriesInner
type ModDataGetEntries200ResponseEntriesInner struct {
	// Whether the entry has been approved (if the database is configured in that way).
	Approved *bool `json:"approved,omitempty"`
	// Whether the current user can manage this entry
	Canmanageentry *bool `json:"canmanageentry,omitempty"`
	Contents []ModDataGetEntries200ResponseEntriesInnerContentsInner `json:"contents,omitempty"`
	// The database id this record belongs to.
	Dataid *int32 `json:"dataid,omitempty"`
	// The user who created the entry fullname.
	Fullname *string `json:"fullname,omitempty"`
	// The group id this record belongs to (0 for no groups).
	Groupid *int32 `json:"groupid,omitempty"`
	// Record id.
	Id *int32 `json:"id,omitempty"`
	Tags []ModDataGetEntries200ResponseEntriesInnerTagsInner `json:"tags,omitempty"`
	// Time the record was created.
	Timecreated *int32 `json:"timecreated,omitempty"`
	// Last time the record was modified.
	Timemodified *int32 `json:"timemodified,omitempty"`
	// The id of the user who created the record.
	Userid *int32 `json:"userid,omitempty"`
}

// NewModDataGetEntries200ResponseEntriesInner instantiates a new ModDataGetEntries200ResponseEntriesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModDataGetEntries200ResponseEntriesInner() *ModDataGetEntries200ResponseEntriesInner {
	this := ModDataGetEntries200ResponseEntriesInner{}
	var approved bool = 0
	this.Approved = &approved
	var canmanageentry bool = null
	this.Canmanageentry = &canmanageentry
	var dataid int32 = 0
	this.Dataid = &dataid
	var fullname string = "null"
	this.Fullname = &fullname
	var groupid int32 = 0
	this.Groupid = &groupid
	var id int32 = null
	this.Id = &id
	var timecreated int32 = 0
	this.Timecreated = &timecreated
	var timemodified int32 = 0
	this.Timemodified = &timemodified
	var userid int32 = 0
	this.Userid = &userid
	return &this
}

// NewModDataGetEntries200ResponseEntriesInnerWithDefaults instantiates a new ModDataGetEntries200ResponseEntriesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModDataGetEntries200ResponseEntriesInnerWithDefaults() *ModDataGetEntries200ResponseEntriesInner {
	this := ModDataGetEntries200ResponseEntriesInner{}
	var approved bool = 0
	this.Approved = &approved
	var canmanageentry bool = null
	this.Canmanageentry = &canmanageentry
	var dataid int32 = 0
	this.Dataid = &dataid
	var fullname string = "null"
	this.Fullname = &fullname
	var groupid int32 = 0
	this.Groupid = &groupid
	var id int32 = null
	this.Id = &id
	var timecreated int32 = 0
	this.Timecreated = &timecreated
	var timemodified int32 = 0
	this.Timemodified = &timemodified
	var userid int32 = 0
	this.Userid = &userid
	return &this
}

// GetApproved returns the Approved field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInner) GetApproved() bool {
	if o == nil || IsNil(o.Approved) {
		var ret bool
		return ret
	}
	return *o.Approved
}

// GetApprovedOk returns a tuple with the Approved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) GetApprovedOk() (*bool, bool) {
	if o == nil || IsNil(o.Approved) {
		return nil, false
	}
	return o.Approved, true
}

// HasApproved returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) HasApproved() bool {
	if o != nil && !IsNil(o.Approved) {
		return true
	}

	return false
}

// SetApproved gets a reference to the given bool and assigns it to the Approved field.
func (o *ModDataGetEntries200ResponseEntriesInner) SetApproved(v bool) {
	o.Approved = &v
}

// GetCanmanageentry returns the Canmanageentry field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInner) GetCanmanageentry() bool {
	if o == nil || IsNil(o.Canmanageentry) {
		var ret bool
		return ret
	}
	return *o.Canmanageentry
}

// GetCanmanageentryOk returns a tuple with the Canmanageentry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) GetCanmanageentryOk() (*bool, bool) {
	if o == nil || IsNil(o.Canmanageentry) {
		return nil, false
	}
	return o.Canmanageentry, true
}

// HasCanmanageentry returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) HasCanmanageentry() bool {
	if o != nil && !IsNil(o.Canmanageentry) {
		return true
	}

	return false
}

// SetCanmanageentry gets a reference to the given bool and assigns it to the Canmanageentry field.
func (o *ModDataGetEntries200ResponseEntriesInner) SetCanmanageentry(v bool) {
	o.Canmanageentry = &v
}

// GetContents returns the Contents field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInner) GetContents() []ModDataGetEntries200ResponseEntriesInnerContentsInner {
	if o == nil || IsNil(o.Contents) {
		var ret []ModDataGetEntries200ResponseEntriesInnerContentsInner
		return ret
	}
	return o.Contents
}

// GetContentsOk returns a tuple with the Contents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) GetContentsOk() ([]ModDataGetEntries200ResponseEntriesInnerContentsInner, bool) {
	if o == nil || IsNil(o.Contents) {
		return nil, false
	}
	return o.Contents, true
}

// HasContents returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) HasContents() bool {
	if o != nil && !IsNil(o.Contents) {
		return true
	}

	return false
}

// SetContents gets a reference to the given []ModDataGetEntries200ResponseEntriesInnerContentsInner and assigns it to the Contents field.
func (o *ModDataGetEntries200ResponseEntriesInner) SetContents(v []ModDataGetEntries200ResponseEntriesInnerContentsInner) {
	o.Contents = v
}

// GetDataid returns the Dataid field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInner) GetDataid() int32 {
	if o == nil || IsNil(o.Dataid) {
		var ret int32
		return ret
	}
	return *o.Dataid
}

// GetDataidOk returns a tuple with the Dataid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) GetDataidOk() (*int32, bool) {
	if o == nil || IsNil(o.Dataid) {
		return nil, false
	}
	return o.Dataid, true
}

// HasDataid returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) HasDataid() bool {
	if o != nil && !IsNil(o.Dataid) {
		return true
	}

	return false
}

// SetDataid gets a reference to the given int32 and assigns it to the Dataid field.
func (o *ModDataGetEntries200ResponseEntriesInner) SetDataid(v int32) {
	o.Dataid = &v
}

// GetFullname returns the Fullname field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInner) GetFullname() string {
	if o == nil || IsNil(o.Fullname) {
		var ret string
		return ret
	}
	return *o.Fullname
}

// GetFullnameOk returns a tuple with the Fullname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) GetFullnameOk() (*string, bool) {
	if o == nil || IsNil(o.Fullname) {
		return nil, false
	}
	return o.Fullname, true
}

// HasFullname returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) HasFullname() bool {
	if o != nil && !IsNil(o.Fullname) {
		return true
	}

	return false
}

// SetFullname gets a reference to the given string and assigns it to the Fullname field.
func (o *ModDataGetEntries200ResponseEntriesInner) SetFullname(v string) {
	o.Fullname = &v
}

// GetGroupid returns the Groupid field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInner) GetGroupid() int32 {
	if o == nil || IsNil(o.Groupid) {
		var ret int32
		return ret
	}
	return *o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) GetGroupidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupid) {
		return nil, false
	}
	return o.Groupid, true
}

// HasGroupid returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) HasGroupid() bool {
	if o != nil && !IsNil(o.Groupid) {
		return true
	}

	return false
}

// SetGroupid gets a reference to the given int32 and assigns it to the Groupid field.
func (o *ModDataGetEntries200ResponseEntriesInner) SetGroupid(v int32) {
	o.Groupid = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModDataGetEntries200ResponseEntriesInner) SetId(v int32) {
	o.Id = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInner) GetTags() []ModDataGetEntries200ResponseEntriesInnerTagsInner {
	if o == nil || IsNil(o.Tags) {
		var ret []ModDataGetEntries200ResponseEntriesInnerTagsInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) GetTagsOk() ([]ModDataGetEntries200ResponseEntriesInnerTagsInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ModDataGetEntries200ResponseEntriesInnerTagsInner and assigns it to the Tags field.
func (o *ModDataGetEntries200ResponseEntriesInner) SetTags(v []ModDataGetEntries200ResponseEntriesInnerTagsInner) {
	o.Tags = v
}

// GetTimecreated returns the Timecreated field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInner) GetTimecreated() int32 {
	if o == nil || IsNil(o.Timecreated) {
		var ret int32
		return ret
	}
	return *o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) GetTimecreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecreated) {
		return nil, false
	}
	return o.Timecreated, true
}

// HasTimecreated returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) HasTimecreated() bool {
	if o != nil && !IsNil(o.Timecreated) {
		return true
	}

	return false
}

// SetTimecreated gets a reference to the given int32 and assigns it to the Timecreated field.
func (o *ModDataGetEntries200ResponseEntriesInner) SetTimecreated(v int32) {
	o.Timecreated = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *ModDataGetEntries200ResponseEntriesInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *ModDataGetEntries200ResponseEntriesInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *ModDataGetEntries200ResponseEntriesInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *ModDataGetEntries200ResponseEntriesInner) SetUserid(v int32) {
	o.Userid = &v
}

func (o ModDataGetEntries200ResponseEntriesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModDataGetEntries200ResponseEntriesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Approved) {
		toSerialize["approved"] = o.Approved
	}
	if !IsNil(o.Canmanageentry) {
		toSerialize["canmanageentry"] = o.Canmanageentry
	}
	if !IsNil(o.Contents) {
		toSerialize["contents"] = o.Contents
	}
	if !IsNil(o.Dataid) {
		toSerialize["dataid"] = o.Dataid
	}
	if !IsNil(o.Fullname) {
		toSerialize["fullname"] = o.Fullname
	}
	if !IsNil(o.Groupid) {
		toSerialize["groupid"] = o.Groupid
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Timecreated) {
		toSerialize["timecreated"] = o.Timecreated
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	return toSerialize, nil
}

type NullableModDataGetEntries200ResponseEntriesInner struct {
	value *ModDataGetEntries200ResponseEntriesInner
	isSet bool
}

func (v NullableModDataGetEntries200ResponseEntriesInner) Get() *ModDataGetEntries200ResponseEntriesInner {
	return v.value
}

func (v *NullableModDataGetEntries200ResponseEntriesInner) Set(val *ModDataGetEntries200ResponseEntriesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModDataGetEntries200ResponseEntriesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModDataGetEntries200ResponseEntriesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModDataGetEntries200ResponseEntriesInner(val *ModDataGetEntries200ResponseEntriesInner) *NullableModDataGetEntries200ResponseEntriesInner {
	return &NullableModDataGetEntries200ResponseEntriesInner{value: val, isSet: true}
}

func (v NullableModDataGetEntries200ResponseEntriesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModDataGetEntries200ResponseEntriesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


