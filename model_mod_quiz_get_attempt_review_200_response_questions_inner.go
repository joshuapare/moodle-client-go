/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModQuizGetAttemptReview200ResponseQuestionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModQuizGetAttemptReview200ResponseQuestionsInner{}

// ModQuizGetAttemptReview200ResponseQuestionsInner The question data. Some fields may not be returned depending on the quiz display settings.
type ModQuizGetAttemptReview200ResponseQuestionsInner struct {
	// whether the question is blocked by the previous question
	Blockedbyprevious *bool `json:"blockedbyprevious,omitempty"`
	// whether the question is flagged or not
	Flagged *bool `json:"flagged,omitempty"`
	// whether this question attempt has autosaved data
	Hasautosavedstep *bool `json:"hasautosavedstep,omitempty"`
	// the question rendered
	Html *string `json:"html,omitempty"`
	// the timestamp of the most recent step in this question attempt
	Lastactiontime *int32 `json:"lastactiontime,omitempty"`
	// the mark awarded.                     It will be returned only if the user is allowed to see it.
	Mark *string `json:"mark,omitempty"`
	// the maximum mark possible for this question attempt.                     It will be returned only if the user is allowed to see it.
	Maxmark *float32 `json:"maxmark,omitempty"`
	// DO NOT USE. Use questionnumber. Only retained for backwards compatibility.
	Number *int32 `json:"number,omitempty"`
	// page of the quiz this question appears on
	Page *int32 `json:"page,omitempty"`
	// The question number to display for this question, e.g. \"7\", \"i\" or \"Custom-B)\".
	Questionnumber *string `json:"questionnumber,omitempty"`
	Responsefileareas []ModQuizGetAttemptReview200ResponseQuestionsInnerResponsefileareasInner `json:"responsefileareas,omitempty"`
	// the number of real steps in this attempt
	Sequencecheck *int32 `json:"sequencecheck,omitempty"`
	// Question settings (JSON encoded).
	Settings *string `json:"settings,omitempty"`
	// slot number
	Slot *int32 `json:"slot,omitempty"`
	// the state where the question is in.                     It will not be returned if the user cannot see it due to the quiz display correctness settings.
	State *string `json:"state,omitempty"`
	// current formatted state of the question
	Status *string `json:"status,omitempty"`
	// question type, i.e: multichoice
	Type *string `json:"type,omitempty"`
}

// NewModQuizGetAttemptReview200ResponseQuestionsInner instantiates a new ModQuizGetAttemptReview200ResponseQuestionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModQuizGetAttemptReview200ResponseQuestionsInner() *ModQuizGetAttemptReview200ResponseQuestionsInner {
	this := ModQuizGetAttemptReview200ResponseQuestionsInner{}
	return &this
}

// NewModQuizGetAttemptReview200ResponseQuestionsInnerWithDefaults instantiates a new ModQuizGetAttemptReview200ResponseQuestionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModQuizGetAttemptReview200ResponseQuestionsInnerWithDefaults() *ModQuizGetAttemptReview200ResponseQuestionsInner {
	this := ModQuizGetAttemptReview200ResponseQuestionsInner{}
	return &this
}

// GetBlockedbyprevious returns the Blockedbyprevious field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetBlockedbyprevious() bool {
	if o == nil || IsNil(o.Blockedbyprevious) {
		var ret bool
		return ret
	}
	return *o.Blockedbyprevious
}

// GetBlockedbypreviousOk returns a tuple with the Blockedbyprevious field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetBlockedbypreviousOk() (*bool, bool) {
	if o == nil || IsNil(o.Blockedbyprevious) {
		return nil, false
	}
	return o.Blockedbyprevious, true
}

// HasBlockedbyprevious returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasBlockedbyprevious() bool {
	if o != nil && !IsNil(o.Blockedbyprevious) {
		return true
	}

	return false
}

// SetBlockedbyprevious gets a reference to the given bool and assigns it to the Blockedbyprevious field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetBlockedbyprevious(v bool) {
	o.Blockedbyprevious = &v
}

// GetFlagged returns the Flagged field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetFlagged() bool {
	if o == nil || IsNil(o.Flagged) {
		var ret bool
		return ret
	}
	return *o.Flagged
}

// GetFlaggedOk returns a tuple with the Flagged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetFlaggedOk() (*bool, bool) {
	if o == nil || IsNil(o.Flagged) {
		return nil, false
	}
	return o.Flagged, true
}

// HasFlagged returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasFlagged() bool {
	if o != nil && !IsNil(o.Flagged) {
		return true
	}

	return false
}

// SetFlagged gets a reference to the given bool and assigns it to the Flagged field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetFlagged(v bool) {
	o.Flagged = &v
}

// GetHasautosavedstep returns the Hasautosavedstep field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetHasautosavedstep() bool {
	if o == nil || IsNil(o.Hasautosavedstep) {
		var ret bool
		return ret
	}
	return *o.Hasautosavedstep
}

// GetHasautosavedstepOk returns a tuple with the Hasautosavedstep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetHasautosavedstepOk() (*bool, bool) {
	if o == nil || IsNil(o.Hasautosavedstep) {
		return nil, false
	}
	return o.Hasautosavedstep, true
}

// HasHasautosavedstep returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasHasautosavedstep() bool {
	if o != nil && !IsNil(o.Hasautosavedstep) {
		return true
	}

	return false
}

// SetHasautosavedstep gets a reference to the given bool and assigns it to the Hasautosavedstep field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetHasautosavedstep(v bool) {
	o.Hasautosavedstep = &v
}

// GetHtml returns the Html field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetHtml() string {
	if o == nil || IsNil(o.Html) {
		var ret string
		return ret
	}
	return *o.Html
}

// GetHtmlOk returns a tuple with the Html field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetHtmlOk() (*string, bool) {
	if o == nil || IsNil(o.Html) {
		return nil, false
	}
	return o.Html, true
}

// HasHtml returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasHtml() bool {
	if o != nil && !IsNil(o.Html) {
		return true
	}

	return false
}

// SetHtml gets a reference to the given string and assigns it to the Html field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetHtml(v string) {
	o.Html = &v
}

// GetLastactiontime returns the Lastactiontime field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetLastactiontime() int32 {
	if o == nil || IsNil(o.Lastactiontime) {
		var ret int32
		return ret
	}
	return *o.Lastactiontime
}

// GetLastactiontimeOk returns a tuple with the Lastactiontime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetLastactiontimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Lastactiontime) {
		return nil, false
	}
	return o.Lastactiontime, true
}

// HasLastactiontime returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasLastactiontime() bool {
	if o != nil && !IsNil(o.Lastactiontime) {
		return true
	}

	return false
}

// SetLastactiontime gets a reference to the given int32 and assigns it to the Lastactiontime field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetLastactiontime(v int32) {
	o.Lastactiontime = &v
}

// GetMark returns the Mark field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetMark() string {
	if o == nil || IsNil(o.Mark) {
		var ret string
		return ret
	}
	return *o.Mark
}

// GetMarkOk returns a tuple with the Mark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetMarkOk() (*string, bool) {
	if o == nil || IsNil(o.Mark) {
		return nil, false
	}
	return o.Mark, true
}

// HasMark returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasMark() bool {
	if o != nil && !IsNil(o.Mark) {
		return true
	}

	return false
}

// SetMark gets a reference to the given string and assigns it to the Mark field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetMark(v string) {
	o.Mark = &v
}

// GetMaxmark returns the Maxmark field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetMaxmark() float32 {
	if o == nil || IsNil(o.Maxmark) {
		var ret float32
		return ret
	}
	return *o.Maxmark
}

// GetMaxmarkOk returns a tuple with the Maxmark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetMaxmarkOk() (*float32, bool) {
	if o == nil || IsNil(o.Maxmark) {
		return nil, false
	}
	return o.Maxmark, true
}

// HasMaxmark returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasMaxmark() bool {
	if o != nil && !IsNil(o.Maxmark) {
		return true
	}

	return false
}

// SetMaxmark gets a reference to the given float32 and assigns it to the Maxmark field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetMaxmark(v float32) {
	o.Maxmark = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetNumber() int32 {
	if o == nil || IsNil(o.Number) {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetNumber(v int32) {
	o.Number = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetPage(v int32) {
	o.Page = &v
}

// GetQuestionnumber returns the Questionnumber field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetQuestionnumber() string {
	if o == nil || IsNil(o.Questionnumber) {
		var ret string
		return ret
	}
	return *o.Questionnumber
}

// GetQuestionnumberOk returns a tuple with the Questionnumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetQuestionnumberOk() (*string, bool) {
	if o == nil || IsNil(o.Questionnumber) {
		return nil, false
	}
	return o.Questionnumber, true
}

// HasQuestionnumber returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasQuestionnumber() bool {
	if o != nil && !IsNil(o.Questionnumber) {
		return true
	}

	return false
}

// SetQuestionnumber gets a reference to the given string and assigns it to the Questionnumber field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetQuestionnumber(v string) {
	o.Questionnumber = &v
}

// GetResponsefileareas returns the Responsefileareas field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetResponsefileareas() []ModQuizGetAttemptReview200ResponseQuestionsInnerResponsefileareasInner {
	if o == nil || IsNil(o.Responsefileareas) {
		var ret []ModQuizGetAttemptReview200ResponseQuestionsInnerResponsefileareasInner
		return ret
	}
	return o.Responsefileareas
}

// GetResponsefileareasOk returns a tuple with the Responsefileareas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetResponsefileareasOk() ([]ModQuizGetAttemptReview200ResponseQuestionsInnerResponsefileareasInner, bool) {
	if o == nil || IsNil(o.Responsefileareas) {
		return nil, false
	}
	return o.Responsefileareas, true
}

// HasResponsefileareas returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasResponsefileareas() bool {
	if o != nil && !IsNil(o.Responsefileareas) {
		return true
	}

	return false
}

// SetResponsefileareas gets a reference to the given []ModQuizGetAttemptReview200ResponseQuestionsInnerResponsefileareasInner and assigns it to the Responsefileareas field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetResponsefileareas(v []ModQuizGetAttemptReview200ResponseQuestionsInnerResponsefileareasInner) {
	o.Responsefileareas = v
}

// GetSequencecheck returns the Sequencecheck field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetSequencecheck() int32 {
	if o == nil || IsNil(o.Sequencecheck) {
		var ret int32
		return ret
	}
	return *o.Sequencecheck
}

// GetSequencecheckOk returns a tuple with the Sequencecheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetSequencecheckOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequencecheck) {
		return nil, false
	}
	return o.Sequencecheck, true
}

// HasSequencecheck returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasSequencecheck() bool {
	if o != nil && !IsNil(o.Sequencecheck) {
		return true
	}

	return false
}

// SetSequencecheck gets a reference to the given int32 and assigns it to the Sequencecheck field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetSequencecheck(v int32) {
	o.Sequencecheck = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetSettings() string {
	if o == nil || IsNil(o.Settings) {
		var ret string
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetSettingsOk() (*string, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given string and assigns it to the Settings field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetSettings(v string) {
	o.Settings = &v
}

// GetSlot returns the Slot field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetSlot() int32 {
	if o == nil || IsNil(o.Slot) {
		var ret int32
		return ret
	}
	return *o.Slot
}

// GetSlotOk returns a tuple with the Slot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetSlotOk() (*int32, bool) {
	if o == nil || IsNil(o.Slot) {
		return nil, false
	}
	return o.Slot, true
}

// HasSlot returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasSlot() bool {
	if o != nil && !IsNil(o.Slot) {
		return true
	}

	return false
}

// SetSlot gets a reference to the given int32 and assigns it to the Slot field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetSlot(v int32) {
	o.Slot = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetState(v string) {
	o.State = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ModQuizGetAttemptReview200ResponseQuestionsInner) SetType(v string) {
	o.Type = &v
}

func (o ModQuizGetAttemptReview200ResponseQuestionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModQuizGetAttemptReview200ResponseQuestionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Blockedbyprevious) {
		toSerialize["blockedbyprevious"] = o.Blockedbyprevious
	}
	if !IsNil(o.Flagged) {
		toSerialize["flagged"] = o.Flagged
	}
	if !IsNil(o.Hasautosavedstep) {
		toSerialize["hasautosavedstep"] = o.Hasautosavedstep
	}
	if !IsNil(o.Html) {
		toSerialize["html"] = o.Html
	}
	if !IsNil(o.Lastactiontime) {
		toSerialize["lastactiontime"] = o.Lastactiontime
	}
	if !IsNil(o.Mark) {
		toSerialize["mark"] = o.Mark
	}
	if !IsNil(o.Maxmark) {
		toSerialize["maxmark"] = o.Maxmark
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.Questionnumber) {
		toSerialize["questionnumber"] = o.Questionnumber
	}
	if !IsNil(o.Responsefileareas) {
		toSerialize["responsefileareas"] = o.Responsefileareas
	}
	if !IsNil(o.Sequencecheck) {
		toSerialize["sequencecheck"] = o.Sequencecheck
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.Slot) {
		toSerialize["slot"] = o.Slot
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableModQuizGetAttemptReview200ResponseQuestionsInner struct {
	value *ModQuizGetAttemptReview200ResponseQuestionsInner
	isSet bool
}

func (v NullableModQuizGetAttemptReview200ResponseQuestionsInner) Get() *ModQuizGetAttemptReview200ResponseQuestionsInner {
	return v.value
}

func (v *NullableModQuizGetAttemptReview200ResponseQuestionsInner) Set(val *ModQuizGetAttemptReview200ResponseQuestionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModQuizGetAttemptReview200ResponseQuestionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModQuizGetAttemptReview200ResponseQuestionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModQuizGetAttemptReview200ResponseQuestionsInner(val *ModQuizGetAttemptReview200ResponseQuestionsInner) *NullableModQuizGetAttemptReview200ResponseQuestionsInner {
	return &NullableModQuizGetAttemptReview200ResponseQuestionsInner{value: val, isSet: true}
}

func (v NullableModQuizGetAttemptReview200ResponseQuestionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModQuizGetAttemptReview200ResponseQuestionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


