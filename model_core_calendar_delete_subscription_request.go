/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCalendarDeleteSubscriptionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCalendarDeleteSubscriptionRequest{}

// CoreCalendarDeleteSubscriptionRequest struct for CoreCalendarDeleteSubscriptionRequest
type CoreCalendarDeleteSubscriptionRequest struct {
	// The id of the subscription
	Subscriptionid int32 `json:"subscriptionid"`
}

type _CoreCalendarDeleteSubscriptionRequest CoreCalendarDeleteSubscriptionRequest

// NewCoreCalendarDeleteSubscriptionRequest instantiates a new CoreCalendarDeleteSubscriptionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCalendarDeleteSubscriptionRequest(subscriptionid int32) *CoreCalendarDeleteSubscriptionRequest {
	this := CoreCalendarDeleteSubscriptionRequest{}
	this.Subscriptionid = subscriptionid
	return &this
}

// NewCoreCalendarDeleteSubscriptionRequestWithDefaults instantiates a new CoreCalendarDeleteSubscriptionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCalendarDeleteSubscriptionRequestWithDefaults() *CoreCalendarDeleteSubscriptionRequest {
	this := CoreCalendarDeleteSubscriptionRequest{}
	var subscriptionid int32 = null
	this.Subscriptionid = subscriptionid
	return &this
}

// GetSubscriptionid returns the Subscriptionid field value
func (o *CoreCalendarDeleteSubscriptionRequest) GetSubscriptionid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Subscriptionid
}

// GetSubscriptionidOk returns a tuple with the Subscriptionid field value
// and a boolean to check if the value has been set.
func (o *CoreCalendarDeleteSubscriptionRequest) GetSubscriptionidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subscriptionid, true
}

// SetSubscriptionid sets field value
func (o *CoreCalendarDeleteSubscriptionRequest) SetSubscriptionid(v int32) {
	o.Subscriptionid = v
}

func (o CoreCalendarDeleteSubscriptionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCalendarDeleteSubscriptionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subscriptionid"] = o.Subscriptionid
	return toSerialize, nil
}

func (o *CoreCalendarDeleteSubscriptionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subscriptionid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCalendarDeleteSubscriptionRequest := _CoreCalendarDeleteSubscriptionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCalendarDeleteSubscriptionRequest)

	if err != nil {
		return err
	}

	*o = CoreCalendarDeleteSubscriptionRequest(varCoreCalendarDeleteSubscriptionRequest)

	return err
}

type NullableCoreCalendarDeleteSubscriptionRequest struct {
	value *CoreCalendarDeleteSubscriptionRequest
	isSet bool
}

func (v NullableCoreCalendarDeleteSubscriptionRequest) Get() *CoreCalendarDeleteSubscriptionRequest {
	return v.value
}

func (v *NullableCoreCalendarDeleteSubscriptionRequest) Set(val *CoreCalendarDeleteSubscriptionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCalendarDeleteSubscriptionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCalendarDeleteSubscriptionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCalendarDeleteSubscriptionRequest(val *CoreCalendarDeleteSubscriptionRequest) *NullableCoreCalendarDeleteSubscriptionRequest {
	return &NullableCoreCalendarDeleteSubscriptionRequest{value: val, isSet: true}
}

func (v NullableCoreCalendarDeleteSubscriptionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCalendarDeleteSubscriptionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


