/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModQuizGetAttemptAccessInformationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModQuizGetAttemptAccessInformationRequest{}

// ModQuizGetAttemptAccessInformationRequest struct for ModQuizGetAttemptAccessInformationRequest
type ModQuizGetAttemptAccessInformationRequest struct {
	// attempt id, 0 for the user last attempt if exists
	Attemptid *int32 `json:"attemptid,omitempty"`
	// quiz instance id
	Quizid int32 `json:"quizid"`
}

type _ModQuizGetAttemptAccessInformationRequest ModQuizGetAttemptAccessInformationRequest

// NewModQuizGetAttemptAccessInformationRequest instantiates a new ModQuizGetAttemptAccessInformationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModQuizGetAttemptAccessInformationRequest(quizid int32) *ModQuizGetAttemptAccessInformationRequest {
	this := ModQuizGetAttemptAccessInformationRequest{}
	var attemptid int32 = 0
	this.Attemptid = &attemptid
	this.Quizid = quizid
	return &this
}

// NewModQuizGetAttemptAccessInformationRequestWithDefaults instantiates a new ModQuizGetAttemptAccessInformationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModQuizGetAttemptAccessInformationRequestWithDefaults() *ModQuizGetAttemptAccessInformationRequest {
	this := ModQuizGetAttemptAccessInformationRequest{}
	var attemptid int32 = 0
	this.Attemptid = &attemptid
	var quizid int32 = null
	this.Quizid = quizid
	return &this
}

// GetAttemptid returns the Attemptid field value if set, zero value otherwise.
func (o *ModQuizGetAttemptAccessInformationRequest) GetAttemptid() int32 {
	if o == nil || IsNil(o.Attemptid) {
		var ret int32
		return ret
	}
	return *o.Attemptid
}

// GetAttemptidOk returns a tuple with the Attemptid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptAccessInformationRequest) GetAttemptidOk() (*int32, bool) {
	if o == nil || IsNil(o.Attemptid) {
		return nil, false
	}
	return o.Attemptid, true
}

// HasAttemptid returns a boolean if a field has been set.
func (o *ModQuizGetAttemptAccessInformationRequest) HasAttemptid() bool {
	if o != nil && !IsNil(o.Attemptid) {
		return true
	}

	return false
}

// SetAttemptid gets a reference to the given int32 and assigns it to the Attemptid field.
func (o *ModQuizGetAttemptAccessInformationRequest) SetAttemptid(v int32) {
	o.Attemptid = &v
}

// GetQuizid returns the Quizid field value
func (o *ModQuizGetAttemptAccessInformationRequest) GetQuizid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quizid
}

// GetQuizidOk returns a tuple with the Quizid field value
// and a boolean to check if the value has been set.
func (o *ModQuizGetAttemptAccessInformationRequest) GetQuizidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quizid, true
}

// SetQuizid sets field value
func (o *ModQuizGetAttemptAccessInformationRequest) SetQuizid(v int32) {
	o.Quizid = v
}

func (o ModQuizGetAttemptAccessInformationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModQuizGetAttemptAccessInformationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attemptid) {
		toSerialize["attemptid"] = o.Attemptid
	}
	toSerialize["quizid"] = o.Quizid
	return toSerialize, nil
}

func (o *ModQuizGetAttemptAccessInformationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"quizid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModQuizGetAttemptAccessInformationRequest := _ModQuizGetAttemptAccessInformationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModQuizGetAttemptAccessInformationRequest)

	if err != nil {
		return err
	}

	*o = ModQuizGetAttemptAccessInformationRequest(varModQuizGetAttemptAccessInformationRequest)

	return err
}

type NullableModQuizGetAttemptAccessInformationRequest struct {
	value *ModQuizGetAttemptAccessInformationRequest
	isSet bool
}

func (v NullableModQuizGetAttemptAccessInformationRequest) Get() *ModQuizGetAttemptAccessInformationRequest {
	return v.value
}

func (v *NullableModQuizGetAttemptAccessInformationRequest) Set(val *ModQuizGetAttemptAccessInformationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModQuizGetAttemptAccessInformationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModQuizGetAttemptAccessInformationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModQuizGetAttemptAccessInformationRequest(val *ModQuizGetAttemptAccessInformationRequest) *NullableModQuizGetAttemptAccessInformationRequest {
	return &NullableModQuizGetAttemptAccessInformationRequest{value: val, isSet: true}
}

func (v NullableModQuizGetAttemptAccessInformationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModQuizGetAttemptAccessInformationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


