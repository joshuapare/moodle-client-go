/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModQuizGetQuizAccessInformation200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModQuizGetQuizAccessInformation200Response{}

// ModQuizGetQuizAccessInformation200Response struct for ModQuizGetQuizAccessInformation200Response
type ModQuizGetQuizAccessInformation200Response struct {
	Accessrules []map[string]interface{} `json:"accessrules"`
	Activerulenames []map[string]interface{} `json:"activerulenames"`
	// Whether the user can do the quiz or not.
	Canattempt bool `json:"canattempt"`
	// Whether the user can edit the quiz settings or not.
	Canmanage bool `json:"canmanage"`
	// Whether the user can preview the quiz or not.
	Canpreview bool `json:"canpreview"`
	// Whether the users can review their previous attempts                                                                 or not.
	Canreviewmyattempts bool `json:"canreviewmyattempts"`
	// Whether the user can view the quiz reports or not.
	Canviewreports bool `json:"canviewreports"`
	Preventaccessreasons []map[string]interface{} `json:"preventaccessreasons"`
	Warnings []AuthEmailSignupUser200ResponseWarningsInner `json:"warnings,omitempty"`
}

type _ModQuizGetQuizAccessInformation200Response ModQuizGetQuizAccessInformation200Response

// NewModQuizGetQuizAccessInformation200Response instantiates a new ModQuizGetQuizAccessInformation200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModQuizGetQuizAccessInformation200Response(accessrules []map[string]interface{}, activerulenames []map[string]interface{}, canattempt bool, canmanage bool, canpreview bool, canreviewmyattempts bool, canviewreports bool, preventaccessreasons []map[string]interface{}) *ModQuizGetQuizAccessInformation200Response {
	this := ModQuizGetQuizAccessInformation200Response{}
	this.Accessrules = accessrules
	this.Activerulenames = activerulenames
	this.Canattempt = canattempt
	this.Canmanage = canmanage
	this.Canpreview = canpreview
	this.Canreviewmyattempts = canreviewmyattempts
	this.Canviewreports = canviewreports
	this.Preventaccessreasons = preventaccessreasons
	return &this
}

// NewModQuizGetQuizAccessInformation200ResponseWithDefaults instantiates a new ModQuizGetQuizAccessInformation200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModQuizGetQuizAccessInformation200ResponseWithDefaults() *ModQuizGetQuizAccessInformation200Response {
	this := ModQuizGetQuizAccessInformation200Response{}
	var canattempt bool = null
	this.Canattempt = canattempt
	var canmanage bool = null
	this.Canmanage = canmanage
	var canpreview bool = null
	this.Canpreview = canpreview
	var canreviewmyattempts bool = null
	this.Canreviewmyattempts = canreviewmyattempts
	var canviewreports bool = null
	this.Canviewreports = canviewreports
	return &this
}

// GetAccessrules returns the Accessrules field value
func (o *ModQuizGetQuizAccessInformation200Response) GetAccessrules() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Accessrules
}

// GetAccessrulesOk returns a tuple with the Accessrules field value
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizAccessInformation200Response) GetAccessrulesOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Accessrules, true
}

// SetAccessrules sets field value
func (o *ModQuizGetQuizAccessInformation200Response) SetAccessrules(v []map[string]interface{}) {
	o.Accessrules = v
}

// GetActiverulenames returns the Activerulenames field value
func (o *ModQuizGetQuizAccessInformation200Response) GetActiverulenames() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Activerulenames
}

// GetActiverulenamesOk returns a tuple with the Activerulenames field value
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizAccessInformation200Response) GetActiverulenamesOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Activerulenames, true
}

// SetActiverulenames sets field value
func (o *ModQuizGetQuizAccessInformation200Response) SetActiverulenames(v []map[string]interface{}) {
	o.Activerulenames = v
}

// GetCanattempt returns the Canattempt field value
func (o *ModQuizGetQuizAccessInformation200Response) GetCanattempt() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canattempt
}

// GetCanattemptOk returns a tuple with the Canattempt field value
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizAccessInformation200Response) GetCanattemptOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canattempt, true
}

// SetCanattempt sets field value
func (o *ModQuizGetQuizAccessInformation200Response) SetCanattempt(v bool) {
	o.Canattempt = v
}

// GetCanmanage returns the Canmanage field value
func (o *ModQuizGetQuizAccessInformation200Response) GetCanmanage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canmanage
}

// GetCanmanageOk returns a tuple with the Canmanage field value
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizAccessInformation200Response) GetCanmanageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canmanage, true
}

// SetCanmanage sets field value
func (o *ModQuizGetQuizAccessInformation200Response) SetCanmanage(v bool) {
	o.Canmanage = v
}

// GetCanpreview returns the Canpreview field value
func (o *ModQuizGetQuizAccessInformation200Response) GetCanpreview() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canpreview
}

// GetCanpreviewOk returns a tuple with the Canpreview field value
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizAccessInformation200Response) GetCanpreviewOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canpreview, true
}

// SetCanpreview sets field value
func (o *ModQuizGetQuizAccessInformation200Response) SetCanpreview(v bool) {
	o.Canpreview = v
}

// GetCanreviewmyattempts returns the Canreviewmyattempts field value
func (o *ModQuizGetQuizAccessInformation200Response) GetCanreviewmyattempts() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canreviewmyattempts
}

// GetCanreviewmyattemptsOk returns a tuple with the Canreviewmyattempts field value
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizAccessInformation200Response) GetCanreviewmyattemptsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canreviewmyattempts, true
}

// SetCanreviewmyattempts sets field value
func (o *ModQuizGetQuizAccessInformation200Response) SetCanreviewmyattempts(v bool) {
	o.Canreviewmyattempts = v
}

// GetCanviewreports returns the Canviewreports field value
func (o *ModQuizGetQuizAccessInformation200Response) GetCanviewreports() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Canviewreports
}

// GetCanviewreportsOk returns a tuple with the Canviewreports field value
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizAccessInformation200Response) GetCanviewreportsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Canviewreports, true
}

// SetCanviewreports sets field value
func (o *ModQuizGetQuizAccessInformation200Response) SetCanviewreports(v bool) {
	o.Canviewreports = v
}

// GetPreventaccessreasons returns the Preventaccessreasons field value
func (o *ModQuizGetQuizAccessInformation200Response) GetPreventaccessreasons() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Preventaccessreasons
}

// GetPreventaccessreasonsOk returns a tuple with the Preventaccessreasons field value
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizAccessInformation200Response) GetPreventaccessreasonsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Preventaccessreasons, true
}

// SetPreventaccessreasons sets field value
func (o *ModQuizGetQuizAccessInformation200Response) SetPreventaccessreasons(v []map[string]interface{}) {
	o.Preventaccessreasons = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ModQuizGetQuizAccessInformation200Response) GetWarnings() []AuthEmailSignupUser200ResponseWarningsInner {
	if o == nil || IsNil(o.Warnings) {
		var ret []AuthEmailSignupUser200ResponseWarningsInner
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModQuizGetQuizAccessInformation200Response) GetWarningsOk() ([]AuthEmailSignupUser200ResponseWarningsInner, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ModQuizGetQuizAccessInformation200Response) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []AuthEmailSignupUser200ResponseWarningsInner and assigns it to the Warnings field.
func (o *ModQuizGetQuizAccessInformation200Response) SetWarnings(v []AuthEmailSignupUser200ResponseWarningsInner) {
	o.Warnings = v
}

func (o ModQuizGetQuizAccessInformation200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModQuizGetQuizAccessInformation200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accessrules"] = o.Accessrules
	toSerialize["activerulenames"] = o.Activerulenames
	toSerialize["canattempt"] = o.Canattempt
	toSerialize["canmanage"] = o.Canmanage
	toSerialize["canpreview"] = o.Canpreview
	toSerialize["canreviewmyattempts"] = o.Canreviewmyattempts
	toSerialize["canviewreports"] = o.Canviewreports
	toSerialize["preventaccessreasons"] = o.Preventaccessreasons
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

func (o *ModQuizGetQuizAccessInformation200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accessrules",
		"activerulenames",
		"canattempt",
		"canmanage",
		"canpreview",
		"canreviewmyattempts",
		"canviewreports",
		"preventaccessreasons",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModQuizGetQuizAccessInformation200Response := _ModQuizGetQuizAccessInformation200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModQuizGetQuizAccessInformation200Response)

	if err != nil {
		return err
	}

	*o = ModQuizGetQuizAccessInformation200Response(varModQuizGetQuizAccessInformation200Response)

	return err
}

type NullableModQuizGetQuizAccessInformation200Response struct {
	value *ModQuizGetQuizAccessInformation200Response
	isSet bool
}

func (v NullableModQuizGetQuizAccessInformation200Response) Get() *ModQuizGetQuizAccessInformation200Response {
	return v.value
}

func (v *NullableModQuizGetQuizAccessInformation200Response) Set(val *ModQuizGetQuizAccessInformation200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableModQuizGetQuizAccessInformation200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableModQuizGetQuizAccessInformation200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModQuizGetQuizAccessInformation200Response(val *ModQuizGetQuizAccessInformation200Response) *NullableModQuizGetQuizAccessInformation200Response {
	return &NullableModQuizGetQuizAccessInformation200Response{value: val, isSet: true}
}

func (v NullableModQuizGetQuizAccessInformation200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModQuizGetQuizAccessInformation200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


