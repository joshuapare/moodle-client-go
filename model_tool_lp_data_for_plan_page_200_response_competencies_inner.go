/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ToolLpDataForPlanPage200ResponseCompetenciesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolLpDataForPlanPage200ResponseCompetenciesInner{}

// ToolLpDataForPlanPage200ResponseCompetenciesInner struct for ToolLpDataForPlanPage200ResponseCompetenciesInner
type ToolLpDataForPlanPage200ResponseCompetenciesInner struct {
	Competency *CoreCompetencyCreateCompetency200Response `json:"competency,omitempty"`
	Comppath *ToolLpDataForCompetencySummary200ResponseComppath `json:"comppath,omitempty"`
	Usercompetency *ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetency `json:"usercompetency,omitempty"`
	Usercompetencyplan *ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetencyplan `json:"usercompetencyplan,omitempty"`
}

// NewToolLpDataForPlanPage200ResponseCompetenciesInner instantiates a new ToolLpDataForPlanPage200ResponseCompetenciesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolLpDataForPlanPage200ResponseCompetenciesInner() *ToolLpDataForPlanPage200ResponseCompetenciesInner {
	this := ToolLpDataForPlanPage200ResponseCompetenciesInner{}
	return &this
}

// NewToolLpDataForPlanPage200ResponseCompetenciesInnerWithDefaults instantiates a new ToolLpDataForPlanPage200ResponseCompetenciesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolLpDataForPlanPage200ResponseCompetenciesInnerWithDefaults() *ToolLpDataForPlanPage200ResponseCompetenciesInner {
	this := ToolLpDataForPlanPage200ResponseCompetenciesInner{}
	return &this
}

// GetCompetency returns the Competency field value if set, zero value otherwise.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) GetCompetency() CoreCompetencyCreateCompetency200Response {
	if o == nil || IsNil(o.Competency) {
		var ret CoreCompetencyCreateCompetency200Response
		return ret
	}
	return *o.Competency
}

// GetCompetencyOk returns a tuple with the Competency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) GetCompetencyOk() (*CoreCompetencyCreateCompetency200Response, bool) {
	if o == nil || IsNil(o.Competency) {
		return nil, false
	}
	return o.Competency, true
}

// HasCompetency returns a boolean if a field has been set.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) HasCompetency() bool {
	if o != nil && !IsNil(o.Competency) {
		return true
	}

	return false
}

// SetCompetency gets a reference to the given CoreCompetencyCreateCompetency200Response and assigns it to the Competency field.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) SetCompetency(v CoreCompetencyCreateCompetency200Response) {
	o.Competency = &v
}

// GetComppath returns the Comppath field value if set, zero value otherwise.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) GetComppath() ToolLpDataForCompetencySummary200ResponseComppath {
	if o == nil || IsNil(o.Comppath) {
		var ret ToolLpDataForCompetencySummary200ResponseComppath
		return ret
	}
	return *o.Comppath
}

// GetComppathOk returns a tuple with the Comppath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) GetComppathOk() (*ToolLpDataForCompetencySummary200ResponseComppath, bool) {
	if o == nil || IsNil(o.Comppath) {
		return nil, false
	}
	return o.Comppath, true
}

// HasComppath returns a boolean if a field has been set.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) HasComppath() bool {
	if o != nil && !IsNil(o.Comppath) {
		return true
	}

	return false
}

// SetComppath gets a reference to the given ToolLpDataForCompetencySummary200ResponseComppath and assigns it to the Comppath field.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) SetComppath(v ToolLpDataForCompetencySummary200ResponseComppath) {
	o.Comppath = &v
}

// GetUsercompetency returns the Usercompetency field value if set, zero value otherwise.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) GetUsercompetency() ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetency {
	if o == nil || IsNil(o.Usercompetency) {
		var ret ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetency
		return ret
	}
	return *o.Usercompetency
}

// GetUsercompetencyOk returns a tuple with the Usercompetency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) GetUsercompetencyOk() (*ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetency, bool) {
	if o == nil || IsNil(o.Usercompetency) {
		return nil, false
	}
	return o.Usercompetency, true
}

// HasUsercompetency returns a boolean if a field has been set.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) HasUsercompetency() bool {
	if o != nil && !IsNil(o.Usercompetency) {
		return true
	}

	return false
}

// SetUsercompetency gets a reference to the given ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetency and assigns it to the Usercompetency field.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) SetUsercompetency(v ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetency) {
	o.Usercompetency = &v
}

// GetUsercompetencyplan returns the Usercompetencyplan field value if set, zero value otherwise.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) GetUsercompetencyplan() ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetencyplan {
	if o == nil || IsNil(o.Usercompetencyplan) {
		var ret ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetencyplan
		return ret
	}
	return *o.Usercompetencyplan
}

// GetUsercompetencyplanOk returns a tuple with the Usercompetencyplan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) GetUsercompetencyplanOk() (*ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetencyplan, bool) {
	if o == nil || IsNil(o.Usercompetencyplan) {
		return nil, false
	}
	return o.Usercompetencyplan, true
}

// HasUsercompetencyplan returns a boolean if a field has been set.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) HasUsercompetencyplan() bool {
	if o != nil && !IsNil(o.Usercompetencyplan) {
		return true
	}

	return false
}

// SetUsercompetencyplan gets a reference to the given ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetencyplan and assigns it to the Usercompetencyplan field.
func (o *ToolLpDataForPlanPage200ResponseCompetenciesInner) SetUsercompetencyplan(v ToolLpDataForPlanPage200ResponseCompetenciesInnerUsercompetencyplan) {
	o.Usercompetencyplan = &v
}

func (o ToolLpDataForPlanPage200ResponseCompetenciesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolLpDataForPlanPage200ResponseCompetenciesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Competency) {
		toSerialize["competency"] = o.Competency
	}
	if !IsNil(o.Comppath) {
		toSerialize["comppath"] = o.Comppath
	}
	if !IsNil(o.Usercompetency) {
		toSerialize["usercompetency"] = o.Usercompetency
	}
	if !IsNil(o.Usercompetencyplan) {
		toSerialize["usercompetencyplan"] = o.Usercompetencyplan
	}
	return toSerialize, nil
}

type NullableToolLpDataForPlanPage200ResponseCompetenciesInner struct {
	value *ToolLpDataForPlanPage200ResponseCompetenciesInner
	isSet bool
}

func (v NullableToolLpDataForPlanPage200ResponseCompetenciesInner) Get() *ToolLpDataForPlanPage200ResponseCompetenciesInner {
	return v.value
}

func (v *NullableToolLpDataForPlanPage200ResponseCompetenciesInner) Set(val *ToolLpDataForPlanPage200ResponseCompetenciesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableToolLpDataForPlanPage200ResponseCompetenciesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableToolLpDataForPlanPage200ResponseCompetenciesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolLpDataForPlanPage200ResponseCompetenciesInner(val *ToolLpDataForPlanPage200ResponseCompetenciesInner) *NullableToolLpDataForPlanPage200ResponseCompetenciesInner {
	return &NullableToolLpDataForPlanPage200ResponseCompetenciesInner{value: val, isSet: true}
}

func (v NullableToolLpDataForPlanPage200ResponseCompetenciesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolLpDataForPlanPage200ResponseCompetenciesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


