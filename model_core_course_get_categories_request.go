/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCourseGetCategoriesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCourseGetCategoriesRequest{}

// CoreCourseGetCategoriesRequest struct for CoreCourseGetCategoriesRequest
type CoreCourseGetCategoriesRequest struct {
	// return the sub categories infos                                           (1 - default) otherwise only the category info (0)
	Addsubcategories *bool `json:"addsubcategories,omitempty"`
	Criteria []CoreCourseGetCategoriesRequestCriteriaInner `json:"criteria,omitempty"`
}

// NewCoreCourseGetCategoriesRequest instantiates a new CoreCourseGetCategoriesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCourseGetCategoriesRequest() *CoreCourseGetCategoriesRequest {
	this := CoreCourseGetCategoriesRequest{}
	var addsubcategories bool = 1
	this.Addsubcategories = &addsubcategories
	return &this
}

// NewCoreCourseGetCategoriesRequestWithDefaults instantiates a new CoreCourseGetCategoriesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCourseGetCategoriesRequestWithDefaults() *CoreCourseGetCategoriesRequest {
	this := CoreCourseGetCategoriesRequest{}
	var addsubcategories bool = 1
	this.Addsubcategories = &addsubcategories
	return &this
}

// GetAddsubcategories returns the Addsubcategories field value if set, zero value otherwise.
func (o *CoreCourseGetCategoriesRequest) GetAddsubcategories() bool {
	if o == nil || IsNil(o.Addsubcategories) {
		var ret bool
		return ret
	}
	return *o.Addsubcategories
}

// GetAddsubcategoriesOk returns a tuple with the Addsubcategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCategoriesRequest) GetAddsubcategoriesOk() (*bool, bool) {
	if o == nil || IsNil(o.Addsubcategories) {
		return nil, false
	}
	return o.Addsubcategories, true
}

// HasAddsubcategories returns a boolean if a field has been set.
func (o *CoreCourseGetCategoriesRequest) HasAddsubcategories() bool {
	if o != nil && !IsNil(o.Addsubcategories) {
		return true
	}

	return false
}

// SetAddsubcategories gets a reference to the given bool and assigns it to the Addsubcategories field.
func (o *CoreCourseGetCategoriesRequest) SetAddsubcategories(v bool) {
	o.Addsubcategories = &v
}

// GetCriteria returns the Criteria field value if set, zero value otherwise.
func (o *CoreCourseGetCategoriesRequest) GetCriteria() []CoreCourseGetCategoriesRequestCriteriaInner {
	if o == nil || IsNil(o.Criteria) {
		var ret []CoreCourseGetCategoriesRequestCriteriaInner
		return ret
	}
	return o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseGetCategoriesRequest) GetCriteriaOk() ([]CoreCourseGetCategoriesRequestCriteriaInner, bool) {
	if o == nil || IsNil(o.Criteria) {
		return nil, false
	}
	return o.Criteria, true
}

// HasCriteria returns a boolean if a field has been set.
func (o *CoreCourseGetCategoriesRequest) HasCriteria() bool {
	if o != nil && !IsNil(o.Criteria) {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given []CoreCourseGetCategoriesRequestCriteriaInner and assigns it to the Criteria field.
func (o *CoreCourseGetCategoriesRequest) SetCriteria(v []CoreCourseGetCategoriesRequestCriteriaInner) {
	o.Criteria = v
}

func (o CoreCourseGetCategoriesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCourseGetCategoriesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Addsubcategories) {
		toSerialize["addsubcategories"] = o.Addsubcategories
	}
	if !IsNil(o.Criteria) {
		toSerialize["criteria"] = o.Criteria
	}
	return toSerialize, nil
}

type NullableCoreCourseGetCategoriesRequest struct {
	value *CoreCourseGetCategoriesRequest
	isSet bool
}

func (v NullableCoreCourseGetCategoriesRequest) Get() *CoreCourseGetCategoriesRequest {
	return v.value
}

func (v *NullableCoreCourseGetCategoriesRequest) Set(val *CoreCourseGetCategoriesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCourseGetCategoriesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCourseGetCategoriesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCourseGetCategoriesRequest(val *CoreCourseGetCategoriesRequest) *NullableCoreCourseGetCategoriesRequest {
	return &NullableCoreCourseGetCategoriesRequest{value: val, isSet: true}
}

func (v NullableCoreCourseGetCategoriesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCourseGetCategoriesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


