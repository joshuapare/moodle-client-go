/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModForumGetForumAccessInformation200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumGetForumAccessInformation200Response{}

// ModForumGetForumAccessInformation200Response struct for ModForumGetForumAccessInformation200Response
type ModForumGetForumAccessInformation200Response struct {
	// Whether the user has the capability mod/forum:addinstance allowed.
	Canaddinstance *bool `json:"canaddinstance,omitempty"`
	// Whether the user has the capability mod/forum:addnews allowed.
	Canaddnews *bool `json:"canaddnews,omitempty"`
	// Whether the user has the capability mod/forum:addquestion allowed.
	Canaddquestion *bool `json:"canaddquestion,omitempty"`
	// Whether the user has the capability mod/forum:allowforcesubscribe allowed.
	Canallowforcesubscribe *bool `json:"canallowforcesubscribe,omitempty"`
	// Whether the user has the capability mod/forum:canmailnow allowed.
	Cancanmailnow *bool `json:"cancanmailnow,omitempty"`
	// Whether the user has the capability mod/forum:canoverridecutoff allowed.
	Cancanoverridecutoff *bool `json:"cancanoverridecutoff,omitempty"`
	// Whether the user has the capability mod/forum:canoverridediscussionlock allowed.
	Cancanoverridediscussionlock *bool `json:"cancanoverridediscussionlock,omitempty"`
	// Whether the user has the capability mod/forum:canposttomygroups allowed.
	Cancanposttomygroups *bool `json:"cancanposttomygroups,omitempty"`
	// Whether the user has the capability mod/forum:cantogglefavourite allowed.
	Cancantogglefavourite *bool `json:"cancantogglefavourite,omitempty"`
	// Whether the user has the capability mod/forum:createattachment allowed.
	Cancreateattachment *bool `json:"cancreateattachment,omitempty"`
	// Whether the user has the capability mod/forum:deleteanypost allowed.
	Candeleteanypost *bool `json:"candeleteanypost,omitempty"`
	// Whether the user has the capability mod/forum:deleteownpost allowed.
	Candeleteownpost *bool `json:"candeleteownpost,omitempty"`
	// Whether the user has the capability mod/forum:editanypost allowed.
	Caneditanypost *bool `json:"caneditanypost,omitempty"`
	// Whether the user has the capability mod/forum:exportdiscussion allowed.
	Canexportdiscussion *bool `json:"canexportdiscussion,omitempty"`
	// Whether the user has the capability mod/forum:exportforum allowed.
	Canexportforum *bool `json:"canexportforum,omitempty"`
	// Whether the user has the capability mod/forum:exportownpost allowed.
	Canexportownpost *bool `json:"canexportownpost,omitempty"`
	// Whether the user has the capability mod/forum:exportpost allowed.
	Canexportpost *bool `json:"canexportpost,omitempty"`
	// Whether the user has the capability mod/forum:grade allowed.
	Cangrade *bool `json:"cangrade,omitempty"`
	// Whether the user has the capability mod/forum:managesubscriptions allowed.
	Canmanagesubscriptions *bool `json:"canmanagesubscriptions,omitempty"`
	// Whether the user has the capability mod/forum:movediscussions allowed.
	Canmovediscussions *bool `json:"canmovediscussions,omitempty"`
	// Whether the user has the capability mod/forum:pindiscussions allowed.
	Canpindiscussions *bool `json:"canpindiscussions,omitempty"`
	// Whether the user has the capability mod/forum:postprivatereply allowed.
	Canpostprivatereply *bool `json:"canpostprivatereply,omitempty"`
	// Whether the user has the capability mod/forum:postwithoutthrottling allowed.
	Canpostwithoutthrottling *bool `json:"canpostwithoutthrottling,omitempty"`
	// Whether the user has the capability mod/forum:rate allowed.
	Canrate *bool `json:"canrate,omitempty"`
	// Whether the user has the capability mod/forum:readprivatereplies allowed.
	Canreadprivatereplies *bool `json:"canreadprivatereplies,omitempty"`
	// Whether the user has the capability mod/forum:replynews allowed.
	Canreplynews *bool `json:"canreplynews,omitempty"`
	// Whether the user has the capability mod/forum:replypost allowed.
	Canreplypost *bool `json:"canreplypost,omitempty"`
	// Whether the user has the capability mod/forum:splitdiscussions allowed.
	Cansplitdiscussions *bool `json:"cansplitdiscussions,omitempty"`
	// Whether the user has the capability mod/forum:startdiscussion allowed.
	Canstartdiscussion *bool `json:"canstartdiscussion,omitempty"`
	// Whether the user has the capability mod/forum:viewallratings allowed.
	Canviewallratings *bool `json:"canviewallratings,omitempty"`
	// Whether the user has the capability mod/forum:viewanyrating allowed.
	Canviewanyrating *bool `json:"canviewanyrating,omitempty"`
	// Whether the user has the capability mod/forum:viewdiscussion allowed.
	Canviewdiscussion *bool `json:"canviewdiscussion,omitempty"`
	// Whether the user has the capability mod/forum:viewhiddentimedposts allowed.
	Canviewhiddentimedposts *bool `json:"canviewhiddentimedposts,omitempty"`
	// Whether the user has the capability mod/forum:viewqandawithoutposting allowed.
	Canviewqandawithoutposting *bool `json:"canviewqandawithoutposting,omitempty"`
	// Whether the user has the capability mod/forum:viewrating allowed.
	Canviewrating *bool `json:"canviewrating,omitempty"`
	// Whether the user has the capability mod/forum:viewsubscribers allowed.
	Canviewsubscribers *bool `json:"canviewsubscribers,omitempty"`
	Warnings []AuthEmailSignupUser200ResponseWarningsInner `json:"warnings,omitempty"`
}

// NewModForumGetForumAccessInformation200Response instantiates a new ModForumGetForumAccessInformation200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumGetForumAccessInformation200Response() *ModForumGetForumAccessInformation200Response {
	this := ModForumGetForumAccessInformation200Response{}
	var canaddinstance bool = null
	this.Canaddinstance = &canaddinstance
	var canaddnews bool = null
	this.Canaddnews = &canaddnews
	var canaddquestion bool = null
	this.Canaddquestion = &canaddquestion
	var canallowforcesubscribe bool = null
	this.Canallowforcesubscribe = &canallowforcesubscribe
	var cancanmailnow bool = null
	this.Cancanmailnow = &cancanmailnow
	var cancanoverridecutoff bool = null
	this.Cancanoverridecutoff = &cancanoverridecutoff
	var cancanoverridediscussionlock bool = null
	this.Cancanoverridediscussionlock = &cancanoverridediscussionlock
	var cancanposttomygroups bool = null
	this.Cancanposttomygroups = &cancanposttomygroups
	var cancantogglefavourite bool = null
	this.Cancantogglefavourite = &cancantogglefavourite
	var cancreateattachment bool = null
	this.Cancreateattachment = &cancreateattachment
	var candeleteanypost bool = null
	this.Candeleteanypost = &candeleteanypost
	var candeleteownpost bool = null
	this.Candeleteownpost = &candeleteownpost
	var caneditanypost bool = null
	this.Caneditanypost = &caneditanypost
	var canexportdiscussion bool = null
	this.Canexportdiscussion = &canexportdiscussion
	var canexportforum bool = null
	this.Canexportforum = &canexportforum
	var canexportownpost bool = null
	this.Canexportownpost = &canexportownpost
	var canexportpost bool = null
	this.Canexportpost = &canexportpost
	var cangrade bool = null
	this.Cangrade = &cangrade
	var canmanagesubscriptions bool = null
	this.Canmanagesubscriptions = &canmanagesubscriptions
	var canmovediscussions bool = null
	this.Canmovediscussions = &canmovediscussions
	var canpindiscussions bool = null
	this.Canpindiscussions = &canpindiscussions
	var canpostprivatereply bool = null
	this.Canpostprivatereply = &canpostprivatereply
	var canpostwithoutthrottling bool = null
	this.Canpostwithoutthrottling = &canpostwithoutthrottling
	var canrate bool = null
	this.Canrate = &canrate
	var canreadprivatereplies bool = null
	this.Canreadprivatereplies = &canreadprivatereplies
	var canreplynews bool = null
	this.Canreplynews = &canreplynews
	var canreplypost bool = null
	this.Canreplypost = &canreplypost
	var cansplitdiscussions bool = null
	this.Cansplitdiscussions = &cansplitdiscussions
	var canstartdiscussion bool = null
	this.Canstartdiscussion = &canstartdiscussion
	var canviewallratings bool = null
	this.Canviewallratings = &canviewallratings
	var canviewanyrating bool = null
	this.Canviewanyrating = &canviewanyrating
	var canviewdiscussion bool = null
	this.Canviewdiscussion = &canviewdiscussion
	var canviewhiddentimedposts bool = null
	this.Canviewhiddentimedposts = &canviewhiddentimedposts
	var canviewqandawithoutposting bool = null
	this.Canviewqandawithoutposting = &canviewqandawithoutposting
	var canviewrating bool = null
	this.Canviewrating = &canviewrating
	var canviewsubscribers bool = null
	this.Canviewsubscribers = &canviewsubscribers
	return &this
}

// NewModForumGetForumAccessInformation200ResponseWithDefaults instantiates a new ModForumGetForumAccessInformation200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumGetForumAccessInformation200ResponseWithDefaults() *ModForumGetForumAccessInformation200Response {
	this := ModForumGetForumAccessInformation200Response{}
	var canaddinstance bool = null
	this.Canaddinstance = &canaddinstance
	var canaddnews bool = null
	this.Canaddnews = &canaddnews
	var canaddquestion bool = null
	this.Canaddquestion = &canaddquestion
	var canallowforcesubscribe bool = null
	this.Canallowforcesubscribe = &canallowforcesubscribe
	var cancanmailnow bool = null
	this.Cancanmailnow = &cancanmailnow
	var cancanoverridecutoff bool = null
	this.Cancanoverridecutoff = &cancanoverridecutoff
	var cancanoverridediscussionlock bool = null
	this.Cancanoverridediscussionlock = &cancanoverridediscussionlock
	var cancanposttomygroups bool = null
	this.Cancanposttomygroups = &cancanposttomygroups
	var cancantogglefavourite bool = null
	this.Cancantogglefavourite = &cancantogglefavourite
	var cancreateattachment bool = null
	this.Cancreateattachment = &cancreateattachment
	var candeleteanypost bool = null
	this.Candeleteanypost = &candeleteanypost
	var candeleteownpost bool = null
	this.Candeleteownpost = &candeleteownpost
	var caneditanypost bool = null
	this.Caneditanypost = &caneditanypost
	var canexportdiscussion bool = null
	this.Canexportdiscussion = &canexportdiscussion
	var canexportforum bool = null
	this.Canexportforum = &canexportforum
	var canexportownpost bool = null
	this.Canexportownpost = &canexportownpost
	var canexportpost bool = null
	this.Canexportpost = &canexportpost
	var cangrade bool = null
	this.Cangrade = &cangrade
	var canmanagesubscriptions bool = null
	this.Canmanagesubscriptions = &canmanagesubscriptions
	var canmovediscussions bool = null
	this.Canmovediscussions = &canmovediscussions
	var canpindiscussions bool = null
	this.Canpindiscussions = &canpindiscussions
	var canpostprivatereply bool = null
	this.Canpostprivatereply = &canpostprivatereply
	var canpostwithoutthrottling bool = null
	this.Canpostwithoutthrottling = &canpostwithoutthrottling
	var canrate bool = null
	this.Canrate = &canrate
	var canreadprivatereplies bool = null
	this.Canreadprivatereplies = &canreadprivatereplies
	var canreplynews bool = null
	this.Canreplynews = &canreplynews
	var canreplypost bool = null
	this.Canreplypost = &canreplypost
	var cansplitdiscussions bool = null
	this.Cansplitdiscussions = &cansplitdiscussions
	var canstartdiscussion bool = null
	this.Canstartdiscussion = &canstartdiscussion
	var canviewallratings bool = null
	this.Canviewallratings = &canviewallratings
	var canviewanyrating bool = null
	this.Canviewanyrating = &canviewanyrating
	var canviewdiscussion bool = null
	this.Canviewdiscussion = &canviewdiscussion
	var canviewhiddentimedposts bool = null
	this.Canviewhiddentimedposts = &canviewhiddentimedposts
	var canviewqandawithoutposting bool = null
	this.Canviewqandawithoutposting = &canviewqandawithoutposting
	var canviewrating bool = null
	this.Canviewrating = &canviewrating
	var canviewsubscribers bool = null
	this.Canviewsubscribers = &canviewsubscribers
	return &this
}

// GetCanaddinstance returns the Canaddinstance field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanaddinstance() bool {
	if o == nil || IsNil(o.Canaddinstance) {
		var ret bool
		return ret
	}
	return *o.Canaddinstance
}

// GetCanaddinstanceOk returns a tuple with the Canaddinstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanaddinstanceOk() (*bool, bool) {
	if o == nil || IsNil(o.Canaddinstance) {
		return nil, false
	}
	return o.Canaddinstance, true
}

// HasCanaddinstance returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanaddinstance() bool {
	if o != nil && !IsNil(o.Canaddinstance) {
		return true
	}

	return false
}

// SetCanaddinstance gets a reference to the given bool and assigns it to the Canaddinstance field.
func (o *ModForumGetForumAccessInformation200Response) SetCanaddinstance(v bool) {
	o.Canaddinstance = &v
}

// GetCanaddnews returns the Canaddnews field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanaddnews() bool {
	if o == nil || IsNil(o.Canaddnews) {
		var ret bool
		return ret
	}
	return *o.Canaddnews
}

// GetCanaddnewsOk returns a tuple with the Canaddnews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanaddnewsOk() (*bool, bool) {
	if o == nil || IsNil(o.Canaddnews) {
		return nil, false
	}
	return o.Canaddnews, true
}

// HasCanaddnews returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanaddnews() bool {
	if o != nil && !IsNil(o.Canaddnews) {
		return true
	}

	return false
}

// SetCanaddnews gets a reference to the given bool and assigns it to the Canaddnews field.
func (o *ModForumGetForumAccessInformation200Response) SetCanaddnews(v bool) {
	o.Canaddnews = &v
}

// GetCanaddquestion returns the Canaddquestion field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanaddquestion() bool {
	if o == nil || IsNil(o.Canaddquestion) {
		var ret bool
		return ret
	}
	return *o.Canaddquestion
}

// GetCanaddquestionOk returns a tuple with the Canaddquestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanaddquestionOk() (*bool, bool) {
	if o == nil || IsNil(o.Canaddquestion) {
		return nil, false
	}
	return o.Canaddquestion, true
}

// HasCanaddquestion returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanaddquestion() bool {
	if o != nil && !IsNil(o.Canaddquestion) {
		return true
	}

	return false
}

// SetCanaddquestion gets a reference to the given bool and assigns it to the Canaddquestion field.
func (o *ModForumGetForumAccessInformation200Response) SetCanaddquestion(v bool) {
	o.Canaddquestion = &v
}

// GetCanallowforcesubscribe returns the Canallowforcesubscribe field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanallowforcesubscribe() bool {
	if o == nil || IsNil(o.Canallowforcesubscribe) {
		var ret bool
		return ret
	}
	return *o.Canallowforcesubscribe
}

// GetCanallowforcesubscribeOk returns a tuple with the Canallowforcesubscribe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanallowforcesubscribeOk() (*bool, bool) {
	if o == nil || IsNil(o.Canallowforcesubscribe) {
		return nil, false
	}
	return o.Canallowforcesubscribe, true
}

// HasCanallowforcesubscribe returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanallowforcesubscribe() bool {
	if o != nil && !IsNil(o.Canallowforcesubscribe) {
		return true
	}

	return false
}

// SetCanallowforcesubscribe gets a reference to the given bool and assigns it to the Canallowforcesubscribe field.
func (o *ModForumGetForumAccessInformation200Response) SetCanallowforcesubscribe(v bool) {
	o.Canallowforcesubscribe = &v
}

// GetCancanmailnow returns the Cancanmailnow field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCancanmailnow() bool {
	if o == nil || IsNil(o.Cancanmailnow) {
		var ret bool
		return ret
	}
	return *o.Cancanmailnow
}

// GetCancanmailnowOk returns a tuple with the Cancanmailnow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCancanmailnowOk() (*bool, bool) {
	if o == nil || IsNil(o.Cancanmailnow) {
		return nil, false
	}
	return o.Cancanmailnow, true
}

// HasCancanmailnow returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCancanmailnow() bool {
	if o != nil && !IsNil(o.Cancanmailnow) {
		return true
	}

	return false
}

// SetCancanmailnow gets a reference to the given bool and assigns it to the Cancanmailnow field.
func (o *ModForumGetForumAccessInformation200Response) SetCancanmailnow(v bool) {
	o.Cancanmailnow = &v
}

// GetCancanoverridecutoff returns the Cancanoverridecutoff field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCancanoverridecutoff() bool {
	if o == nil || IsNil(o.Cancanoverridecutoff) {
		var ret bool
		return ret
	}
	return *o.Cancanoverridecutoff
}

// GetCancanoverridecutoffOk returns a tuple with the Cancanoverridecutoff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCancanoverridecutoffOk() (*bool, bool) {
	if o == nil || IsNil(o.Cancanoverridecutoff) {
		return nil, false
	}
	return o.Cancanoverridecutoff, true
}

// HasCancanoverridecutoff returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCancanoverridecutoff() bool {
	if o != nil && !IsNil(o.Cancanoverridecutoff) {
		return true
	}

	return false
}

// SetCancanoverridecutoff gets a reference to the given bool and assigns it to the Cancanoverridecutoff field.
func (o *ModForumGetForumAccessInformation200Response) SetCancanoverridecutoff(v bool) {
	o.Cancanoverridecutoff = &v
}

// GetCancanoverridediscussionlock returns the Cancanoverridediscussionlock field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCancanoverridediscussionlock() bool {
	if o == nil || IsNil(o.Cancanoverridediscussionlock) {
		var ret bool
		return ret
	}
	return *o.Cancanoverridediscussionlock
}

// GetCancanoverridediscussionlockOk returns a tuple with the Cancanoverridediscussionlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCancanoverridediscussionlockOk() (*bool, bool) {
	if o == nil || IsNil(o.Cancanoverridediscussionlock) {
		return nil, false
	}
	return o.Cancanoverridediscussionlock, true
}

// HasCancanoverridediscussionlock returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCancanoverridediscussionlock() bool {
	if o != nil && !IsNil(o.Cancanoverridediscussionlock) {
		return true
	}

	return false
}

// SetCancanoverridediscussionlock gets a reference to the given bool and assigns it to the Cancanoverridediscussionlock field.
func (o *ModForumGetForumAccessInformation200Response) SetCancanoverridediscussionlock(v bool) {
	o.Cancanoverridediscussionlock = &v
}

// GetCancanposttomygroups returns the Cancanposttomygroups field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCancanposttomygroups() bool {
	if o == nil || IsNil(o.Cancanposttomygroups) {
		var ret bool
		return ret
	}
	return *o.Cancanposttomygroups
}

// GetCancanposttomygroupsOk returns a tuple with the Cancanposttomygroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCancanposttomygroupsOk() (*bool, bool) {
	if o == nil || IsNil(o.Cancanposttomygroups) {
		return nil, false
	}
	return o.Cancanposttomygroups, true
}

// HasCancanposttomygroups returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCancanposttomygroups() bool {
	if o != nil && !IsNil(o.Cancanposttomygroups) {
		return true
	}

	return false
}

// SetCancanposttomygroups gets a reference to the given bool and assigns it to the Cancanposttomygroups field.
func (o *ModForumGetForumAccessInformation200Response) SetCancanposttomygroups(v bool) {
	o.Cancanposttomygroups = &v
}

// GetCancantogglefavourite returns the Cancantogglefavourite field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCancantogglefavourite() bool {
	if o == nil || IsNil(o.Cancantogglefavourite) {
		var ret bool
		return ret
	}
	return *o.Cancantogglefavourite
}

// GetCancantogglefavouriteOk returns a tuple with the Cancantogglefavourite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCancantogglefavouriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Cancantogglefavourite) {
		return nil, false
	}
	return o.Cancantogglefavourite, true
}

// HasCancantogglefavourite returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCancantogglefavourite() bool {
	if o != nil && !IsNil(o.Cancantogglefavourite) {
		return true
	}

	return false
}

// SetCancantogglefavourite gets a reference to the given bool and assigns it to the Cancantogglefavourite field.
func (o *ModForumGetForumAccessInformation200Response) SetCancantogglefavourite(v bool) {
	o.Cancantogglefavourite = &v
}

// GetCancreateattachment returns the Cancreateattachment field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCancreateattachment() bool {
	if o == nil || IsNil(o.Cancreateattachment) {
		var ret bool
		return ret
	}
	return *o.Cancreateattachment
}

// GetCancreateattachmentOk returns a tuple with the Cancreateattachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCancreateattachmentOk() (*bool, bool) {
	if o == nil || IsNil(o.Cancreateattachment) {
		return nil, false
	}
	return o.Cancreateattachment, true
}

// HasCancreateattachment returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCancreateattachment() bool {
	if o != nil && !IsNil(o.Cancreateattachment) {
		return true
	}

	return false
}

// SetCancreateattachment gets a reference to the given bool and assigns it to the Cancreateattachment field.
func (o *ModForumGetForumAccessInformation200Response) SetCancreateattachment(v bool) {
	o.Cancreateattachment = &v
}

// GetCandeleteanypost returns the Candeleteanypost field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCandeleteanypost() bool {
	if o == nil || IsNil(o.Candeleteanypost) {
		var ret bool
		return ret
	}
	return *o.Candeleteanypost
}

// GetCandeleteanypostOk returns a tuple with the Candeleteanypost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCandeleteanypostOk() (*bool, bool) {
	if o == nil || IsNil(o.Candeleteanypost) {
		return nil, false
	}
	return o.Candeleteanypost, true
}

// HasCandeleteanypost returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCandeleteanypost() bool {
	if o != nil && !IsNil(o.Candeleteanypost) {
		return true
	}

	return false
}

// SetCandeleteanypost gets a reference to the given bool and assigns it to the Candeleteanypost field.
func (o *ModForumGetForumAccessInformation200Response) SetCandeleteanypost(v bool) {
	o.Candeleteanypost = &v
}

// GetCandeleteownpost returns the Candeleteownpost field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCandeleteownpost() bool {
	if o == nil || IsNil(o.Candeleteownpost) {
		var ret bool
		return ret
	}
	return *o.Candeleteownpost
}

// GetCandeleteownpostOk returns a tuple with the Candeleteownpost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCandeleteownpostOk() (*bool, bool) {
	if o == nil || IsNil(o.Candeleteownpost) {
		return nil, false
	}
	return o.Candeleteownpost, true
}

// HasCandeleteownpost returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCandeleteownpost() bool {
	if o != nil && !IsNil(o.Candeleteownpost) {
		return true
	}

	return false
}

// SetCandeleteownpost gets a reference to the given bool and assigns it to the Candeleteownpost field.
func (o *ModForumGetForumAccessInformation200Response) SetCandeleteownpost(v bool) {
	o.Candeleteownpost = &v
}

// GetCaneditanypost returns the Caneditanypost field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCaneditanypost() bool {
	if o == nil || IsNil(o.Caneditanypost) {
		var ret bool
		return ret
	}
	return *o.Caneditanypost
}

// GetCaneditanypostOk returns a tuple with the Caneditanypost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCaneditanypostOk() (*bool, bool) {
	if o == nil || IsNil(o.Caneditanypost) {
		return nil, false
	}
	return o.Caneditanypost, true
}

// HasCaneditanypost returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCaneditanypost() bool {
	if o != nil && !IsNil(o.Caneditanypost) {
		return true
	}

	return false
}

// SetCaneditanypost gets a reference to the given bool and assigns it to the Caneditanypost field.
func (o *ModForumGetForumAccessInformation200Response) SetCaneditanypost(v bool) {
	o.Caneditanypost = &v
}

// GetCanexportdiscussion returns the Canexportdiscussion field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanexportdiscussion() bool {
	if o == nil || IsNil(o.Canexportdiscussion) {
		var ret bool
		return ret
	}
	return *o.Canexportdiscussion
}

// GetCanexportdiscussionOk returns a tuple with the Canexportdiscussion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanexportdiscussionOk() (*bool, bool) {
	if o == nil || IsNil(o.Canexportdiscussion) {
		return nil, false
	}
	return o.Canexportdiscussion, true
}

// HasCanexportdiscussion returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanexportdiscussion() bool {
	if o != nil && !IsNil(o.Canexportdiscussion) {
		return true
	}

	return false
}

// SetCanexportdiscussion gets a reference to the given bool and assigns it to the Canexportdiscussion field.
func (o *ModForumGetForumAccessInformation200Response) SetCanexportdiscussion(v bool) {
	o.Canexportdiscussion = &v
}

// GetCanexportforum returns the Canexportforum field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanexportforum() bool {
	if o == nil || IsNil(o.Canexportforum) {
		var ret bool
		return ret
	}
	return *o.Canexportforum
}

// GetCanexportforumOk returns a tuple with the Canexportforum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanexportforumOk() (*bool, bool) {
	if o == nil || IsNil(o.Canexportforum) {
		return nil, false
	}
	return o.Canexportforum, true
}

// HasCanexportforum returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanexportforum() bool {
	if o != nil && !IsNil(o.Canexportforum) {
		return true
	}

	return false
}

// SetCanexportforum gets a reference to the given bool and assigns it to the Canexportforum field.
func (o *ModForumGetForumAccessInformation200Response) SetCanexportforum(v bool) {
	o.Canexportforum = &v
}

// GetCanexportownpost returns the Canexportownpost field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanexportownpost() bool {
	if o == nil || IsNil(o.Canexportownpost) {
		var ret bool
		return ret
	}
	return *o.Canexportownpost
}

// GetCanexportownpostOk returns a tuple with the Canexportownpost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanexportownpostOk() (*bool, bool) {
	if o == nil || IsNil(o.Canexportownpost) {
		return nil, false
	}
	return o.Canexportownpost, true
}

// HasCanexportownpost returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanexportownpost() bool {
	if o != nil && !IsNil(o.Canexportownpost) {
		return true
	}

	return false
}

// SetCanexportownpost gets a reference to the given bool and assigns it to the Canexportownpost field.
func (o *ModForumGetForumAccessInformation200Response) SetCanexportownpost(v bool) {
	o.Canexportownpost = &v
}

// GetCanexportpost returns the Canexportpost field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanexportpost() bool {
	if o == nil || IsNil(o.Canexportpost) {
		var ret bool
		return ret
	}
	return *o.Canexportpost
}

// GetCanexportpostOk returns a tuple with the Canexportpost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanexportpostOk() (*bool, bool) {
	if o == nil || IsNil(o.Canexportpost) {
		return nil, false
	}
	return o.Canexportpost, true
}

// HasCanexportpost returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanexportpost() bool {
	if o != nil && !IsNil(o.Canexportpost) {
		return true
	}

	return false
}

// SetCanexportpost gets a reference to the given bool and assigns it to the Canexportpost field.
func (o *ModForumGetForumAccessInformation200Response) SetCanexportpost(v bool) {
	o.Canexportpost = &v
}

// GetCangrade returns the Cangrade field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCangrade() bool {
	if o == nil || IsNil(o.Cangrade) {
		var ret bool
		return ret
	}
	return *o.Cangrade
}

// GetCangradeOk returns a tuple with the Cangrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCangradeOk() (*bool, bool) {
	if o == nil || IsNil(o.Cangrade) {
		return nil, false
	}
	return o.Cangrade, true
}

// HasCangrade returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCangrade() bool {
	if o != nil && !IsNil(o.Cangrade) {
		return true
	}

	return false
}

// SetCangrade gets a reference to the given bool and assigns it to the Cangrade field.
func (o *ModForumGetForumAccessInformation200Response) SetCangrade(v bool) {
	o.Cangrade = &v
}

// GetCanmanagesubscriptions returns the Canmanagesubscriptions field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanmanagesubscriptions() bool {
	if o == nil || IsNil(o.Canmanagesubscriptions) {
		var ret bool
		return ret
	}
	return *o.Canmanagesubscriptions
}

// GetCanmanagesubscriptionsOk returns a tuple with the Canmanagesubscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanmanagesubscriptionsOk() (*bool, bool) {
	if o == nil || IsNil(o.Canmanagesubscriptions) {
		return nil, false
	}
	return o.Canmanagesubscriptions, true
}

// HasCanmanagesubscriptions returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanmanagesubscriptions() bool {
	if o != nil && !IsNil(o.Canmanagesubscriptions) {
		return true
	}

	return false
}

// SetCanmanagesubscriptions gets a reference to the given bool and assigns it to the Canmanagesubscriptions field.
func (o *ModForumGetForumAccessInformation200Response) SetCanmanagesubscriptions(v bool) {
	o.Canmanagesubscriptions = &v
}

// GetCanmovediscussions returns the Canmovediscussions field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanmovediscussions() bool {
	if o == nil || IsNil(o.Canmovediscussions) {
		var ret bool
		return ret
	}
	return *o.Canmovediscussions
}

// GetCanmovediscussionsOk returns a tuple with the Canmovediscussions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanmovediscussionsOk() (*bool, bool) {
	if o == nil || IsNil(o.Canmovediscussions) {
		return nil, false
	}
	return o.Canmovediscussions, true
}

// HasCanmovediscussions returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanmovediscussions() bool {
	if o != nil && !IsNil(o.Canmovediscussions) {
		return true
	}

	return false
}

// SetCanmovediscussions gets a reference to the given bool and assigns it to the Canmovediscussions field.
func (o *ModForumGetForumAccessInformation200Response) SetCanmovediscussions(v bool) {
	o.Canmovediscussions = &v
}

// GetCanpindiscussions returns the Canpindiscussions field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanpindiscussions() bool {
	if o == nil || IsNil(o.Canpindiscussions) {
		var ret bool
		return ret
	}
	return *o.Canpindiscussions
}

// GetCanpindiscussionsOk returns a tuple with the Canpindiscussions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanpindiscussionsOk() (*bool, bool) {
	if o == nil || IsNil(o.Canpindiscussions) {
		return nil, false
	}
	return o.Canpindiscussions, true
}

// HasCanpindiscussions returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanpindiscussions() bool {
	if o != nil && !IsNil(o.Canpindiscussions) {
		return true
	}

	return false
}

// SetCanpindiscussions gets a reference to the given bool and assigns it to the Canpindiscussions field.
func (o *ModForumGetForumAccessInformation200Response) SetCanpindiscussions(v bool) {
	o.Canpindiscussions = &v
}

// GetCanpostprivatereply returns the Canpostprivatereply field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanpostprivatereply() bool {
	if o == nil || IsNil(o.Canpostprivatereply) {
		var ret bool
		return ret
	}
	return *o.Canpostprivatereply
}

// GetCanpostprivatereplyOk returns a tuple with the Canpostprivatereply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanpostprivatereplyOk() (*bool, bool) {
	if o == nil || IsNil(o.Canpostprivatereply) {
		return nil, false
	}
	return o.Canpostprivatereply, true
}

// HasCanpostprivatereply returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanpostprivatereply() bool {
	if o != nil && !IsNil(o.Canpostprivatereply) {
		return true
	}

	return false
}

// SetCanpostprivatereply gets a reference to the given bool and assigns it to the Canpostprivatereply field.
func (o *ModForumGetForumAccessInformation200Response) SetCanpostprivatereply(v bool) {
	o.Canpostprivatereply = &v
}

// GetCanpostwithoutthrottling returns the Canpostwithoutthrottling field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanpostwithoutthrottling() bool {
	if o == nil || IsNil(o.Canpostwithoutthrottling) {
		var ret bool
		return ret
	}
	return *o.Canpostwithoutthrottling
}

// GetCanpostwithoutthrottlingOk returns a tuple with the Canpostwithoutthrottling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanpostwithoutthrottlingOk() (*bool, bool) {
	if o == nil || IsNil(o.Canpostwithoutthrottling) {
		return nil, false
	}
	return o.Canpostwithoutthrottling, true
}

// HasCanpostwithoutthrottling returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanpostwithoutthrottling() bool {
	if o != nil && !IsNil(o.Canpostwithoutthrottling) {
		return true
	}

	return false
}

// SetCanpostwithoutthrottling gets a reference to the given bool and assigns it to the Canpostwithoutthrottling field.
func (o *ModForumGetForumAccessInformation200Response) SetCanpostwithoutthrottling(v bool) {
	o.Canpostwithoutthrottling = &v
}

// GetCanrate returns the Canrate field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanrate() bool {
	if o == nil || IsNil(o.Canrate) {
		var ret bool
		return ret
	}
	return *o.Canrate
}

// GetCanrateOk returns a tuple with the Canrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanrateOk() (*bool, bool) {
	if o == nil || IsNil(o.Canrate) {
		return nil, false
	}
	return o.Canrate, true
}

// HasCanrate returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanrate() bool {
	if o != nil && !IsNil(o.Canrate) {
		return true
	}

	return false
}

// SetCanrate gets a reference to the given bool and assigns it to the Canrate field.
func (o *ModForumGetForumAccessInformation200Response) SetCanrate(v bool) {
	o.Canrate = &v
}

// GetCanreadprivatereplies returns the Canreadprivatereplies field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanreadprivatereplies() bool {
	if o == nil || IsNil(o.Canreadprivatereplies) {
		var ret bool
		return ret
	}
	return *o.Canreadprivatereplies
}

// GetCanreadprivaterepliesOk returns a tuple with the Canreadprivatereplies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanreadprivaterepliesOk() (*bool, bool) {
	if o == nil || IsNil(o.Canreadprivatereplies) {
		return nil, false
	}
	return o.Canreadprivatereplies, true
}

// HasCanreadprivatereplies returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanreadprivatereplies() bool {
	if o != nil && !IsNil(o.Canreadprivatereplies) {
		return true
	}

	return false
}

// SetCanreadprivatereplies gets a reference to the given bool and assigns it to the Canreadprivatereplies field.
func (o *ModForumGetForumAccessInformation200Response) SetCanreadprivatereplies(v bool) {
	o.Canreadprivatereplies = &v
}

// GetCanreplynews returns the Canreplynews field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanreplynews() bool {
	if o == nil || IsNil(o.Canreplynews) {
		var ret bool
		return ret
	}
	return *o.Canreplynews
}

// GetCanreplynewsOk returns a tuple with the Canreplynews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanreplynewsOk() (*bool, bool) {
	if o == nil || IsNil(o.Canreplynews) {
		return nil, false
	}
	return o.Canreplynews, true
}

// HasCanreplynews returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanreplynews() bool {
	if o != nil && !IsNil(o.Canreplynews) {
		return true
	}

	return false
}

// SetCanreplynews gets a reference to the given bool and assigns it to the Canreplynews field.
func (o *ModForumGetForumAccessInformation200Response) SetCanreplynews(v bool) {
	o.Canreplynews = &v
}

// GetCanreplypost returns the Canreplypost field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanreplypost() bool {
	if o == nil || IsNil(o.Canreplypost) {
		var ret bool
		return ret
	}
	return *o.Canreplypost
}

// GetCanreplypostOk returns a tuple with the Canreplypost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanreplypostOk() (*bool, bool) {
	if o == nil || IsNil(o.Canreplypost) {
		return nil, false
	}
	return o.Canreplypost, true
}

// HasCanreplypost returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanreplypost() bool {
	if o != nil && !IsNil(o.Canreplypost) {
		return true
	}

	return false
}

// SetCanreplypost gets a reference to the given bool and assigns it to the Canreplypost field.
func (o *ModForumGetForumAccessInformation200Response) SetCanreplypost(v bool) {
	o.Canreplypost = &v
}

// GetCansplitdiscussions returns the Cansplitdiscussions field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCansplitdiscussions() bool {
	if o == nil || IsNil(o.Cansplitdiscussions) {
		var ret bool
		return ret
	}
	return *o.Cansplitdiscussions
}

// GetCansplitdiscussionsOk returns a tuple with the Cansplitdiscussions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCansplitdiscussionsOk() (*bool, bool) {
	if o == nil || IsNil(o.Cansplitdiscussions) {
		return nil, false
	}
	return o.Cansplitdiscussions, true
}

// HasCansplitdiscussions returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCansplitdiscussions() bool {
	if o != nil && !IsNil(o.Cansplitdiscussions) {
		return true
	}

	return false
}

// SetCansplitdiscussions gets a reference to the given bool and assigns it to the Cansplitdiscussions field.
func (o *ModForumGetForumAccessInformation200Response) SetCansplitdiscussions(v bool) {
	o.Cansplitdiscussions = &v
}

// GetCanstartdiscussion returns the Canstartdiscussion field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanstartdiscussion() bool {
	if o == nil || IsNil(o.Canstartdiscussion) {
		var ret bool
		return ret
	}
	return *o.Canstartdiscussion
}

// GetCanstartdiscussionOk returns a tuple with the Canstartdiscussion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanstartdiscussionOk() (*bool, bool) {
	if o == nil || IsNil(o.Canstartdiscussion) {
		return nil, false
	}
	return o.Canstartdiscussion, true
}

// HasCanstartdiscussion returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanstartdiscussion() bool {
	if o != nil && !IsNil(o.Canstartdiscussion) {
		return true
	}

	return false
}

// SetCanstartdiscussion gets a reference to the given bool and assigns it to the Canstartdiscussion field.
func (o *ModForumGetForumAccessInformation200Response) SetCanstartdiscussion(v bool) {
	o.Canstartdiscussion = &v
}

// GetCanviewallratings returns the Canviewallratings field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewallratings() bool {
	if o == nil || IsNil(o.Canviewallratings) {
		var ret bool
		return ret
	}
	return *o.Canviewallratings
}

// GetCanviewallratingsOk returns a tuple with the Canviewallratings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewallratingsOk() (*bool, bool) {
	if o == nil || IsNil(o.Canviewallratings) {
		return nil, false
	}
	return o.Canviewallratings, true
}

// HasCanviewallratings returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanviewallratings() bool {
	if o != nil && !IsNil(o.Canviewallratings) {
		return true
	}

	return false
}

// SetCanviewallratings gets a reference to the given bool and assigns it to the Canviewallratings field.
func (o *ModForumGetForumAccessInformation200Response) SetCanviewallratings(v bool) {
	o.Canviewallratings = &v
}

// GetCanviewanyrating returns the Canviewanyrating field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewanyrating() bool {
	if o == nil || IsNil(o.Canviewanyrating) {
		var ret bool
		return ret
	}
	return *o.Canviewanyrating
}

// GetCanviewanyratingOk returns a tuple with the Canviewanyrating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewanyratingOk() (*bool, bool) {
	if o == nil || IsNil(o.Canviewanyrating) {
		return nil, false
	}
	return o.Canviewanyrating, true
}

// HasCanviewanyrating returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanviewanyrating() bool {
	if o != nil && !IsNil(o.Canviewanyrating) {
		return true
	}

	return false
}

// SetCanviewanyrating gets a reference to the given bool and assigns it to the Canviewanyrating field.
func (o *ModForumGetForumAccessInformation200Response) SetCanviewanyrating(v bool) {
	o.Canviewanyrating = &v
}

// GetCanviewdiscussion returns the Canviewdiscussion field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewdiscussion() bool {
	if o == nil || IsNil(o.Canviewdiscussion) {
		var ret bool
		return ret
	}
	return *o.Canviewdiscussion
}

// GetCanviewdiscussionOk returns a tuple with the Canviewdiscussion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewdiscussionOk() (*bool, bool) {
	if o == nil || IsNil(o.Canviewdiscussion) {
		return nil, false
	}
	return o.Canviewdiscussion, true
}

// HasCanviewdiscussion returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanviewdiscussion() bool {
	if o != nil && !IsNil(o.Canviewdiscussion) {
		return true
	}

	return false
}

// SetCanviewdiscussion gets a reference to the given bool and assigns it to the Canviewdiscussion field.
func (o *ModForumGetForumAccessInformation200Response) SetCanviewdiscussion(v bool) {
	o.Canviewdiscussion = &v
}

// GetCanviewhiddentimedposts returns the Canviewhiddentimedposts field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewhiddentimedposts() bool {
	if o == nil || IsNil(o.Canviewhiddentimedposts) {
		var ret bool
		return ret
	}
	return *o.Canviewhiddentimedposts
}

// GetCanviewhiddentimedpostsOk returns a tuple with the Canviewhiddentimedposts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewhiddentimedpostsOk() (*bool, bool) {
	if o == nil || IsNil(o.Canviewhiddentimedposts) {
		return nil, false
	}
	return o.Canviewhiddentimedposts, true
}

// HasCanviewhiddentimedposts returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanviewhiddentimedposts() bool {
	if o != nil && !IsNil(o.Canviewhiddentimedposts) {
		return true
	}

	return false
}

// SetCanviewhiddentimedposts gets a reference to the given bool and assigns it to the Canviewhiddentimedposts field.
func (o *ModForumGetForumAccessInformation200Response) SetCanviewhiddentimedposts(v bool) {
	o.Canviewhiddentimedposts = &v
}

// GetCanviewqandawithoutposting returns the Canviewqandawithoutposting field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewqandawithoutposting() bool {
	if o == nil || IsNil(o.Canviewqandawithoutposting) {
		var ret bool
		return ret
	}
	return *o.Canviewqandawithoutposting
}

// GetCanviewqandawithoutpostingOk returns a tuple with the Canviewqandawithoutposting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewqandawithoutpostingOk() (*bool, bool) {
	if o == nil || IsNil(o.Canviewqandawithoutposting) {
		return nil, false
	}
	return o.Canviewqandawithoutposting, true
}

// HasCanviewqandawithoutposting returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanviewqandawithoutposting() bool {
	if o != nil && !IsNil(o.Canviewqandawithoutposting) {
		return true
	}

	return false
}

// SetCanviewqandawithoutposting gets a reference to the given bool and assigns it to the Canviewqandawithoutposting field.
func (o *ModForumGetForumAccessInformation200Response) SetCanviewqandawithoutposting(v bool) {
	o.Canviewqandawithoutposting = &v
}

// GetCanviewrating returns the Canviewrating field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewrating() bool {
	if o == nil || IsNil(o.Canviewrating) {
		var ret bool
		return ret
	}
	return *o.Canviewrating
}

// GetCanviewratingOk returns a tuple with the Canviewrating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewratingOk() (*bool, bool) {
	if o == nil || IsNil(o.Canviewrating) {
		return nil, false
	}
	return o.Canviewrating, true
}

// HasCanviewrating returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanviewrating() bool {
	if o != nil && !IsNil(o.Canviewrating) {
		return true
	}

	return false
}

// SetCanviewrating gets a reference to the given bool and assigns it to the Canviewrating field.
func (o *ModForumGetForumAccessInformation200Response) SetCanviewrating(v bool) {
	o.Canviewrating = &v
}

// GetCanviewsubscribers returns the Canviewsubscribers field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewsubscribers() bool {
	if o == nil || IsNil(o.Canviewsubscribers) {
		var ret bool
		return ret
	}
	return *o.Canviewsubscribers
}

// GetCanviewsubscribersOk returns a tuple with the Canviewsubscribers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetCanviewsubscribersOk() (*bool, bool) {
	if o == nil || IsNil(o.Canviewsubscribers) {
		return nil, false
	}
	return o.Canviewsubscribers, true
}

// HasCanviewsubscribers returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasCanviewsubscribers() bool {
	if o != nil && !IsNil(o.Canviewsubscribers) {
		return true
	}

	return false
}

// SetCanviewsubscribers gets a reference to the given bool and assigns it to the Canviewsubscribers field.
func (o *ModForumGetForumAccessInformation200Response) SetCanviewsubscribers(v bool) {
	o.Canviewsubscribers = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ModForumGetForumAccessInformation200Response) GetWarnings() []AuthEmailSignupUser200ResponseWarningsInner {
	if o == nil || IsNil(o.Warnings) {
		var ret []AuthEmailSignupUser200ResponseWarningsInner
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetForumAccessInformation200Response) GetWarningsOk() ([]AuthEmailSignupUser200ResponseWarningsInner, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ModForumGetForumAccessInformation200Response) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []AuthEmailSignupUser200ResponseWarningsInner and assigns it to the Warnings field.
func (o *ModForumGetForumAccessInformation200Response) SetWarnings(v []AuthEmailSignupUser200ResponseWarningsInner) {
	o.Warnings = v
}

func (o ModForumGetForumAccessInformation200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumGetForumAccessInformation200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Canaddinstance) {
		toSerialize["canaddinstance"] = o.Canaddinstance
	}
	if !IsNil(o.Canaddnews) {
		toSerialize["canaddnews"] = o.Canaddnews
	}
	if !IsNil(o.Canaddquestion) {
		toSerialize["canaddquestion"] = o.Canaddquestion
	}
	if !IsNil(o.Canallowforcesubscribe) {
		toSerialize["canallowforcesubscribe"] = o.Canallowforcesubscribe
	}
	if !IsNil(o.Cancanmailnow) {
		toSerialize["cancanmailnow"] = o.Cancanmailnow
	}
	if !IsNil(o.Cancanoverridecutoff) {
		toSerialize["cancanoverridecutoff"] = o.Cancanoverridecutoff
	}
	if !IsNil(o.Cancanoverridediscussionlock) {
		toSerialize["cancanoverridediscussionlock"] = o.Cancanoverridediscussionlock
	}
	if !IsNil(o.Cancanposttomygroups) {
		toSerialize["cancanposttomygroups"] = o.Cancanposttomygroups
	}
	if !IsNil(o.Cancantogglefavourite) {
		toSerialize["cancantogglefavourite"] = o.Cancantogglefavourite
	}
	if !IsNil(o.Cancreateattachment) {
		toSerialize["cancreateattachment"] = o.Cancreateattachment
	}
	if !IsNil(o.Candeleteanypost) {
		toSerialize["candeleteanypost"] = o.Candeleteanypost
	}
	if !IsNil(o.Candeleteownpost) {
		toSerialize["candeleteownpost"] = o.Candeleteownpost
	}
	if !IsNil(o.Caneditanypost) {
		toSerialize["caneditanypost"] = o.Caneditanypost
	}
	if !IsNil(o.Canexportdiscussion) {
		toSerialize["canexportdiscussion"] = o.Canexportdiscussion
	}
	if !IsNil(o.Canexportforum) {
		toSerialize["canexportforum"] = o.Canexportforum
	}
	if !IsNil(o.Canexportownpost) {
		toSerialize["canexportownpost"] = o.Canexportownpost
	}
	if !IsNil(o.Canexportpost) {
		toSerialize["canexportpost"] = o.Canexportpost
	}
	if !IsNil(o.Cangrade) {
		toSerialize["cangrade"] = o.Cangrade
	}
	if !IsNil(o.Canmanagesubscriptions) {
		toSerialize["canmanagesubscriptions"] = o.Canmanagesubscriptions
	}
	if !IsNil(o.Canmovediscussions) {
		toSerialize["canmovediscussions"] = o.Canmovediscussions
	}
	if !IsNil(o.Canpindiscussions) {
		toSerialize["canpindiscussions"] = o.Canpindiscussions
	}
	if !IsNil(o.Canpostprivatereply) {
		toSerialize["canpostprivatereply"] = o.Canpostprivatereply
	}
	if !IsNil(o.Canpostwithoutthrottling) {
		toSerialize["canpostwithoutthrottling"] = o.Canpostwithoutthrottling
	}
	if !IsNil(o.Canrate) {
		toSerialize["canrate"] = o.Canrate
	}
	if !IsNil(o.Canreadprivatereplies) {
		toSerialize["canreadprivatereplies"] = o.Canreadprivatereplies
	}
	if !IsNil(o.Canreplynews) {
		toSerialize["canreplynews"] = o.Canreplynews
	}
	if !IsNil(o.Canreplypost) {
		toSerialize["canreplypost"] = o.Canreplypost
	}
	if !IsNil(o.Cansplitdiscussions) {
		toSerialize["cansplitdiscussions"] = o.Cansplitdiscussions
	}
	if !IsNil(o.Canstartdiscussion) {
		toSerialize["canstartdiscussion"] = o.Canstartdiscussion
	}
	if !IsNil(o.Canviewallratings) {
		toSerialize["canviewallratings"] = o.Canviewallratings
	}
	if !IsNil(o.Canviewanyrating) {
		toSerialize["canviewanyrating"] = o.Canviewanyrating
	}
	if !IsNil(o.Canviewdiscussion) {
		toSerialize["canviewdiscussion"] = o.Canviewdiscussion
	}
	if !IsNil(o.Canviewhiddentimedposts) {
		toSerialize["canviewhiddentimedposts"] = o.Canviewhiddentimedposts
	}
	if !IsNil(o.Canviewqandawithoutposting) {
		toSerialize["canviewqandawithoutposting"] = o.Canviewqandawithoutposting
	}
	if !IsNil(o.Canviewrating) {
		toSerialize["canviewrating"] = o.Canviewrating
	}
	if !IsNil(o.Canviewsubscribers) {
		toSerialize["canviewsubscribers"] = o.Canviewsubscribers
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableModForumGetForumAccessInformation200Response struct {
	value *ModForumGetForumAccessInformation200Response
	isSet bool
}

func (v NullableModForumGetForumAccessInformation200Response) Get() *ModForumGetForumAccessInformation200Response {
	return v.value
}

func (v *NullableModForumGetForumAccessInformation200Response) Set(val *ModForumGetForumAccessInformation200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumGetForumAccessInformation200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumGetForumAccessInformation200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumGetForumAccessInformation200Response(val *ModForumGetForumAccessInformation200Response) *NullableModForumGetForumAccessInformation200Response {
	return &NullableModForumGetForumAccessInformation200Response{value: val, isSet: true}
}

func (v NullableModForumGetForumAccessInformation200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumGetForumAccessInformation200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


