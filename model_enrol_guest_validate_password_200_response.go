/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EnrolGuestValidatePassword200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrolGuestValidatePassword200Response{}

// EnrolGuestValidatePassword200Response struct for EnrolGuestValidatePassword200Response
type EnrolGuestValidatePassword200Response struct {
	// Password hint (if enabled)
	Hint *string `json:"hint,omitempty"`
	// Whether the password was successfully validated
	Validated bool `json:"validated"`
	Warnings []AuthEmailSignupUser200ResponseWarningsInner `json:"warnings,omitempty"`
}

type _EnrolGuestValidatePassword200Response EnrolGuestValidatePassword200Response

// NewEnrolGuestValidatePassword200Response instantiates a new EnrolGuestValidatePassword200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrolGuestValidatePassword200Response(validated bool) *EnrolGuestValidatePassword200Response {
	this := EnrolGuestValidatePassword200Response{}
	var hint string = "null"
	this.Hint = &hint
	this.Validated = validated
	return &this
}

// NewEnrolGuestValidatePassword200ResponseWithDefaults instantiates a new EnrolGuestValidatePassword200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrolGuestValidatePassword200ResponseWithDefaults() *EnrolGuestValidatePassword200Response {
	this := EnrolGuestValidatePassword200Response{}
	var hint string = "null"
	this.Hint = &hint
	var validated bool = null
	this.Validated = validated
	return &this
}

// GetHint returns the Hint field value if set, zero value otherwise.
func (o *EnrolGuestValidatePassword200Response) GetHint() string {
	if o == nil || IsNil(o.Hint) {
		var ret string
		return ret
	}
	return *o.Hint
}

// GetHintOk returns a tuple with the Hint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrolGuestValidatePassword200Response) GetHintOk() (*string, bool) {
	if o == nil || IsNil(o.Hint) {
		return nil, false
	}
	return o.Hint, true
}

// HasHint returns a boolean if a field has been set.
func (o *EnrolGuestValidatePassword200Response) HasHint() bool {
	if o != nil && !IsNil(o.Hint) {
		return true
	}

	return false
}

// SetHint gets a reference to the given string and assigns it to the Hint field.
func (o *EnrolGuestValidatePassword200Response) SetHint(v string) {
	o.Hint = &v
}

// GetValidated returns the Validated field value
func (o *EnrolGuestValidatePassword200Response) GetValidated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Validated
}

// GetValidatedOk returns a tuple with the Validated field value
// and a boolean to check if the value has been set.
func (o *EnrolGuestValidatePassword200Response) GetValidatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Validated, true
}

// SetValidated sets field value
func (o *EnrolGuestValidatePassword200Response) SetValidated(v bool) {
	o.Validated = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *EnrolGuestValidatePassword200Response) GetWarnings() []AuthEmailSignupUser200ResponseWarningsInner {
	if o == nil || IsNil(o.Warnings) {
		var ret []AuthEmailSignupUser200ResponseWarningsInner
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrolGuestValidatePassword200Response) GetWarningsOk() ([]AuthEmailSignupUser200ResponseWarningsInner, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *EnrolGuestValidatePassword200Response) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []AuthEmailSignupUser200ResponseWarningsInner and assigns it to the Warnings field.
func (o *EnrolGuestValidatePassword200Response) SetWarnings(v []AuthEmailSignupUser200ResponseWarningsInner) {
	o.Warnings = v
}

func (o EnrolGuestValidatePassword200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrolGuestValidatePassword200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hint) {
		toSerialize["hint"] = o.Hint
	}
	toSerialize["validated"] = o.Validated
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

func (o *EnrolGuestValidatePassword200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"validated",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEnrolGuestValidatePassword200Response := _EnrolGuestValidatePassword200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEnrolGuestValidatePassword200Response)

	if err != nil {
		return err
	}

	*o = EnrolGuestValidatePassword200Response(varEnrolGuestValidatePassword200Response)

	return err
}

type NullableEnrolGuestValidatePassword200Response struct {
	value *EnrolGuestValidatePassword200Response
	isSet bool
}

func (v NullableEnrolGuestValidatePassword200Response) Get() *EnrolGuestValidatePassword200Response {
	return v.value
}

func (v *NullableEnrolGuestValidatePassword200Response) Set(val *EnrolGuestValidatePassword200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrolGuestValidatePassword200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrolGuestValidatePassword200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrolGuestValidatePassword200Response(val *EnrolGuestValidatePassword200Response) *NullableEnrolGuestValidatePassword200Response {
	return &NullableEnrolGuestValidatePassword200Response{value: val, isSet: true}
}

func (v NullableEnrolGuestValidatePassword200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrolGuestValidatePassword200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


