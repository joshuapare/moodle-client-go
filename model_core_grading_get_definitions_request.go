/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreGradingGetDefinitionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreGradingGetDefinitionsRequest{}

// CoreGradingGetDefinitionsRequest struct for CoreGradingGetDefinitionsRequest
type CoreGradingGetDefinitionsRequest struct {
	// Only the active method
	Activeonly *bool `json:"activeonly,omitempty"`
	// area name
	Areaname string `json:"areaname"`
	Cmids []map[string]interface{} `json:"cmids"`
}

type _CoreGradingGetDefinitionsRequest CoreGradingGetDefinitionsRequest

// NewCoreGradingGetDefinitionsRequest instantiates a new CoreGradingGetDefinitionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreGradingGetDefinitionsRequest(areaname string, cmids []map[string]interface{}) *CoreGradingGetDefinitionsRequest {
	this := CoreGradingGetDefinitionsRequest{}
	var activeonly bool = 0
	this.Activeonly = &activeonly
	this.Areaname = areaname
	this.Cmids = cmids
	return &this
}

// NewCoreGradingGetDefinitionsRequestWithDefaults instantiates a new CoreGradingGetDefinitionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreGradingGetDefinitionsRequestWithDefaults() *CoreGradingGetDefinitionsRequest {
	this := CoreGradingGetDefinitionsRequest{}
	var activeonly bool = 0
	this.Activeonly = &activeonly
	var areaname string = "null"
	this.Areaname = areaname
	return &this
}

// GetActiveonly returns the Activeonly field value if set, zero value otherwise.
func (o *CoreGradingGetDefinitionsRequest) GetActiveonly() bool {
	if o == nil || IsNil(o.Activeonly) {
		var ret bool
		return ret
	}
	return *o.Activeonly
}

// GetActiveonlyOk returns a tuple with the Activeonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreGradingGetDefinitionsRequest) GetActiveonlyOk() (*bool, bool) {
	if o == nil || IsNil(o.Activeonly) {
		return nil, false
	}
	return o.Activeonly, true
}

// HasActiveonly returns a boolean if a field has been set.
func (o *CoreGradingGetDefinitionsRequest) HasActiveonly() bool {
	if o != nil && !IsNil(o.Activeonly) {
		return true
	}

	return false
}

// SetActiveonly gets a reference to the given bool and assigns it to the Activeonly field.
func (o *CoreGradingGetDefinitionsRequest) SetActiveonly(v bool) {
	o.Activeonly = &v
}

// GetAreaname returns the Areaname field value
func (o *CoreGradingGetDefinitionsRequest) GetAreaname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Areaname
}

// GetAreanameOk returns a tuple with the Areaname field value
// and a boolean to check if the value has been set.
func (o *CoreGradingGetDefinitionsRequest) GetAreanameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Areaname, true
}

// SetAreaname sets field value
func (o *CoreGradingGetDefinitionsRequest) SetAreaname(v string) {
	o.Areaname = v
}

// GetCmids returns the Cmids field value
func (o *CoreGradingGetDefinitionsRequest) GetCmids() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Cmids
}

// GetCmidsOk returns a tuple with the Cmids field value
// and a boolean to check if the value has been set.
func (o *CoreGradingGetDefinitionsRequest) GetCmidsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cmids, true
}

// SetCmids sets field value
func (o *CoreGradingGetDefinitionsRequest) SetCmids(v []map[string]interface{}) {
	o.Cmids = v
}

func (o CoreGradingGetDefinitionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreGradingGetDefinitionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Activeonly) {
		toSerialize["activeonly"] = o.Activeonly
	}
	toSerialize["areaname"] = o.Areaname
	toSerialize["cmids"] = o.Cmids
	return toSerialize, nil
}

func (o *CoreGradingGetDefinitionsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"areaname",
		"cmids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreGradingGetDefinitionsRequest := _CoreGradingGetDefinitionsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreGradingGetDefinitionsRequest)

	if err != nil {
		return err
	}

	*o = CoreGradingGetDefinitionsRequest(varCoreGradingGetDefinitionsRequest)

	return err
}

type NullableCoreGradingGetDefinitionsRequest struct {
	value *CoreGradingGetDefinitionsRequest
	isSet bool
}

func (v NullableCoreGradingGetDefinitionsRequest) Get() *CoreGradingGetDefinitionsRequest {
	return v.value
}

func (v *NullableCoreGradingGetDefinitionsRequest) Set(val *CoreGradingGetDefinitionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreGradingGetDefinitionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreGradingGetDefinitionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreGradingGetDefinitionsRequest(val *CoreGradingGetDefinitionsRequest) *NullableCoreGradingGetDefinitionsRequest {
	return &NullableCoreGradingGetDefinitionsRequest{value: val, isSet: true}
}

func (v NullableCoreGradingGetDefinitionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreGradingGetDefinitionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


