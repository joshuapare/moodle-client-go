/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TinyEquationFilterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TinyEquationFilterRequest{}

// TinyEquationFilterRequest struct for TinyEquationFilterRequest
type TinyEquationFilterRequest struct {
	// The equation content
	Content string `json:"content"`
	// The context ID
	Contextid int32 `json:"contextid"`
}

type _TinyEquationFilterRequest TinyEquationFilterRequest

// NewTinyEquationFilterRequest instantiates a new TinyEquationFilterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTinyEquationFilterRequest(content string, contextid int32) *TinyEquationFilterRequest {
	this := TinyEquationFilterRequest{}
	this.Content = content
	this.Contextid = contextid
	return &this
}

// NewTinyEquationFilterRequestWithDefaults instantiates a new TinyEquationFilterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTinyEquationFilterRequestWithDefaults() *TinyEquationFilterRequest {
	this := TinyEquationFilterRequest{}
	var content string = "null"
	this.Content = content
	var contextid int32 = null
	this.Contextid = contextid
	return &this
}

// GetContent returns the Content field value
func (o *TinyEquationFilterRequest) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *TinyEquationFilterRequest) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *TinyEquationFilterRequest) SetContent(v string) {
	o.Content = v
}

// GetContextid returns the Contextid field value
func (o *TinyEquationFilterRequest) GetContextid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Contextid
}

// GetContextidOk returns a tuple with the Contextid field value
// and a boolean to check if the value has been set.
func (o *TinyEquationFilterRequest) GetContextidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contextid, true
}

// SetContextid sets field value
func (o *TinyEquationFilterRequest) SetContextid(v int32) {
	o.Contextid = v
}

func (o TinyEquationFilterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TinyEquationFilterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["content"] = o.Content
	toSerialize["contextid"] = o.Contextid
	return toSerialize, nil
}

func (o *TinyEquationFilterRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"content",
		"contextid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTinyEquationFilterRequest := _TinyEquationFilterRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTinyEquationFilterRequest)

	if err != nil {
		return err
	}

	*o = TinyEquationFilterRequest(varTinyEquationFilterRequest)

	return err
}

type NullableTinyEquationFilterRequest struct {
	value *TinyEquationFilterRequest
	isSet bool
}

func (v NullableTinyEquationFilterRequest) Get() *TinyEquationFilterRequest {
	return v.value
}

func (v *NullableTinyEquationFilterRequest) Set(val *TinyEquationFilterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTinyEquationFilterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTinyEquationFilterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTinyEquationFilterRequest(val *TinyEquationFilterRequest) *NullableTinyEquationFilterRequest {
	return &NullableTinyEquationFilterRequest{value: val, isSet: true}
}

func (v NullableTinyEquationFilterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTinyEquationFilterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


