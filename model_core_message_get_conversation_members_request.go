/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreMessageGetConversationMembersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreMessageGetConversationMembersRequest{}

// CoreMessageGetConversationMembersRequest struct for CoreMessageGetConversationMembersRequest
type CoreMessageGetConversationMembersRequest struct {
	// The id of the conversation
	Conversationid int32 `json:"conversationid"`
	// Do we want to include contact requests?
	Includecontactrequests *bool `json:"includecontactrequests,omitempty"`
	// Do we want to include privacy info?
	Includeprivacyinfo *bool `json:"includeprivacyinfo,omitempty"`
	// Limit from
	Limitfrom *int32 `json:"limitfrom,omitempty"`
	// Limit number
	Limitnum *int32 `json:"limitnum,omitempty"`
	// The id of the user we are performing this action on behalf of
	Userid int32 `json:"userid"`
}

type _CoreMessageGetConversationMembersRequest CoreMessageGetConversationMembersRequest

// NewCoreMessageGetConversationMembersRequest instantiates a new CoreMessageGetConversationMembersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreMessageGetConversationMembersRequest(conversationid int32, userid int32) *CoreMessageGetConversationMembersRequest {
	this := CoreMessageGetConversationMembersRequest{}
	this.Conversationid = conversationid
	var includecontactrequests bool = false
	this.Includecontactrequests = &includecontactrequests
	var includeprivacyinfo bool = false
	this.Includeprivacyinfo = &includeprivacyinfo
	var limitfrom int32 = 0
	this.Limitfrom = &limitfrom
	var limitnum int32 = 0
	this.Limitnum = &limitnum
	this.Userid = userid
	return &this
}

// NewCoreMessageGetConversationMembersRequestWithDefaults instantiates a new CoreMessageGetConversationMembersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreMessageGetConversationMembersRequestWithDefaults() *CoreMessageGetConversationMembersRequest {
	this := CoreMessageGetConversationMembersRequest{}
	var includecontactrequests bool = false
	this.Includecontactrequests = &includecontactrequests
	var includeprivacyinfo bool = false
	this.Includeprivacyinfo = &includeprivacyinfo
	var limitfrom int32 = 0
	this.Limitfrom = &limitfrom
	var limitnum int32 = 0
	this.Limitnum = &limitnum
	var userid int32 = null
	this.Userid = userid
	return &this
}

// GetConversationid returns the Conversationid field value
func (o *CoreMessageGetConversationMembersRequest) GetConversationid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Conversationid
}

// GetConversationidOk returns a tuple with the Conversationid field value
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversationMembersRequest) GetConversationidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Conversationid, true
}

// SetConversationid sets field value
func (o *CoreMessageGetConversationMembersRequest) SetConversationid(v int32) {
	o.Conversationid = v
}

// GetIncludecontactrequests returns the Includecontactrequests field value if set, zero value otherwise.
func (o *CoreMessageGetConversationMembersRequest) GetIncludecontactrequests() bool {
	if o == nil || IsNil(o.Includecontactrequests) {
		var ret bool
		return ret
	}
	return *o.Includecontactrequests
}

// GetIncludecontactrequestsOk returns a tuple with the Includecontactrequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversationMembersRequest) GetIncludecontactrequestsOk() (*bool, bool) {
	if o == nil || IsNil(o.Includecontactrequests) {
		return nil, false
	}
	return o.Includecontactrequests, true
}

// HasIncludecontactrequests returns a boolean if a field has been set.
func (o *CoreMessageGetConversationMembersRequest) HasIncludecontactrequests() bool {
	if o != nil && !IsNil(o.Includecontactrequests) {
		return true
	}

	return false
}

// SetIncludecontactrequests gets a reference to the given bool and assigns it to the Includecontactrequests field.
func (o *CoreMessageGetConversationMembersRequest) SetIncludecontactrequests(v bool) {
	o.Includecontactrequests = &v
}

// GetIncludeprivacyinfo returns the Includeprivacyinfo field value if set, zero value otherwise.
func (o *CoreMessageGetConversationMembersRequest) GetIncludeprivacyinfo() bool {
	if o == nil || IsNil(o.Includeprivacyinfo) {
		var ret bool
		return ret
	}
	return *o.Includeprivacyinfo
}

// GetIncludeprivacyinfoOk returns a tuple with the Includeprivacyinfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversationMembersRequest) GetIncludeprivacyinfoOk() (*bool, bool) {
	if o == nil || IsNil(o.Includeprivacyinfo) {
		return nil, false
	}
	return o.Includeprivacyinfo, true
}

// HasIncludeprivacyinfo returns a boolean if a field has been set.
func (o *CoreMessageGetConversationMembersRequest) HasIncludeprivacyinfo() bool {
	if o != nil && !IsNil(o.Includeprivacyinfo) {
		return true
	}

	return false
}

// SetIncludeprivacyinfo gets a reference to the given bool and assigns it to the Includeprivacyinfo field.
func (o *CoreMessageGetConversationMembersRequest) SetIncludeprivacyinfo(v bool) {
	o.Includeprivacyinfo = &v
}

// GetLimitfrom returns the Limitfrom field value if set, zero value otherwise.
func (o *CoreMessageGetConversationMembersRequest) GetLimitfrom() int32 {
	if o == nil || IsNil(o.Limitfrom) {
		var ret int32
		return ret
	}
	return *o.Limitfrom
}

// GetLimitfromOk returns a tuple with the Limitfrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversationMembersRequest) GetLimitfromOk() (*int32, bool) {
	if o == nil || IsNil(o.Limitfrom) {
		return nil, false
	}
	return o.Limitfrom, true
}

// HasLimitfrom returns a boolean if a field has been set.
func (o *CoreMessageGetConversationMembersRequest) HasLimitfrom() bool {
	if o != nil && !IsNil(o.Limitfrom) {
		return true
	}

	return false
}

// SetLimitfrom gets a reference to the given int32 and assigns it to the Limitfrom field.
func (o *CoreMessageGetConversationMembersRequest) SetLimitfrom(v int32) {
	o.Limitfrom = &v
}

// GetLimitnum returns the Limitnum field value if set, zero value otherwise.
func (o *CoreMessageGetConversationMembersRequest) GetLimitnum() int32 {
	if o == nil || IsNil(o.Limitnum) {
		var ret int32
		return ret
	}
	return *o.Limitnum
}

// GetLimitnumOk returns a tuple with the Limitnum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversationMembersRequest) GetLimitnumOk() (*int32, bool) {
	if o == nil || IsNil(o.Limitnum) {
		return nil, false
	}
	return o.Limitnum, true
}

// HasLimitnum returns a boolean if a field has been set.
func (o *CoreMessageGetConversationMembersRequest) HasLimitnum() bool {
	if o != nil && !IsNil(o.Limitnum) {
		return true
	}

	return false
}

// SetLimitnum gets a reference to the given int32 and assigns it to the Limitnum field.
func (o *CoreMessageGetConversationMembersRequest) SetLimitnum(v int32) {
	o.Limitnum = &v
}

// GetUserid returns the Userid field value
func (o *CoreMessageGetConversationMembersRequest) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *CoreMessageGetConversationMembersRequest) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *CoreMessageGetConversationMembersRequest) SetUserid(v int32) {
	o.Userid = v
}

func (o CoreMessageGetConversationMembersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreMessageGetConversationMembersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["conversationid"] = o.Conversationid
	if !IsNil(o.Includecontactrequests) {
		toSerialize["includecontactrequests"] = o.Includecontactrequests
	}
	if !IsNil(o.Includeprivacyinfo) {
		toSerialize["includeprivacyinfo"] = o.Includeprivacyinfo
	}
	if !IsNil(o.Limitfrom) {
		toSerialize["limitfrom"] = o.Limitfrom
	}
	if !IsNil(o.Limitnum) {
		toSerialize["limitnum"] = o.Limitnum
	}
	toSerialize["userid"] = o.Userid
	return toSerialize, nil
}

func (o *CoreMessageGetConversationMembersRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"conversationid",
		"userid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreMessageGetConversationMembersRequest := _CoreMessageGetConversationMembersRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreMessageGetConversationMembersRequest)

	if err != nil {
		return err
	}

	*o = CoreMessageGetConversationMembersRequest(varCoreMessageGetConversationMembersRequest)

	return err
}

type NullableCoreMessageGetConversationMembersRequest struct {
	value *CoreMessageGetConversationMembersRequest
	isSet bool
}

func (v NullableCoreMessageGetConversationMembersRequest) Get() *CoreMessageGetConversationMembersRequest {
	return v.value
}

func (v *NullableCoreMessageGetConversationMembersRequest) Set(val *CoreMessageGetConversationMembersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreMessageGetConversationMembersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreMessageGetConversationMembersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreMessageGetConversationMembersRequest(val *CoreMessageGetConversationMembersRequest) *NullableCoreMessageGetConversationMembersRequest {
	return &NullableCoreMessageGetConversationMembersRequest{value: val, isSet: true}
}

func (v NullableCoreMessageGetConversationMembersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreMessageGetConversationMembersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


