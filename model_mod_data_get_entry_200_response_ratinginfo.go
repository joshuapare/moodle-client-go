/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModDataGetEntry200ResponseRatinginfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModDataGetEntry200ResponseRatinginfo{}

// ModDataGetEntry200ResponseRatinginfo struct for ModDataGetEntry200ResponseRatinginfo
type ModDataGetEntry200ResponseRatinginfo struct {
	// Whether the user can view all the individual ratings.
	Canviewall *bool `json:"canviewall,omitempty"`
	// Whether the user can view aggregate of ratings of others.
	Canviewany *bool `json:"canviewany,omitempty"`
	// Context name.
	Component string `json:"component"`
	// Context id.
	Contextid int32 `json:"contextid"`
	// Rating area name.
	Ratingarea string `json:"ratingarea"`
	Ratings []ModDataGetEntry200ResponseRatinginfoRatingsInner `json:"ratings,omitempty"`
	Scales []ModDataGetEntry200ResponseRatinginfoScalesInner `json:"scales,omitempty"`
}

type _ModDataGetEntry200ResponseRatinginfo ModDataGetEntry200ResponseRatinginfo

// NewModDataGetEntry200ResponseRatinginfo instantiates a new ModDataGetEntry200ResponseRatinginfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModDataGetEntry200ResponseRatinginfo(component string, contextid int32, ratingarea string) *ModDataGetEntry200ResponseRatinginfo {
	this := ModDataGetEntry200ResponseRatinginfo{}
	var canviewall bool = null
	this.Canviewall = &canviewall
	var canviewany bool = null
	this.Canviewany = &canviewany
	this.Component = component
	this.Contextid = contextid
	this.Ratingarea = ratingarea
	return &this
}

// NewModDataGetEntry200ResponseRatinginfoWithDefaults instantiates a new ModDataGetEntry200ResponseRatinginfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModDataGetEntry200ResponseRatinginfoWithDefaults() *ModDataGetEntry200ResponseRatinginfo {
	this := ModDataGetEntry200ResponseRatinginfo{}
	var canviewall bool = null
	this.Canviewall = &canviewall
	var canviewany bool = null
	this.Canviewany = &canviewany
	var component string = "null"
	this.Component = component
	var contextid int32 = null
	this.Contextid = contextid
	var ratingarea string = "null"
	this.Ratingarea = ratingarea
	return &this
}

// GetCanviewall returns the Canviewall field value if set, zero value otherwise.
func (o *ModDataGetEntry200ResponseRatinginfo) GetCanviewall() bool {
	if o == nil || IsNil(o.Canviewall) {
		var ret bool
		return ret
	}
	return *o.Canviewall
}

// GetCanviewallOk returns a tuple with the Canviewall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntry200ResponseRatinginfo) GetCanviewallOk() (*bool, bool) {
	if o == nil || IsNil(o.Canviewall) {
		return nil, false
	}
	return o.Canviewall, true
}

// HasCanviewall returns a boolean if a field has been set.
func (o *ModDataGetEntry200ResponseRatinginfo) HasCanviewall() bool {
	if o != nil && !IsNil(o.Canviewall) {
		return true
	}

	return false
}

// SetCanviewall gets a reference to the given bool and assigns it to the Canviewall field.
func (o *ModDataGetEntry200ResponseRatinginfo) SetCanviewall(v bool) {
	o.Canviewall = &v
}

// GetCanviewany returns the Canviewany field value if set, zero value otherwise.
func (o *ModDataGetEntry200ResponseRatinginfo) GetCanviewany() bool {
	if o == nil || IsNil(o.Canviewany) {
		var ret bool
		return ret
	}
	return *o.Canviewany
}

// GetCanviewanyOk returns a tuple with the Canviewany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntry200ResponseRatinginfo) GetCanviewanyOk() (*bool, bool) {
	if o == nil || IsNil(o.Canviewany) {
		return nil, false
	}
	return o.Canviewany, true
}

// HasCanviewany returns a boolean if a field has been set.
func (o *ModDataGetEntry200ResponseRatinginfo) HasCanviewany() bool {
	if o != nil && !IsNil(o.Canviewany) {
		return true
	}

	return false
}

// SetCanviewany gets a reference to the given bool and assigns it to the Canviewany field.
func (o *ModDataGetEntry200ResponseRatinginfo) SetCanviewany(v bool) {
	o.Canviewany = &v
}

// GetComponent returns the Component field value
func (o *ModDataGetEntry200ResponseRatinginfo) GetComponent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Component
}

// GetComponentOk returns a tuple with the Component field value
// and a boolean to check if the value has been set.
func (o *ModDataGetEntry200ResponseRatinginfo) GetComponentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Component, true
}

// SetComponent sets field value
func (o *ModDataGetEntry200ResponseRatinginfo) SetComponent(v string) {
	o.Component = v
}

// GetContextid returns the Contextid field value
func (o *ModDataGetEntry200ResponseRatinginfo) GetContextid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Contextid
}

// GetContextidOk returns a tuple with the Contextid field value
// and a boolean to check if the value has been set.
func (o *ModDataGetEntry200ResponseRatinginfo) GetContextidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contextid, true
}

// SetContextid sets field value
func (o *ModDataGetEntry200ResponseRatinginfo) SetContextid(v int32) {
	o.Contextid = v
}

// GetRatingarea returns the Ratingarea field value
func (o *ModDataGetEntry200ResponseRatinginfo) GetRatingarea() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ratingarea
}

// GetRatingareaOk returns a tuple with the Ratingarea field value
// and a boolean to check if the value has been set.
func (o *ModDataGetEntry200ResponseRatinginfo) GetRatingareaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ratingarea, true
}

// SetRatingarea sets field value
func (o *ModDataGetEntry200ResponseRatinginfo) SetRatingarea(v string) {
	o.Ratingarea = v
}

// GetRatings returns the Ratings field value if set, zero value otherwise.
func (o *ModDataGetEntry200ResponseRatinginfo) GetRatings() []ModDataGetEntry200ResponseRatinginfoRatingsInner {
	if o == nil || IsNil(o.Ratings) {
		var ret []ModDataGetEntry200ResponseRatinginfoRatingsInner
		return ret
	}
	return o.Ratings
}

// GetRatingsOk returns a tuple with the Ratings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntry200ResponseRatinginfo) GetRatingsOk() ([]ModDataGetEntry200ResponseRatinginfoRatingsInner, bool) {
	if o == nil || IsNil(o.Ratings) {
		return nil, false
	}
	return o.Ratings, true
}

// HasRatings returns a boolean if a field has been set.
func (o *ModDataGetEntry200ResponseRatinginfo) HasRatings() bool {
	if o != nil && !IsNil(o.Ratings) {
		return true
	}

	return false
}

// SetRatings gets a reference to the given []ModDataGetEntry200ResponseRatinginfoRatingsInner and assigns it to the Ratings field.
func (o *ModDataGetEntry200ResponseRatinginfo) SetRatings(v []ModDataGetEntry200ResponseRatinginfoRatingsInner) {
	o.Ratings = v
}

// GetScales returns the Scales field value if set, zero value otherwise.
func (o *ModDataGetEntry200ResponseRatinginfo) GetScales() []ModDataGetEntry200ResponseRatinginfoScalesInner {
	if o == nil || IsNil(o.Scales) {
		var ret []ModDataGetEntry200ResponseRatinginfoScalesInner
		return ret
	}
	return o.Scales
}

// GetScalesOk returns a tuple with the Scales field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModDataGetEntry200ResponseRatinginfo) GetScalesOk() ([]ModDataGetEntry200ResponseRatinginfoScalesInner, bool) {
	if o == nil || IsNil(o.Scales) {
		return nil, false
	}
	return o.Scales, true
}

// HasScales returns a boolean if a field has been set.
func (o *ModDataGetEntry200ResponseRatinginfo) HasScales() bool {
	if o != nil && !IsNil(o.Scales) {
		return true
	}

	return false
}

// SetScales gets a reference to the given []ModDataGetEntry200ResponseRatinginfoScalesInner and assigns it to the Scales field.
func (o *ModDataGetEntry200ResponseRatinginfo) SetScales(v []ModDataGetEntry200ResponseRatinginfoScalesInner) {
	o.Scales = v
}

func (o ModDataGetEntry200ResponseRatinginfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModDataGetEntry200ResponseRatinginfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Canviewall) {
		toSerialize["canviewall"] = o.Canviewall
	}
	if !IsNil(o.Canviewany) {
		toSerialize["canviewany"] = o.Canviewany
	}
	toSerialize["component"] = o.Component
	toSerialize["contextid"] = o.Contextid
	toSerialize["ratingarea"] = o.Ratingarea
	if !IsNil(o.Ratings) {
		toSerialize["ratings"] = o.Ratings
	}
	if !IsNil(o.Scales) {
		toSerialize["scales"] = o.Scales
	}
	return toSerialize, nil
}

func (o *ModDataGetEntry200ResponseRatinginfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"component",
		"contextid",
		"ratingarea",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModDataGetEntry200ResponseRatinginfo := _ModDataGetEntry200ResponseRatinginfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModDataGetEntry200ResponseRatinginfo)

	if err != nil {
		return err
	}

	*o = ModDataGetEntry200ResponseRatinginfo(varModDataGetEntry200ResponseRatinginfo)

	return err
}

type NullableModDataGetEntry200ResponseRatinginfo struct {
	value *ModDataGetEntry200ResponseRatinginfo
	isSet bool
}

func (v NullableModDataGetEntry200ResponseRatinginfo) Get() *ModDataGetEntry200ResponseRatinginfo {
	return v.value
}

func (v *NullableModDataGetEntry200ResponseRatinginfo) Set(val *ModDataGetEntry200ResponseRatinginfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModDataGetEntry200ResponseRatinginfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModDataGetEntry200ResponseRatinginfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModDataGetEntry200ResponseRatinginfo(val *ModDataGetEntry200ResponseRatinginfo) *NullableModDataGetEntry200ResponseRatinginfo {
	return &NullableModDataGetEntry200ResponseRatinginfo{value: val, isSet: true}
}

func (v NullableModDataGetEntry200ResponseRatinginfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModDataGetEntry200ResponseRatinginfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


