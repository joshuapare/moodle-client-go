/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreSessionTimeRemaining200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreSessionTimeRemaining200Response{}

// CoreSessionTimeRemaining200Response struct for CoreSessionTimeRemaining200Response
type CoreSessionTimeRemaining200Response struct {
	// The number of seconds remaining in this session.
	Timeremaining int32 `json:"timeremaining"`
	// The current user id.
	Userid int32 `json:"userid"`
}

type _CoreSessionTimeRemaining200Response CoreSessionTimeRemaining200Response

// NewCoreSessionTimeRemaining200Response instantiates a new CoreSessionTimeRemaining200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreSessionTimeRemaining200Response(timeremaining int32, userid int32) *CoreSessionTimeRemaining200Response {
	this := CoreSessionTimeRemaining200Response{}
	this.Timeremaining = timeremaining
	this.Userid = userid
	return &this
}

// NewCoreSessionTimeRemaining200ResponseWithDefaults instantiates a new CoreSessionTimeRemaining200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreSessionTimeRemaining200ResponseWithDefaults() *CoreSessionTimeRemaining200Response {
	this := CoreSessionTimeRemaining200Response{}
	var timeremaining int32 = null
	this.Timeremaining = timeremaining
	var userid int32 = null
	this.Userid = userid
	return &this
}

// GetTimeremaining returns the Timeremaining field value
func (o *CoreSessionTimeRemaining200Response) GetTimeremaining() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timeremaining
}

// GetTimeremainingOk returns a tuple with the Timeremaining field value
// and a boolean to check if the value has been set.
func (o *CoreSessionTimeRemaining200Response) GetTimeremainingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timeremaining, true
}

// SetTimeremaining sets field value
func (o *CoreSessionTimeRemaining200Response) SetTimeremaining(v int32) {
	o.Timeremaining = v
}

// GetUserid returns the Userid field value
func (o *CoreSessionTimeRemaining200Response) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *CoreSessionTimeRemaining200Response) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *CoreSessionTimeRemaining200Response) SetUserid(v int32) {
	o.Userid = v
}

func (o CoreSessionTimeRemaining200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreSessionTimeRemaining200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timeremaining"] = o.Timeremaining
	toSerialize["userid"] = o.Userid
	return toSerialize, nil
}

func (o *CoreSessionTimeRemaining200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"timeremaining",
		"userid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreSessionTimeRemaining200Response := _CoreSessionTimeRemaining200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreSessionTimeRemaining200Response)

	if err != nil {
		return err
	}

	*o = CoreSessionTimeRemaining200Response(varCoreSessionTimeRemaining200Response)

	return err
}

type NullableCoreSessionTimeRemaining200Response struct {
	value *CoreSessionTimeRemaining200Response
	isSet bool
}

func (v NullableCoreSessionTimeRemaining200Response) Get() *CoreSessionTimeRemaining200Response {
	return v.value
}

func (v *NullableCoreSessionTimeRemaining200Response) Set(val *CoreSessionTimeRemaining200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreSessionTimeRemaining200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreSessionTimeRemaining200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreSessionTimeRemaining200Response(val *CoreSessionTimeRemaining200Response) *NullableCoreSessionTimeRemaining200Response {
	return &NullableCoreSessionTimeRemaining200Response{value: val, isSet: true}
}

func (v NullableCoreSessionTimeRemaining200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreSessionTimeRemaining200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


