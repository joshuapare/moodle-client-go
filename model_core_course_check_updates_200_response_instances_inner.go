/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCourseCheckUpdates200ResponseInstancesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCourseCheckUpdates200ResponseInstancesInner{}

// CoreCourseCheckUpdates200ResponseInstancesInner struct for CoreCourseCheckUpdates200ResponseInstancesInner
type CoreCourseCheckUpdates200ResponseInstancesInner struct {
	// The context level
	Contextlevel *string `json:"contextlevel,omitempty"`
	// Instance id
	Id *int32 `json:"id,omitempty"`
	Updates []CoreCourseCheckUpdates200ResponseInstancesInnerUpdatesInner `json:"updates,omitempty"`
}

// NewCoreCourseCheckUpdates200ResponseInstancesInner instantiates a new CoreCourseCheckUpdates200ResponseInstancesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCourseCheckUpdates200ResponseInstancesInner() *CoreCourseCheckUpdates200ResponseInstancesInner {
	this := CoreCourseCheckUpdates200ResponseInstancesInner{}
	var id int32 = null
	this.Id = &id
	return &this
}

// NewCoreCourseCheckUpdates200ResponseInstancesInnerWithDefaults instantiates a new CoreCourseCheckUpdates200ResponseInstancesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCourseCheckUpdates200ResponseInstancesInnerWithDefaults() *CoreCourseCheckUpdates200ResponseInstancesInner {
	this := CoreCourseCheckUpdates200ResponseInstancesInner{}
	var id int32 = null
	this.Id = &id
	return &this
}

// GetContextlevel returns the Contextlevel field value if set, zero value otherwise.
func (o *CoreCourseCheckUpdates200ResponseInstancesInner) GetContextlevel() string {
	if o == nil || IsNil(o.Contextlevel) {
		var ret string
		return ret
	}
	return *o.Contextlevel
}

// GetContextlevelOk returns a tuple with the Contextlevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseCheckUpdates200ResponseInstancesInner) GetContextlevelOk() (*string, bool) {
	if o == nil || IsNil(o.Contextlevel) {
		return nil, false
	}
	return o.Contextlevel, true
}

// HasContextlevel returns a boolean if a field has been set.
func (o *CoreCourseCheckUpdates200ResponseInstancesInner) HasContextlevel() bool {
	if o != nil && !IsNil(o.Contextlevel) {
		return true
	}

	return false
}

// SetContextlevel gets a reference to the given string and assigns it to the Contextlevel field.
func (o *CoreCourseCheckUpdates200ResponseInstancesInner) SetContextlevel(v string) {
	o.Contextlevel = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreCourseCheckUpdates200ResponseInstancesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseCheckUpdates200ResponseInstancesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreCourseCheckUpdates200ResponseInstancesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CoreCourseCheckUpdates200ResponseInstancesInner) SetId(v int32) {
	o.Id = &v
}

// GetUpdates returns the Updates field value if set, zero value otherwise.
func (o *CoreCourseCheckUpdates200ResponseInstancesInner) GetUpdates() []CoreCourseCheckUpdates200ResponseInstancesInnerUpdatesInner {
	if o == nil || IsNil(o.Updates) {
		var ret []CoreCourseCheckUpdates200ResponseInstancesInnerUpdatesInner
		return ret
	}
	return o.Updates
}

// GetUpdatesOk returns a tuple with the Updates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCourseCheckUpdates200ResponseInstancesInner) GetUpdatesOk() ([]CoreCourseCheckUpdates200ResponseInstancesInnerUpdatesInner, bool) {
	if o == nil || IsNil(o.Updates) {
		return nil, false
	}
	return o.Updates, true
}

// HasUpdates returns a boolean if a field has been set.
func (o *CoreCourseCheckUpdates200ResponseInstancesInner) HasUpdates() bool {
	if o != nil && !IsNil(o.Updates) {
		return true
	}

	return false
}

// SetUpdates gets a reference to the given []CoreCourseCheckUpdates200ResponseInstancesInnerUpdatesInner and assigns it to the Updates field.
func (o *CoreCourseCheckUpdates200ResponseInstancesInner) SetUpdates(v []CoreCourseCheckUpdates200ResponseInstancesInnerUpdatesInner) {
	o.Updates = v
}

func (o CoreCourseCheckUpdates200ResponseInstancesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCourseCheckUpdates200ResponseInstancesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Contextlevel) {
		toSerialize["contextlevel"] = o.Contextlevel
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Updates) {
		toSerialize["updates"] = o.Updates
	}
	return toSerialize, nil
}

type NullableCoreCourseCheckUpdates200ResponseInstancesInner struct {
	value *CoreCourseCheckUpdates200ResponseInstancesInner
	isSet bool
}

func (v NullableCoreCourseCheckUpdates200ResponseInstancesInner) Get() *CoreCourseCheckUpdates200ResponseInstancesInner {
	return v.value
}

func (v *NullableCoreCourseCheckUpdates200ResponseInstancesInner) Set(val *CoreCourseCheckUpdates200ResponseInstancesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCourseCheckUpdates200ResponseInstancesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCourseCheckUpdates200ResponseInstancesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCourseCheckUpdates200ResponseInstancesInner(val *CoreCourseCheckUpdates200ResponseInstancesInner) *NullableCoreCourseCheckUpdates200ResponseInstancesInner {
	return &NullableCoreCourseCheckUpdates200ResponseInstancesInner{value: val, isSet: true}
}

func (v NullableCoreCourseCheckUpdates200ResponseInstancesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCourseCheckUpdates200ResponseInstancesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


