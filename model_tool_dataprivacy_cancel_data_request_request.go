/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ToolDataprivacyCancelDataRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToolDataprivacyCancelDataRequestRequest{}

// ToolDataprivacyCancelDataRequestRequest struct for ToolDataprivacyCancelDataRequestRequest
type ToolDataprivacyCancelDataRequestRequest struct {
	// The request ID
	Requestid int32 `json:"requestid"`
}

type _ToolDataprivacyCancelDataRequestRequest ToolDataprivacyCancelDataRequestRequest

// NewToolDataprivacyCancelDataRequestRequest instantiates a new ToolDataprivacyCancelDataRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewToolDataprivacyCancelDataRequestRequest(requestid int32) *ToolDataprivacyCancelDataRequestRequest {
	this := ToolDataprivacyCancelDataRequestRequest{}
	this.Requestid = requestid
	return &this
}

// NewToolDataprivacyCancelDataRequestRequestWithDefaults instantiates a new ToolDataprivacyCancelDataRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToolDataprivacyCancelDataRequestRequestWithDefaults() *ToolDataprivacyCancelDataRequestRequest {
	this := ToolDataprivacyCancelDataRequestRequest{}
	return &this
}

// GetRequestid returns the Requestid field value
func (o *ToolDataprivacyCancelDataRequestRequest) GetRequestid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Requestid
}

// GetRequestidOk returns a tuple with the Requestid field value
// and a boolean to check if the value has been set.
func (o *ToolDataprivacyCancelDataRequestRequest) GetRequestidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Requestid, true
}

// SetRequestid sets field value
func (o *ToolDataprivacyCancelDataRequestRequest) SetRequestid(v int32) {
	o.Requestid = v
}

func (o ToolDataprivacyCancelDataRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToolDataprivacyCancelDataRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestid"] = o.Requestid
	return toSerialize, nil
}

func (o *ToolDataprivacyCancelDataRequestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"requestid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varToolDataprivacyCancelDataRequestRequest := _ToolDataprivacyCancelDataRequestRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varToolDataprivacyCancelDataRequestRequest)

	if err != nil {
		return err
	}

	*o = ToolDataprivacyCancelDataRequestRequest(varToolDataprivacyCancelDataRequestRequest)

	return err
}

type NullableToolDataprivacyCancelDataRequestRequest struct {
	value *ToolDataprivacyCancelDataRequestRequest
	isSet bool
}

func (v NullableToolDataprivacyCancelDataRequestRequest) Get() *ToolDataprivacyCancelDataRequestRequest {
	return v.value
}

func (v *NullableToolDataprivacyCancelDataRequestRequest) Set(val *ToolDataprivacyCancelDataRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableToolDataprivacyCancelDataRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableToolDataprivacyCancelDataRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToolDataprivacyCancelDataRequestRequest(val *ToolDataprivacyCancelDataRequestRequest) *NullableToolDataprivacyCancelDataRequestRequest {
	return &NullableToolDataprivacyCancelDataRequestRequest{value: val, isSet: true}
}

func (v NullableToolDataprivacyCancelDataRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToolDataprivacyCancelDataRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


