/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreGetUserDates200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreGetUserDates200Response{}

// CoreGetUserDates200Response struct for CoreGetUserDates200Response
type CoreGetUserDates200Response struct {
	Dates []map[string]interface{} `json:"dates"`
}

type _CoreGetUserDates200Response CoreGetUserDates200Response

// NewCoreGetUserDates200Response instantiates a new CoreGetUserDates200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreGetUserDates200Response(dates []map[string]interface{}) *CoreGetUserDates200Response {
	this := CoreGetUserDates200Response{}
	this.Dates = dates
	return &this
}

// NewCoreGetUserDates200ResponseWithDefaults instantiates a new CoreGetUserDates200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreGetUserDates200ResponseWithDefaults() *CoreGetUserDates200Response {
	this := CoreGetUserDates200Response{}
	return &this
}

// GetDates returns the Dates field value
func (o *CoreGetUserDates200Response) GetDates() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Dates
}

// GetDatesOk returns a tuple with the Dates field value
// and a boolean to check if the value has been set.
func (o *CoreGetUserDates200Response) GetDatesOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dates, true
}

// SetDates sets field value
func (o *CoreGetUserDates200Response) SetDates(v []map[string]interface{}) {
	o.Dates = v
}

func (o CoreGetUserDates200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreGetUserDates200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dates"] = o.Dates
	return toSerialize, nil
}

func (o *CoreGetUserDates200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dates",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreGetUserDates200Response := _CoreGetUserDates200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreGetUserDates200Response)

	if err != nil {
		return err
	}

	*o = CoreGetUserDates200Response(varCoreGetUserDates200Response)

	return err
}

type NullableCoreGetUserDates200Response struct {
	value *CoreGetUserDates200Response
	isSet bool
}

func (v NullableCoreGetUserDates200Response) Get() *CoreGetUserDates200Response {
	return v.value
}

func (v *NullableCoreGetUserDates200Response) Set(val *CoreGetUserDates200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreGetUserDates200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreGetUserDates200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreGetUserDates200Response(val *CoreGetUserDates200Response) *NullableCoreGetUserDates200Response {
	return &NullableCoreGetUserDates200Response{value: val, isSet: true}
}

func (v NullableCoreGetUserDates200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreGetUserDates200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


