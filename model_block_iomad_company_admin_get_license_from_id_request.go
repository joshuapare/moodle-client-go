/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BlockIomadCompanyAdminGetLicenseFromIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockIomadCompanyAdminGetLicenseFromIdRequest{}

// BlockIomadCompanyAdminGetLicenseFromIdRequest struct for BlockIomadCompanyAdminGetLicenseFromIdRequest
type BlockIomadCompanyAdminGetLicenseFromIdRequest struct {
	// License ID.
	Licenseid int32 `json:"licenseid"`
}

type _BlockIomadCompanyAdminGetLicenseFromIdRequest BlockIomadCompanyAdminGetLicenseFromIdRequest

// NewBlockIomadCompanyAdminGetLicenseFromIdRequest instantiates a new BlockIomadCompanyAdminGetLicenseFromIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockIomadCompanyAdminGetLicenseFromIdRequest(licenseid int32) *BlockIomadCompanyAdminGetLicenseFromIdRequest {
	this := BlockIomadCompanyAdminGetLicenseFromIdRequest{}
	this.Licenseid = licenseid
	return &this
}

// NewBlockIomadCompanyAdminGetLicenseFromIdRequestWithDefaults instantiates a new BlockIomadCompanyAdminGetLicenseFromIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockIomadCompanyAdminGetLicenseFromIdRequestWithDefaults() *BlockIomadCompanyAdminGetLicenseFromIdRequest {
	this := BlockIomadCompanyAdminGetLicenseFromIdRequest{}
	var licenseid int32 = null
	this.Licenseid = licenseid
	return &this
}

// GetLicenseid returns the Licenseid field value
func (o *BlockIomadCompanyAdminGetLicenseFromIdRequest) GetLicenseid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Licenseid
}

// GetLicenseidOk returns a tuple with the Licenseid field value
// and a boolean to check if the value has been set.
func (o *BlockIomadCompanyAdminGetLicenseFromIdRequest) GetLicenseidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Licenseid, true
}

// SetLicenseid sets field value
func (o *BlockIomadCompanyAdminGetLicenseFromIdRequest) SetLicenseid(v int32) {
	o.Licenseid = v
}

func (o BlockIomadCompanyAdminGetLicenseFromIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockIomadCompanyAdminGetLicenseFromIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["licenseid"] = o.Licenseid
	return toSerialize, nil
}

func (o *BlockIomadCompanyAdminGetLicenseFromIdRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"licenseid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlockIomadCompanyAdminGetLicenseFromIdRequest := _BlockIomadCompanyAdminGetLicenseFromIdRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBlockIomadCompanyAdminGetLicenseFromIdRequest)

	if err != nil {
		return err
	}

	*o = BlockIomadCompanyAdminGetLicenseFromIdRequest(varBlockIomadCompanyAdminGetLicenseFromIdRequest)

	return err
}

type NullableBlockIomadCompanyAdminGetLicenseFromIdRequest struct {
	value *BlockIomadCompanyAdminGetLicenseFromIdRequest
	isSet bool
}

func (v NullableBlockIomadCompanyAdminGetLicenseFromIdRequest) Get() *BlockIomadCompanyAdminGetLicenseFromIdRequest {
	return v.value
}

func (v *NullableBlockIomadCompanyAdminGetLicenseFromIdRequest) Set(val *BlockIomadCompanyAdminGetLicenseFromIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockIomadCompanyAdminGetLicenseFromIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockIomadCompanyAdminGetLicenseFromIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockIomadCompanyAdminGetLicenseFromIdRequest(val *BlockIomadCompanyAdminGetLicenseFromIdRequest) *NullableBlockIomadCompanyAdminGetLicenseFromIdRequest {
	return &NullableBlockIomadCompanyAdminGetLicenseFromIdRequest{value: val, isSet: true}
}

func (v NullableBlockIomadCompanyAdminGetLicenseFromIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockIomadCompanyAdminGetLicenseFromIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


