/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission{}

// ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission struct for ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission
type ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission struct {
	// assignment id
	Assignment *int32 `json:"assignment,omitempty"`
	// attempt number
	Attemptnumber int32 `json:"attemptnumber"`
	// Grading status.
	Gradingstatus *string `json:"gradingstatus,omitempty"`
	// group id
	Groupid int32 `json:"groupid"`
	// submission id
	Id int32 `json:"id"`
	// latest attempt
	Latest *int32 `json:"latest,omitempty"`
	Plugins []ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner `json:"plugins,omitempty"`
	// submission status
	Status string `json:"status"`
	// submission creation time
	Timecreated int32 `json:"timecreated"`
	// submission last modified time
	Timemodified int32 `json:"timemodified"`
	// submission start time
	Timestarted *int32 `json:"timestarted,omitempty"`
	// student id
	Userid int32 `json:"userid"`
}

type _ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission

// NewModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission instantiates a new ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission(attemptnumber int32, groupid int32, id int32, status string, timecreated int32, timemodified int32, userid int32) *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission {
	this := ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission{}
	this.Attemptnumber = attemptnumber
	this.Groupid = groupid
	this.Id = id
	this.Status = status
	this.Timecreated = timecreated
	this.Timemodified = timemodified
	this.Userid = userid
	return &this
}

// NewModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmissionWithDefaults instantiates a new ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmissionWithDefaults() *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission {
	this := ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission{}
	return &this
}

// GetAssignment returns the Assignment field value if set, zero value otherwise.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetAssignment() int32 {
	if o == nil || IsNil(o.Assignment) {
		var ret int32
		return ret
	}
	return *o.Assignment
}

// GetAssignmentOk returns a tuple with the Assignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetAssignmentOk() (*int32, bool) {
	if o == nil || IsNil(o.Assignment) {
		return nil, false
	}
	return o.Assignment, true
}

// HasAssignment returns a boolean if a field has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) HasAssignment() bool {
	if o != nil && !IsNil(o.Assignment) {
		return true
	}

	return false
}

// SetAssignment gets a reference to the given int32 and assigns it to the Assignment field.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) SetAssignment(v int32) {
	o.Assignment = &v
}

// GetAttemptnumber returns the Attemptnumber field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetAttemptnumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Attemptnumber
}

// GetAttemptnumberOk returns a tuple with the Attemptnumber field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetAttemptnumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attemptnumber, true
}

// SetAttemptnumber sets field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) SetAttemptnumber(v int32) {
	o.Attemptnumber = v
}

// GetGradingstatus returns the Gradingstatus field value if set, zero value otherwise.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetGradingstatus() string {
	if o == nil || IsNil(o.Gradingstatus) {
		var ret string
		return ret
	}
	return *o.Gradingstatus
}

// GetGradingstatusOk returns a tuple with the Gradingstatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetGradingstatusOk() (*string, bool) {
	if o == nil || IsNil(o.Gradingstatus) {
		return nil, false
	}
	return o.Gradingstatus, true
}

// HasGradingstatus returns a boolean if a field has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) HasGradingstatus() bool {
	if o != nil && !IsNil(o.Gradingstatus) {
		return true
	}

	return false
}

// SetGradingstatus gets a reference to the given string and assigns it to the Gradingstatus field.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) SetGradingstatus(v string) {
	o.Gradingstatus = &v
}

// GetGroupid returns the Groupid field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetGroupid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetGroupidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Groupid, true
}

// SetGroupid sets field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) SetGroupid(v int32) {
	o.Groupid = v
}

// GetId returns the Id field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) SetId(v int32) {
	o.Id = v
}

// GetLatest returns the Latest field value if set, zero value otherwise.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetLatest() int32 {
	if o == nil || IsNil(o.Latest) {
		var ret int32
		return ret
	}
	return *o.Latest
}

// GetLatestOk returns a tuple with the Latest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetLatestOk() (*int32, bool) {
	if o == nil || IsNil(o.Latest) {
		return nil, false
	}
	return o.Latest, true
}

// HasLatest returns a boolean if a field has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) HasLatest() bool {
	if o != nil && !IsNil(o.Latest) {
		return true
	}

	return false
}

// SetLatest gets a reference to the given int32 and assigns it to the Latest field.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) SetLatest(v int32) {
	o.Latest = &v
}

// GetPlugins returns the Plugins field value if set, zero value otherwise.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetPlugins() []ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner {
	if o == nil || IsNil(o.Plugins) {
		var ret []ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner
		return ret
	}
	return o.Plugins
}

// GetPluginsOk returns a tuple with the Plugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetPluginsOk() ([]ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner, bool) {
	if o == nil || IsNil(o.Plugins) {
		return nil, false
	}
	return o.Plugins, true
}

// HasPlugins returns a boolean if a field has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) HasPlugins() bool {
	if o != nil && !IsNil(o.Plugins) {
		return true
	}

	return false
}

// SetPlugins gets a reference to the given []ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner and assigns it to the Plugins field.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) SetPlugins(v []ModAssignGetSubmissionStatus200ResponseLastattemptSubmissionPluginsInner) {
	o.Plugins = v
}

// GetStatus returns the Status field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) SetStatus(v string) {
	o.Status = v
}

// GetTimecreated returns the Timecreated field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetTimecreated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetTimecreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timecreated, true
}

// SetTimecreated sets field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) SetTimecreated(v int32) {
	o.Timecreated = v
}

// GetTimemodified returns the Timemodified field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetTimemodified() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetTimemodifiedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timemodified, true
}

// SetTimemodified sets field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) SetTimemodified(v int32) {
	o.Timemodified = v
}

// GetTimestarted returns the Timestarted field value if set, zero value otherwise.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetTimestarted() int32 {
	if o == nil || IsNil(o.Timestarted) {
		var ret int32
		return ret
	}
	return *o.Timestarted
}

// GetTimestartedOk returns a tuple with the Timestarted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetTimestartedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestarted) {
		return nil, false
	}
	return o.Timestarted, true
}

// HasTimestarted returns a boolean if a field has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) HasTimestarted() bool {
	if o != nil && !IsNil(o.Timestarted) {
		return true
	}

	return false
}

// SetTimestarted gets a reference to the given int32 and assigns it to the Timestarted field.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) SetTimestarted(v int32) {
	o.Timestarted = &v
}

// GetUserid returns the Userid field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetUserid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) GetUseridOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) SetUserid(v int32) {
	o.Userid = v
}

func (o ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Assignment) {
		toSerialize["assignment"] = o.Assignment
	}
	toSerialize["attemptnumber"] = o.Attemptnumber
	if !IsNil(o.Gradingstatus) {
		toSerialize["gradingstatus"] = o.Gradingstatus
	}
	toSerialize["groupid"] = o.Groupid
	toSerialize["id"] = o.Id
	if !IsNil(o.Latest) {
		toSerialize["latest"] = o.Latest
	}
	if !IsNil(o.Plugins) {
		toSerialize["plugins"] = o.Plugins
	}
	toSerialize["status"] = o.Status
	toSerialize["timecreated"] = o.Timecreated
	toSerialize["timemodified"] = o.Timemodified
	if !IsNil(o.Timestarted) {
		toSerialize["timestarted"] = o.Timestarted
	}
	toSerialize["userid"] = o.Userid
	return toSerialize, nil
}

func (o *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attemptnumber",
		"groupid",
		"id",
		"status",
		"timecreated",
		"timemodified",
		"userid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission := _ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission)

	if err != nil {
		return err
	}

	*o = ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission(varModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission)

	return err
}

type NullableModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission struct {
	value *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission
	isSet bool
}

func (v NullableModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) Get() *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission {
	return v.value
}

func (v *NullableModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) Set(val *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) {
	v.value = val
	v.isSet = true
}

func (v NullableModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) IsSet() bool {
	return v.isSet
}

func (v *NullableModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission(val *ModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) *NullableModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission {
	return &NullableModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission{value: val, isSet: true}
}

func (v NullableModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModAssignGetSubmissionStatus200ResponseLastattemptTeamsubmission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


