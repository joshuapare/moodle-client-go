/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCalendarGetCalendarEvents200ResponseEventsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCalendarGetCalendarEvents200ResponseEventsInner{}

// CoreCalendarGetCalendarEvents200ResponseEventsInner event
type CoreCalendarGetCalendarEvents200ResponseEventsInner struct {
	// Category id (only for category events).
	Categoryid *int32 `json:"categoryid,omitempty"`
	// course id
	Courseid *int32 `json:"courseid,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	// Event type
	Eventtype *string `json:"eventtype,omitempty"`
	// description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Format *int32 `json:"format,omitempty"`
	// group id
	Groupid *int32 `json:"groupid,omitempty"`
	// event id
	Id *int32 `json:"id,omitempty"`
	// instance id
	Instance *int32 `json:"instance,omitempty"`
	// module name
	Modulename *string `json:"modulename,omitempty"`
	// event name
	Name *string `json:"name,omitempty"`
	// repeat id
	Repeatid *int32 `json:"repeatid,omitempty"`
	// sequence
	Sequence *int32 `json:"sequence,omitempty"`
	// Subscription id
	Subscriptionid *int32 `json:"subscriptionid,omitempty"`
	// time duration
	Timeduration *int32 `json:"timeduration,omitempty"`
	// time modified
	Timemodified *int32 `json:"timemodified,omitempty"`
	// timestart
	Timestart *int32 `json:"timestart,omitempty"`
	// user id
	Userid *int32 `json:"userid,omitempty"`
	// unique id of ical events
	Uuid *string `json:"uuid,omitempty"`
	// visible
	Visible *int32 `json:"visible,omitempty"`
}

// NewCoreCalendarGetCalendarEvents200ResponseEventsInner instantiates a new CoreCalendarGetCalendarEvents200ResponseEventsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCalendarGetCalendarEvents200ResponseEventsInner() *CoreCalendarGetCalendarEvents200ResponseEventsInner {
	this := CoreCalendarGetCalendarEvents200ResponseEventsInner{}
	var categoryid int32 = null
	this.Categoryid = &categoryid
	var uuid string = "null"
	this.Uuid = &uuid
	return &this
}

// NewCoreCalendarGetCalendarEvents200ResponseEventsInnerWithDefaults instantiates a new CoreCalendarGetCalendarEvents200ResponseEventsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCalendarGetCalendarEvents200ResponseEventsInnerWithDefaults() *CoreCalendarGetCalendarEvents200ResponseEventsInner {
	this := CoreCalendarGetCalendarEvents200ResponseEventsInner{}
	var categoryid int32 = null
	this.Categoryid = &categoryid
	var uuid string = "null"
	this.Uuid = &uuid
	return &this
}

// GetCategoryid returns the Categoryid field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetCategoryid() int32 {
	if o == nil || IsNil(o.Categoryid) {
		var ret int32
		return ret
	}
	return *o.Categoryid
}

// GetCategoryidOk returns a tuple with the Categoryid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetCategoryidOk() (*int32, bool) {
	if o == nil || IsNil(o.Categoryid) {
		return nil, false
	}
	return o.Categoryid, true
}

// HasCategoryid returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasCategoryid() bool {
	if o != nil && !IsNil(o.Categoryid) {
		return true
	}

	return false
}

// SetCategoryid gets a reference to the given int32 and assigns it to the Categoryid field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetCategoryid(v int32) {
	o.Categoryid = &v
}

// GetCourseid returns the Courseid field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetCourseid() int32 {
	if o == nil || IsNil(o.Courseid) {
		var ret int32
		return ret
	}
	return *o.Courseid
}

// GetCourseidOk returns a tuple with the Courseid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetCourseidOk() (*int32, bool) {
	if o == nil || IsNil(o.Courseid) {
		return nil, false
	}
	return o.Courseid, true
}

// HasCourseid returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasCourseid() bool {
	if o != nil && !IsNil(o.Courseid) {
		return true
	}

	return false
}

// SetCourseid gets a reference to the given int32 and assigns it to the Courseid field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetCourseid(v int32) {
	o.Courseid = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetDescription(v string) {
	o.Description = &v
}

// GetEventtype returns the Eventtype field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetEventtype() string {
	if o == nil || IsNil(o.Eventtype) {
		var ret string
		return ret
	}
	return *o.Eventtype
}

// GetEventtypeOk returns a tuple with the Eventtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetEventtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Eventtype) {
		return nil, false
	}
	return o.Eventtype, true
}

// HasEventtype returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasEventtype() bool {
	if o != nil && !IsNil(o.Eventtype) {
		return true
	}

	return false
}

// SetEventtype gets a reference to the given string and assigns it to the Eventtype field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetEventtype(v string) {
	o.Eventtype = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetFormat() int32 {
	if o == nil || IsNil(o.Format) {
		var ret int32
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetFormatOk() (*int32, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given int32 and assigns it to the Format field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetFormat(v int32) {
	o.Format = &v
}

// GetGroupid returns the Groupid field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetGroupid() int32 {
	if o == nil || IsNil(o.Groupid) {
		var ret int32
		return ret
	}
	return *o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetGroupidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupid) {
		return nil, false
	}
	return o.Groupid, true
}

// HasGroupid returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasGroupid() bool {
	if o != nil && !IsNil(o.Groupid) {
		return true
	}

	return false
}

// SetGroupid gets a reference to the given int32 and assigns it to the Groupid field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetGroupid(v int32) {
	o.Groupid = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetId(v int32) {
	o.Id = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetInstance() int32 {
	if o == nil || IsNil(o.Instance) {
		var ret int32
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetInstanceOk() (*int32, bool) {
	if o == nil || IsNil(o.Instance) {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given int32 and assigns it to the Instance field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetInstance(v int32) {
	o.Instance = &v
}

// GetModulename returns the Modulename field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetModulename() string {
	if o == nil || IsNil(o.Modulename) {
		var ret string
		return ret
	}
	return *o.Modulename
}

// GetModulenameOk returns a tuple with the Modulename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetModulenameOk() (*string, bool) {
	if o == nil || IsNil(o.Modulename) {
		return nil, false
	}
	return o.Modulename, true
}

// HasModulename returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasModulename() bool {
	if o != nil && !IsNil(o.Modulename) {
		return true
	}

	return false
}

// SetModulename gets a reference to the given string and assigns it to the Modulename field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetModulename(v string) {
	o.Modulename = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetName(v string) {
	o.Name = &v
}

// GetRepeatid returns the Repeatid field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetRepeatid() int32 {
	if o == nil || IsNil(o.Repeatid) {
		var ret int32
		return ret
	}
	return *o.Repeatid
}

// GetRepeatidOk returns a tuple with the Repeatid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetRepeatidOk() (*int32, bool) {
	if o == nil || IsNil(o.Repeatid) {
		return nil, false
	}
	return o.Repeatid, true
}

// HasRepeatid returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasRepeatid() bool {
	if o != nil && !IsNil(o.Repeatid) {
		return true
	}

	return false
}

// SetRepeatid gets a reference to the given int32 and assigns it to the Repeatid field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetRepeatid(v int32) {
	o.Repeatid = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetSequence(v int32) {
	o.Sequence = &v
}

// GetSubscriptionid returns the Subscriptionid field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetSubscriptionid() int32 {
	if o == nil || IsNil(o.Subscriptionid) {
		var ret int32
		return ret
	}
	return *o.Subscriptionid
}

// GetSubscriptionidOk returns a tuple with the Subscriptionid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetSubscriptionidOk() (*int32, bool) {
	if o == nil || IsNil(o.Subscriptionid) {
		return nil, false
	}
	return o.Subscriptionid, true
}

// HasSubscriptionid returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasSubscriptionid() bool {
	if o != nil && !IsNil(o.Subscriptionid) {
		return true
	}

	return false
}

// SetSubscriptionid gets a reference to the given int32 and assigns it to the Subscriptionid field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetSubscriptionid(v int32) {
	o.Subscriptionid = &v
}

// GetTimeduration returns the Timeduration field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetTimeduration() int32 {
	if o == nil || IsNil(o.Timeduration) {
		var ret int32
		return ret
	}
	return *o.Timeduration
}

// GetTimedurationOk returns a tuple with the Timeduration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetTimedurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeduration) {
		return nil, false
	}
	return o.Timeduration, true
}

// HasTimeduration returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasTimeduration() bool {
	if o != nil && !IsNil(o.Timeduration) {
		return true
	}

	return false
}

// SetTimeduration gets a reference to the given int32 and assigns it to the Timeduration field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetTimeduration(v int32) {
	o.Timeduration = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetTimestart returns the Timestart field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetTimestart() int32 {
	if o == nil || IsNil(o.Timestart) {
		var ret int32
		return ret
	}
	return *o.Timestart
}

// GetTimestartOk returns a tuple with the Timestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetTimestartOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestart) {
		return nil, false
	}
	return o.Timestart, true
}

// HasTimestart returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasTimestart() bool {
	if o != nil && !IsNil(o.Timestart) {
		return true
	}

	return false
}

// SetTimestart gets a reference to the given int32 and assigns it to the Timestart field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetTimestart(v int32) {
	o.Timestart = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetUserid() int32 {
	if o == nil || IsNil(o.Userid) {
		var ret int32
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetUseridOk() (*int32, bool) {
	if o == nil || IsNil(o.Userid) {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasUserid() bool {
	if o != nil && !IsNil(o.Userid) {
		return true
	}

	return false
}

// SetUserid gets a reference to the given int32 and assigns it to the Userid field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetUserid(v int32) {
	o.Userid = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetUuid(v string) {
	o.Uuid = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetVisible() int32 {
	if o == nil || IsNil(o.Visible) {
		var ret int32
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) GetVisibleOk() (*int32, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given int32 and assigns it to the Visible field.
func (o *CoreCalendarGetCalendarEvents200ResponseEventsInner) SetVisible(v int32) {
	o.Visible = &v
}

func (o CoreCalendarGetCalendarEvents200ResponseEventsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCalendarGetCalendarEvents200ResponseEventsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Categoryid) {
		toSerialize["categoryid"] = o.Categoryid
	}
	if !IsNil(o.Courseid) {
		toSerialize["courseid"] = o.Courseid
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Eventtype) {
		toSerialize["eventtype"] = o.Eventtype
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Groupid) {
		toSerialize["groupid"] = o.Groupid
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	if !IsNil(o.Modulename) {
		toSerialize["modulename"] = o.Modulename
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Repeatid) {
		toSerialize["repeatid"] = o.Repeatid
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.Subscriptionid) {
		toSerialize["subscriptionid"] = o.Subscriptionid
	}
	if !IsNil(o.Timeduration) {
		toSerialize["timeduration"] = o.Timeduration
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Timestart) {
		toSerialize["timestart"] = o.Timestart
	}
	if !IsNil(o.Userid) {
		toSerialize["userid"] = o.Userid
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	return toSerialize, nil
}

type NullableCoreCalendarGetCalendarEvents200ResponseEventsInner struct {
	value *CoreCalendarGetCalendarEvents200ResponseEventsInner
	isSet bool
}

func (v NullableCoreCalendarGetCalendarEvents200ResponseEventsInner) Get() *CoreCalendarGetCalendarEvents200ResponseEventsInner {
	return v.value
}

func (v *NullableCoreCalendarGetCalendarEvents200ResponseEventsInner) Set(val *CoreCalendarGetCalendarEvents200ResponseEventsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCalendarGetCalendarEvents200ResponseEventsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCalendarGetCalendarEvents200ResponseEventsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCalendarGetCalendarEvents200ResponseEventsInner(val *CoreCalendarGetCalendarEvents200ResponseEventsInner) *NullableCoreCalendarGetCalendarEvents200ResponseEventsInner {
	return &NullableCoreCalendarGetCalendarEvents200ResponseEventsInner{value: val, isSet: true}
}

func (v NullableCoreCalendarGetCalendarEvents200ResponseEventsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCalendarGetCalendarEvents200ResponseEventsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


