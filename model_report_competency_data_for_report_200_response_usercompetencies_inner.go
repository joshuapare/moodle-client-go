/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ReportCompetencyDataForReport200ResponseUsercompetenciesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReportCompetencyDataForReport200ResponseUsercompetenciesInner{}

// ReportCompetencyDataForReport200ResponseUsercompetenciesInner struct for ReportCompetencyDataForReport200ResponseUsercompetenciesInner
type ReportCompetencyDataForReport200ResponseUsercompetenciesInner struct {
	Competency *ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetency `json:"competency,omitempty"`
	Usercompetencycourse *ReportCompetencyDataForReport200ResponseUsercompetenciesInnerUsercompetencycourse `json:"usercompetencycourse,omitempty"`
}

// NewReportCompetencyDataForReport200ResponseUsercompetenciesInner instantiates a new ReportCompetencyDataForReport200ResponseUsercompetenciesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportCompetencyDataForReport200ResponseUsercompetenciesInner() *ReportCompetencyDataForReport200ResponseUsercompetenciesInner {
	this := ReportCompetencyDataForReport200ResponseUsercompetenciesInner{}
	return &this
}

// NewReportCompetencyDataForReport200ResponseUsercompetenciesInnerWithDefaults instantiates a new ReportCompetencyDataForReport200ResponseUsercompetenciesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportCompetencyDataForReport200ResponseUsercompetenciesInnerWithDefaults() *ReportCompetencyDataForReport200ResponseUsercompetenciesInner {
	this := ReportCompetencyDataForReport200ResponseUsercompetenciesInner{}
	return &this
}

// GetCompetency returns the Competency field value if set, zero value otherwise.
func (o *ReportCompetencyDataForReport200ResponseUsercompetenciesInner) GetCompetency() ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetency {
	if o == nil || IsNil(o.Competency) {
		var ret ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetency
		return ret
	}
	return *o.Competency
}

// GetCompetencyOk returns a tuple with the Competency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportCompetencyDataForReport200ResponseUsercompetenciesInner) GetCompetencyOk() (*ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetency, bool) {
	if o == nil || IsNil(o.Competency) {
		return nil, false
	}
	return o.Competency, true
}

// HasCompetency returns a boolean if a field has been set.
func (o *ReportCompetencyDataForReport200ResponseUsercompetenciesInner) HasCompetency() bool {
	if o != nil && !IsNil(o.Competency) {
		return true
	}

	return false
}

// SetCompetency gets a reference to the given ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetency and assigns it to the Competency field.
func (o *ReportCompetencyDataForReport200ResponseUsercompetenciesInner) SetCompetency(v ReportCompetencyDataForReport200ResponseUsercompetenciesInnerCompetency) {
	o.Competency = &v
}

// GetUsercompetencycourse returns the Usercompetencycourse field value if set, zero value otherwise.
func (o *ReportCompetencyDataForReport200ResponseUsercompetenciesInner) GetUsercompetencycourse() ReportCompetencyDataForReport200ResponseUsercompetenciesInnerUsercompetencycourse {
	if o == nil || IsNil(o.Usercompetencycourse) {
		var ret ReportCompetencyDataForReport200ResponseUsercompetenciesInnerUsercompetencycourse
		return ret
	}
	return *o.Usercompetencycourse
}

// GetUsercompetencycourseOk returns a tuple with the Usercompetencycourse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportCompetencyDataForReport200ResponseUsercompetenciesInner) GetUsercompetencycourseOk() (*ReportCompetencyDataForReport200ResponseUsercompetenciesInnerUsercompetencycourse, bool) {
	if o == nil || IsNil(o.Usercompetencycourse) {
		return nil, false
	}
	return o.Usercompetencycourse, true
}

// HasUsercompetencycourse returns a boolean if a field has been set.
func (o *ReportCompetencyDataForReport200ResponseUsercompetenciesInner) HasUsercompetencycourse() bool {
	if o != nil && !IsNil(o.Usercompetencycourse) {
		return true
	}

	return false
}

// SetUsercompetencycourse gets a reference to the given ReportCompetencyDataForReport200ResponseUsercompetenciesInnerUsercompetencycourse and assigns it to the Usercompetencycourse field.
func (o *ReportCompetencyDataForReport200ResponseUsercompetenciesInner) SetUsercompetencycourse(v ReportCompetencyDataForReport200ResponseUsercompetenciesInnerUsercompetencycourse) {
	o.Usercompetencycourse = &v
}

func (o ReportCompetencyDataForReport200ResponseUsercompetenciesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReportCompetencyDataForReport200ResponseUsercompetenciesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Competency) {
		toSerialize["competency"] = o.Competency
	}
	if !IsNil(o.Usercompetencycourse) {
		toSerialize["usercompetencycourse"] = o.Usercompetencycourse
	}
	return toSerialize, nil
}

type NullableReportCompetencyDataForReport200ResponseUsercompetenciesInner struct {
	value *ReportCompetencyDataForReport200ResponseUsercompetenciesInner
	isSet bool
}

func (v NullableReportCompetencyDataForReport200ResponseUsercompetenciesInner) Get() *ReportCompetencyDataForReport200ResponseUsercompetenciesInner {
	return v.value
}

func (v *NullableReportCompetencyDataForReport200ResponseUsercompetenciesInner) Set(val *ReportCompetencyDataForReport200ResponseUsercompetenciesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableReportCompetencyDataForReport200ResponseUsercompetenciesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableReportCompetencyDataForReport200ResponseUsercompetenciesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportCompetencyDataForReport200ResponseUsercompetenciesInner(val *ReportCompetencyDataForReport200ResponseUsercompetenciesInner) *NullableReportCompetencyDataForReport200ResponseUsercompetenciesInner {
	return &NullableReportCompetencyDataForReport200ResponseUsercompetenciesInner{value: val, isSet: true}
}

func (v NullableReportCompetencyDataForReport200ResponseUsercompetenciesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportCompetencyDataForReport200ResponseUsercompetenciesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


