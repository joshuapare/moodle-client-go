/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModChatGetChatLatestMessagesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModChatGetChatLatestMessagesRequest{}

// ModChatGetChatLatestMessagesRequest struct for ModChatGetChatLatestMessagesRequest
type ModChatGetChatLatestMessagesRequest struct {
	// last time messages were retrieved (epoch time)
	Chatlasttime *int32 `json:"chatlasttime,omitempty"`
	// chat session id (obtained via mod_chat_login_user)
	Chatsid string `json:"chatsid"`
}

type _ModChatGetChatLatestMessagesRequest ModChatGetChatLatestMessagesRequest

// NewModChatGetChatLatestMessagesRequest instantiates a new ModChatGetChatLatestMessagesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModChatGetChatLatestMessagesRequest(chatsid string) *ModChatGetChatLatestMessagesRequest {
	this := ModChatGetChatLatestMessagesRequest{}
	var chatlasttime int32 = 0
	this.Chatlasttime = &chatlasttime
	this.Chatsid = chatsid
	return &this
}

// NewModChatGetChatLatestMessagesRequestWithDefaults instantiates a new ModChatGetChatLatestMessagesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModChatGetChatLatestMessagesRequestWithDefaults() *ModChatGetChatLatestMessagesRequest {
	this := ModChatGetChatLatestMessagesRequest{}
	var chatlasttime int32 = 0
	this.Chatlasttime = &chatlasttime
	var chatsid string = "null"
	this.Chatsid = chatsid
	return &this
}

// GetChatlasttime returns the Chatlasttime field value if set, zero value otherwise.
func (o *ModChatGetChatLatestMessagesRequest) GetChatlasttime() int32 {
	if o == nil || IsNil(o.Chatlasttime) {
		var ret int32
		return ret
	}
	return *o.Chatlasttime
}

// GetChatlasttimeOk returns a tuple with the Chatlasttime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModChatGetChatLatestMessagesRequest) GetChatlasttimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Chatlasttime) {
		return nil, false
	}
	return o.Chatlasttime, true
}

// HasChatlasttime returns a boolean if a field has been set.
func (o *ModChatGetChatLatestMessagesRequest) HasChatlasttime() bool {
	if o != nil && !IsNil(o.Chatlasttime) {
		return true
	}

	return false
}

// SetChatlasttime gets a reference to the given int32 and assigns it to the Chatlasttime field.
func (o *ModChatGetChatLatestMessagesRequest) SetChatlasttime(v int32) {
	o.Chatlasttime = &v
}

// GetChatsid returns the Chatsid field value
func (o *ModChatGetChatLatestMessagesRequest) GetChatsid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Chatsid
}

// GetChatsidOk returns a tuple with the Chatsid field value
// and a boolean to check if the value has been set.
func (o *ModChatGetChatLatestMessagesRequest) GetChatsidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Chatsid, true
}

// SetChatsid sets field value
func (o *ModChatGetChatLatestMessagesRequest) SetChatsid(v string) {
	o.Chatsid = v
}

func (o ModChatGetChatLatestMessagesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModChatGetChatLatestMessagesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Chatlasttime) {
		toSerialize["chatlasttime"] = o.Chatlasttime
	}
	toSerialize["chatsid"] = o.Chatsid
	return toSerialize, nil
}

func (o *ModChatGetChatLatestMessagesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chatsid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModChatGetChatLatestMessagesRequest := _ModChatGetChatLatestMessagesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModChatGetChatLatestMessagesRequest)

	if err != nil {
		return err
	}

	*o = ModChatGetChatLatestMessagesRequest(varModChatGetChatLatestMessagesRequest)

	return err
}

type NullableModChatGetChatLatestMessagesRequest struct {
	value *ModChatGetChatLatestMessagesRequest
	isSet bool
}

func (v NullableModChatGetChatLatestMessagesRequest) Get() *ModChatGetChatLatestMessagesRequest {
	return v.value
}

func (v *NullableModChatGetChatLatestMessagesRequest) Set(val *ModChatGetChatLatestMessagesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModChatGetChatLatestMessagesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModChatGetChatLatestMessagesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModChatGetChatLatestMessagesRequest(val *ModChatGetChatLatestMessagesRequest) *NullableModChatGetChatLatestMessagesRequest {
	return &NullableModChatGetChatLatestMessagesRequest{value: val, isSet: true}
}

func (v NullableModChatGetChatLatestMessagesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModChatGetChatLatestMessagesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


