/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction{}

// CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction struct for CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction
type CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction struct {
	// actionable
	Actionable bool `json:"actionable"`
	// itemcount
	Itemcount int32 `json:"itemcount"`
	// name
	Name string `json:"name"`
	// showitemcount
	Showitemcount bool `json:"showitemcount"`
	// url
	Url string `json:"url"`
}

type _CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction

// NewCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction instantiates a new CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction(actionable bool, itemcount int32, name string, showitemcount bool, url string) *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction {
	this := CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction{}
	this.Actionable = actionable
	this.Itemcount = itemcount
	this.Name = name
	this.Showitemcount = showitemcount
	this.Url = url
	return &this
}

// NewCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerActionWithDefaults instantiates a new CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerActionWithDefaults() *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction {
	this := CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction{}
	var showitemcount bool = false
	this.Showitemcount = showitemcount
	return &this
}

// GetActionable returns the Actionable field value
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) GetActionable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Actionable
}

// GetActionableOk returns a tuple with the Actionable field value
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) GetActionableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Actionable, true
}

// SetActionable sets field value
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) SetActionable(v bool) {
	o.Actionable = v
}

// GetItemcount returns the Itemcount field value
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) GetItemcount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Itemcount
}

// GetItemcountOk returns a tuple with the Itemcount field value
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) GetItemcountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Itemcount, true
}

// SetItemcount sets field value
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) SetItemcount(v int32) {
	o.Itemcount = v
}

// GetName returns the Name field value
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) SetName(v string) {
	o.Name = v
}

// GetShowitemcount returns the Showitemcount field value
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) GetShowitemcount() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Showitemcount
}

// GetShowitemcountOk returns a tuple with the Showitemcount field value
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) GetShowitemcountOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Showitemcount, true
}

// SetShowitemcount sets field value
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) SetShowitemcount(v bool) {
	o.Showitemcount = v
}

// GetUrl returns the Url field value
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) SetUrl(v string) {
	o.Url = v
}

func (o CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["actionable"] = o.Actionable
	toSerialize["itemcount"] = o.Itemcount
	toSerialize["name"] = o.Name
	toSerialize["showitemcount"] = o.Showitemcount
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

func (o *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"actionable",
		"itemcount",
		"name",
		"showitemcount",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction := _CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction)

	if err != nil {
		return err
	}

	*o = CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction(varCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction)

	return err
}

type NullableCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction struct {
	value *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction
	isSet bool
}

func (v NullableCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) Get() *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction {
	return v.value
}

func (v *NullableCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) Set(val *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction(val *CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) *NullableCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction {
	return &NullableCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction{value: val, isSet: true}
}

func (v NullableCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInnerEventsInnerAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


