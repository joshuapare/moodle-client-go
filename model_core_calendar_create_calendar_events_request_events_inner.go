/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCalendarCreateCalendarEventsRequestEventsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCalendarCreateCalendarEventsRequestEventsInner{}

// CoreCalendarCreateCalendarEventsRequestEventsInner event
type CoreCalendarCreateCalendarEventsRequestEventsInner struct {
	// course id
	Courseid *int32 `json:"courseid,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	// Event type
	Eventtype *string `json:"eventtype,omitempty"`
	// description format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Format *int32 `json:"format,omitempty"`
	// group id
	Groupid *int32 `json:"groupid,omitempty"`
	// event name
	Name *string `json:"name,omitempty"`
	// number of repeats
	Repeats *int32 `json:"repeats,omitempty"`
	// sequence
	Sequence *int32 `json:"sequence,omitempty"`
	// time duration
	Timeduration *int32 `json:"timeduration,omitempty"`
	// timestart
	Timestart *int32 `json:"timestart,omitempty"`
	// visible
	Visible *int32 `json:"visible,omitempty"`
}

// NewCoreCalendarCreateCalendarEventsRequestEventsInner instantiates a new CoreCalendarCreateCalendarEventsRequestEventsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCalendarCreateCalendarEventsRequestEventsInner() *CoreCalendarCreateCalendarEventsRequestEventsInner {
	this := CoreCalendarCreateCalendarEventsRequestEventsInner{}
	var courseid int32 = 0
	this.Courseid = &courseid
	var description string = "null"
	this.Description = &description
	var eventtype string = "user"
	this.Eventtype = &eventtype
	var format int32 = 1
	this.Format = &format
	var groupid int32 = 0
	this.Groupid = &groupid
	var name string = ""
	this.Name = &name
	var repeats int32 = 0
	this.Repeats = &repeats
	var sequence int32 = 1
	this.Sequence = &sequence
	var timeduration int32 = 0
	this.Timeduration = &timeduration
	var timestart int32 = 1716010508
	this.Timestart = &timestart
	var visible int32 = 1
	this.Visible = &visible
	return &this
}

// NewCoreCalendarCreateCalendarEventsRequestEventsInnerWithDefaults instantiates a new CoreCalendarCreateCalendarEventsRequestEventsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCalendarCreateCalendarEventsRequestEventsInnerWithDefaults() *CoreCalendarCreateCalendarEventsRequestEventsInner {
	this := CoreCalendarCreateCalendarEventsRequestEventsInner{}
	var courseid int32 = 0
	this.Courseid = &courseid
	var description string = "null"
	this.Description = &description
	var eventtype string = "user"
	this.Eventtype = &eventtype
	var format int32 = 1
	this.Format = &format
	var groupid int32 = 0
	this.Groupid = &groupid
	var name string = ""
	this.Name = &name
	var repeats int32 = 0
	this.Repeats = &repeats
	var sequence int32 = 1
	this.Sequence = &sequence
	var timeduration int32 = 0
	this.Timeduration = &timeduration
	var timestart int32 = 1716010508
	this.Timestart = &timestart
	var visible int32 = 1
	this.Visible = &visible
	return &this
}

// GetCourseid returns the Courseid field value if set, zero value otherwise.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetCourseid() int32 {
	if o == nil || IsNil(o.Courseid) {
		var ret int32
		return ret
	}
	return *o.Courseid
}

// GetCourseidOk returns a tuple with the Courseid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetCourseidOk() (*int32, bool) {
	if o == nil || IsNil(o.Courseid) {
		return nil, false
	}
	return o.Courseid, true
}

// HasCourseid returns a boolean if a field has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) HasCourseid() bool {
	if o != nil && !IsNil(o.Courseid) {
		return true
	}

	return false
}

// SetCourseid gets a reference to the given int32 and assigns it to the Courseid field.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) SetCourseid(v int32) {
	o.Courseid = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) SetDescription(v string) {
	o.Description = &v
}

// GetEventtype returns the Eventtype field value if set, zero value otherwise.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetEventtype() string {
	if o == nil || IsNil(o.Eventtype) {
		var ret string
		return ret
	}
	return *o.Eventtype
}

// GetEventtypeOk returns a tuple with the Eventtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetEventtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Eventtype) {
		return nil, false
	}
	return o.Eventtype, true
}

// HasEventtype returns a boolean if a field has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) HasEventtype() bool {
	if o != nil && !IsNil(o.Eventtype) {
		return true
	}

	return false
}

// SetEventtype gets a reference to the given string and assigns it to the Eventtype field.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) SetEventtype(v string) {
	o.Eventtype = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetFormat() int32 {
	if o == nil || IsNil(o.Format) {
		var ret int32
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetFormatOk() (*int32, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given int32 and assigns it to the Format field.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) SetFormat(v int32) {
	o.Format = &v
}

// GetGroupid returns the Groupid field value if set, zero value otherwise.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetGroupid() int32 {
	if o == nil || IsNil(o.Groupid) {
		var ret int32
		return ret
	}
	return *o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetGroupidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupid) {
		return nil, false
	}
	return o.Groupid, true
}

// HasGroupid returns a boolean if a field has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) HasGroupid() bool {
	if o != nil && !IsNil(o.Groupid) {
		return true
	}

	return false
}

// SetGroupid gets a reference to the given int32 and assigns it to the Groupid field.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) SetGroupid(v int32) {
	o.Groupid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) SetName(v string) {
	o.Name = &v
}

// GetRepeats returns the Repeats field value if set, zero value otherwise.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetRepeats() int32 {
	if o == nil || IsNil(o.Repeats) {
		var ret int32
		return ret
	}
	return *o.Repeats
}

// GetRepeatsOk returns a tuple with the Repeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetRepeatsOk() (*int32, bool) {
	if o == nil || IsNil(o.Repeats) {
		return nil, false
	}
	return o.Repeats, true
}

// HasRepeats returns a boolean if a field has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) HasRepeats() bool {
	if o != nil && !IsNil(o.Repeats) {
		return true
	}

	return false
}

// SetRepeats gets a reference to the given int32 and assigns it to the Repeats field.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) SetRepeats(v int32) {
	o.Repeats = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) SetSequence(v int32) {
	o.Sequence = &v
}

// GetTimeduration returns the Timeduration field value if set, zero value otherwise.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetTimeduration() int32 {
	if o == nil || IsNil(o.Timeduration) {
		var ret int32
		return ret
	}
	return *o.Timeduration
}

// GetTimedurationOk returns a tuple with the Timeduration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetTimedurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeduration) {
		return nil, false
	}
	return o.Timeduration, true
}

// HasTimeduration returns a boolean if a field has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) HasTimeduration() bool {
	if o != nil && !IsNil(o.Timeduration) {
		return true
	}

	return false
}

// SetTimeduration gets a reference to the given int32 and assigns it to the Timeduration field.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) SetTimeduration(v int32) {
	o.Timeduration = &v
}

// GetTimestart returns the Timestart field value if set, zero value otherwise.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetTimestart() int32 {
	if o == nil || IsNil(o.Timestart) {
		var ret int32
		return ret
	}
	return *o.Timestart
}

// GetTimestartOk returns a tuple with the Timestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetTimestartOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestart) {
		return nil, false
	}
	return o.Timestart, true
}

// HasTimestart returns a boolean if a field has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) HasTimestart() bool {
	if o != nil && !IsNil(o.Timestart) {
		return true
	}

	return false
}

// SetTimestart gets a reference to the given int32 and assigns it to the Timestart field.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) SetTimestart(v int32) {
	o.Timestart = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetVisible() int32 {
	if o == nil || IsNil(o.Visible) {
		var ret int32
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) GetVisibleOk() (*int32, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given int32 and assigns it to the Visible field.
func (o *CoreCalendarCreateCalendarEventsRequestEventsInner) SetVisible(v int32) {
	o.Visible = &v
}

func (o CoreCalendarCreateCalendarEventsRequestEventsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCalendarCreateCalendarEventsRequestEventsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Courseid) {
		toSerialize["courseid"] = o.Courseid
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Eventtype) {
		toSerialize["eventtype"] = o.Eventtype
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Groupid) {
		toSerialize["groupid"] = o.Groupid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Repeats) {
		toSerialize["repeats"] = o.Repeats
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.Timeduration) {
		toSerialize["timeduration"] = o.Timeduration
	}
	if !IsNil(o.Timestart) {
		toSerialize["timestart"] = o.Timestart
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	return toSerialize, nil
}

type NullableCoreCalendarCreateCalendarEventsRequestEventsInner struct {
	value *CoreCalendarCreateCalendarEventsRequestEventsInner
	isSet bool
}

func (v NullableCoreCalendarCreateCalendarEventsRequestEventsInner) Get() *CoreCalendarCreateCalendarEventsRequestEventsInner {
	return v.value
}

func (v *NullableCoreCalendarCreateCalendarEventsRequestEventsInner) Set(val *CoreCalendarCreateCalendarEventsRequestEventsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCalendarCreateCalendarEventsRequestEventsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCalendarCreateCalendarEventsRequestEventsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCalendarCreateCalendarEventsRequestEventsInner(val *CoreCalendarCreateCalendarEventsRequestEventsInner) *NullableCoreCalendarCreateCalendarEventsRequestEventsInner {
	return &NullableCoreCalendarCreateCalendarEventsRequestEventsInner{value: val, isSet: true}
}

func (v NullableCoreCalendarCreateCalendarEventsRequestEventsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCalendarCreateCalendarEventsRequestEventsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


