/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModForumDeletePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumDeletePostRequest{}

// ModForumDeletePostRequest struct for ModForumDeletePostRequest
type ModForumDeletePostRequest struct {
	// Post to be deleted. It can be a discussion topic post.
	Postid int32 `json:"postid"`
}

type _ModForumDeletePostRequest ModForumDeletePostRequest

// NewModForumDeletePostRequest instantiates a new ModForumDeletePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumDeletePostRequest(postid int32) *ModForumDeletePostRequest {
	this := ModForumDeletePostRequest{}
	this.Postid = postid
	return &this
}

// NewModForumDeletePostRequestWithDefaults instantiates a new ModForumDeletePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumDeletePostRequestWithDefaults() *ModForumDeletePostRequest {
	this := ModForumDeletePostRequest{}
	var postid int32 = null
	this.Postid = postid
	return &this
}

// GetPostid returns the Postid field value
func (o *ModForumDeletePostRequest) GetPostid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Postid
}

// GetPostidOk returns a tuple with the Postid field value
// and a boolean to check if the value has been set.
func (o *ModForumDeletePostRequest) GetPostidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Postid, true
}

// SetPostid sets field value
func (o *ModForumDeletePostRequest) SetPostid(v int32) {
	o.Postid = v
}

func (o ModForumDeletePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumDeletePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["postid"] = o.Postid
	return toSerialize, nil
}

func (o *ModForumDeletePostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"postid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModForumDeletePostRequest := _ModForumDeletePostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModForumDeletePostRequest)

	if err != nil {
		return err
	}

	*o = ModForumDeletePostRequest(varModForumDeletePostRequest)

	return err
}

type NullableModForumDeletePostRequest struct {
	value *ModForumDeletePostRequest
	isSet bool
}

func (v NullableModForumDeletePostRequest) Get() *ModForumDeletePostRequest {
	return v.value
}

func (v *NullableModForumDeletePostRequest) Set(val *ModForumDeletePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumDeletePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumDeletePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumDeletePostRequest(val *ModForumDeletePostRequest) *NullableModForumDeletePostRequest {
	return &NullableModForumDeletePostRequest{value: val, isSet: true}
}

func (v NullableModForumDeletePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumDeletePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


