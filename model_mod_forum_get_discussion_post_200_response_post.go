/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModForumGetDiscussionPost200ResponsePost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumGetDiscussionPost200ResponsePost{}

// ModForumGetDiscussionPost200ResponsePost struct for ModForumGetDiscussionPost200ResponsePost
type ModForumGetDiscussionPost200ResponsePost struct {
	Attachments []ModForumGetDiscussionPost200ResponsePostAttachmentsInner `json:"attachments"`
	Author ModForumGetDiscussionPost200ResponsePostAuthor `json:"author"`
	Capabilities ModForumGetDiscussionPost200ResponsePostCapabilities `json:"capabilities"`
	// charcount
	Charcount *int32 `json:"charcount,omitempty"`
	// discussionid
	Discussionid int32 `json:"discussionid"`
	// hasparent
	Hasparent bool `json:"hasparent"`
	// haswordcount
	Haswordcount bool `json:"haswordcount"`
	Html *ModForumGetDiscussionPost200ResponsePostHtml `json:"html,omitempty"`
	// id
	Id int32 `json:"id"`
	// isdeleted
	Isdeleted bool `json:"isdeleted"`
	// isprivatereply
	Isprivatereply bool `json:"isprivatereply"`
	// message
	Message string `json:"message"`
	// message format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Messageformat int32 `json:"messageformat"`
	Messageinlinefiles []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner `json:"messageinlinefiles,omitempty"`
	// parentid
	Parentid *int32 `json:"parentid,omitempty"`
	// replysubject
	Replysubject string `json:"replysubject"`
	// subject
	Subject string `json:"subject"`
	Tags []ModForumGetDiscussionPost200ResponsePostTagsInner `json:"tags,omitempty"`
	// timecreated
	Timecreated int32 `json:"timecreated"`
	// timemodified
	Timemodified int32 `json:"timemodified"`
	// unread
	Unread *bool `json:"unread,omitempty"`
	Urls *ModForumGetDiscussionPost200ResponsePostUrls `json:"urls,omitempty"`
	// wordcount
	Wordcount *int32 `json:"wordcount,omitempty"`
}

type _ModForumGetDiscussionPost200ResponsePost ModForumGetDiscussionPost200ResponsePost

// NewModForumGetDiscussionPost200ResponsePost instantiates a new ModForumGetDiscussionPost200ResponsePost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumGetDiscussionPost200ResponsePost(attachments []ModForumGetDiscussionPost200ResponsePostAttachmentsInner, author ModForumGetDiscussionPost200ResponsePostAuthor, capabilities ModForumGetDiscussionPost200ResponsePostCapabilities, discussionid int32, hasparent bool, haswordcount bool, id int32, isdeleted bool, isprivatereply bool, message string, messageformat int32, replysubject string, subject string, timecreated int32, timemodified int32) *ModForumGetDiscussionPost200ResponsePost {
	this := ModForumGetDiscussionPost200ResponsePost{}
	this.Attachments = attachments
	this.Author = author
	this.Capabilities = capabilities
	this.Discussionid = discussionid
	this.Hasparent = hasparent
	this.Haswordcount = haswordcount
	this.Id = id
	this.Isdeleted = isdeleted
	this.Isprivatereply = isprivatereply
	this.Message = message
	this.Messageformat = messageformat
	this.Replysubject = replysubject
	this.Subject = subject
	this.Timecreated = timecreated
	this.Timemodified = timemodified
	return &this
}

// NewModForumGetDiscussionPost200ResponsePostWithDefaults instantiates a new ModForumGetDiscussionPost200ResponsePost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumGetDiscussionPost200ResponsePostWithDefaults() *ModForumGetDiscussionPost200ResponsePost {
	this := ModForumGetDiscussionPost200ResponsePost{}
	return &this
}

// GetAttachments returns the Attachments field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetAttachments() []ModForumGetDiscussionPost200ResponsePostAttachmentsInner {
	if o == nil {
		var ret []ModForumGetDiscussionPost200ResponsePostAttachmentsInner
		return ret
	}

	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetAttachmentsOk() ([]ModForumGetDiscussionPost200ResponsePostAttachmentsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attachments, true
}

// SetAttachments sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetAttachments(v []ModForumGetDiscussionPost200ResponsePostAttachmentsInner) {
	o.Attachments = v
}

// GetAuthor returns the Author field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetAuthor() ModForumGetDiscussionPost200ResponsePostAuthor {
	if o == nil {
		var ret ModForumGetDiscussionPost200ResponsePostAuthor
		return ret
	}

	return o.Author
}

// GetAuthorOk returns a tuple with the Author field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetAuthorOk() (*ModForumGetDiscussionPost200ResponsePostAuthor, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Author, true
}

// SetAuthor sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetAuthor(v ModForumGetDiscussionPost200ResponsePostAuthor) {
	o.Author = v
}

// GetCapabilities returns the Capabilities field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetCapabilities() ModForumGetDiscussionPost200ResponsePostCapabilities {
	if o == nil {
		var ret ModForumGetDiscussionPost200ResponsePostCapabilities
		return ret
	}

	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetCapabilitiesOk() (*ModForumGetDiscussionPost200ResponsePostCapabilities, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Capabilities, true
}

// SetCapabilities sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetCapabilities(v ModForumGetDiscussionPost200ResponsePostCapabilities) {
	o.Capabilities = v
}

// GetCharcount returns the Charcount field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePost) GetCharcount() int32 {
	if o == nil || IsNil(o.Charcount) {
		var ret int32
		return ret
	}
	return *o.Charcount
}

// GetCharcountOk returns a tuple with the Charcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetCharcountOk() (*int32, bool) {
	if o == nil || IsNil(o.Charcount) {
		return nil, false
	}
	return o.Charcount, true
}

// HasCharcount returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) HasCharcount() bool {
	if o != nil && !IsNil(o.Charcount) {
		return true
	}

	return false
}

// SetCharcount gets a reference to the given int32 and assigns it to the Charcount field.
func (o *ModForumGetDiscussionPost200ResponsePost) SetCharcount(v int32) {
	o.Charcount = &v
}

// GetDiscussionid returns the Discussionid field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetDiscussionid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Discussionid
}

// GetDiscussionidOk returns a tuple with the Discussionid field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetDiscussionidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Discussionid, true
}

// SetDiscussionid sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetDiscussionid(v int32) {
	o.Discussionid = v
}

// GetHasparent returns the Hasparent field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetHasparent() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hasparent
}

// GetHasparentOk returns a tuple with the Hasparent field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetHasparentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hasparent, true
}

// SetHasparent sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetHasparent(v bool) {
	o.Hasparent = v
}

// GetHaswordcount returns the Haswordcount field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetHaswordcount() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Haswordcount
}

// GetHaswordcountOk returns a tuple with the Haswordcount field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetHaswordcountOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Haswordcount, true
}

// SetHaswordcount sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetHaswordcount(v bool) {
	o.Haswordcount = v
}

// GetHtml returns the Html field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePost) GetHtml() ModForumGetDiscussionPost200ResponsePostHtml {
	if o == nil || IsNil(o.Html) {
		var ret ModForumGetDiscussionPost200ResponsePostHtml
		return ret
	}
	return *o.Html
}

// GetHtmlOk returns a tuple with the Html field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetHtmlOk() (*ModForumGetDiscussionPost200ResponsePostHtml, bool) {
	if o == nil || IsNil(o.Html) {
		return nil, false
	}
	return o.Html, true
}

// HasHtml returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) HasHtml() bool {
	if o != nil && !IsNil(o.Html) {
		return true
	}

	return false
}

// SetHtml gets a reference to the given ModForumGetDiscussionPost200ResponsePostHtml and assigns it to the Html field.
func (o *ModForumGetDiscussionPost200ResponsePost) SetHtml(v ModForumGetDiscussionPost200ResponsePostHtml) {
	o.Html = &v
}

// GetId returns the Id field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetId(v int32) {
	o.Id = v
}

// GetIsdeleted returns the Isdeleted field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetIsdeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Isdeleted
}

// GetIsdeletedOk returns a tuple with the Isdeleted field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetIsdeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Isdeleted, true
}

// SetIsdeleted sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetIsdeleted(v bool) {
	o.Isdeleted = v
}

// GetIsprivatereply returns the Isprivatereply field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetIsprivatereply() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Isprivatereply
}

// GetIsprivatereplyOk returns a tuple with the Isprivatereply field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetIsprivatereplyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Isprivatereply, true
}

// SetIsprivatereply sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetIsprivatereply(v bool) {
	o.Isprivatereply = v
}

// GetMessage returns the Message field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetMessage(v string) {
	o.Message = v
}

// GetMessageformat returns the Messageformat field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetMessageformat() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Messageformat
}

// GetMessageformatOk returns a tuple with the Messageformat field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetMessageformatOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Messageformat, true
}

// SetMessageformat sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetMessageformat(v int32) {
	o.Messageformat = v
}

// GetMessageinlinefiles returns the Messageinlinefiles field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePost) GetMessageinlinefiles() []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner {
	if o == nil || IsNil(o.Messageinlinefiles) {
		var ret []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner
		return ret
	}
	return o.Messageinlinefiles
}

// GetMessageinlinefilesOk returns a tuple with the Messageinlinefiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetMessageinlinefilesOk() ([]ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner, bool) {
	if o == nil || IsNil(o.Messageinlinefiles) {
		return nil, false
	}
	return o.Messageinlinefiles, true
}

// HasMessageinlinefiles returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) HasMessageinlinefiles() bool {
	if o != nil && !IsNil(o.Messageinlinefiles) {
		return true
	}

	return false
}

// SetMessageinlinefiles gets a reference to the given []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner and assigns it to the Messageinlinefiles field.
func (o *ModForumGetDiscussionPost200ResponsePost) SetMessageinlinefiles(v []ModFeedbackGetAnalysis200ResponseItemsdataInnerItemItemfilesInner) {
	o.Messageinlinefiles = v
}

// GetParentid returns the Parentid field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePost) GetParentid() int32 {
	if o == nil || IsNil(o.Parentid) {
		var ret int32
		return ret
	}
	return *o.Parentid
}

// GetParentidOk returns a tuple with the Parentid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetParentidOk() (*int32, bool) {
	if o == nil || IsNil(o.Parentid) {
		return nil, false
	}
	return o.Parentid, true
}

// HasParentid returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) HasParentid() bool {
	if o != nil && !IsNil(o.Parentid) {
		return true
	}

	return false
}

// SetParentid gets a reference to the given int32 and assigns it to the Parentid field.
func (o *ModForumGetDiscussionPost200ResponsePost) SetParentid(v int32) {
	o.Parentid = &v
}

// GetReplysubject returns the Replysubject field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetReplysubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Replysubject
}

// GetReplysubjectOk returns a tuple with the Replysubject field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetReplysubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Replysubject, true
}

// SetReplysubject sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetReplysubject(v string) {
	o.Replysubject = v
}

// GetSubject returns the Subject field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetSubject(v string) {
	o.Subject = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePost) GetTags() []ModForumGetDiscussionPost200ResponsePostTagsInner {
	if o == nil || IsNil(o.Tags) {
		var ret []ModForumGetDiscussionPost200ResponsePostTagsInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetTagsOk() ([]ModForumGetDiscussionPost200ResponsePostTagsInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ModForumGetDiscussionPost200ResponsePostTagsInner and assigns it to the Tags field.
func (o *ModForumGetDiscussionPost200ResponsePost) SetTags(v []ModForumGetDiscussionPost200ResponsePostTagsInner) {
	o.Tags = v
}

// GetTimecreated returns the Timecreated field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetTimecreated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetTimecreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timecreated, true
}

// SetTimecreated sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetTimecreated(v int32) {
	o.Timecreated = v
}

// GetTimemodified returns the Timemodified field value
func (o *ModForumGetDiscussionPost200ResponsePost) GetTimemodified() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetTimemodifiedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timemodified, true
}

// SetTimemodified sets field value
func (o *ModForumGetDiscussionPost200ResponsePost) SetTimemodified(v int32) {
	o.Timemodified = v
}

// GetUnread returns the Unread field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePost) GetUnread() bool {
	if o == nil || IsNil(o.Unread) {
		var ret bool
		return ret
	}
	return *o.Unread
}

// GetUnreadOk returns a tuple with the Unread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetUnreadOk() (*bool, bool) {
	if o == nil || IsNil(o.Unread) {
		return nil, false
	}
	return o.Unread, true
}

// HasUnread returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) HasUnread() bool {
	if o != nil && !IsNil(o.Unread) {
		return true
	}

	return false
}

// SetUnread gets a reference to the given bool and assigns it to the Unread field.
func (o *ModForumGetDiscussionPost200ResponsePost) SetUnread(v bool) {
	o.Unread = &v
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePost) GetUrls() ModForumGetDiscussionPost200ResponsePostUrls {
	if o == nil || IsNil(o.Urls) {
		var ret ModForumGetDiscussionPost200ResponsePostUrls
		return ret
	}
	return *o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetUrlsOk() (*ModForumGetDiscussionPost200ResponsePostUrls, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) HasUrls() bool {
	if o != nil && !IsNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given ModForumGetDiscussionPost200ResponsePostUrls and assigns it to the Urls field.
func (o *ModForumGetDiscussionPost200ResponsePost) SetUrls(v ModForumGetDiscussionPost200ResponsePostUrls) {
	o.Urls = &v
}

// GetWordcount returns the Wordcount field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPost200ResponsePost) GetWordcount() int32 {
	if o == nil || IsNil(o.Wordcount) {
		var ret int32
		return ret
	}
	return *o.Wordcount
}

// GetWordcountOk returns a tuple with the Wordcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) GetWordcountOk() (*int32, bool) {
	if o == nil || IsNil(o.Wordcount) {
		return nil, false
	}
	return o.Wordcount, true
}

// HasWordcount returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPost200ResponsePost) HasWordcount() bool {
	if o != nil && !IsNil(o.Wordcount) {
		return true
	}

	return false
}

// SetWordcount gets a reference to the given int32 and assigns it to the Wordcount field.
func (o *ModForumGetDiscussionPost200ResponsePost) SetWordcount(v int32) {
	o.Wordcount = &v
}

func (o ModForumGetDiscussionPost200ResponsePost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumGetDiscussionPost200ResponsePost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attachments"] = o.Attachments
	toSerialize["author"] = o.Author
	toSerialize["capabilities"] = o.Capabilities
	if !IsNil(o.Charcount) {
		toSerialize["charcount"] = o.Charcount
	}
	toSerialize["discussionid"] = o.Discussionid
	toSerialize["hasparent"] = o.Hasparent
	toSerialize["haswordcount"] = o.Haswordcount
	if !IsNil(o.Html) {
		toSerialize["html"] = o.Html
	}
	toSerialize["id"] = o.Id
	toSerialize["isdeleted"] = o.Isdeleted
	toSerialize["isprivatereply"] = o.Isprivatereply
	toSerialize["message"] = o.Message
	toSerialize["messageformat"] = o.Messageformat
	if !IsNil(o.Messageinlinefiles) {
		toSerialize["messageinlinefiles"] = o.Messageinlinefiles
	}
	if !IsNil(o.Parentid) {
		toSerialize["parentid"] = o.Parentid
	}
	toSerialize["replysubject"] = o.Replysubject
	toSerialize["subject"] = o.Subject
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["timecreated"] = o.Timecreated
	toSerialize["timemodified"] = o.Timemodified
	if !IsNil(o.Unread) {
		toSerialize["unread"] = o.Unread
	}
	if !IsNil(o.Urls) {
		toSerialize["urls"] = o.Urls
	}
	if !IsNil(o.Wordcount) {
		toSerialize["wordcount"] = o.Wordcount
	}
	return toSerialize, nil
}

func (o *ModForumGetDiscussionPost200ResponsePost) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attachments",
		"author",
		"capabilities",
		"discussionid",
		"hasparent",
		"haswordcount",
		"id",
		"isdeleted",
		"isprivatereply",
		"message",
		"messageformat",
		"replysubject",
		"subject",
		"timecreated",
		"timemodified",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModForumGetDiscussionPost200ResponsePost := _ModForumGetDiscussionPost200ResponsePost{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModForumGetDiscussionPost200ResponsePost)

	if err != nil {
		return err
	}

	*o = ModForumGetDiscussionPost200ResponsePost(varModForumGetDiscussionPost200ResponsePost)

	return err
}

type NullableModForumGetDiscussionPost200ResponsePost struct {
	value *ModForumGetDiscussionPost200ResponsePost
	isSet bool
}

func (v NullableModForumGetDiscussionPost200ResponsePost) Get() *ModForumGetDiscussionPost200ResponsePost {
	return v.value
}

func (v *NullableModForumGetDiscussionPost200ResponsePost) Set(val *ModForumGetDiscussionPost200ResponsePost) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumGetDiscussionPost200ResponsePost) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumGetDiscussionPost200ResponsePost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumGetDiscussionPost200ResponsePost(val *ModForumGetDiscussionPost200ResponsePost) *NullableModForumGetDiscussionPost200ResponsePost {
	return &NullableModForumGetDiscussionPost200ResponsePost{value: val, isSet: true}
}

func (v NullableModForumGetDiscussionPost200ResponsePost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumGetDiscussionPost200ResponsePost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


