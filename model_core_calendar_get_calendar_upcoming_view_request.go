/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the CoreCalendarGetCalendarUpcomingViewRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCalendarGetCalendarUpcomingViewRequest{}

// CoreCalendarGetCalendarUpcomingViewRequest struct for CoreCalendarGetCalendarUpcomingViewRequest
type CoreCalendarGetCalendarUpcomingViewRequest struct {
	// Category being viewed
	Categoryid *int32 `json:"categoryid,omitempty"`
	// Course being viewed
	Courseid *int32 `json:"courseid,omitempty"`
}

// NewCoreCalendarGetCalendarUpcomingViewRequest instantiates a new CoreCalendarGetCalendarUpcomingViewRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCalendarGetCalendarUpcomingViewRequest() *CoreCalendarGetCalendarUpcomingViewRequest {
	this := CoreCalendarGetCalendarUpcomingViewRequest{}
	var courseid int32 = 1
	this.Courseid = &courseid
	return &this
}

// NewCoreCalendarGetCalendarUpcomingViewRequestWithDefaults instantiates a new CoreCalendarGetCalendarUpcomingViewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCalendarGetCalendarUpcomingViewRequestWithDefaults() *CoreCalendarGetCalendarUpcomingViewRequest {
	this := CoreCalendarGetCalendarUpcomingViewRequest{}
	var courseid int32 = 1
	this.Courseid = &courseid
	return &this
}

// GetCategoryid returns the Categoryid field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarUpcomingViewRequest) GetCategoryid() int32 {
	if o == nil || IsNil(o.Categoryid) {
		var ret int32
		return ret
	}
	return *o.Categoryid
}

// GetCategoryidOk returns a tuple with the Categoryid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarUpcomingViewRequest) GetCategoryidOk() (*int32, bool) {
	if o == nil || IsNil(o.Categoryid) {
		return nil, false
	}
	return o.Categoryid, true
}

// HasCategoryid returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarUpcomingViewRequest) HasCategoryid() bool {
	if o != nil && !IsNil(o.Categoryid) {
		return true
	}

	return false
}

// SetCategoryid gets a reference to the given int32 and assigns it to the Categoryid field.
func (o *CoreCalendarGetCalendarUpcomingViewRequest) SetCategoryid(v int32) {
	o.Categoryid = &v
}

// GetCourseid returns the Courseid field value if set, zero value otherwise.
func (o *CoreCalendarGetCalendarUpcomingViewRequest) GetCourseid() int32 {
	if o == nil || IsNil(o.Courseid) {
		var ret int32
		return ret
	}
	return *o.Courseid
}

// GetCourseidOk returns a tuple with the Courseid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetCalendarUpcomingViewRequest) GetCourseidOk() (*int32, bool) {
	if o == nil || IsNil(o.Courseid) {
		return nil, false
	}
	return o.Courseid, true
}

// HasCourseid returns a boolean if a field has been set.
func (o *CoreCalendarGetCalendarUpcomingViewRequest) HasCourseid() bool {
	if o != nil && !IsNil(o.Courseid) {
		return true
	}

	return false
}

// SetCourseid gets a reference to the given int32 and assigns it to the Courseid field.
func (o *CoreCalendarGetCalendarUpcomingViewRequest) SetCourseid(v int32) {
	o.Courseid = &v
}

func (o CoreCalendarGetCalendarUpcomingViewRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCalendarGetCalendarUpcomingViewRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Categoryid) {
		toSerialize["categoryid"] = o.Categoryid
	}
	if !IsNil(o.Courseid) {
		toSerialize["courseid"] = o.Courseid
	}
	return toSerialize, nil
}

type NullableCoreCalendarGetCalendarUpcomingViewRequest struct {
	value *CoreCalendarGetCalendarUpcomingViewRequest
	isSet bool
}

func (v NullableCoreCalendarGetCalendarUpcomingViewRequest) Get() *CoreCalendarGetCalendarUpcomingViewRequest {
	return v.value
}

func (v *NullableCoreCalendarGetCalendarUpcomingViewRequest) Set(val *CoreCalendarGetCalendarUpcomingViewRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCalendarGetCalendarUpcomingViewRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCalendarGetCalendarUpcomingViewRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCalendarGetCalendarUpcomingViewRequest(val *CoreCalendarGetCalendarUpcomingViewRequest) *NullableCoreCalendarGetCalendarUpcomingViewRequest {
	return &NullableCoreCalendarGetCalendarUpcomingViewRequest{value: val, isSet: true}
}

func (v NullableCoreCalendarGetCalendarUpcomingViewRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCalendarGetCalendarUpcomingViewRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


