/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCalendarGetActionEventsByCourses200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCalendarGetActionEventsByCourses200Response{}

// CoreCalendarGetActionEventsByCourses200Response struct for CoreCalendarGetActionEventsByCourses200Response
type CoreCalendarGetActionEventsByCourses200Response struct {
	Groupedbycourse []CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInner `json:"groupedbycourse"`
}

type _CoreCalendarGetActionEventsByCourses200Response CoreCalendarGetActionEventsByCourses200Response

// NewCoreCalendarGetActionEventsByCourses200Response instantiates a new CoreCalendarGetActionEventsByCourses200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCalendarGetActionEventsByCourses200Response(groupedbycourse []CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInner) *CoreCalendarGetActionEventsByCourses200Response {
	this := CoreCalendarGetActionEventsByCourses200Response{}
	this.Groupedbycourse = groupedbycourse
	return &this
}

// NewCoreCalendarGetActionEventsByCourses200ResponseWithDefaults instantiates a new CoreCalendarGetActionEventsByCourses200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCalendarGetActionEventsByCourses200ResponseWithDefaults() *CoreCalendarGetActionEventsByCourses200Response {
	this := CoreCalendarGetActionEventsByCourses200Response{}
	return &this
}

// GetGroupedbycourse returns the Groupedbycourse field value
func (o *CoreCalendarGetActionEventsByCourses200Response) GetGroupedbycourse() []CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInner {
	if o == nil {
		var ret []CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInner
		return ret
	}

	return o.Groupedbycourse
}

// GetGroupedbycourseOk returns a tuple with the Groupedbycourse field value
// and a boolean to check if the value has been set.
func (o *CoreCalendarGetActionEventsByCourses200Response) GetGroupedbycourseOk() ([]CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Groupedbycourse, true
}

// SetGroupedbycourse sets field value
func (o *CoreCalendarGetActionEventsByCourses200Response) SetGroupedbycourse(v []CoreCalendarGetActionEventsByCourses200ResponseGroupedbycourseInner) {
	o.Groupedbycourse = v
}

func (o CoreCalendarGetActionEventsByCourses200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCalendarGetActionEventsByCourses200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["groupedbycourse"] = o.Groupedbycourse
	return toSerialize, nil
}

func (o *CoreCalendarGetActionEventsByCourses200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"groupedbycourse",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCalendarGetActionEventsByCourses200Response := _CoreCalendarGetActionEventsByCourses200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCalendarGetActionEventsByCourses200Response)

	if err != nil {
		return err
	}

	*o = CoreCalendarGetActionEventsByCourses200Response(varCoreCalendarGetActionEventsByCourses200Response)

	return err
}

type NullableCoreCalendarGetActionEventsByCourses200Response struct {
	value *CoreCalendarGetActionEventsByCourses200Response
	isSet bool
}

func (v NullableCoreCalendarGetActionEventsByCourses200Response) Get() *CoreCalendarGetActionEventsByCourses200Response {
	return v.value
}

func (v *NullableCoreCalendarGetActionEventsByCourses200Response) Set(val *CoreCalendarGetActionEventsByCourses200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCalendarGetActionEventsByCourses200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCalendarGetActionEventsByCourses200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCalendarGetActionEventsByCourses200Response(val *CoreCalendarGetActionEventsByCourses200Response) *NullableCoreCalendarGetActionEventsByCourses200Response {
	return &NullableCoreCalendarGetActionEventsByCourses200Response{value: val, isSet: true}
}

func (v NullableCoreCalendarGetActionEventsByCourses200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCalendarGetActionEventsByCourses200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


