/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModForumAddDiscussionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumAddDiscussionRequest{}

// ModForumAddDiscussionRequest struct for ModForumAddDiscussionRequest
type ModForumAddDiscussionRequest struct {
	// Forum instance ID
	Forumid int32 `json:"forumid"`
	// The group, default to 0
	Groupid *int32 `json:"groupid,omitempty"`
	// New Discussion message (only html format allowed)
	Message string `json:"message"`
	Options []ModForumAddDiscussionRequestOptionsInner `json:"options,omitempty"`
	// New Discussion subject
	Subject string `json:"subject"`
}

type _ModForumAddDiscussionRequest ModForumAddDiscussionRequest

// NewModForumAddDiscussionRequest instantiates a new ModForumAddDiscussionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumAddDiscussionRequest(forumid int32, message string, subject string) *ModForumAddDiscussionRequest {
	this := ModForumAddDiscussionRequest{}
	this.Forumid = forumid
	var groupid int32 = 0
	this.Groupid = &groupid
	this.Message = message
	this.Subject = subject
	return &this
}

// NewModForumAddDiscussionRequestWithDefaults instantiates a new ModForumAddDiscussionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumAddDiscussionRequestWithDefaults() *ModForumAddDiscussionRequest {
	this := ModForumAddDiscussionRequest{}
	var forumid int32 = null
	this.Forumid = forumid
	var groupid int32 = 0
	this.Groupid = &groupid
	var message string = "null"
	this.Message = message
	var subject string = "null"
	this.Subject = subject
	return &this
}

// GetForumid returns the Forumid field value
func (o *ModForumAddDiscussionRequest) GetForumid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Forumid
}

// GetForumidOk returns a tuple with the Forumid field value
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionRequest) GetForumidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Forumid, true
}

// SetForumid sets field value
func (o *ModForumAddDiscussionRequest) SetForumid(v int32) {
	o.Forumid = v
}

// GetGroupid returns the Groupid field value if set, zero value otherwise.
func (o *ModForumAddDiscussionRequest) GetGroupid() int32 {
	if o == nil || IsNil(o.Groupid) {
		var ret int32
		return ret
	}
	return *o.Groupid
}

// GetGroupidOk returns a tuple with the Groupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionRequest) GetGroupidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupid) {
		return nil, false
	}
	return o.Groupid, true
}

// HasGroupid returns a boolean if a field has been set.
func (o *ModForumAddDiscussionRequest) HasGroupid() bool {
	if o != nil && !IsNil(o.Groupid) {
		return true
	}

	return false
}

// SetGroupid gets a reference to the given int32 and assigns it to the Groupid field.
func (o *ModForumAddDiscussionRequest) SetGroupid(v int32) {
	o.Groupid = &v
}

// GetMessage returns the Message field value
func (o *ModForumAddDiscussionRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionRequest) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ModForumAddDiscussionRequest) SetMessage(v string) {
	o.Message = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ModForumAddDiscussionRequest) GetOptions() []ModForumAddDiscussionRequestOptionsInner {
	if o == nil || IsNil(o.Options) {
		var ret []ModForumAddDiscussionRequestOptionsInner
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionRequest) GetOptionsOk() ([]ModForumAddDiscussionRequestOptionsInner, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ModForumAddDiscussionRequest) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []ModForumAddDiscussionRequestOptionsInner and assigns it to the Options field.
func (o *ModForumAddDiscussionRequest) SetOptions(v []ModForumAddDiscussionRequestOptionsInner) {
	o.Options = v
}

// GetSubject returns the Subject field value
func (o *ModForumAddDiscussionRequest) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionRequest) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *ModForumAddDiscussionRequest) SetSubject(v string) {
	o.Subject = v
}

func (o ModForumAddDiscussionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumAddDiscussionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["forumid"] = o.Forumid
	if !IsNil(o.Groupid) {
		toSerialize["groupid"] = o.Groupid
	}
	toSerialize["message"] = o.Message
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	toSerialize["subject"] = o.Subject
	return toSerialize, nil
}

func (o *ModForumAddDiscussionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"forumid",
		"message",
		"subject",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModForumAddDiscussionRequest := _ModForumAddDiscussionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModForumAddDiscussionRequest)

	if err != nil {
		return err
	}

	*o = ModForumAddDiscussionRequest(varModForumAddDiscussionRequest)

	return err
}

type NullableModForumAddDiscussionRequest struct {
	value *ModForumAddDiscussionRequest
	isSet bool
}

func (v NullableModForumAddDiscussionRequest) Get() *ModForumAddDiscussionRequest {
	return v.value
}

func (v *NullableModForumAddDiscussionRequest) Set(val *ModForumAddDiscussionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumAddDiscussionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumAddDiscussionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumAddDiscussionRequest(val *ModForumAddDiscussionRequest) *NullableModForumAddDiscussionRequest {
	return &NullableModForumAddDiscussionRequest{value: val, isSet: true}
}

func (v NullableModForumAddDiscussionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumAddDiscussionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


