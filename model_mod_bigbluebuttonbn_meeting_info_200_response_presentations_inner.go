/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner{}

// ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner struct for ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner
type ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner struct {
	// icon text
	Icondesc *string `json:"icondesc,omitempty"`
	// icon name
	Iconname *string `json:"iconname,omitempty"`
	// presentation name
	Name *string `json:"name,omitempty"`
	// presentation URL
	Url *string `json:"url,omitempty"`
}

// NewModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner instantiates a new ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner() *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner {
	this := ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner{}
	var icondesc string = "null"
	this.Icondesc = &icondesc
	var iconname string = "null"
	this.Iconname = &iconname
	var name string = "null"
	this.Name = &name
	var url string = "null"
	this.Url = &url
	return &this
}

// NewModBigbluebuttonbnMeetingInfo200ResponsePresentationsInnerWithDefaults instantiates a new ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModBigbluebuttonbnMeetingInfo200ResponsePresentationsInnerWithDefaults() *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner {
	this := ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner{}
	var icondesc string = "null"
	this.Icondesc = &icondesc
	var iconname string = "null"
	this.Iconname = &iconname
	var name string = "null"
	this.Name = &name
	var url string = "null"
	this.Url = &url
	return &this
}

// GetIcondesc returns the Icondesc field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) GetIcondesc() string {
	if o == nil || IsNil(o.Icondesc) {
		var ret string
		return ret
	}
	return *o.Icondesc
}

// GetIcondescOk returns a tuple with the Icondesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) GetIcondescOk() (*string, bool) {
	if o == nil || IsNil(o.Icondesc) {
		return nil, false
	}
	return o.Icondesc, true
}

// HasIcondesc returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) HasIcondesc() bool {
	if o != nil && !IsNil(o.Icondesc) {
		return true
	}

	return false
}

// SetIcondesc gets a reference to the given string and assigns it to the Icondesc field.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) SetIcondesc(v string) {
	o.Icondesc = &v
}

// GetIconname returns the Iconname field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) GetIconname() string {
	if o == nil || IsNil(o.Iconname) {
		var ret string
		return ret
	}
	return *o.Iconname
}

// GetIconnameOk returns a tuple with the Iconname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) GetIconnameOk() (*string, bool) {
	if o == nil || IsNil(o.Iconname) {
		return nil, false
	}
	return o.Iconname, true
}

// HasIconname returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) HasIconname() bool {
	if o != nil && !IsNil(o.Iconname) {
		return true
	}

	return false
}

// SetIconname gets a reference to the given string and assigns it to the Iconname field.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) SetIconname(v string) {
	o.Iconname = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) SetUrl(v string) {
	o.Url = &v
}

func (o ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Icondesc) {
		toSerialize["icondesc"] = o.Icondesc
	}
	if !IsNil(o.Iconname) {
		toSerialize["iconname"] = o.Iconname
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner struct {
	value *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner
	isSet bool
}

func (v NullableModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) Get() *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner {
	return v.value
}

func (v *NullableModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) Set(val *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner(val *ModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) *NullableModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner {
	return &NullableModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner{value: val, isSet: true}
}

func (v NullableModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModBigbluebuttonbnMeetingInfo200ResponsePresentationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


