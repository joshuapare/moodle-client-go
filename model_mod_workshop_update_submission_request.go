/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModWorkshopUpdateSubmissionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModWorkshopUpdateSubmissionRequest{}

// ModWorkshopUpdateSubmissionRequest struct for ModWorkshopUpdateSubmissionRequest
type ModWorkshopUpdateSubmissionRequest struct {
	// The draft file area id for attachments
	Attachmentsid *int32 `json:"attachmentsid,omitempty"`
	// Submission text content
	Content *string `json:"content,omitempty"`
	// The format used for the content
	Contentformat *int32 `json:"contentformat,omitempty"`
	// The draft file area id for inline attachments in the content
	Inlineattachmentsid *int32 `json:"inlineattachmentsid,omitempty"`
	// Submission id
	Submissionid int32 `json:"submissionid"`
	// Submission title
	Title string `json:"title"`
}

type _ModWorkshopUpdateSubmissionRequest ModWorkshopUpdateSubmissionRequest

// NewModWorkshopUpdateSubmissionRequest instantiates a new ModWorkshopUpdateSubmissionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModWorkshopUpdateSubmissionRequest(submissionid int32, title string) *ModWorkshopUpdateSubmissionRequest {
	this := ModWorkshopUpdateSubmissionRequest{}
	var attachmentsid int32 = 0
	this.Attachmentsid = &attachmentsid
	var content string = ""
	this.Content = &content
	var contentformat int32 = 0
	this.Contentformat = &contentformat
	var inlineattachmentsid int32 = 0
	this.Inlineattachmentsid = &inlineattachmentsid
	this.Submissionid = submissionid
	this.Title = title
	return &this
}

// NewModWorkshopUpdateSubmissionRequestWithDefaults instantiates a new ModWorkshopUpdateSubmissionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModWorkshopUpdateSubmissionRequestWithDefaults() *ModWorkshopUpdateSubmissionRequest {
	this := ModWorkshopUpdateSubmissionRequest{}
	var attachmentsid int32 = 0
	this.Attachmentsid = &attachmentsid
	var content string = ""
	this.Content = &content
	var contentformat int32 = 0
	this.Contentformat = &contentformat
	var inlineattachmentsid int32 = 0
	this.Inlineattachmentsid = &inlineattachmentsid
	return &this
}

// GetAttachmentsid returns the Attachmentsid field value if set, zero value otherwise.
func (o *ModWorkshopUpdateSubmissionRequest) GetAttachmentsid() int32 {
	if o == nil || IsNil(o.Attachmentsid) {
		var ret int32
		return ret
	}
	return *o.Attachmentsid
}

// GetAttachmentsidOk returns a tuple with the Attachmentsid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopUpdateSubmissionRequest) GetAttachmentsidOk() (*int32, bool) {
	if o == nil || IsNil(o.Attachmentsid) {
		return nil, false
	}
	return o.Attachmentsid, true
}

// HasAttachmentsid returns a boolean if a field has been set.
func (o *ModWorkshopUpdateSubmissionRequest) HasAttachmentsid() bool {
	if o != nil && !IsNil(o.Attachmentsid) {
		return true
	}

	return false
}

// SetAttachmentsid gets a reference to the given int32 and assigns it to the Attachmentsid field.
func (o *ModWorkshopUpdateSubmissionRequest) SetAttachmentsid(v int32) {
	o.Attachmentsid = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ModWorkshopUpdateSubmissionRequest) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopUpdateSubmissionRequest) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ModWorkshopUpdateSubmissionRequest) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ModWorkshopUpdateSubmissionRequest) SetContent(v string) {
	o.Content = &v
}

// GetContentformat returns the Contentformat field value if set, zero value otherwise.
func (o *ModWorkshopUpdateSubmissionRequest) GetContentformat() int32 {
	if o == nil || IsNil(o.Contentformat) {
		var ret int32
		return ret
	}
	return *o.Contentformat
}

// GetContentformatOk returns a tuple with the Contentformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopUpdateSubmissionRequest) GetContentformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Contentformat) {
		return nil, false
	}
	return o.Contentformat, true
}

// HasContentformat returns a boolean if a field has been set.
func (o *ModWorkshopUpdateSubmissionRequest) HasContentformat() bool {
	if o != nil && !IsNil(o.Contentformat) {
		return true
	}

	return false
}

// SetContentformat gets a reference to the given int32 and assigns it to the Contentformat field.
func (o *ModWorkshopUpdateSubmissionRequest) SetContentformat(v int32) {
	o.Contentformat = &v
}

// GetInlineattachmentsid returns the Inlineattachmentsid field value if set, zero value otherwise.
func (o *ModWorkshopUpdateSubmissionRequest) GetInlineattachmentsid() int32 {
	if o == nil || IsNil(o.Inlineattachmentsid) {
		var ret int32
		return ret
	}
	return *o.Inlineattachmentsid
}

// GetInlineattachmentsidOk returns a tuple with the Inlineattachmentsid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModWorkshopUpdateSubmissionRequest) GetInlineattachmentsidOk() (*int32, bool) {
	if o == nil || IsNil(o.Inlineattachmentsid) {
		return nil, false
	}
	return o.Inlineattachmentsid, true
}

// HasInlineattachmentsid returns a boolean if a field has been set.
func (o *ModWorkshopUpdateSubmissionRequest) HasInlineattachmentsid() bool {
	if o != nil && !IsNil(o.Inlineattachmentsid) {
		return true
	}

	return false
}

// SetInlineattachmentsid gets a reference to the given int32 and assigns it to the Inlineattachmentsid field.
func (o *ModWorkshopUpdateSubmissionRequest) SetInlineattachmentsid(v int32) {
	o.Inlineattachmentsid = &v
}

// GetSubmissionid returns the Submissionid field value
func (o *ModWorkshopUpdateSubmissionRequest) GetSubmissionid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Submissionid
}

// GetSubmissionidOk returns a tuple with the Submissionid field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopUpdateSubmissionRequest) GetSubmissionidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Submissionid, true
}

// SetSubmissionid sets field value
func (o *ModWorkshopUpdateSubmissionRequest) SetSubmissionid(v int32) {
	o.Submissionid = v
}

// GetTitle returns the Title field value
func (o *ModWorkshopUpdateSubmissionRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ModWorkshopUpdateSubmissionRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ModWorkshopUpdateSubmissionRequest) SetTitle(v string) {
	o.Title = v
}

func (o ModWorkshopUpdateSubmissionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModWorkshopUpdateSubmissionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachmentsid) {
		toSerialize["attachmentsid"] = o.Attachmentsid
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Contentformat) {
		toSerialize["contentformat"] = o.Contentformat
	}
	if !IsNil(o.Inlineattachmentsid) {
		toSerialize["inlineattachmentsid"] = o.Inlineattachmentsid
	}
	toSerialize["submissionid"] = o.Submissionid
	toSerialize["title"] = o.Title
	return toSerialize, nil
}

func (o *ModWorkshopUpdateSubmissionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"submissionid",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModWorkshopUpdateSubmissionRequest := _ModWorkshopUpdateSubmissionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModWorkshopUpdateSubmissionRequest)

	if err != nil {
		return err
	}

	*o = ModWorkshopUpdateSubmissionRequest(varModWorkshopUpdateSubmissionRequest)

	return err
}

type NullableModWorkshopUpdateSubmissionRequest struct {
	value *ModWorkshopUpdateSubmissionRequest
	isSet bool
}

func (v NullableModWorkshopUpdateSubmissionRequest) Get() *ModWorkshopUpdateSubmissionRequest {
	return v.value
}

func (v *NullableModWorkshopUpdateSubmissionRequest) Set(val *ModWorkshopUpdateSubmissionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModWorkshopUpdateSubmissionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModWorkshopUpdateSubmissionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModWorkshopUpdateSubmissionRequest(val *ModWorkshopUpdateSubmissionRequest) *NullableModWorkshopUpdateSubmissionRequest {
	return &NullableModWorkshopUpdateSubmissionRequest{value: val, isSet: true}
}

func (v NullableModWorkshopUpdateSubmissionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModWorkshopUpdateSubmissionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


