/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModSurveyGetQuestions200ResponseQuestionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModSurveyGetQuestions200ResponseQuestionsInner{}

// ModSurveyGetQuestions200ResponseQuestionsInner Questions
type ModSurveyGetQuestions200ResponseQuestionsInner struct {
	// Question id
	Id *int32 `json:"id,omitempty"`
	// The question intro
	Intro *string `json:"intro,omitempty"`
	// Subquestions ids
	Multi *string `json:"multi,omitempty"`
	// Question options
	Options *string `json:"options,omitempty"`
	// Parent question (for subquestions)
	Parent *int32 `json:"parent,omitempty"`
	// Question short text
	Shorttext *string `json:"shorttext,omitempty"`
	// Question text
	Text *string `json:"text,omitempty"`
	// Question type
	Type *int32 `json:"type,omitempty"`
}

// NewModSurveyGetQuestions200ResponseQuestionsInner instantiates a new ModSurveyGetQuestions200ResponseQuestionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModSurveyGetQuestions200ResponseQuestionsInner() *ModSurveyGetQuestions200ResponseQuestionsInner {
	this := ModSurveyGetQuestions200ResponseQuestionsInner{}
	var id int32 = null
	this.Id = &id
	var intro string = "null"
	this.Intro = &intro
	var multi string = "null"
	this.Multi = &multi
	var options string = "null"
	this.Options = &options
	var parent int32 = null
	this.Parent = &parent
	var shorttext string = "null"
	this.Shorttext = &shorttext
	var text string = "null"
	this.Text = &text
	var type_ int32 = null
	this.Type = &type_
	return &this
}

// NewModSurveyGetQuestions200ResponseQuestionsInnerWithDefaults instantiates a new ModSurveyGetQuestions200ResponseQuestionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModSurveyGetQuestions200ResponseQuestionsInnerWithDefaults() *ModSurveyGetQuestions200ResponseQuestionsInner {
	this := ModSurveyGetQuestions200ResponseQuestionsInner{}
	var id int32 = null
	this.Id = &id
	var intro string = "null"
	this.Intro = &intro
	var multi string = "null"
	this.Multi = &multi
	var options string = "null"
	this.Options = &options
	var parent int32 = null
	this.Parent = &parent
	var shorttext string = "null"
	this.Shorttext = &shorttext
	var text string = "null"
	this.Text = &text
	var type_ int32 = null
	this.Type = &type_
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) SetId(v int32) {
	o.Id = &v
}

// GetIntro returns the Intro field value if set, zero value otherwise.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetIntro() string {
	if o == nil || IsNil(o.Intro) {
		var ret string
		return ret
	}
	return *o.Intro
}

// GetIntroOk returns a tuple with the Intro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetIntroOk() (*string, bool) {
	if o == nil || IsNil(o.Intro) {
		return nil, false
	}
	return o.Intro, true
}

// HasIntro returns a boolean if a field has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) HasIntro() bool {
	if o != nil && !IsNil(o.Intro) {
		return true
	}

	return false
}

// SetIntro gets a reference to the given string and assigns it to the Intro field.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) SetIntro(v string) {
	o.Intro = &v
}

// GetMulti returns the Multi field value if set, zero value otherwise.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetMulti() string {
	if o == nil || IsNil(o.Multi) {
		var ret string
		return ret
	}
	return *o.Multi
}

// GetMultiOk returns a tuple with the Multi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetMultiOk() (*string, bool) {
	if o == nil || IsNil(o.Multi) {
		return nil, false
	}
	return o.Multi, true
}

// HasMulti returns a boolean if a field has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) HasMulti() bool {
	if o != nil && !IsNil(o.Multi) {
		return true
	}

	return false
}

// SetMulti gets a reference to the given string and assigns it to the Multi field.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) SetMulti(v string) {
	o.Multi = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetOptions() string {
	if o == nil || IsNil(o.Options) {
		var ret string
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetOptionsOk() (*string, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given string and assigns it to the Options field.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) SetOptions(v string) {
	o.Options = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetParent() int32 {
	if o == nil || IsNil(o.Parent) {
		var ret int32
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetParentOk() (*int32, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given int32 and assigns it to the Parent field.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) SetParent(v int32) {
	o.Parent = &v
}

// GetShorttext returns the Shorttext field value if set, zero value otherwise.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetShorttext() string {
	if o == nil || IsNil(o.Shorttext) {
		var ret string
		return ret
	}
	return *o.Shorttext
}

// GetShorttextOk returns a tuple with the Shorttext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetShorttextOk() (*string, bool) {
	if o == nil || IsNil(o.Shorttext) {
		return nil, false
	}
	return o.Shorttext, true
}

// HasShorttext returns a boolean if a field has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) HasShorttext() bool {
	if o != nil && !IsNil(o.Shorttext) {
		return true
	}

	return false
}

// SetShorttext gets a reference to the given string and assigns it to the Shorttext field.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) SetShorttext(v string) {
	o.Shorttext = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) SetText(v string) {
	o.Text = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *ModSurveyGetQuestions200ResponseQuestionsInner) SetType(v int32) {
	o.Type = &v
}

func (o ModSurveyGetQuestions200ResponseQuestionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModSurveyGetQuestions200ResponseQuestionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Intro) {
		toSerialize["intro"] = o.Intro
	}
	if !IsNil(o.Multi) {
		toSerialize["multi"] = o.Multi
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Shorttext) {
		toSerialize["shorttext"] = o.Shorttext
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableModSurveyGetQuestions200ResponseQuestionsInner struct {
	value *ModSurveyGetQuestions200ResponseQuestionsInner
	isSet bool
}

func (v NullableModSurveyGetQuestions200ResponseQuestionsInner) Get() *ModSurveyGetQuestions200ResponseQuestionsInner {
	return v.value
}

func (v *NullableModSurveyGetQuestions200ResponseQuestionsInner) Set(val *ModSurveyGetQuestions200ResponseQuestionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModSurveyGetQuestions200ResponseQuestionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModSurveyGetQuestions200ResponseQuestionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModSurveyGetQuestions200ResponseQuestionsInner(val *ModSurveyGetQuestions200ResponseQuestionsInner) *NullableModSurveyGetQuestions200ResponseQuestionsInner {
	return &NullableModSurveyGetQuestions200ResponseQuestionsInner{value: val, isSet: true}
}

func (v NullableModSurveyGetQuestions200ResponseQuestionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModSurveyGetQuestions200ResponseQuestionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


