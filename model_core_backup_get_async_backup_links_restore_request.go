/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreBackupGetAsyncBackupLinksRestoreRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreBackupGetAsyncBackupLinksRestoreRequest{}

// CoreBackupGetAsyncBackupLinksRestoreRequest struct for CoreBackupGetAsyncBackupLinksRestoreRequest
type CoreBackupGetAsyncBackupLinksRestoreRequest struct {
	// Backup id
	Backupid string `json:"backupid"`
	// Context id
	Contextid int32 `json:"contextid"`
}

type _CoreBackupGetAsyncBackupLinksRestoreRequest CoreBackupGetAsyncBackupLinksRestoreRequest

// NewCoreBackupGetAsyncBackupLinksRestoreRequest instantiates a new CoreBackupGetAsyncBackupLinksRestoreRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreBackupGetAsyncBackupLinksRestoreRequest(backupid string, contextid int32) *CoreBackupGetAsyncBackupLinksRestoreRequest {
	this := CoreBackupGetAsyncBackupLinksRestoreRequest{}
	this.Backupid = backupid
	this.Contextid = contextid
	return &this
}

// NewCoreBackupGetAsyncBackupLinksRestoreRequestWithDefaults instantiates a new CoreBackupGetAsyncBackupLinksRestoreRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreBackupGetAsyncBackupLinksRestoreRequestWithDefaults() *CoreBackupGetAsyncBackupLinksRestoreRequest {
	this := CoreBackupGetAsyncBackupLinksRestoreRequest{}
	return &this
}

// GetBackupid returns the Backupid field value
func (o *CoreBackupGetAsyncBackupLinksRestoreRequest) GetBackupid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Backupid
}

// GetBackupidOk returns a tuple with the Backupid field value
// and a boolean to check if the value has been set.
func (o *CoreBackupGetAsyncBackupLinksRestoreRequest) GetBackupidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Backupid, true
}

// SetBackupid sets field value
func (o *CoreBackupGetAsyncBackupLinksRestoreRequest) SetBackupid(v string) {
	o.Backupid = v
}

// GetContextid returns the Contextid field value
func (o *CoreBackupGetAsyncBackupLinksRestoreRequest) GetContextid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Contextid
}

// GetContextidOk returns a tuple with the Contextid field value
// and a boolean to check if the value has been set.
func (o *CoreBackupGetAsyncBackupLinksRestoreRequest) GetContextidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contextid, true
}

// SetContextid sets field value
func (o *CoreBackupGetAsyncBackupLinksRestoreRequest) SetContextid(v int32) {
	o.Contextid = v
}

func (o CoreBackupGetAsyncBackupLinksRestoreRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreBackupGetAsyncBackupLinksRestoreRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["backupid"] = o.Backupid
	toSerialize["contextid"] = o.Contextid
	return toSerialize, nil
}

func (o *CoreBackupGetAsyncBackupLinksRestoreRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"backupid",
		"contextid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreBackupGetAsyncBackupLinksRestoreRequest := _CoreBackupGetAsyncBackupLinksRestoreRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreBackupGetAsyncBackupLinksRestoreRequest)

	if err != nil {
		return err
	}

	*o = CoreBackupGetAsyncBackupLinksRestoreRequest(varCoreBackupGetAsyncBackupLinksRestoreRequest)

	return err
}

type NullableCoreBackupGetAsyncBackupLinksRestoreRequest struct {
	value *CoreBackupGetAsyncBackupLinksRestoreRequest
	isSet bool
}

func (v NullableCoreBackupGetAsyncBackupLinksRestoreRequest) Get() *CoreBackupGetAsyncBackupLinksRestoreRequest {
	return v.value
}

func (v *NullableCoreBackupGetAsyncBackupLinksRestoreRequest) Set(val *CoreBackupGetAsyncBackupLinksRestoreRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreBackupGetAsyncBackupLinksRestoreRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreBackupGetAsyncBackupLinksRestoreRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreBackupGetAsyncBackupLinksRestoreRequest(val *CoreBackupGetAsyncBackupLinksRestoreRequest) *NullableCoreBackupGetAsyncBackupLinksRestoreRequest {
	return &NullableCoreBackupGetAsyncBackupLinksRestoreRequest{value: val, isSet: true}
}

func (v NullableCoreBackupGetAsyncBackupLinksRestoreRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreBackupGetAsyncBackupLinksRestoreRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


