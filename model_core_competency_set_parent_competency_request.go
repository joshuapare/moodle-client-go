/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCompetencySetParentCompetencyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCompetencySetParentCompetencyRequest{}

// CoreCompetencySetParentCompetencyRequest struct for CoreCompetencySetParentCompetencyRequest
type CoreCompetencySetParentCompetencyRequest struct {
	// The competency id
	Competencyid int32 `json:"competencyid"`
	// The new competency parent id
	Parentid int32 `json:"parentid"`
}

type _CoreCompetencySetParentCompetencyRequest CoreCompetencySetParentCompetencyRequest

// NewCoreCompetencySetParentCompetencyRequest instantiates a new CoreCompetencySetParentCompetencyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCompetencySetParentCompetencyRequest(competencyid int32, parentid int32) *CoreCompetencySetParentCompetencyRequest {
	this := CoreCompetencySetParentCompetencyRequest{}
	this.Competencyid = competencyid
	this.Parentid = parentid
	return &this
}

// NewCoreCompetencySetParentCompetencyRequestWithDefaults instantiates a new CoreCompetencySetParentCompetencyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCompetencySetParentCompetencyRequestWithDefaults() *CoreCompetencySetParentCompetencyRequest {
	this := CoreCompetencySetParentCompetencyRequest{}
	var parentid int32 = null
	this.Parentid = parentid
	return &this
}

// GetCompetencyid returns the Competencyid field value
func (o *CoreCompetencySetParentCompetencyRequest) GetCompetencyid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Competencyid
}

// GetCompetencyidOk returns a tuple with the Competencyid field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencySetParentCompetencyRequest) GetCompetencyidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Competencyid, true
}

// SetCompetencyid sets field value
func (o *CoreCompetencySetParentCompetencyRequest) SetCompetencyid(v int32) {
	o.Competencyid = v
}

// GetParentid returns the Parentid field value
func (o *CoreCompetencySetParentCompetencyRequest) GetParentid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Parentid
}

// GetParentidOk returns a tuple with the Parentid field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencySetParentCompetencyRequest) GetParentidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parentid, true
}

// SetParentid sets field value
func (o *CoreCompetencySetParentCompetencyRequest) SetParentid(v int32) {
	o.Parentid = v
}

func (o CoreCompetencySetParentCompetencyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCompetencySetParentCompetencyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["competencyid"] = o.Competencyid
	toSerialize["parentid"] = o.Parentid
	return toSerialize, nil
}

func (o *CoreCompetencySetParentCompetencyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"competencyid",
		"parentid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCompetencySetParentCompetencyRequest := _CoreCompetencySetParentCompetencyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCompetencySetParentCompetencyRequest)

	if err != nil {
		return err
	}

	*o = CoreCompetencySetParentCompetencyRequest(varCoreCompetencySetParentCompetencyRequest)

	return err
}

type NullableCoreCompetencySetParentCompetencyRequest struct {
	value *CoreCompetencySetParentCompetencyRequest
	isSet bool
}

func (v NullableCoreCompetencySetParentCompetencyRequest) Get() *CoreCompetencySetParentCompetencyRequest {
	return v.value
}

func (v *NullableCoreCompetencySetParentCompetencyRequest) Set(val *CoreCompetencySetParentCompetencyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCompetencySetParentCompetencyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCompetencySetParentCompetencyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCompetencySetParentCompetencyRequest(val *CoreCompetencySetParentCompetencyRequest) *NullableCoreCompetencySetParentCompetencyRequest {
	return &NullableCoreCompetencySetParentCompetencyRequest{value: val, isSet: true}
}

func (v NullableCoreCompetencySetParentCompetencyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCompetencySetParentCompetencyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


