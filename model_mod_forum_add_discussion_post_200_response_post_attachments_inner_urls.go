/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls{}

// ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls struct for ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls
type ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls struct {
	// The URL used to export the attachment
	Export *string `json:"export,omitempty"`
}

// NewModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls instantiates a new ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls() *ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls {
	this := ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls{}
	var export string = "null"
	this.Export = &export
	return &this
}

// NewModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrlsWithDefaults instantiates a new ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrlsWithDefaults() *ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls {
	this := ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls{}
	var export string = "null"
	this.Export = &export
	return &this
}

// GetExport returns the Export field value if set, zero value otherwise.
func (o *ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) GetExport() string {
	if o == nil || IsNil(o.Export) {
		var ret string
		return ret
	}
	return *o.Export
}

// GetExportOk returns a tuple with the Export field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) GetExportOk() (*string, bool) {
	if o == nil || IsNil(o.Export) {
		return nil, false
	}
	return o.Export, true
}

// HasExport returns a boolean if a field has been set.
func (o *ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) HasExport() bool {
	if o != nil && !IsNil(o.Export) {
		return true
	}

	return false
}

// SetExport gets a reference to the given string and assigns it to the Export field.
func (o *ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) SetExport(v string) {
	o.Export = &v
}

func (o ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Export) {
		toSerialize["export"] = o.Export
	}
	return toSerialize, nil
}

type NullableModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls struct {
	value *ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls
	isSet bool
}

func (v NullableModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) Get() *ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls {
	return v.value
}

func (v *NullableModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) Set(val *ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls(val *ModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) *NullableModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls {
	return &NullableModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls{value: val, isSet: true}
}

func (v NullableModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumAddDiscussionPost200ResponsePostAttachmentsInnerUrls) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


