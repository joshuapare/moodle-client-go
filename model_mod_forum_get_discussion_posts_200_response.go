/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModForumGetDiscussionPosts200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumGetDiscussionPosts200Response{}

// ModForumGetDiscussionPosts200Response struct for ModForumGetDiscussionPosts200Response
type ModForumGetDiscussionPosts200Response struct {
	// The forum course id
	Courseid int32 `json:"courseid"`
	// The forum id
	Forumid int32 `json:"forumid"`
	Posts []ModForumGetDiscussionPosts200ResponsePostsInner `json:"posts"`
	Ratinginfo *ModForumGetDiscussionPosts200ResponseRatinginfo `json:"ratinginfo,omitempty"`
	Warnings []AuthEmailSignupUser200ResponseWarningsInner `json:"warnings,omitempty"`
}

type _ModForumGetDiscussionPosts200Response ModForumGetDiscussionPosts200Response

// NewModForumGetDiscussionPosts200Response instantiates a new ModForumGetDiscussionPosts200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumGetDiscussionPosts200Response(courseid int32, forumid int32, posts []ModForumGetDiscussionPosts200ResponsePostsInner) *ModForumGetDiscussionPosts200Response {
	this := ModForumGetDiscussionPosts200Response{}
	this.Courseid = courseid
	this.Forumid = forumid
	this.Posts = posts
	return &this
}

// NewModForumGetDiscussionPosts200ResponseWithDefaults instantiates a new ModForumGetDiscussionPosts200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumGetDiscussionPosts200ResponseWithDefaults() *ModForumGetDiscussionPosts200Response {
	this := ModForumGetDiscussionPosts200Response{}
	var courseid int32 = null
	this.Courseid = courseid
	var forumid int32 = null
	this.Forumid = forumid
	return &this
}

// GetCourseid returns the Courseid field value
func (o *ModForumGetDiscussionPosts200Response) GetCourseid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Courseid
}

// GetCourseidOk returns a tuple with the Courseid field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200Response) GetCourseidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Courseid, true
}

// SetCourseid sets field value
func (o *ModForumGetDiscussionPosts200Response) SetCourseid(v int32) {
	o.Courseid = v
}

// GetForumid returns the Forumid field value
func (o *ModForumGetDiscussionPosts200Response) GetForumid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Forumid
}

// GetForumidOk returns a tuple with the Forumid field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200Response) GetForumidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Forumid, true
}

// SetForumid sets field value
func (o *ModForumGetDiscussionPosts200Response) SetForumid(v int32) {
	o.Forumid = v
}

// GetPosts returns the Posts field value
func (o *ModForumGetDiscussionPosts200Response) GetPosts() []ModForumGetDiscussionPosts200ResponsePostsInner {
	if o == nil {
		var ret []ModForumGetDiscussionPosts200ResponsePostsInner
		return ret
	}

	return o.Posts
}

// GetPostsOk returns a tuple with the Posts field value
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200Response) GetPostsOk() ([]ModForumGetDiscussionPosts200ResponsePostsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Posts, true
}

// SetPosts sets field value
func (o *ModForumGetDiscussionPosts200Response) SetPosts(v []ModForumGetDiscussionPosts200ResponsePostsInner) {
	o.Posts = v
}

// GetRatinginfo returns the Ratinginfo field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200Response) GetRatinginfo() ModForumGetDiscussionPosts200ResponseRatinginfo {
	if o == nil || IsNil(o.Ratinginfo) {
		var ret ModForumGetDiscussionPosts200ResponseRatinginfo
		return ret
	}
	return *o.Ratinginfo
}

// GetRatinginfoOk returns a tuple with the Ratinginfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200Response) GetRatinginfoOk() (*ModForumGetDiscussionPosts200ResponseRatinginfo, bool) {
	if o == nil || IsNil(o.Ratinginfo) {
		return nil, false
	}
	return o.Ratinginfo, true
}

// HasRatinginfo returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200Response) HasRatinginfo() bool {
	if o != nil && !IsNil(o.Ratinginfo) {
		return true
	}

	return false
}

// SetRatinginfo gets a reference to the given ModForumGetDiscussionPosts200ResponseRatinginfo and assigns it to the Ratinginfo field.
func (o *ModForumGetDiscussionPosts200Response) SetRatinginfo(v ModForumGetDiscussionPosts200ResponseRatinginfo) {
	o.Ratinginfo = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ModForumGetDiscussionPosts200Response) GetWarnings() []AuthEmailSignupUser200ResponseWarningsInner {
	if o == nil || IsNil(o.Warnings) {
		var ret []AuthEmailSignupUser200ResponseWarningsInner
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModForumGetDiscussionPosts200Response) GetWarningsOk() ([]AuthEmailSignupUser200ResponseWarningsInner, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ModForumGetDiscussionPosts200Response) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []AuthEmailSignupUser200ResponseWarningsInner and assigns it to the Warnings field.
func (o *ModForumGetDiscussionPosts200Response) SetWarnings(v []AuthEmailSignupUser200ResponseWarningsInner) {
	o.Warnings = v
}

func (o ModForumGetDiscussionPosts200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumGetDiscussionPosts200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["courseid"] = o.Courseid
	toSerialize["forumid"] = o.Forumid
	toSerialize["posts"] = o.Posts
	if !IsNil(o.Ratinginfo) {
		toSerialize["ratinginfo"] = o.Ratinginfo
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

func (o *ModForumGetDiscussionPosts200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"courseid",
		"forumid",
		"posts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModForumGetDiscussionPosts200Response := _ModForumGetDiscussionPosts200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModForumGetDiscussionPosts200Response)

	if err != nil {
		return err
	}

	*o = ModForumGetDiscussionPosts200Response(varModForumGetDiscussionPosts200Response)

	return err
}

type NullableModForumGetDiscussionPosts200Response struct {
	value *ModForumGetDiscussionPosts200Response
	isSet bool
}

func (v NullableModForumGetDiscussionPosts200Response) Get() *ModForumGetDiscussionPosts200Response {
	return v.value
}

func (v *NullableModForumGetDiscussionPosts200Response) Set(val *ModForumGetDiscussionPosts200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumGetDiscussionPosts200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumGetDiscussionPosts200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumGetDiscussionPosts200Response(val *ModForumGetDiscussionPosts200Response) *NullableModForumGetDiscussionPosts200Response {
	return &NullableModForumGetDiscussionPosts200Response{value: val, isSet: true}
}

func (v NullableModForumGetDiscussionPosts200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumGetDiscussionPosts200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


