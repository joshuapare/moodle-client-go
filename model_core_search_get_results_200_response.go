/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreSearchGetResults200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreSearchGetResults200Response{}

// CoreSearchGetResults200Response struct for CoreSearchGetResults200Response
type CoreSearchGetResults200Response struct {
	Results []CoreSearchGetResults200ResponseResultsInner `json:"results"`
	// Total number of results
	Totalcount int32 `json:"totalcount"`
}

type _CoreSearchGetResults200Response CoreSearchGetResults200Response

// NewCoreSearchGetResults200Response instantiates a new CoreSearchGetResults200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreSearchGetResults200Response(results []CoreSearchGetResults200ResponseResultsInner, totalcount int32) *CoreSearchGetResults200Response {
	this := CoreSearchGetResults200Response{}
	this.Results = results
	this.Totalcount = totalcount
	return &this
}

// NewCoreSearchGetResults200ResponseWithDefaults instantiates a new CoreSearchGetResults200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreSearchGetResults200ResponseWithDefaults() *CoreSearchGetResults200Response {
	this := CoreSearchGetResults200Response{}
	var totalcount int32 = null
	this.Totalcount = totalcount
	return &this
}

// GetResults returns the Results field value
func (o *CoreSearchGetResults200Response) GetResults() []CoreSearchGetResults200ResponseResultsInner {
	if o == nil {
		var ret []CoreSearchGetResults200ResponseResultsInner
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *CoreSearchGetResults200Response) GetResultsOk() ([]CoreSearchGetResults200ResponseResultsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *CoreSearchGetResults200Response) SetResults(v []CoreSearchGetResults200ResponseResultsInner) {
	o.Results = v
}

// GetTotalcount returns the Totalcount field value
func (o *CoreSearchGetResults200Response) GetTotalcount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Totalcount
}

// GetTotalcountOk returns a tuple with the Totalcount field value
// and a boolean to check if the value has been set.
func (o *CoreSearchGetResults200Response) GetTotalcountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Totalcount, true
}

// SetTotalcount sets field value
func (o *CoreSearchGetResults200Response) SetTotalcount(v int32) {
	o.Totalcount = v
}

func (o CoreSearchGetResults200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreSearchGetResults200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	toSerialize["totalcount"] = o.Totalcount
	return toSerialize, nil
}

func (o *CoreSearchGetResults200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"results",
		"totalcount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreSearchGetResults200Response := _CoreSearchGetResults200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreSearchGetResults200Response)

	if err != nil {
		return err
	}

	*o = CoreSearchGetResults200Response(varCoreSearchGetResults200Response)

	return err
}

type NullableCoreSearchGetResults200Response struct {
	value *CoreSearchGetResults200Response
	isSet bool
}

func (v NullableCoreSearchGetResults200Response) Get() *CoreSearchGetResults200Response {
	return v.value
}

func (v *NullableCoreSearchGetResults200Response) Set(val *CoreSearchGetResults200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreSearchGetResults200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreSearchGetResults200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreSearchGetResults200Response(val *CoreSearchGetResults200Response) *NullableCoreSearchGetResults200Response {
	return &NullableCoreSearchGetResults200Response{value: val, isSet: true}
}

func (v NullableCoreSearchGetResults200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreSearchGetResults200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


