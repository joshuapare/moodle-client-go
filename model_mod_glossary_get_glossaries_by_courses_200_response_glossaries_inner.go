/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
)

// checks if the ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner{}

// ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner Glossaries
type ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner struct {
	// If enabled, all participants with permission to create comments will be able to add comments to glossary entries
	Allowcomments *int32 `json:"allowcomments,omitempty"`
	// If enabled, multiple entries can have the same concept name
	Allowduplicatedentries *int32 `json:"allowduplicatedentries,omitempty"`
	// If enabled, students are provided with a link to a printer-friendly version of the glossary. The link is always available to teachers
	Allowprintview *int32 `json:"allowprintview,omitempty"`
	// When approving glossary items you may wish to use a different display format
	Approvaldisplayformat *string `json:"approvaldisplayformat,omitempty"`
	// Aggregate type
	Assessed *int32 `json:"assessed,omitempty"`
	// Restrict rating to items created before this
	Assesstimefinish *int32 `json:"assesstimefinish,omitempty"`
	// Restrict rating to items created after this
	Assesstimestart *int32 `json:"assesstimestart,omitempty"`
	Browsemodes []map[string]interface{} `json:"browsemodes,omitempty"`
	// Whether the user can add a new entry
	Canaddentry *int32 `json:"canaddentry,omitempty"`
	// Number of entries to complete
	Completionentries *int32 `json:"completionentries,omitempty"`
	// Course id
	Course *int32 `json:"course,omitempty"`
	// Course module id
	Coursemodule *int32 `json:"coursemodule,omitempty"`
	// If set to no, entries require approving by a teacher before they are viewable by everyone.
	Defaultapproval *int32 `json:"defaultapproval,omitempty"`
	// Display format type
	Displayformat *string `json:"displayformat,omitempty"`
	// Always allow editing
	Editalways *int32 `json:"editalways,omitempty"`
	// Entries shown per page
	Entbypage *int32 `json:"entbypage,omitempty"`
	Globalglossary *int32 `json:"globalglossary,omitempty"`
	// Group id
	Groupingid *int32 `json:"groupingid,omitempty"`
	// Group mode
	Groupmode *int32 `json:"groupmode,omitempty"`
	// Activity instance id
	Id *int32 `json:"id,omitempty"`
	// Activity introduction
	Intro *string `json:"intro,omitempty"`
	Introfiles []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner `json:"introfiles,omitempty"`
	// intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
	Introformat *int32 `json:"introformat,omitempty"`
	// Forced activity language
	Lang *string `json:"lang,omitempty"`
	// If enabled this glossary is a main glossary.
	Mainglossary *int32 `json:"mainglossary,omitempty"`
	// Activity name
	Name *string `json:"name,omitempty"`
	// This setting specifies the number of glossary entry concepts to include in the RSS feed. Between 5 and 20 generally acceptable
	Rssarticles *int32 `json:"rssarticles,omitempty"`
	// To enable the RSS feed for this activity, select either concepts with author or concepts without author to be included in the feed
	Rsstype *int32 `json:"rsstype,omitempty"`
	// Scale ID
	Scale *int32 `json:"scale,omitempty"`
	// Course section id
	Section *int32 `json:"section,omitempty"`
	// If enabled, participants can browse all entries at once
	Showall *int32 `json:"showall,omitempty"`
	// If enabled, participants can browse the glossary by letters of the alphabet
	Showalphabet *int32 `json:"showalphabet,omitempty"`
	// If enabled, participants can browse the glossary by special characters, such as @ and #
	Showspecial *int32 `json:"showspecial,omitempty"`
	// Time created
	Timecreated *int32 `json:"timecreated,omitempty"`
	// Time modified
	Timemodified *int32 `json:"timemodified,omitempty"`
	// If site-wide glossary auto-linking has been enabled by an administrator and this checkbox is ticked, the entry will be automatically linked wherever the concept words and phrases appear throughout the rest of the course.
	Usedynalink *int32 `json:"usedynalink,omitempty"`
	// Visible
	Visible *bool `json:"visible,omitempty"`
}

// NewModGlossaryGetGlossariesByCourses200ResponseGlossariesInner instantiates a new ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModGlossaryGetGlossariesByCourses200ResponseGlossariesInner() *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner {
	this := ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner{}
	var allowcomments int32 = null
	this.Allowcomments = &allowcomments
	var allowduplicatedentries int32 = null
	this.Allowduplicatedentries = &allowduplicatedentries
	var allowprintview int32 = null
	this.Allowprintview = &allowprintview
	var approvaldisplayformat string = "null"
	this.Approvaldisplayformat = &approvaldisplayformat
	var assessed int32 = null
	this.Assessed = &assessed
	var assesstimefinish int32 = null
	this.Assesstimefinish = &assesstimefinish
	var assesstimestart int32 = null
	this.Assesstimestart = &assesstimestart
	var canaddentry int32 = null
	this.Canaddentry = &canaddentry
	var completionentries int32 = null
	this.Completionentries = &completionentries
	var defaultapproval int32 = null
	this.Defaultapproval = &defaultapproval
	var displayformat string = "null"
	this.Displayformat = &displayformat
	var editalways int32 = null
	this.Editalways = &editalways
	var entbypage int32 = null
	this.Entbypage = &entbypage
	var mainglossary int32 = null
	this.Mainglossary = &mainglossary
	var rssarticles int32 = null
	this.Rssarticles = &rssarticles
	var rsstype int32 = null
	this.Rsstype = &rsstype
	var scale int32 = null
	this.Scale = &scale
	var showall int32 = null
	this.Showall = &showall
	var showalphabet int32 = null
	this.Showalphabet = &showalphabet
	var showspecial int32 = null
	this.Showspecial = &showspecial
	var usedynalink int32 = null
	this.Usedynalink = &usedynalink
	return &this
}

// NewModGlossaryGetGlossariesByCourses200ResponseGlossariesInnerWithDefaults instantiates a new ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModGlossaryGetGlossariesByCourses200ResponseGlossariesInnerWithDefaults() *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner {
	this := ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner{}
	var allowcomments int32 = null
	this.Allowcomments = &allowcomments
	var allowduplicatedentries int32 = null
	this.Allowduplicatedentries = &allowduplicatedentries
	var allowprintview int32 = null
	this.Allowprintview = &allowprintview
	var approvaldisplayformat string = "null"
	this.Approvaldisplayformat = &approvaldisplayformat
	var assessed int32 = null
	this.Assessed = &assessed
	var assesstimefinish int32 = null
	this.Assesstimefinish = &assesstimefinish
	var assesstimestart int32 = null
	this.Assesstimestart = &assesstimestart
	var canaddentry int32 = null
	this.Canaddentry = &canaddentry
	var completionentries int32 = null
	this.Completionentries = &completionentries
	var defaultapproval int32 = null
	this.Defaultapproval = &defaultapproval
	var displayformat string = "null"
	this.Displayformat = &displayformat
	var editalways int32 = null
	this.Editalways = &editalways
	var entbypage int32 = null
	this.Entbypage = &entbypage
	var mainglossary int32 = null
	this.Mainglossary = &mainglossary
	var rssarticles int32 = null
	this.Rssarticles = &rssarticles
	var rsstype int32 = null
	this.Rsstype = &rsstype
	var scale int32 = null
	this.Scale = &scale
	var showall int32 = null
	this.Showall = &showall
	var showalphabet int32 = null
	this.Showalphabet = &showalphabet
	var showspecial int32 = null
	this.Showspecial = &showspecial
	var usedynalink int32 = null
	this.Usedynalink = &usedynalink
	return &this
}

// GetAllowcomments returns the Allowcomments field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetAllowcomments() int32 {
	if o == nil || IsNil(o.Allowcomments) {
		var ret int32
		return ret
	}
	return *o.Allowcomments
}

// GetAllowcommentsOk returns a tuple with the Allowcomments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetAllowcommentsOk() (*int32, bool) {
	if o == nil || IsNil(o.Allowcomments) {
		return nil, false
	}
	return o.Allowcomments, true
}

// HasAllowcomments returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasAllowcomments() bool {
	if o != nil && !IsNil(o.Allowcomments) {
		return true
	}

	return false
}

// SetAllowcomments gets a reference to the given int32 and assigns it to the Allowcomments field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetAllowcomments(v int32) {
	o.Allowcomments = &v
}

// GetAllowduplicatedentries returns the Allowduplicatedentries field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetAllowduplicatedentries() int32 {
	if o == nil || IsNil(o.Allowduplicatedentries) {
		var ret int32
		return ret
	}
	return *o.Allowduplicatedentries
}

// GetAllowduplicatedentriesOk returns a tuple with the Allowduplicatedentries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetAllowduplicatedentriesOk() (*int32, bool) {
	if o == nil || IsNil(o.Allowduplicatedentries) {
		return nil, false
	}
	return o.Allowduplicatedentries, true
}

// HasAllowduplicatedentries returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasAllowduplicatedentries() bool {
	if o != nil && !IsNil(o.Allowduplicatedentries) {
		return true
	}

	return false
}

// SetAllowduplicatedentries gets a reference to the given int32 and assigns it to the Allowduplicatedentries field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetAllowduplicatedentries(v int32) {
	o.Allowduplicatedentries = &v
}

// GetAllowprintview returns the Allowprintview field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetAllowprintview() int32 {
	if o == nil || IsNil(o.Allowprintview) {
		var ret int32
		return ret
	}
	return *o.Allowprintview
}

// GetAllowprintviewOk returns a tuple with the Allowprintview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetAllowprintviewOk() (*int32, bool) {
	if o == nil || IsNil(o.Allowprintview) {
		return nil, false
	}
	return o.Allowprintview, true
}

// HasAllowprintview returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasAllowprintview() bool {
	if o != nil && !IsNil(o.Allowprintview) {
		return true
	}

	return false
}

// SetAllowprintview gets a reference to the given int32 and assigns it to the Allowprintview field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetAllowprintview(v int32) {
	o.Allowprintview = &v
}

// GetApprovaldisplayformat returns the Approvaldisplayformat field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetApprovaldisplayformat() string {
	if o == nil || IsNil(o.Approvaldisplayformat) {
		var ret string
		return ret
	}
	return *o.Approvaldisplayformat
}

// GetApprovaldisplayformatOk returns a tuple with the Approvaldisplayformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetApprovaldisplayformatOk() (*string, bool) {
	if o == nil || IsNil(o.Approvaldisplayformat) {
		return nil, false
	}
	return o.Approvaldisplayformat, true
}

// HasApprovaldisplayformat returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasApprovaldisplayformat() bool {
	if o != nil && !IsNil(o.Approvaldisplayformat) {
		return true
	}

	return false
}

// SetApprovaldisplayformat gets a reference to the given string and assigns it to the Approvaldisplayformat field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetApprovaldisplayformat(v string) {
	o.Approvaldisplayformat = &v
}

// GetAssessed returns the Assessed field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetAssessed() int32 {
	if o == nil || IsNil(o.Assessed) {
		var ret int32
		return ret
	}
	return *o.Assessed
}

// GetAssessedOk returns a tuple with the Assessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetAssessedOk() (*int32, bool) {
	if o == nil || IsNil(o.Assessed) {
		return nil, false
	}
	return o.Assessed, true
}

// HasAssessed returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasAssessed() bool {
	if o != nil && !IsNil(o.Assessed) {
		return true
	}

	return false
}

// SetAssessed gets a reference to the given int32 and assigns it to the Assessed field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetAssessed(v int32) {
	o.Assessed = &v
}

// GetAssesstimefinish returns the Assesstimefinish field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetAssesstimefinish() int32 {
	if o == nil || IsNil(o.Assesstimefinish) {
		var ret int32
		return ret
	}
	return *o.Assesstimefinish
}

// GetAssesstimefinishOk returns a tuple with the Assesstimefinish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetAssesstimefinishOk() (*int32, bool) {
	if o == nil || IsNil(o.Assesstimefinish) {
		return nil, false
	}
	return o.Assesstimefinish, true
}

// HasAssesstimefinish returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasAssesstimefinish() bool {
	if o != nil && !IsNil(o.Assesstimefinish) {
		return true
	}

	return false
}

// SetAssesstimefinish gets a reference to the given int32 and assigns it to the Assesstimefinish field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetAssesstimefinish(v int32) {
	o.Assesstimefinish = &v
}

// GetAssesstimestart returns the Assesstimestart field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetAssesstimestart() int32 {
	if o == nil || IsNil(o.Assesstimestart) {
		var ret int32
		return ret
	}
	return *o.Assesstimestart
}

// GetAssesstimestartOk returns a tuple with the Assesstimestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetAssesstimestartOk() (*int32, bool) {
	if o == nil || IsNil(o.Assesstimestart) {
		return nil, false
	}
	return o.Assesstimestart, true
}

// HasAssesstimestart returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasAssesstimestart() bool {
	if o != nil && !IsNil(o.Assesstimestart) {
		return true
	}

	return false
}

// SetAssesstimestart gets a reference to the given int32 and assigns it to the Assesstimestart field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetAssesstimestart(v int32) {
	o.Assesstimestart = &v
}

// GetBrowsemodes returns the Browsemodes field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetBrowsemodes() []map[string]interface{} {
	if o == nil || IsNil(o.Browsemodes) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Browsemodes
}

// GetBrowsemodesOk returns a tuple with the Browsemodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetBrowsemodesOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Browsemodes) {
		return nil, false
	}
	return o.Browsemodes, true
}

// HasBrowsemodes returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasBrowsemodes() bool {
	if o != nil && !IsNil(o.Browsemodes) {
		return true
	}

	return false
}

// SetBrowsemodes gets a reference to the given []map[string]interface{} and assigns it to the Browsemodes field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetBrowsemodes(v []map[string]interface{}) {
	o.Browsemodes = v
}

// GetCanaddentry returns the Canaddentry field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetCanaddentry() int32 {
	if o == nil || IsNil(o.Canaddentry) {
		var ret int32
		return ret
	}
	return *o.Canaddentry
}

// GetCanaddentryOk returns a tuple with the Canaddentry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetCanaddentryOk() (*int32, bool) {
	if o == nil || IsNil(o.Canaddentry) {
		return nil, false
	}
	return o.Canaddentry, true
}

// HasCanaddentry returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasCanaddentry() bool {
	if o != nil && !IsNil(o.Canaddentry) {
		return true
	}

	return false
}

// SetCanaddentry gets a reference to the given int32 and assigns it to the Canaddentry field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetCanaddentry(v int32) {
	o.Canaddentry = &v
}

// GetCompletionentries returns the Completionentries field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetCompletionentries() int32 {
	if o == nil || IsNil(o.Completionentries) {
		var ret int32
		return ret
	}
	return *o.Completionentries
}

// GetCompletionentriesOk returns a tuple with the Completionentries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetCompletionentriesOk() (*int32, bool) {
	if o == nil || IsNil(o.Completionentries) {
		return nil, false
	}
	return o.Completionentries, true
}

// HasCompletionentries returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasCompletionentries() bool {
	if o != nil && !IsNil(o.Completionentries) {
		return true
	}

	return false
}

// SetCompletionentries gets a reference to the given int32 and assigns it to the Completionentries field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetCompletionentries(v int32) {
	o.Completionentries = &v
}

// GetCourse returns the Course field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetCourse() int32 {
	if o == nil || IsNil(o.Course) {
		var ret int32
		return ret
	}
	return *o.Course
}

// GetCourseOk returns a tuple with the Course field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetCourseOk() (*int32, bool) {
	if o == nil || IsNil(o.Course) {
		return nil, false
	}
	return o.Course, true
}

// HasCourse returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasCourse() bool {
	if o != nil && !IsNil(o.Course) {
		return true
	}

	return false
}

// SetCourse gets a reference to the given int32 and assigns it to the Course field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetCourse(v int32) {
	o.Course = &v
}

// GetCoursemodule returns the Coursemodule field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetCoursemodule() int32 {
	if o == nil || IsNil(o.Coursemodule) {
		var ret int32
		return ret
	}
	return *o.Coursemodule
}

// GetCoursemoduleOk returns a tuple with the Coursemodule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetCoursemoduleOk() (*int32, bool) {
	if o == nil || IsNil(o.Coursemodule) {
		return nil, false
	}
	return o.Coursemodule, true
}

// HasCoursemodule returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasCoursemodule() bool {
	if o != nil && !IsNil(o.Coursemodule) {
		return true
	}

	return false
}

// SetCoursemodule gets a reference to the given int32 and assigns it to the Coursemodule field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetCoursemodule(v int32) {
	o.Coursemodule = &v
}

// GetDefaultapproval returns the Defaultapproval field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetDefaultapproval() int32 {
	if o == nil || IsNil(o.Defaultapproval) {
		var ret int32
		return ret
	}
	return *o.Defaultapproval
}

// GetDefaultapprovalOk returns a tuple with the Defaultapproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetDefaultapprovalOk() (*int32, bool) {
	if o == nil || IsNil(o.Defaultapproval) {
		return nil, false
	}
	return o.Defaultapproval, true
}

// HasDefaultapproval returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasDefaultapproval() bool {
	if o != nil && !IsNil(o.Defaultapproval) {
		return true
	}

	return false
}

// SetDefaultapproval gets a reference to the given int32 and assigns it to the Defaultapproval field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetDefaultapproval(v int32) {
	o.Defaultapproval = &v
}

// GetDisplayformat returns the Displayformat field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetDisplayformat() string {
	if o == nil || IsNil(o.Displayformat) {
		var ret string
		return ret
	}
	return *o.Displayformat
}

// GetDisplayformatOk returns a tuple with the Displayformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetDisplayformatOk() (*string, bool) {
	if o == nil || IsNil(o.Displayformat) {
		return nil, false
	}
	return o.Displayformat, true
}

// HasDisplayformat returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasDisplayformat() bool {
	if o != nil && !IsNil(o.Displayformat) {
		return true
	}

	return false
}

// SetDisplayformat gets a reference to the given string and assigns it to the Displayformat field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetDisplayformat(v string) {
	o.Displayformat = &v
}

// GetEditalways returns the Editalways field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetEditalways() int32 {
	if o == nil || IsNil(o.Editalways) {
		var ret int32
		return ret
	}
	return *o.Editalways
}

// GetEditalwaysOk returns a tuple with the Editalways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetEditalwaysOk() (*int32, bool) {
	if o == nil || IsNil(o.Editalways) {
		return nil, false
	}
	return o.Editalways, true
}

// HasEditalways returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasEditalways() bool {
	if o != nil && !IsNil(o.Editalways) {
		return true
	}

	return false
}

// SetEditalways gets a reference to the given int32 and assigns it to the Editalways field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetEditalways(v int32) {
	o.Editalways = &v
}

// GetEntbypage returns the Entbypage field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetEntbypage() int32 {
	if o == nil || IsNil(o.Entbypage) {
		var ret int32
		return ret
	}
	return *o.Entbypage
}

// GetEntbypageOk returns a tuple with the Entbypage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetEntbypageOk() (*int32, bool) {
	if o == nil || IsNil(o.Entbypage) {
		return nil, false
	}
	return o.Entbypage, true
}

// HasEntbypage returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasEntbypage() bool {
	if o != nil && !IsNil(o.Entbypage) {
		return true
	}

	return false
}

// SetEntbypage gets a reference to the given int32 and assigns it to the Entbypage field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetEntbypage(v int32) {
	o.Entbypage = &v
}

// GetGlobalglossary returns the Globalglossary field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetGlobalglossary() int32 {
	if o == nil || IsNil(o.Globalglossary) {
		var ret int32
		return ret
	}
	return *o.Globalglossary
}

// GetGlobalglossaryOk returns a tuple with the Globalglossary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetGlobalglossaryOk() (*int32, bool) {
	if o == nil || IsNil(o.Globalglossary) {
		return nil, false
	}
	return o.Globalglossary, true
}

// HasGlobalglossary returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasGlobalglossary() bool {
	if o != nil && !IsNil(o.Globalglossary) {
		return true
	}

	return false
}

// SetGlobalglossary gets a reference to the given int32 and assigns it to the Globalglossary field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetGlobalglossary(v int32) {
	o.Globalglossary = &v
}

// GetGroupingid returns the Groupingid field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetGroupingid() int32 {
	if o == nil || IsNil(o.Groupingid) {
		var ret int32
		return ret
	}
	return *o.Groupingid
}

// GetGroupingidOk returns a tuple with the Groupingid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetGroupingidOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupingid) {
		return nil, false
	}
	return o.Groupingid, true
}

// HasGroupingid returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasGroupingid() bool {
	if o != nil && !IsNil(o.Groupingid) {
		return true
	}

	return false
}

// SetGroupingid gets a reference to the given int32 and assigns it to the Groupingid field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetGroupingid(v int32) {
	o.Groupingid = &v
}

// GetGroupmode returns the Groupmode field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetGroupmode() int32 {
	if o == nil || IsNil(o.Groupmode) {
		var ret int32
		return ret
	}
	return *o.Groupmode
}

// GetGroupmodeOk returns a tuple with the Groupmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetGroupmodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Groupmode) {
		return nil, false
	}
	return o.Groupmode, true
}

// HasGroupmode returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasGroupmode() bool {
	if o != nil && !IsNil(o.Groupmode) {
		return true
	}

	return false
}

// SetGroupmode gets a reference to the given int32 and assigns it to the Groupmode field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetGroupmode(v int32) {
	o.Groupmode = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetId(v int32) {
	o.Id = &v
}

// GetIntro returns the Intro field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetIntro() string {
	if o == nil || IsNil(o.Intro) {
		var ret string
		return ret
	}
	return *o.Intro
}

// GetIntroOk returns a tuple with the Intro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetIntroOk() (*string, bool) {
	if o == nil || IsNil(o.Intro) {
		return nil, false
	}
	return o.Intro, true
}

// HasIntro returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasIntro() bool {
	if o != nil && !IsNil(o.Intro) {
		return true
	}

	return false
}

// SetIntro gets a reference to the given string and assigns it to the Intro field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetIntro(v string) {
	o.Intro = &v
}

// GetIntrofiles returns the Introfiles field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetIntrofiles() []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner {
	if o == nil || IsNil(o.Introfiles) {
		var ret []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner
		return ret
	}
	return o.Introfiles
}

// GetIntrofilesOk returns a tuple with the Introfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetIntrofilesOk() ([]CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner, bool) {
	if o == nil || IsNil(o.Introfiles) {
		return nil, false
	}
	return o.Introfiles, true
}

// HasIntrofiles returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasIntrofiles() bool {
	if o != nil && !IsNil(o.Introfiles) {
		return true
	}

	return false
}

// SetIntrofiles gets a reference to the given []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner and assigns it to the Introfiles field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetIntrofiles(v []CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner) {
	o.Introfiles = v
}

// GetIntroformat returns the Introformat field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetIntroformat() int32 {
	if o == nil || IsNil(o.Introformat) {
		var ret int32
		return ret
	}
	return *o.Introformat
}

// GetIntroformatOk returns a tuple with the Introformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetIntroformatOk() (*int32, bool) {
	if o == nil || IsNil(o.Introformat) {
		return nil, false
	}
	return o.Introformat, true
}

// HasIntroformat returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasIntroformat() bool {
	if o != nil && !IsNil(o.Introformat) {
		return true
	}

	return false
}

// SetIntroformat gets a reference to the given int32 and assigns it to the Introformat field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetIntroformat(v int32) {
	o.Introformat = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetLang(v string) {
	o.Lang = &v
}

// GetMainglossary returns the Mainglossary field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetMainglossary() int32 {
	if o == nil || IsNil(o.Mainglossary) {
		var ret int32
		return ret
	}
	return *o.Mainglossary
}

// GetMainglossaryOk returns a tuple with the Mainglossary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetMainglossaryOk() (*int32, bool) {
	if o == nil || IsNil(o.Mainglossary) {
		return nil, false
	}
	return o.Mainglossary, true
}

// HasMainglossary returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasMainglossary() bool {
	if o != nil && !IsNil(o.Mainglossary) {
		return true
	}

	return false
}

// SetMainglossary gets a reference to the given int32 and assigns it to the Mainglossary field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetMainglossary(v int32) {
	o.Mainglossary = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetName(v string) {
	o.Name = &v
}

// GetRssarticles returns the Rssarticles field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetRssarticles() int32 {
	if o == nil || IsNil(o.Rssarticles) {
		var ret int32
		return ret
	}
	return *o.Rssarticles
}

// GetRssarticlesOk returns a tuple with the Rssarticles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetRssarticlesOk() (*int32, bool) {
	if o == nil || IsNil(o.Rssarticles) {
		return nil, false
	}
	return o.Rssarticles, true
}

// HasRssarticles returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasRssarticles() bool {
	if o != nil && !IsNil(o.Rssarticles) {
		return true
	}

	return false
}

// SetRssarticles gets a reference to the given int32 and assigns it to the Rssarticles field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetRssarticles(v int32) {
	o.Rssarticles = &v
}

// GetRsstype returns the Rsstype field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetRsstype() int32 {
	if o == nil || IsNil(o.Rsstype) {
		var ret int32
		return ret
	}
	return *o.Rsstype
}

// GetRsstypeOk returns a tuple with the Rsstype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetRsstypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Rsstype) {
		return nil, false
	}
	return o.Rsstype, true
}

// HasRsstype returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasRsstype() bool {
	if o != nil && !IsNil(o.Rsstype) {
		return true
	}

	return false
}

// SetRsstype gets a reference to the given int32 and assigns it to the Rsstype field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetRsstype(v int32) {
	o.Rsstype = &v
}

// GetScale returns the Scale field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetScale() int32 {
	if o == nil || IsNil(o.Scale) {
		var ret int32
		return ret
	}
	return *o.Scale
}

// GetScaleOk returns a tuple with the Scale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetScaleOk() (*int32, bool) {
	if o == nil || IsNil(o.Scale) {
		return nil, false
	}
	return o.Scale, true
}

// HasScale returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasScale() bool {
	if o != nil && !IsNil(o.Scale) {
		return true
	}

	return false
}

// SetScale gets a reference to the given int32 and assigns it to the Scale field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetScale(v int32) {
	o.Scale = &v
}

// GetSection returns the Section field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetSection() int32 {
	if o == nil || IsNil(o.Section) {
		var ret int32
		return ret
	}
	return *o.Section
}

// GetSectionOk returns a tuple with the Section field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetSectionOk() (*int32, bool) {
	if o == nil || IsNil(o.Section) {
		return nil, false
	}
	return o.Section, true
}

// HasSection returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasSection() bool {
	if o != nil && !IsNil(o.Section) {
		return true
	}

	return false
}

// SetSection gets a reference to the given int32 and assigns it to the Section field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetSection(v int32) {
	o.Section = &v
}

// GetShowall returns the Showall field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetShowall() int32 {
	if o == nil || IsNil(o.Showall) {
		var ret int32
		return ret
	}
	return *o.Showall
}

// GetShowallOk returns a tuple with the Showall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetShowallOk() (*int32, bool) {
	if o == nil || IsNil(o.Showall) {
		return nil, false
	}
	return o.Showall, true
}

// HasShowall returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasShowall() bool {
	if o != nil && !IsNil(o.Showall) {
		return true
	}

	return false
}

// SetShowall gets a reference to the given int32 and assigns it to the Showall field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetShowall(v int32) {
	o.Showall = &v
}

// GetShowalphabet returns the Showalphabet field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetShowalphabet() int32 {
	if o == nil || IsNil(o.Showalphabet) {
		var ret int32
		return ret
	}
	return *o.Showalphabet
}

// GetShowalphabetOk returns a tuple with the Showalphabet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetShowalphabetOk() (*int32, bool) {
	if o == nil || IsNil(o.Showalphabet) {
		return nil, false
	}
	return o.Showalphabet, true
}

// HasShowalphabet returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasShowalphabet() bool {
	if o != nil && !IsNil(o.Showalphabet) {
		return true
	}

	return false
}

// SetShowalphabet gets a reference to the given int32 and assigns it to the Showalphabet field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetShowalphabet(v int32) {
	o.Showalphabet = &v
}

// GetShowspecial returns the Showspecial field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetShowspecial() int32 {
	if o == nil || IsNil(o.Showspecial) {
		var ret int32
		return ret
	}
	return *o.Showspecial
}

// GetShowspecialOk returns a tuple with the Showspecial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetShowspecialOk() (*int32, bool) {
	if o == nil || IsNil(o.Showspecial) {
		return nil, false
	}
	return o.Showspecial, true
}

// HasShowspecial returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasShowspecial() bool {
	if o != nil && !IsNil(o.Showspecial) {
		return true
	}

	return false
}

// SetShowspecial gets a reference to the given int32 and assigns it to the Showspecial field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetShowspecial(v int32) {
	o.Showspecial = &v
}

// GetTimecreated returns the Timecreated field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetTimecreated() int32 {
	if o == nil || IsNil(o.Timecreated) {
		var ret int32
		return ret
	}
	return *o.Timecreated
}

// GetTimecreatedOk returns a tuple with the Timecreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetTimecreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timecreated) {
		return nil, false
	}
	return o.Timecreated, true
}

// HasTimecreated returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasTimecreated() bool {
	if o != nil && !IsNil(o.Timecreated) {
		return true
	}

	return false
}

// SetTimecreated gets a reference to the given int32 and assigns it to the Timecreated field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetTimecreated(v int32) {
	o.Timecreated = &v
}

// GetTimemodified returns the Timemodified field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetTimemodified() int32 {
	if o == nil || IsNil(o.Timemodified) {
		var ret int32
		return ret
	}
	return *o.Timemodified
}

// GetTimemodifiedOk returns a tuple with the Timemodified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetTimemodifiedOk() (*int32, bool) {
	if o == nil || IsNil(o.Timemodified) {
		return nil, false
	}
	return o.Timemodified, true
}

// HasTimemodified returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasTimemodified() bool {
	if o != nil && !IsNil(o.Timemodified) {
		return true
	}

	return false
}

// SetTimemodified gets a reference to the given int32 and assigns it to the Timemodified field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetTimemodified(v int32) {
	o.Timemodified = &v
}

// GetUsedynalink returns the Usedynalink field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetUsedynalink() int32 {
	if o == nil || IsNil(o.Usedynalink) {
		var ret int32
		return ret
	}
	return *o.Usedynalink
}

// GetUsedynalinkOk returns a tuple with the Usedynalink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetUsedynalinkOk() (*int32, bool) {
	if o == nil || IsNil(o.Usedynalink) {
		return nil, false
	}
	return o.Usedynalink, true
}

// HasUsedynalink returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasUsedynalink() bool {
	if o != nil && !IsNil(o.Usedynalink) {
		return true
	}

	return false
}

// SetUsedynalink gets a reference to the given int32 and assigns it to the Usedynalink field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetUsedynalink(v int32) {
	o.Usedynalink = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetVisible() bool {
	if o == nil || IsNil(o.Visible) {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) GetVisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) SetVisible(v bool) {
	o.Visible = &v
}

func (o ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Allowcomments) {
		toSerialize["allowcomments"] = o.Allowcomments
	}
	if !IsNil(o.Allowduplicatedentries) {
		toSerialize["allowduplicatedentries"] = o.Allowduplicatedentries
	}
	if !IsNil(o.Allowprintview) {
		toSerialize["allowprintview"] = o.Allowprintview
	}
	if !IsNil(o.Approvaldisplayformat) {
		toSerialize["approvaldisplayformat"] = o.Approvaldisplayformat
	}
	if !IsNil(o.Assessed) {
		toSerialize["assessed"] = o.Assessed
	}
	if !IsNil(o.Assesstimefinish) {
		toSerialize["assesstimefinish"] = o.Assesstimefinish
	}
	if !IsNil(o.Assesstimestart) {
		toSerialize["assesstimestart"] = o.Assesstimestart
	}
	if !IsNil(o.Browsemodes) {
		toSerialize["browsemodes"] = o.Browsemodes
	}
	if !IsNil(o.Canaddentry) {
		toSerialize["canaddentry"] = o.Canaddentry
	}
	if !IsNil(o.Completionentries) {
		toSerialize["completionentries"] = o.Completionentries
	}
	if !IsNil(o.Course) {
		toSerialize["course"] = o.Course
	}
	if !IsNil(o.Coursemodule) {
		toSerialize["coursemodule"] = o.Coursemodule
	}
	if !IsNil(o.Defaultapproval) {
		toSerialize["defaultapproval"] = o.Defaultapproval
	}
	if !IsNil(o.Displayformat) {
		toSerialize["displayformat"] = o.Displayformat
	}
	if !IsNil(o.Editalways) {
		toSerialize["editalways"] = o.Editalways
	}
	if !IsNil(o.Entbypage) {
		toSerialize["entbypage"] = o.Entbypage
	}
	if !IsNil(o.Globalglossary) {
		toSerialize["globalglossary"] = o.Globalglossary
	}
	if !IsNil(o.Groupingid) {
		toSerialize["groupingid"] = o.Groupingid
	}
	if !IsNil(o.Groupmode) {
		toSerialize["groupmode"] = o.Groupmode
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Intro) {
		toSerialize["intro"] = o.Intro
	}
	if !IsNil(o.Introfiles) {
		toSerialize["introfiles"] = o.Introfiles
	}
	if !IsNil(o.Introformat) {
		toSerialize["introformat"] = o.Introformat
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !IsNil(o.Mainglossary) {
		toSerialize["mainglossary"] = o.Mainglossary
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Rssarticles) {
		toSerialize["rssarticles"] = o.Rssarticles
	}
	if !IsNil(o.Rsstype) {
		toSerialize["rsstype"] = o.Rsstype
	}
	if !IsNil(o.Scale) {
		toSerialize["scale"] = o.Scale
	}
	if !IsNil(o.Section) {
		toSerialize["section"] = o.Section
	}
	if !IsNil(o.Showall) {
		toSerialize["showall"] = o.Showall
	}
	if !IsNil(o.Showalphabet) {
		toSerialize["showalphabet"] = o.Showalphabet
	}
	if !IsNil(o.Showspecial) {
		toSerialize["showspecial"] = o.Showspecial
	}
	if !IsNil(o.Timecreated) {
		toSerialize["timecreated"] = o.Timecreated
	}
	if !IsNil(o.Timemodified) {
		toSerialize["timemodified"] = o.Timemodified
	}
	if !IsNil(o.Usedynalink) {
		toSerialize["usedynalink"] = o.Usedynalink
	}
	if !IsNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	return toSerialize, nil
}

type NullableModGlossaryGetGlossariesByCourses200ResponseGlossariesInner struct {
	value *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner
	isSet bool
}

func (v NullableModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) Get() *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner {
	return v.value
}

func (v *NullableModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) Set(val *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModGlossaryGetGlossariesByCourses200ResponseGlossariesInner(val *ModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) *NullableModGlossaryGetGlossariesByCourses200ResponseGlossariesInner {
	return &NullableModGlossaryGetGlossariesByCourses200ResponseGlossariesInner{value: val, isSet: true}
}

func (v NullableModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModGlossaryGetGlossariesByCourses200ResponseGlossariesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


