/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModForumViewForumRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModForumViewForumRequest{}

// ModForumViewForumRequest struct for ModForumViewForumRequest
type ModForumViewForumRequest struct {
	// forum instance id
	Forumid int32 `json:"forumid"`
}

type _ModForumViewForumRequest ModForumViewForumRequest

// NewModForumViewForumRequest instantiates a new ModForumViewForumRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModForumViewForumRequest(forumid int32) *ModForumViewForumRequest {
	this := ModForumViewForumRequest{}
	this.Forumid = forumid
	return &this
}

// NewModForumViewForumRequestWithDefaults instantiates a new ModForumViewForumRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModForumViewForumRequestWithDefaults() *ModForumViewForumRequest {
	this := ModForumViewForumRequest{}
	return &this
}

// GetForumid returns the Forumid field value
func (o *ModForumViewForumRequest) GetForumid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Forumid
}

// GetForumidOk returns a tuple with the Forumid field value
// and a boolean to check if the value has been set.
func (o *ModForumViewForumRequest) GetForumidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Forumid, true
}

// SetForumid sets field value
func (o *ModForumViewForumRequest) SetForumid(v int32) {
	o.Forumid = v
}

func (o ModForumViewForumRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModForumViewForumRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["forumid"] = o.Forumid
	return toSerialize, nil
}

func (o *ModForumViewForumRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"forumid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModForumViewForumRequest := _ModForumViewForumRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModForumViewForumRequest)

	if err != nil {
		return err
	}

	*o = ModForumViewForumRequest(varModForumViewForumRequest)

	return err
}

type NullableModForumViewForumRequest struct {
	value *ModForumViewForumRequest
	isSet bool
}

func (v NullableModForumViewForumRequest) Get() *ModForumViewForumRequest {
	return v.value
}

func (v *NullableModForumViewForumRequest) Set(val *ModForumViewForumRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModForumViewForumRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModForumViewForumRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModForumViewForumRequest(val *ModForumViewForumRequest) *NullableModForumViewForumRequest {
	return &NullableModForumViewForumRequest{value: val, isSet: true}
}

func (v NullableModForumViewForumRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModForumViewForumRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


