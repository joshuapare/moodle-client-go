/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreFilesGetFiles200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreFilesGetFiles200Response{}

// CoreFilesGetFiles200Response struct for CoreFilesGetFiles200Response
type CoreFilesGetFiles200Response struct {
	Files []CoreFilesGetFiles200ResponseFilesInner `json:"files"`
	Parents []CoreFilesGetFiles200ResponseParentsInner `json:"parents"`
}

type _CoreFilesGetFiles200Response CoreFilesGetFiles200Response

// NewCoreFilesGetFiles200Response instantiates a new CoreFilesGetFiles200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreFilesGetFiles200Response(files []CoreFilesGetFiles200ResponseFilesInner, parents []CoreFilesGetFiles200ResponseParentsInner) *CoreFilesGetFiles200Response {
	this := CoreFilesGetFiles200Response{}
	this.Files = files
	this.Parents = parents
	return &this
}

// NewCoreFilesGetFiles200ResponseWithDefaults instantiates a new CoreFilesGetFiles200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreFilesGetFiles200ResponseWithDefaults() *CoreFilesGetFiles200Response {
	this := CoreFilesGetFiles200Response{}
	return &this
}

// GetFiles returns the Files field value
func (o *CoreFilesGetFiles200Response) GetFiles() []CoreFilesGetFiles200ResponseFilesInner {
	if o == nil {
		var ret []CoreFilesGetFiles200ResponseFilesInner
		return ret
	}

	return o.Files
}

// GetFilesOk returns a tuple with the Files field value
// and a boolean to check if the value has been set.
func (o *CoreFilesGetFiles200Response) GetFilesOk() ([]CoreFilesGetFiles200ResponseFilesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Files, true
}

// SetFiles sets field value
func (o *CoreFilesGetFiles200Response) SetFiles(v []CoreFilesGetFiles200ResponseFilesInner) {
	o.Files = v
}

// GetParents returns the Parents field value
func (o *CoreFilesGetFiles200Response) GetParents() []CoreFilesGetFiles200ResponseParentsInner {
	if o == nil {
		var ret []CoreFilesGetFiles200ResponseParentsInner
		return ret
	}

	return o.Parents
}

// GetParentsOk returns a tuple with the Parents field value
// and a boolean to check if the value has been set.
func (o *CoreFilesGetFiles200Response) GetParentsOk() ([]CoreFilesGetFiles200ResponseParentsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Parents, true
}

// SetParents sets field value
func (o *CoreFilesGetFiles200Response) SetParents(v []CoreFilesGetFiles200ResponseParentsInner) {
	o.Parents = v
}

func (o CoreFilesGetFiles200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreFilesGetFiles200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["files"] = o.Files
	toSerialize["parents"] = o.Parents
	return toSerialize, nil
}

func (o *CoreFilesGetFiles200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"files",
		"parents",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreFilesGetFiles200Response := _CoreFilesGetFiles200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreFilesGetFiles200Response)

	if err != nil {
		return err
	}

	*o = CoreFilesGetFiles200Response(varCoreFilesGetFiles200Response)

	return err
}

type NullableCoreFilesGetFiles200Response struct {
	value *CoreFilesGetFiles200Response
	isSet bool
}

func (v NullableCoreFilesGetFiles200Response) Get() *CoreFilesGetFiles200Response {
	return v.value
}

func (v *NullableCoreFilesGetFiles200Response) Set(val *CoreFilesGetFiles200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreFilesGetFiles200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreFilesGetFiles200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreFilesGetFiles200Response(val *CoreFilesGetFiles200Response) *NullableCoreFilesGetFiles200Response {
	return &NullableCoreFilesGetFiles200Response{value: val, isSet: true}
}

func (v NullableCoreFilesGetFiles200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreFilesGetFiles200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


