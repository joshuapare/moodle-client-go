/*
Moodle Webservice API

Auto-generated OpenAPI spec for Moodle's Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.

API version: 4.3.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moodleclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CoreCompetencyCountCompetencyFrameworksRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreCompetencyCountCompetencyFrameworksRequest{}

// CoreCompetencyCountCompetencyFrameworksRequest struct for CoreCompetencyCountCompetencyFrameworksRequest
type CoreCompetencyCountCompetencyFrameworksRequest struct {
	Context CoreCohortSearchCohortsRequestContext `json:"context"`
	// What other contextes to fetch the frameworks from. (children, parents, self)
	Includes *string `json:"includes,omitempty"`
}

type _CoreCompetencyCountCompetencyFrameworksRequest CoreCompetencyCountCompetencyFrameworksRequest

// NewCoreCompetencyCountCompetencyFrameworksRequest instantiates a new CoreCompetencyCountCompetencyFrameworksRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCompetencyCountCompetencyFrameworksRequest(context CoreCohortSearchCohortsRequestContext) *CoreCompetencyCountCompetencyFrameworksRequest {
	this := CoreCompetencyCountCompetencyFrameworksRequest{}
	this.Context = context
	var includes string = "children"
	this.Includes = &includes
	return &this
}

// NewCoreCompetencyCountCompetencyFrameworksRequestWithDefaults instantiates a new CoreCompetencyCountCompetencyFrameworksRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCompetencyCountCompetencyFrameworksRequestWithDefaults() *CoreCompetencyCountCompetencyFrameworksRequest {
	this := CoreCompetencyCountCompetencyFrameworksRequest{}
	var includes string = "children"
	this.Includes = &includes
	return &this
}

// GetContext returns the Context field value
func (o *CoreCompetencyCountCompetencyFrameworksRequest) GetContext() CoreCohortSearchCohortsRequestContext {
	if o == nil {
		var ret CoreCohortSearchCohortsRequestContext
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *CoreCompetencyCountCompetencyFrameworksRequest) GetContextOk() (*CoreCohortSearchCohortsRequestContext, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *CoreCompetencyCountCompetencyFrameworksRequest) SetContext(v CoreCohortSearchCohortsRequestContext) {
	o.Context = v
}

// GetIncludes returns the Includes field value if set, zero value otherwise.
func (o *CoreCompetencyCountCompetencyFrameworksRequest) GetIncludes() string {
	if o == nil || IsNil(o.Includes) {
		var ret string
		return ret
	}
	return *o.Includes
}

// GetIncludesOk returns a tuple with the Includes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCompetencyCountCompetencyFrameworksRequest) GetIncludesOk() (*string, bool) {
	if o == nil || IsNil(o.Includes) {
		return nil, false
	}
	return o.Includes, true
}

// HasIncludes returns a boolean if a field has been set.
func (o *CoreCompetencyCountCompetencyFrameworksRequest) HasIncludes() bool {
	if o != nil && !IsNil(o.Includes) {
		return true
	}

	return false
}

// SetIncludes gets a reference to the given string and assigns it to the Includes field.
func (o *CoreCompetencyCountCompetencyFrameworksRequest) SetIncludes(v string) {
	o.Includes = &v
}

func (o CoreCompetencyCountCompetencyFrameworksRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreCompetencyCountCompetencyFrameworksRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["context"] = o.Context
	if !IsNil(o.Includes) {
		toSerialize["includes"] = o.Includes
	}
	return toSerialize, nil
}

func (o *CoreCompetencyCountCompetencyFrameworksRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"context",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCoreCompetencyCountCompetencyFrameworksRequest := _CoreCompetencyCountCompetencyFrameworksRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCoreCompetencyCountCompetencyFrameworksRequest)

	if err != nil {
		return err
	}

	*o = CoreCompetencyCountCompetencyFrameworksRequest(varCoreCompetencyCountCompetencyFrameworksRequest)

	return err
}

type NullableCoreCompetencyCountCompetencyFrameworksRequest struct {
	value *CoreCompetencyCountCompetencyFrameworksRequest
	isSet bool
}

func (v NullableCoreCompetencyCountCompetencyFrameworksRequest) Get() *CoreCompetencyCountCompetencyFrameworksRequest {
	return v.value
}

func (v *NullableCoreCompetencyCountCompetencyFrameworksRequest) Set(val *CoreCompetencyCountCompetencyFrameworksRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCompetencyCountCompetencyFrameworksRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCompetencyCountCompetencyFrameworksRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCompetencyCountCompetencyFrameworksRequest(val *CoreCompetencyCountCompetencyFrameworksRequest) *NullableCoreCompetencyCountCompetencyFrameworksRequest {
	return &NullableCoreCompetencyCountCompetencyFrameworksRequest{value: val, isSet: true}
}

func (v NullableCoreCompetencyCountCompetencyFrameworksRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCompetencyCountCompetencyFrameworksRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


